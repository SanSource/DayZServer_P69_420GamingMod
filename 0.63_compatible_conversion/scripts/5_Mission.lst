Param5<bool,string,int,string,int>::Param5()
//scripts/1_CoreExt/param.c
000110:0x000216a0:	move	param1, p1
000111:0x000216b0:	moves	param2, p2
000112:0x000216c0:	move	param3, p3
000113:0x000216d0:	moves	param4, p4
000114:0x000216e0:	move	param5, p5
000114:0x000216f0:	rts
Param3<string,bool,bool>::Param3()
000068:0x00021830:	moves	param1, p1
000069:0x00021840:	move	param2, p2
000070:0x00021850:	move	param3, p3
000070:0x00021860:	rts
array<OptionsAccessUI>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x00021ba8:	imove	i, 0x000000
000341:0x00021bb8:	jump	0x021bc8
000341:0x00021bc0:	inc	i
000341:0x00021bc8:	ncalli	array<OptionsAccessUI>.Count()
000341:0x00021bd0:	cmpi	i, ret
000341:0x00021be0:	bge	0x021c00
000343:0x00021be8:	icall	array<OptionsAccessUI>.Get(i)
000343:0x00021bf0:	icall	array<OptionsAccessUI>.Insert(ret)
000343:0x00021bf8:	jump	0x021bc0
000343:0x00021c00:	rts
array<OptionsAccessUI>::RemoveItem()
000366:0x00021c28:	movefm	@c00, value
000366:0x00021c38:	icall	array<OptionsAccessUI>.Find(@c00)
000366:0x00021c40:	move	remove_index, ret
000368:0x00021c50:	cmpi	remove_index, _i0
000368:0x00021c60:	blt	0x021c70
000370:0x00021c68:	ncalli	array<OptionsAccessUI>.Remove(remove_index)
000370:0x00021c70:	rts
array<OptionsAccessUI>::Debug()
000387:0x00021d38:	ncalli	array<OptionsAccessUI>.Count()
000387:0x00021d40:	icall	ToString(ret)
000387:0x00021d48:	adds	@s01, _s'Array count: ', ret
000387:0x00021d58:	moves	@s00, @s01
000387:0x00021d68:	call	PrintString(@s00)
000388:0x00021d78:	imove	i, 0x000000
000388:0x00021d88:	jump	0x021d98
000388:0x00021d90:	inc	i
000388:0x00021d98:	ncalli	array<OptionsAccessUI>.Count()
000388:0x00021da0:	cmpi	i, ret
000388:0x00021db0:	bge	0x021e80
000390:0x00021db8:	icall	array<OptionsAccessUI>.Get(i)
000390:0x00021dc0:	movetm	item, ret
000392:0x00021dd0:	cmpcm	item, NULL
000392:0x00021de0:	beq	0x021e70
000394:0x00021de8:	icall	ToString(i)
000394:0x00021df0:	adds	@s03, _s'[', ret
000394:0x00021e00:	moves	@s02, @s03
000394:0x00021e10:	adds	@s02, @s02, _s'] => '
000394:0x00021e20:	moves	@s01, @s02
000394:0x00021e30:	icall	ToString(item, _i0, _i0)
000394:0x00021e40:	adds	@s01, @s01, ret
000394:0x00021e50:	moves	@s00, @s01
000394:0x00021e60:	call	PrintString(@s00)
000394:0x00021e70:	release	item
000394:0x00021e78:	jump	0x021d90
000394:0x00021e80:	rts
array<OptionsAccessUI>::GetRandomIndex()
000411:0x00021ea8:	ncalli	array<OptionsAccessUI>.Count()
000411:0x00021eb0:	cmpi	ret, _i0
000411:0x00021ec0:	ble	0x021ef0
000413:0x00021ec8:	ncalli	array<OptionsAccessUI>.Count()
000413:0x00021ed0:	ncall	RandomInt(_i0, ret)
000413:0x00021ed8:	move	ret, ret
000413:0x00021ee8:	rts
000416:0x00021ef0:	imove	ret, 0xffffffff
000416:0x00021f00:	rts
000416:0x00021f08:	rts
array<OptionsAccessUI>::GetRandomElement()
000430:0x00021f10:	call	array<OptionsAccessUI>.GetRandomIndex()
000430:0x00021f18:	icall	array<OptionsAccessUI>.Get(ret)
000430:0x00021f20:	movetm	ret, ret
000430:0x00021f30:	rts
000430:0x00021f38:	rts
array<OptionsAccessUI>::SwapItems()
000435:0x00021f60:	icall	array<OptionsAccessUI>.Get(item1_index)
000435:0x00021f68:	movetm	item1, ret
000436:0x00021f78:	icall	array<OptionsAccessUI>.Get(item2_index)
000436:0x00021f80:	icall	array<OptionsAccessUI>.Set(item1_index, ret)
000437:0x00021f88:	movefm	@c00, item1
000437:0x00021f98:	icall	array<OptionsAccessUI>.Set(item2_index, @c00)
000437:0x00021fa0:	release	item1
000437:0x00021fa8:	rts
TAdvanceArray<string>::InsertArray()
//scripts/5_Mission/GUI/CharacterMenu.c
000005:0x00022040:	imove	i, 0x000000
000005:0x00022050:	jump	0x022060
000005:0x00022058:	inc	i
000005:0x00022060:	ncalli	array<string>.Count()
000005:0x00022068:	cmpi	i, ret
000005:0x00022078:	bge	0x0220a8
000007:0x00022080:	icall	array<string>.Get(i)
000007:0x00022088:	moves	item, ret
000008:0x00022098:	icall	TAdvanceArray<string>.Insert(item)
000008:0x000220a0:	jump	0x022058
000008:0x000220a8:	rts
array<InventoryGrid>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x000223f0:	imove	i, 0x000000
000341:0x00022400:	jump	0x022410
000341:0x00022408:	inc	i
000341:0x00022410:	ncalli	array<InventoryGrid>.Count()
000341:0x00022418:	cmpi	i, ret
000341:0x00022428:	bge	0x022448
000343:0x00022430:	icall	array<InventoryGrid>.Get(i)
000343:0x00022438:	icall	array<InventoryGrid>.Insert(ret)
000343:0x00022440:	jump	0x022408
000343:0x00022448:	rts
array<InventoryGrid>::RemoveItem()
000366:0x00022470:	movefm	@c00, value
000366:0x00022480:	icall	array<InventoryGrid>.Find(@c00)
000366:0x00022488:	move	remove_index, ret
000368:0x00022498:	cmpi	remove_index, _i0
000368:0x000224a8:	blt	0x0224b8
000370:0x000224b0:	ncalli	array<InventoryGrid>.Remove(remove_index)
000370:0x000224b8:	rts
array<InventoryGrid>::Debug()
000387:0x00022500:	ncalli	array<InventoryGrid>.Count()
000387:0x00022508:	icall	ToString(ret)
000387:0x00022510:	adds	@s01, _s'Array count: ', ret
000387:0x00022520:	moves	@s00, @s01
000387:0x00022530:	call	PrintString(@s00)
000388:0x00022540:	imove	i, 0x000000
000388:0x00022550:	jump	0x022560
000388:0x00022558:	inc	i
000388:0x00022560:	ncalli	array<InventoryGrid>.Count()
000388:0x00022568:	cmpi	i, ret
000388:0x00022578:	bge	0x022648
000390:0x00022580:	icall	array<InventoryGrid>.Get(i)
000390:0x00022588:	movetm	item, ret
000392:0x00022598:	cmpcm	item, NULL
000392:0x000225a8:	beq	0x022638
000394:0x000225b0:	icall	ToString(i)
000394:0x000225b8:	adds	@s03, _s'[', ret
000394:0x000225c8:	moves	@s02, @s03
000394:0x000225d8:	adds	@s02, @s02, _s'] => '
000394:0x000225e8:	moves	@s01, @s02
000394:0x000225f8:	icall	ToString(item, _i0, _i0)
000394:0x00022608:	adds	@s01, @s01, ret
000394:0x00022618:	moves	@s00, @s01
000394:0x00022628:	call	PrintString(@s00)
000394:0x00022638:	release	item
000394:0x00022640:	jump	0x022558
000394:0x00022648:	rts
array<InventoryGrid>::GetRandomIndex()
000411:0x00022650:	ncalli	array<InventoryGrid>.Count()
000411:0x00022658:	cmpi	ret, _i0
000411:0x00022668:	ble	0x022698
000413:0x00022670:	ncalli	array<InventoryGrid>.Count()
000413:0x00022678:	ncall	RandomInt(_i0, ret)
000413:0x00022680:	move	ret, ret
000413:0x00022690:	rts
000416:0x00022698:	imove	ret, 0xffffffff
000416:0x000226a8:	rts
000416:0x000226b0:	rts
array<InventoryGrid>::GetRandomElement()
000430:0x000226b8:	call	array<InventoryGrid>.GetRandomIndex()
000430:0x000226c0:	icall	array<InventoryGrid>.Get(ret)
000430:0x000226c8:	movetm	ret, ret
000430:0x000226d8:	rts
000430:0x000226e0:	rts
array<InventoryGrid>::SwapItems()
000435:0x00022708:	icall	array<InventoryGrid>.Get(item1_index)
000435:0x00022710:	movetm	item1, ret
000436:0x00022720:	icall	array<InventoryGrid>.Get(item2_index)
000436:0x00022728:	icall	array<InventoryGrid>.Set(item1_index, ret)
000437:0x00022730:	movefm	@c00, item1
000437:0x00022740:	icall	array<InventoryGrid>.Set(item2_index, @c00)
000437:0x00022748:	release	item1
000437:0x00022750:	rts
map<int,Widget>::ReplaceKey()
000584:0x00022b38:	icall	map<int,Widget>.Contains(old_key)
000584:0x00022b40:	cmpi	ret, _i0
000584:0x00022b50:	beq	0x022b70
000586:0x00022b58:	icall	map<int,Widget>.Get(old_key)
000586:0x00022b60:	icall	map<int,Widget>.Set(new_key, ret)
000587:0x00022b68:	icall	map<int,Widget>.Remove(old_key)
000587:0x00022b70:	rts
map<int,Widget>::GetKeyByValue()
000594:0x00022bb8:	imove	i, 0x000000
000594:0x00022bc8:	jump	0x022bd8
000594:0x00022bd0:	inc	i
000594:0x00022bd8:	ncalli	map<int,Widget>.Count()
000594:0x00022be0:	cmpi	i, ret
000594:0x00022bf0:	bge	0x022c40
000596:0x00022bf8:	icall	map<int,Widget>.GetElement(i)
000596:0x00022c00:	cmpmc	ret, value
000596:0x00022c10:	bne	0x022c38
000598:0x00022c18:	icall	map<int,Widget>.GetKey(i)
000598:0x00022c20:	move	ret, ret
000599:0x00022c30:	jump	0x022c40
000599:0x00022c38:	jump	0x022bd0
000603:0x00022c40:	move	ret, ret
000603:0x00022c50:	rts
000603:0x00022c58:	rts
map<int,EditBoxWidget>::ReplaceKey()
000584:0x00023040:	icall	map<int,EditBoxWidget>.Contains(old_key)
000584:0x00023048:	cmpi	ret, _i0
000584:0x00023058:	beq	0x023078
000586:0x00023060:	icall	map<int,EditBoxWidget>.Get(old_key)
000586:0x00023068:	icall	map<int,EditBoxWidget>.Set(new_key, ret)
000587:0x00023070:	icall	map<int,EditBoxWidget>.Remove(old_key)
000587:0x00023078:	rts
map<int,EditBoxWidget>::GetKeyByValue()
000594:0x000230c0:	imove	i, 0x000000
000594:0x000230d0:	jump	0x0230e0
000594:0x000230d8:	inc	i
000594:0x000230e0:	ncalli	map<int,EditBoxWidget>.Count()
000594:0x000230e8:	cmpi	i, ret
000594:0x000230f8:	bge	0x023148
000596:0x00023100:	icall	map<int,EditBoxWidget>.GetElement(i)
000596:0x00023108:	cmpmc	ret, value
000596:0x00023118:	bne	0x023140
000598:0x00023120:	icall	map<int,EditBoxWidget>.GetKey(i)
000598:0x00023128:	move	ret, ret
000599:0x00023138:	jump	0x023148
000599:0x00023140:	jump	0x0230d8
000603:0x00023148:	move	ret, ret
000603:0x00023158:	rts
000603:0x00023160:	rts
map<int,ButtonWidget>::ReplaceKey()
000584:0x00023548:	icall	map<int,ButtonWidget>.Contains(old_key)
000584:0x00023550:	cmpi	ret, _i0
000584:0x00023560:	beq	0x023580
000586:0x00023568:	icall	map<int,ButtonWidget>.Get(old_key)
000586:0x00023570:	icall	map<int,ButtonWidget>.Set(new_key, ret)
000587:0x00023578:	icall	map<int,ButtonWidget>.Remove(old_key)
000587:0x00023580:	rts
map<int,ButtonWidget>::GetKeyByValue()
000594:0x000235c8:	imove	i, 0x000000
000594:0x000235d8:	jump	0x0235e8
000594:0x000235e0:	inc	i
000594:0x000235e8:	ncalli	map<int,ButtonWidget>.Count()
000594:0x000235f0:	cmpi	i, ret
000594:0x00023600:	bge	0x023650
000596:0x00023608:	icall	map<int,ButtonWidget>.GetElement(i)
000596:0x00023610:	cmpmc	ret, value
000596:0x00023620:	bne	0x023648
000598:0x00023628:	icall	map<int,ButtonWidget>.GetKey(i)
000598:0x00023630:	move	ret, ret
000599:0x00023640:	jump	0x023650
000599:0x00023648:	jump	0x0235e0
000603:0x00023650:	move	ret, ret
000603:0x00023660:	rts
000603:0x00023668:	rts
map<int,UIPopupScript>::ReplaceKey()
000584:0x00023a50:	icall	map<int,UIPopupScript>.Contains(old_key)
000584:0x00023a58:	cmpi	ret, _i0
000584:0x00023a68:	beq	0x023a88
000586:0x00023a70:	icall	map<int,UIPopupScript>.Get(old_key)
000586:0x00023a78:	icall	map<int,UIPopupScript>.Set(new_key, ret)
000587:0x00023a80:	icall	map<int,UIPopupScript>.Remove(old_key)
000587:0x00023a88:	rts
map<int,UIPopupScript>::GetKeyByValue()
000594:0x00023ad0:	imove	i, 0x000000
000594:0x00023ae0:	jump	0x023af0
000594:0x00023ae8:	inc	i
000594:0x00023af0:	ncalli	map<int,UIPopupScript>.Count()
000594:0x00023af8:	cmpi	i, ret
000594:0x00023b08:	bge	0x023b58
000596:0x00023b10:	icall	map<int,UIPopupScript>.GetElement(i)
000596:0x00023b18:	cmpc	ret, value
000596:0x00023b28:	bne	0x023b50
000598:0x00023b30:	icall	map<int,UIPopupScript>.GetKey(i)
000598:0x00023b38:	move	ret, ret
000599:0x00023b48:	jump	0x023b58
000599:0x00023b50:	jump	0x023ae8
000603:0x00023b58:	move	ret, ret
000603:0x00023b68:	rts
000603:0x00023b70:	rts
map<int,SceneObject>::ReplaceKey()
000584:0x00023f58:	icall	map<int,SceneObject>.Contains(old_key)
000584:0x00023f60:	cmpi	ret, _i0
000584:0x00023f70:	beq	0x023f90
000586:0x00023f78:	icall	map<int,SceneObject>.Get(old_key)
000586:0x00023f80:	icall	map<int,SceneObject>.Set(new_key, ret)
000587:0x00023f88:	icall	map<int,SceneObject>.Remove(old_key)
000587:0x00023f90:	rts
map<int,SceneObject>::GetKeyByValue()
000594:0x00023fd8:	imove	i, 0x000000
000594:0x00023fe8:	jump	0x023ff8
000594:0x00023ff0:	inc	i
000594:0x00023ff8:	ncalli	map<int,SceneObject>.Count()
000594:0x00024000:	cmpi	i, ret
000594:0x00024010:	bge	0x024060
000596:0x00024018:	icall	map<int,SceneObject>.GetElement(i)
000596:0x00024020:	cmpc	ret, value
000596:0x00024030:	bne	0x024058
000598:0x00024038:	icall	map<int,SceneObject>.GetKey(i)
000598:0x00024040:	move	ret, ret
000599:0x00024050:	jump	0x024060
000599:0x00024058:	jump	0x023ff0
000603:0x00024060:	move	ret, ret
000603:0x00024070:	rts
000603:0x00024078:	rts
array<UIPropertyAttachment>::InsertAll()
000341:0x000243c0:	imove	i, 0x000000
000341:0x000243d0:	jump	0x0243e0
000341:0x000243d8:	inc	i
000341:0x000243e0:	ncalli	array<UIPropertyAttachment>.Count()
000341:0x000243e8:	cmpi	i, ret
000341:0x000243f8:	bge	0x024418
000343:0x00024400:	icall	array<UIPropertyAttachment>.Get(i)
000343:0x00024408:	icall	array<UIPropertyAttachment>.Insert(ret)
000343:0x00024410:	jump	0x0243d8
000343:0x00024418:	rts
array<UIPropertyAttachment>::RemoveItem()
000366:0x00024440:	icall	array<UIPropertyAttachment>.Find(value)
000366:0x00024448:	move	remove_index, ret
000368:0x00024458:	cmpi	remove_index, _i0
000368:0x00024468:	blt	0x024478
000370:0x00024470:	ncalli	array<UIPropertyAttachment>.Remove(remove_index)
000370:0x00024478:	rts
array<UIPropertyAttachment>::Debug()
000387:0x000244c0:	ncalli	array<UIPropertyAttachment>.Count()
000387:0x000244c8:	icall	ToString(ret)
000387:0x000244d0:	adds	@s01, _s'Array count: ', ret
000387:0x000244e0:	moves	@s00, @s01
000387:0x000244f0:	call	PrintString(@s00)
000388:0x00024500:	imove	i, 0x000000
000388:0x00024510:	jump	0x024520
000388:0x00024518:	inc	i
000388:0x00024520:	ncalli	array<UIPropertyAttachment>.Count()
000388:0x00024528:	cmpi	i, ret
000388:0x00024538:	bge	0x024600
000390:0x00024540:	icall	array<UIPropertyAttachment>.Get(i)
000390:0x00024548:	movec	item, ret
000392:0x00024558:	cmpc	item, NULL
000392:0x00024568:	beq	0x0245f8
000394:0x00024570:	icall	ToString(i)
000394:0x00024578:	adds	@s03, _s'[', ret
000394:0x00024588:	moves	@s02, @s03
000394:0x00024598:	adds	@s02, @s02, _s'] => '
000394:0x000245a8:	moves	@s01, @s02
000394:0x000245b8:	icall	ToString(item, _i0, _i0)
000394:0x000245c8:	adds	@s01, @s01, ret
000394:0x000245d8:	moves	@s00, @s01
000394:0x000245e8:	call	PrintString(@s00)
000394:0x000245f8:	jump	0x024518
000394:0x00024600:	rts
array<UIPropertyAttachment>::GetRandomIndex()
000411:0x00024608:	ncalli	array<UIPropertyAttachment>.Count()
000411:0x00024610:	cmpi	ret, _i0
000411:0x00024620:	ble	0x024650
000413:0x00024628:	ncalli	array<UIPropertyAttachment>.Count()
000413:0x00024630:	ncall	RandomInt(_i0, ret)
000413:0x00024638:	move	ret, ret
000413:0x00024648:	rts
000416:0x00024650:	imove	ret, 0xffffffff
000416:0x00024660:	rts
000416:0x00024668:	rts
array<UIPropertyAttachment>::GetRandomElement()
000430:0x00024670:	call	array<UIPropertyAttachment>.GetRandomIndex()
000430:0x00024678:	icall	array<UIPropertyAttachment>.Get(ret)
000430:0x00024680:	movec	ret, ret
000430:0x00024690:	rts
000430:0x00024698:	rts
array<UIPropertyAttachment>::SwapItems()
000435:0x000246c0:	icall	array<UIPropertyAttachment>.Get(item1_index)
000435:0x000246c8:	movec	item1, ret
000436:0x000246d8:	icall	array<UIPropertyAttachment>.Get(item2_index)
000436:0x000246e0:	icall	array<UIPropertyAttachment>.Set(item1_index, ret)
000437:0x000246e8:	icall	array<UIPropertyAttachment>.Set(item2_index, item1)
000437:0x000246f0:	rts
map<EntityAI,InventoryGrid>::ReplaceKey()
000584:0x00024ad8:	movefm	@c00, old_key
000584:0x00024ae8:	icall	map<EntityAI,InventoryGrid>.Contains(@c00)
000584:0x00024af0:	cmpi	ret, _i0
000584:0x00024b00:	beq	0x024b50
000586:0x00024b08:	movefm	@c00, new_key
000586:0x00024b18:	movefm	@c01, old_key
000586:0x00024b28:	icall	map<EntityAI,InventoryGrid>.Get(@c01)
000586:0x00024b30:	icall	map<EntityAI,InventoryGrid>.Set(@c00, ret)
000587:0x00024b38:	movefm	@c00, old_key
000587:0x00024b48:	icall	map<EntityAI,InventoryGrid>.Remove(@c00)
000587:0x00024b50:	rts
map<EntityAI,InventoryGrid>::GetKeyByValue()
000594:0x00024b98:	imove	i, 0x000000
000594:0x00024ba8:	jump	0x024bb8
000594:0x00024bb0:	inc	i
000594:0x00024bb8:	ncalli	map<EntityAI,InventoryGrid>.Count()
000594:0x00024bc0:	cmpi	i, ret
000594:0x00024bd0:	bge	0x024c20
000596:0x00024bd8:	icall	map<EntityAI,InventoryGrid>.GetElement(i)
000596:0x00024be0:	cmpmc	ret, value
000596:0x00024bf0:	bne	0x024c18
000598:0x00024bf8:	icall	map<EntityAI,InventoryGrid>.GetKey(i)
000598:0x00024c00:	movetm	ret, ret
000599:0x00024c10:	jump	0x024c20
000599:0x00024c18:	jump	0x024bb0
000603:0x00024c20:	movem	ret, ret
000603:0x00024c30:	release	ret
000603:0x00024c38:	rts
000603:0x00024c40:	release	ret
000603:0x00024c48:	rts
array<HudDebugWinBase>::InsertAll()
000341:0x00024f90:	imove	i, 0x000000
000341:0x00024fa0:	jump	0x024fb0
000341:0x00024fa8:	inc	i
000341:0x00024fb0:	ncalli	array<HudDebugWinBase>.Count()
000341:0x00024fb8:	cmpi	i, ret
000341:0x00024fc8:	bge	0x024fe8
000343:0x00024fd0:	icall	array<HudDebugWinBase>.Get(i)
000343:0x00024fd8:	icall	array<HudDebugWinBase>.Insert(ret)
000343:0x00024fe0:	jump	0x024fa8
000343:0x00024fe8:	rts
array<HudDebugWinBase>::RemoveItem()
000366:0x00025010:	icall	array<HudDebugWinBase>.Find(value)
000366:0x00025018:	move	remove_index, ret
000368:0x00025028:	cmpi	remove_index, _i0
000368:0x00025038:	blt	0x025048
000370:0x00025040:	ncalli	array<HudDebugWinBase>.Remove(remove_index)
000370:0x00025048:	rts
array<HudDebugWinBase>::Debug()
000387:0x00025090:	ncalli	array<HudDebugWinBase>.Count()
000387:0x00025098:	icall	ToString(ret)
000387:0x000250a0:	adds	@s01, _s'Array count: ', ret
000387:0x000250b0:	moves	@s00, @s01
000387:0x000250c0:	call	PrintString(@s00)
000388:0x000250d0:	imove	i, 0x000000
000388:0x000250e0:	jump	0x0250f0
000388:0x000250e8:	inc	i
000388:0x000250f0:	ncalli	array<HudDebugWinBase>.Count()
000388:0x000250f8:	cmpi	i, ret
000388:0x00025108:	bge	0x0251d0
000390:0x00025110:	icall	array<HudDebugWinBase>.Get(i)
000390:0x00025118:	movec	item, ret
000392:0x00025128:	cmpc	item, NULL
000392:0x00025138:	beq	0x0251c8
000394:0x00025140:	icall	ToString(i)
000394:0x00025148:	adds	@s03, _s'[', ret
000394:0x00025158:	moves	@s02, @s03
000394:0x00025168:	adds	@s02, @s02, _s'] => '
000394:0x00025178:	moves	@s01, @s02
000394:0x00025188:	icall	ToString(item, _i0, _i0)
000394:0x00025198:	adds	@s01, @s01, ret
000394:0x000251a8:	moves	@s00, @s01
000394:0x000251b8:	call	PrintString(@s00)
000394:0x000251c8:	jump	0x0250e8
000394:0x000251d0:	rts
array<HudDebugWinBase>::GetRandomIndex()
000411:0x000251d8:	ncalli	array<HudDebugWinBase>.Count()
000411:0x000251e0:	cmpi	ret, _i0
000411:0x000251f0:	ble	0x025220
000413:0x000251f8:	ncalli	array<HudDebugWinBase>.Count()
000413:0x00025200:	ncall	RandomInt(_i0, ret)
000413:0x00025208:	move	ret, ret
000413:0x00025218:	rts
000416:0x00025220:	imove	ret, 0xffffffff
000416:0x00025230:	rts
000416:0x00025238:	rts
array<HudDebugWinBase>::GetRandomElement()
000430:0x00025240:	call	array<HudDebugWinBase>.GetRandomIndex()
000430:0x00025248:	icall	array<HudDebugWinBase>.Get(ret)
000430:0x00025250:	movec	ret, ret
000430:0x00025260:	rts
000430:0x00025268:	rts
array<HudDebugWinBase>::SwapItems()
000435:0x00025290:	icall	array<HudDebugWinBase>.Get(item1_index)
000435:0x00025298:	movec	item1, ret
000436:0x000252a8:	icall	array<HudDebugWinBase>.Get(item2_index)
000436:0x000252b0:	icall	array<HudDebugWinBase>.Set(item1_index, ret)
000437:0x000252b8:	icall	array<HudDebugWinBase>.Set(item2_index, item1)
000437:0x000252c0:	rts
map<EntityAI,InventoryViewBase>::ReplaceKey()
000584:0x000256a8:	movefm	@c00, old_key
000584:0x000256b8:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000584:0x000256c0:	cmpi	ret, _i0
000584:0x000256d0:	beq	0x025720
000586:0x000256d8:	movefm	@c00, new_key
000586:0x000256e8:	movefm	@c01, old_key
000586:0x000256f8:	icall	map<EntityAI,InventoryViewBase>.Get(@c01)
000586:0x00025700:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, ret)
000587:0x00025708:	movefm	@c00, old_key
000587:0x00025718:	icall	map<EntityAI,InventoryViewBase>.Remove(@c00)
000587:0x00025720:	rts
map<EntityAI,InventoryViewBase>::GetKeyByValue()
000594:0x00025768:	imove	i, 0x000000
000594:0x00025778:	jump	0x025788
000594:0x00025780:	inc	i
000594:0x00025788:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000594:0x00025790:	cmpi	i, ret
000594:0x000257a0:	bge	0x0257f0
000596:0x000257a8:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000596:0x000257b0:	cmpmc	ret, value
000596:0x000257c0:	bne	0x0257e8
000598:0x000257c8:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000598:0x000257d0:	movetm	ret, ret
000599:0x000257e0:	jump	0x0257f0
000599:0x000257e8:	jump	0x025780
000603:0x000257f0:	movem	ret, ret
000603:0x00025800:	release	ret
000603:0x00025808:	rts
000603:0x00025810:	release	ret
000603:0x00025818:	rts
map<int,ImageWidget>::ReplaceKey()
000584:0x00025c00:	icall	map<int,ImageWidget>.Contains(old_key)
000584:0x00025c08:	cmpi	ret, _i0
000584:0x00025c18:	beq	0x025c38
000586:0x00025c20:	icall	map<int,ImageWidget>.Get(old_key)
000586:0x00025c28:	icall	map<int,ImageWidget>.Set(new_key, ret)
000587:0x00025c30:	icall	map<int,ImageWidget>.Remove(old_key)
000587:0x00025c38:	rts
map<int,ImageWidget>::GetKeyByValue()
000594:0x00025c80:	imove	i, 0x000000
000594:0x00025c90:	jump	0x025ca0
000594:0x00025c98:	inc	i
000594:0x00025ca0:	ncalli	map<int,ImageWidget>.Count()
000594:0x00025ca8:	cmpi	i, ret
000594:0x00025cb8:	bge	0x025d08
000596:0x00025cc0:	icall	map<int,ImageWidget>.GetElement(i)
000596:0x00025cc8:	cmpmc	ret, value
000596:0x00025cd8:	bne	0x025d00
000598:0x00025ce0:	icall	map<int,ImageWidget>.GetKey(i)
000598:0x00025ce8:	move	ret, ret
000599:0x00025cf8:	jump	0x025d08
000599:0x00025d00:	jump	0x025c98
000603:0x00025d08:	move	ret, ret
000603:0x00025d18:	rts
000603:0x00025d20:	rts
map<int,bool>::ReplaceKey()
000584:0x00026108:	icall	map<int,bool>.Contains(old_key)
000584:0x00026110:	cmpi	ret, _i0
000584:0x00026120:	beq	0x026140
000586:0x00026128:	icall	map<int,bool>.Get(old_key)
000586:0x00026130:	icall	map<int,bool>.Set(new_key, ret)
000587:0x00026138:	icall	map<int,bool>.Remove(old_key)
000587:0x00026140:	rts
map<int,bool>::GetKeyByValue()
000594:0x00026188:	imove	i, 0x000000
000594:0x00026198:	jump	0x0261a8
000594:0x000261a0:	inc	i
000594:0x000261a8:	ncalli	map<int,bool>.Count()
000594:0x000261b0:	cmpi	i, ret
000594:0x000261c0:	bge	0x026210
000596:0x000261c8:	icall	map<int,bool>.GetElement(i)
000596:0x000261d0:	cmpi	ret, value
000596:0x000261e0:	bne	0x026208
000598:0x000261e8:	icall	map<int,bool>.GetKey(i)
000598:0x000261f0:	move	ret, ret
000599:0x00026200:	jump	0x026210
000599:0x00026208:	jump	0x0261a0
000603:0x00026210:	move	ret, ret
000603:0x00026220:	rts
000603:0x00026228:	rts
array<WidgetFadeTimer>::InsertAll()
000341:0x00026570:	imove	i, 0x000000
000341:0x00026580:	jump	0x026590
000341:0x00026588:	inc	i
000341:0x00026590:	ncalli	array<WidgetFadeTimer>.Count()
000341:0x00026598:	cmpi	i, ret
000341:0x000265a8:	bge	0x0265c8
000343:0x000265b0:	icall	array<WidgetFadeTimer>.Get(i)
000343:0x000265b8:	icall	array<WidgetFadeTimer>.Insert(ret)
000343:0x000265c0:	jump	0x026588
000343:0x000265c8:	rts
array<WidgetFadeTimer>::RemoveItem()
000366:0x000265f0:	icall	array<WidgetFadeTimer>.Find(value)
000366:0x000265f8:	move	remove_index, ret
000368:0x00026608:	cmpi	remove_index, _i0
000368:0x00026618:	blt	0x026628
000370:0x00026620:	ncalli	array<WidgetFadeTimer>.Remove(remove_index)
000370:0x00026628:	rts
array<WidgetFadeTimer>::Debug()
000387:0x00026670:	ncalli	array<WidgetFadeTimer>.Count()
000387:0x00026678:	icall	ToString(ret)
000387:0x00026680:	adds	@s01, _s'Array count: ', ret
000387:0x00026690:	moves	@s00, @s01
000387:0x000266a0:	call	PrintString(@s00)
000388:0x000266b0:	imove	i, 0x000000
000388:0x000266c0:	jump	0x0266d0
000388:0x000266c8:	inc	i
000388:0x000266d0:	ncalli	array<WidgetFadeTimer>.Count()
000388:0x000266d8:	cmpi	i, ret
000388:0x000266e8:	bge	0x0267b0
000390:0x000266f0:	icall	array<WidgetFadeTimer>.Get(i)
000390:0x000266f8:	movec	item, ret
000392:0x00026708:	cmpc	item, NULL
000392:0x00026718:	beq	0x0267a8
000394:0x00026720:	icall	ToString(i)
000394:0x00026728:	adds	@s03, _s'[', ret
000394:0x00026738:	moves	@s02, @s03
000394:0x00026748:	adds	@s02, @s02, _s'] => '
000394:0x00026758:	moves	@s01, @s02
000394:0x00026768:	icall	ToString(item, _i0, _i0)
000394:0x00026778:	adds	@s01, @s01, ret
000394:0x00026788:	moves	@s00, @s01
000394:0x00026798:	call	PrintString(@s00)
000394:0x000267a8:	jump	0x0266c8
000394:0x000267b0:	rts
array<WidgetFadeTimer>::GetRandomIndex()
000411:0x000267b8:	ncalli	array<WidgetFadeTimer>.Count()
000411:0x000267c0:	cmpi	ret, _i0
000411:0x000267d0:	ble	0x026800
000413:0x000267d8:	ncalli	array<WidgetFadeTimer>.Count()
000413:0x000267e0:	ncall	RandomInt(_i0, ret)
000413:0x000267e8:	move	ret, ret
000413:0x000267f8:	rts
000416:0x00026800:	imove	ret, 0xffffffff
000416:0x00026810:	rts
000416:0x00026818:	rts
array<WidgetFadeTimer>::GetRandomElement()
000430:0x00026820:	call	array<WidgetFadeTimer>.GetRandomIndex()
000430:0x00026828:	icall	array<WidgetFadeTimer>.Get(ret)
000430:0x00026830:	movec	ret, ret
000430:0x00026840:	rts
000430:0x00026848:	rts
array<WidgetFadeTimer>::SwapItems()
000435:0x00026870:	icall	array<WidgetFadeTimer>.Get(item1_index)
000435:0x00026878:	movec	item1, ret
000436:0x00026888:	icall	array<WidgetFadeTimer>.Get(item2_index)
000436:0x00026890:	icall	array<WidgetFadeTimer>.Set(item1_index, ret)
000437:0x00026898:	icall	array<WidgetFadeTimer>.Set(item2_index, item1)
000437:0x000268a0:	rts
array<InventoryItem>::InsertAll()
000341:0x00026be8:	imove	i, 0x000000
000341:0x00026bf8:	jump	0x026c08
000341:0x00026c00:	inc	i
000341:0x00026c08:	ncalli	array<InventoryItem>.Count()
000341:0x00026c10:	cmpi	i, ret
000341:0x00026c20:	bge	0x026c40
000343:0x00026c28:	icall	array<InventoryItem>.Get(i)
000343:0x00026c30:	icall	array<InventoryItem>.Insert(ret)
000343:0x00026c38:	jump	0x026c00
000343:0x00026c40:	rts
array<InventoryItem>::RemoveItem()
000366:0x00026c68:	movefm	@c00, value
000366:0x00026c78:	icall	array<InventoryItem>.Find(@c00)
000366:0x00026c80:	move	remove_index, ret
000368:0x00026c90:	cmpi	remove_index, _i0
000368:0x00026ca0:	blt	0x026cb0
000370:0x00026ca8:	ncalli	array<InventoryItem>.Remove(remove_index)
000370:0x00026cb0:	rts
array<InventoryItem>::Debug()
000387:0x00026cf8:	ncalli	array<InventoryItem>.Count()
000387:0x00026d00:	icall	ToString(ret)
000387:0x00026d08:	adds	@s01, _s'Array count: ', ret
000387:0x00026d18:	moves	@s00, @s01
000387:0x00026d28:	call	PrintString(@s00)
000388:0x00026d38:	imove	i, 0x000000
000388:0x00026d48:	jump	0x026d58
000388:0x00026d50:	inc	i
000388:0x00026d58:	ncalli	array<InventoryItem>.Count()
000388:0x00026d60:	cmpi	i, ret
000388:0x00026d70:	bge	0x026e40
000390:0x00026d78:	icall	array<InventoryItem>.Get(i)
000390:0x00026d80:	movetm	item, ret
000392:0x00026d90:	cmpcm	item, NULL
000392:0x00026da0:	beq	0x026e30
000394:0x00026da8:	icall	ToString(i)
000394:0x00026db0:	adds	@s03, _s'[', ret
000394:0x00026dc0:	moves	@s02, @s03
000394:0x00026dd0:	adds	@s02, @s02, _s'] => '
000394:0x00026de0:	moves	@s01, @s02
000394:0x00026df0:	icall	ToString(item, _i0, _i0)
000394:0x00026e00:	adds	@s01, @s01, ret
000394:0x00026e10:	moves	@s00, @s01
000394:0x00026e20:	call	PrintString(@s00)
000394:0x00026e30:	release	item
000394:0x00026e38:	jump	0x026d50
000394:0x00026e40:	rts
array<InventoryItem>::GetRandomIndex()
000411:0x00026e48:	ncalli	array<InventoryItem>.Count()
000411:0x00026e50:	cmpi	ret, _i0
000411:0x00026e60:	ble	0x026e90
000413:0x00026e68:	ncalli	array<InventoryItem>.Count()
000413:0x00026e70:	ncall	RandomInt(_i0, ret)
000413:0x00026e78:	move	ret, ret
000413:0x00026e88:	rts
000416:0x00026e90:	imove	ret, 0xffffffff
000416:0x00026ea0:	rts
000416:0x00026ea8:	rts
array<InventoryItem>::GetRandomElement()
000430:0x00026eb0:	call	array<InventoryItem>.GetRandomIndex()
000430:0x00026eb8:	icall	array<InventoryItem>.Get(ret)
000430:0x00026ec0:	movetm	ret, ret
000430:0x00026ed0:	rts
000430:0x00026ed8:	rts
array<InventoryItem>::SwapItems()
000435:0x00026f00:	icall	array<InventoryItem>.Get(item1_index)
000435:0x00026f08:	movetm	item1, ret
000436:0x00026f18:	icall	array<InventoryItem>.Get(item2_index)
000436:0x00026f20:	icall	array<InventoryItem>.Set(item1_index, ret)
000437:0x00026f28:	movefm	@c00, item1
000437:0x00026f38:	icall	array<InventoryItem>.Set(item2_index, @c00)
000437:0x00026f40:	release	item1
000437:0x00026f48:	rts
Link<InventoryItem>::Release()
//scripts/1_CoreExt/proto\proto.c
000331:0x00027010:	ncalli	Link<InventoryItem>.Get()
000331:0x00027018:	movetm	obj, ret
000332:0x00027028:	cmpcm	obj, NULL
000332:0x00027038:	beq	0x027048
000333:0x00027040:	call	InventoryItem.Release()
000333:0x00027048:	release	obj
000333:0x00027050:	rts
Link<InventoryItem>::Link()
000337:0x00027058:	movefm	[0x705b010], init
000337:0x00027068:	ncalli	Link<InventoryItem>.Init([0x705b010])
000337:0x00027070:	rts
Link<InventoryItem>::Ptr()
000342:0x00027078:	ncalli	Link<InventoryItem>.Get()
000342:0x00027080:	movetm	ret, ret
000342:0x00027090:	rts
000342:0x00027098:	rts
Link<InventoryItem>::IsNull()
000347:0x000270a0:	ncalli	Link<InventoryItem>.Get()
000347:0x000270a8:	cmpm	ret, NULL
000347:0x000270b8:	bne	0x0270d8
000348:0x000270c0:	imove	ret, 0x000001
000348:0x000270d0:	rts
000350:0x000270d8:	imove	ret, 0x000000
000350:0x000270e8:	rts
000350:0x000270f0:	rts
Ref<ActivityGear>::Ref()
000361:0x000271a0:	movec	ptr, p
000361:0x000271b0:	rts
Ref<ActivityGear>::Release()
000366:0x000271b8:	cmpc	ptr, NULL
000366:0x000271c8:	beq	0x027210
000368:0x000271d0:	movec	[0x70356d8], ptr
000368:0x000271e0:	ncalli	ActivityGear.Release()
000368:0x000271e8:	cmpi	ret, _i0
000368:0x000271f8:	bne	0x027210
000369:0x00027200:	movec	ptr, NULL
000369:0x00027210:	rts
Ref<ActivityGear>::AddRef()
000374:0x00027218:	cmpc	ptr, NULL
000374:0x00027228:	beq	0x027248
000375:0x00027230:	movec	[0x70356d8], ptr
000375:0x00027240:	ncalli	ActivityGear.AddRef()
000375:0x00027248:	rts
Ref<ActivityGear>::~Ref()
000380:0x00027250:	cmpc	ptr, NULL
000380:0x00027260:	beq	0x027280
000381:0x00027268:	movec	[0x70356d8], ptr
000381:0x00027278:	ncalli	ActivityGear.Release()
000381:0x00027280:	rts
Ref<ActivityGear>::Ptr()
000386:0x00027288:	movec	ret, ptr
000386:0x00027298:	rts
000386:0x000272a0:	rts
Ref<ActivityGear>::IsNull()
000391:0x000272a8:	cmpc	ptr, NULL
000391:0x000272b8:	bne	0x0272d8
000392:0x000272c0:	imove	ret, 0x000001
000392:0x000272d0:	rts
000394:0x000272d8:	imove	ret, 0x000000
000394:0x000272e8:	rts
000394:0x000272f0:	rts
array<TextWidget>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x00027638:	imove	i, 0x000000
000341:0x00027648:	jump	0x027658
000341:0x00027650:	inc	i
000341:0x00027658:	ncalli	array<TextWidget>.Count()
000341:0x00027660:	cmpi	i, ret
000341:0x00027670:	bge	0x027690
000343:0x00027678:	icall	array<TextWidget>.Get(i)
000343:0x00027680:	icall	array<TextWidget>.Insert(ret)
000343:0x00027688:	jump	0x027650
000343:0x00027690:	rts
array<TextWidget>::RemoveItem()
000366:0x000276b8:	movefm	@c00, value
000366:0x000276c8:	icall	array<TextWidget>.Find(@c00)
000366:0x000276d0:	move	remove_index, ret
000368:0x000276e0:	cmpi	remove_index, _i0
000368:0x000276f0:	blt	0x027700
000370:0x000276f8:	ncalli	array<TextWidget>.Remove(remove_index)
000370:0x00027700:	rts
array<TextWidget>::Debug()
000387:0x00027748:	ncalli	array<TextWidget>.Count()
000387:0x00027750:	icall	ToString(ret)
000387:0x00027758:	adds	@s01, _s'Array count: ', ret
000387:0x00027768:	moves	@s00, @s01
000387:0x00027778:	call	PrintString(@s00)
000388:0x00027788:	imove	i, 0x000000
000388:0x00027798:	jump	0x0277a8
000388:0x000277a0:	inc	i
000388:0x000277a8:	ncalli	array<TextWidget>.Count()
000388:0x000277b0:	cmpi	i, ret
000388:0x000277c0:	bge	0x027890
000390:0x000277c8:	icall	array<TextWidget>.Get(i)
000390:0x000277d0:	movetm	item, ret
000392:0x000277e0:	cmpcm	item, NULL
000392:0x000277f0:	beq	0x027880
000394:0x000277f8:	icall	ToString(i)
000394:0x00027800:	adds	@s03, _s'[', ret
000394:0x00027810:	moves	@s02, @s03
000394:0x00027820:	adds	@s02, @s02, _s'] => '
000394:0x00027830:	moves	@s01, @s02
000394:0x00027840:	icall	ToString(item, _i0, _i0)
000394:0x00027850:	adds	@s01, @s01, ret
000394:0x00027860:	moves	@s00, @s01
000394:0x00027870:	call	PrintString(@s00)
000394:0x00027880:	release	item
000394:0x00027888:	jump	0x0277a0
000394:0x00027890:	rts
array<TextWidget>::GetRandomIndex()
000411:0x00027898:	ncalli	array<TextWidget>.Count()
000411:0x000278a0:	cmpi	ret, _i0
000411:0x000278b0:	ble	0x0278e0
000413:0x000278b8:	ncalli	array<TextWidget>.Count()
000413:0x000278c0:	ncall	RandomInt(_i0, ret)
000413:0x000278c8:	move	ret, ret
000413:0x000278d8:	rts
000416:0x000278e0:	imove	ret, 0xffffffff
000416:0x000278f0:	rts
000416:0x000278f8:	rts
array<TextWidget>::GetRandomElement()
000430:0x00027900:	call	array<TextWidget>.GetRandomIndex()
000430:0x00027908:	icall	array<TextWidget>.Get(ret)
000430:0x00027910:	movetm	ret, ret
000430:0x00027920:	rts
000430:0x00027928:	rts
array<TextWidget>::SwapItems()
000435:0x00027950:	icall	array<TextWidget>.Get(item1_index)
000435:0x00027958:	movetm	item1, ret
000436:0x00027968:	icall	array<TextWidget>.Get(item2_index)
000436:0x00027970:	icall	array<TextWidget>.Set(item1_index, ret)
000437:0x00027978:	movefm	@c00, item1
000437:0x00027988:	icall	array<TextWidget>.Set(item2_index, @c00)
000437:0x00027990:	release	item1
000437:0x00027998:	rts
array<InventoryContainerEntity>::InsertAll()
000341:0x00027ce0:	imove	i, 0x000000
000341:0x00027cf0:	jump	0x027d00
000341:0x00027cf8:	inc	i
000341:0x00027d00:	ncalli	array<InventoryContainerEntity>.Count()
000341:0x00027d08:	cmpi	i, ret
000341:0x00027d18:	bge	0x027d38
000343:0x00027d20:	icall	array<InventoryContainerEntity>.Get(i)
000343:0x00027d28:	icall	array<InventoryContainerEntity>.Insert(ret)
000343:0x00027d30:	jump	0x027cf8
000343:0x00027d38:	rts
array<InventoryContainerEntity>::RemoveItem()
000366:0x00027d60:	movefm	@c00, value
000366:0x00027d70:	icall	array<InventoryContainerEntity>.Find(@c00)
000366:0x00027d78:	move	remove_index, ret
000368:0x00027d88:	cmpi	remove_index, _i0
000368:0x00027d98:	blt	0x027da8
000370:0x00027da0:	ncalli	array<InventoryContainerEntity>.Remove(remove_index)
000370:0x00027da8:	rts
array<InventoryContainerEntity>::Debug()
000387:0x00027df0:	ncalli	array<InventoryContainerEntity>.Count()
000387:0x00027df8:	icall	ToString(ret)
000387:0x00027e00:	adds	@s01, _s'Array count: ', ret
000387:0x00027e10:	moves	@s00, @s01
000387:0x00027e20:	call	PrintString(@s00)
000388:0x00027e30:	imove	i, 0x000000
000388:0x00027e40:	jump	0x027e50
000388:0x00027e48:	inc	i
000388:0x00027e50:	ncalli	array<InventoryContainerEntity>.Count()
000388:0x00027e58:	cmpi	i, ret
000388:0x00027e68:	bge	0x027f38
000390:0x00027e70:	icall	array<InventoryContainerEntity>.Get(i)
000390:0x00027e78:	movetm	item, ret
000392:0x00027e88:	cmpcm	item, NULL
000392:0x00027e98:	beq	0x027f28
000394:0x00027ea0:	icall	ToString(i)
000394:0x00027ea8:	adds	@s03, _s'[', ret
000394:0x00027eb8:	moves	@s02, @s03
000394:0x00027ec8:	adds	@s02, @s02, _s'] => '
000394:0x00027ed8:	moves	@s01, @s02
000394:0x00027ee8:	icall	ToString(item, _i0, _i0)
000394:0x00027ef8:	adds	@s01, @s01, ret
000394:0x00027f08:	moves	@s00, @s01
000394:0x00027f18:	call	PrintString(@s00)
000394:0x00027f28:	release	item
000394:0x00027f30:	jump	0x027e48
000394:0x00027f38:	rts
array<InventoryContainerEntity>::GetRandomIndex()
000411:0x00027f40:	ncalli	array<InventoryContainerEntity>.Count()
000411:0x00027f48:	cmpi	ret, _i0
000411:0x00027f58:	ble	0x027f88
000413:0x00027f60:	ncalli	array<InventoryContainerEntity>.Count()
000413:0x00027f68:	ncall	RandomInt(_i0, ret)
000413:0x00027f70:	move	ret, ret
000413:0x00027f80:	rts
000416:0x00027f88:	imove	ret, 0xffffffff
000416:0x00027f98:	rts
000416:0x00027fa0:	rts
array<InventoryContainerEntity>::GetRandomElement()
000430:0x00027fa8:	call	array<InventoryContainerEntity>.GetRandomIndex()
000430:0x00027fb0:	icall	array<InventoryContainerEntity>.Get(ret)
000430:0x00027fb8:	movetm	ret, ret
000430:0x00027fc8:	rts
000430:0x00027fd0:	rts
array<InventoryContainerEntity>::SwapItems()
000435:0x00027ff8:	icall	array<InventoryContainerEntity>.Get(item1_index)
000435:0x00028000:	movetm	item1, ret
000436:0x00028010:	icall	array<InventoryContainerEntity>.Get(item2_index)
000436:0x00028018:	icall	array<InventoryContainerEntity>.Set(item1_index, ret)
000437:0x00028020:	movefm	@c00, item1
000437:0x00028030:	icall	array<InventoryContainerEntity>.Set(item2_index, @c00)
000437:0x00028038:	release	item1
000437:0x00028040:	rts
array<ImageWidget>::InsertAll()
000341:0x00028388:	imove	i, 0x000000
000341:0x00028398:	jump	0x0283a8
000341:0x000283a0:	inc	i
000341:0x000283a8:	ncalli	array<ImageWidget>.Count()
000341:0x000283b0:	cmpi	i, ret
000341:0x000283c0:	bge	0x0283e0
000343:0x000283c8:	icall	array<ImageWidget>.Get(i)
000343:0x000283d0:	icall	array<ImageWidget>.Insert(ret)
000343:0x000283d8:	jump	0x0283a0
000343:0x000283e0:	rts
array<ImageWidget>::RemoveItem()
000366:0x00028408:	movefm	@c00, value
000366:0x00028418:	icall	array<ImageWidget>.Find(@c00)
000366:0x00028420:	move	remove_index, ret
000368:0x00028430:	cmpi	remove_index, _i0
000368:0x00028440:	blt	0x028450
000370:0x00028448:	ncalli	array<ImageWidget>.Remove(remove_index)
000370:0x00028450:	rts
array<ImageWidget>::Debug()
000387:0x00028498:	ncalli	array<ImageWidget>.Count()
000387:0x000284a0:	icall	ToString(ret)
000387:0x000284a8:	adds	@s01, _s'Array count: ', ret
000387:0x000284b8:	moves	@s00, @s01
000387:0x000284c8:	call	PrintString(@s00)
000388:0x000284d8:	imove	i, 0x000000
000388:0x000284e8:	jump	0x0284f8
000388:0x000284f0:	inc	i
000388:0x000284f8:	ncalli	array<ImageWidget>.Count()
000388:0x00028500:	cmpi	i, ret
000388:0x00028510:	bge	0x0285e0
000390:0x00028518:	icall	array<ImageWidget>.Get(i)
000390:0x00028520:	movetm	item, ret
000392:0x00028530:	cmpcm	item, NULL
000392:0x00028540:	beq	0x0285d0
000394:0x00028548:	icall	ToString(i)
000394:0x00028550:	adds	@s03, _s'[', ret
000394:0x00028560:	moves	@s02, @s03
000394:0x00028570:	adds	@s02, @s02, _s'] => '
000394:0x00028580:	moves	@s01, @s02
000394:0x00028590:	icall	ToString(item, _i0, _i0)
000394:0x000285a0:	adds	@s01, @s01, ret
000394:0x000285b0:	moves	@s00, @s01
000394:0x000285c0:	call	PrintString(@s00)
000394:0x000285d0:	release	item
000394:0x000285d8:	jump	0x0284f0
000394:0x000285e0:	rts
array<ImageWidget>::GetRandomIndex()
000411:0x000285e8:	ncalli	array<ImageWidget>.Count()
000411:0x000285f0:	cmpi	ret, _i0
000411:0x00028600:	ble	0x028630
000413:0x00028608:	ncalli	array<ImageWidget>.Count()
000413:0x00028610:	ncall	RandomInt(_i0, ret)
000413:0x00028618:	move	ret, ret
000413:0x00028628:	rts
000416:0x00028630:	imove	ret, 0xffffffff
000416:0x00028640:	rts
000416:0x00028648:	rts
array<ImageWidget>::GetRandomElement()
000430:0x00028650:	call	array<ImageWidget>.GetRandomIndex()
000430:0x00028658:	icall	array<ImageWidget>.Get(ret)
000430:0x00028660:	movetm	ret, ret
000430:0x00028670:	rts
000430:0x00028678:	rts
array<ImageWidget>::SwapItems()
000435:0x000286a0:	icall	array<ImageWidget>.Get(item1_index)
000435:0x000286a8:	movetm	item1, ret
000436:0x000286b8:	icall	array<ImageWidget>.Get(item2_index)
000436:0x000286c0:	icall	array<ImageWidget>.Set(item1_index, ret)
000437:0x000286c8:	movefm	@c00, item1
000437:0x000286d8:	icall	array<ImageWidget>.Set(item2_index, @c00)
000437:0x000286e0:	release	item1
000437:0x000286e8:	rts
DayZIntroScene::DayZIntroScene()
//scripts/5_Mission/DayZIntroScene.c
000028:0x00028e90:	new	@c00, Timer
000028:0x00028eb8:	movec	m_timer, @c00
000029:0x00028ec8:	imove	m_currentCharacterID, 0xffffffff
000030:0x00028ed8:	movev	m_demoPos, _v<0.000000,0.000000,0.000000>
000031:0x00028ee8:	movev	m_demoRot, _v<0.000000,0.000000,0.000000>
000032:0x00028ef8:	moves	m_lastCharacter, _s''
000033:0x00028f08:	imove	m_LastShavedSeconds, 0x000000
000034:0x00028f18:	imove	m_CachedPlaytime, 0x000000
000035:0x00028f28:	new	@c00, array<string>
000035:0x00028f48:	movetm	m_lastInventory, @c00
000036:0x00028f58:	new	@c00, array<string>
000036:0x00028f78:	movetm	m_characterAnimations, @c00
000037:0x00028f88:	imove	m_rotatingCharacter, 0x000000
000039:0x00028f98:	subi	@m01, _i0, _i1
000039:0x00028fa8:	move	character_to_select, @m01
000040:0x00028fb8:	moves	cached_playtime_str, _s''
000041:0x00028fc8:	icall	DayZGame.GetProfileString(_s'cachedPlaytime', cached_playtime_str)
000042:0x00028fd0:	cmps	cached_playtime_str, _s''
000042:0x00028fe0:	beq	0x029000
000044:0x00028fe8:	ncall	ToInt(cached_playtime_str)
000044:0x00028ff0:	move	m_CachedPlaytime, ret
000046:0x00029000:	ncalli	DayZGame.GetWorld()
000046:0x00029008:	movec	w, ret
000047:0x00029018:	ncalli	DayZGame.GetMenuData()
000047:0x00029020:	movec	data, ret
000049:0x00029030:	ncalli	MenuData.GetLastPlayedCharacter()
000049:0x00029038:	move	character_to_select, ret
000071:0x00029048:	icall	DayZGame.GetWorldName(worldName)
000073:0x00029050:	adds	root_path, _s'cfgCharacterScenes ', worldName
000075:0x00029060:	ncalli	DayZGame.ConfigGetChildrenCount(root_path)
000075:0x00029068:	move	count, ret
000076:0x00029078:	subi	@m02, count, _i1
000076:0x00029088:	move	@m01, @m02
000076:0x00029098:	ncall	RandomInt(_i0, @m01)
000076:0x000290a0:	move	index, ret
000078:0x000290b0:	icall	DayZGame.ConfigGetChildName(root_path, index, childName)
000080:0x000290c0:	adds	@s01, root_path, _s' '
000080:0x000290d0:	moves	@s00, @s01
000080:0x000290e0:	adds	scene_path, @s00, childName
000081:0x000290f0:	adds	@s01, scene_path, _s' target'
000081:0x00029100:	moves	@s00, @s01
000081:0x00029110:	ncalli	DayZGame.ConfigGetVector(@s00)
000081:0x00029118:	call	DayZIntroScene.SwapYZ(ret)
000081:0x00029128:	movev	target, ret
000082:0x00029138:	adds	@s01, scene_path, _s' position'
000082:0x00029148:	moves	@s00, @s01
000082:0x00029158:	ncalli	DayZGame.ConfigGetVector(@s00)
000082:0x00029160:	call	DayZIntroScene.SwapYZ(ret)
000082:0x00029170:	movev	position, ret
000083:0x00029180:	new	@c00, array<int>
000083:0x000291a0:	movetm	date, @c00
000084:0x000291b0:	adds	@s01, scene_path, _s' date'
000084:0x000291c0:	moves	@s00, @s01
000084:0x000291d0:	movefm	[0x3cd2bb28], date
000084:0x000291e0:	ncalli	DayZGame.ConfigGetIntArray(@s00, [0x3cd2bb28])
000085:0x000291e8:	adds	@s01, scene_path, _s' fov'
000085:0x000291f8:	moves	@s00, @s01
000085:0x00029208:	ncalli	DayZGame.ConfigGetFloat(@s00)
000085:0x00029210:	move	fov, ret
000086:0x00029220:	adds	@s01, scene_path, _s' aperture'
000086:0x00029230:	moves	@s00, @s01
000086:0x00029240:	ncalli	DayZGame.ConfigGetFloat(@s00)
000086:0x00029248:	move	aperture, ret
000087:0x00029258:	adds	@s01, scene_path, _s' humidity'
000087:0x00029268:	moves	@s00, @s01
000087:0x00029278:	ncalli	DayZGame.ConfigGetFloat(@s00)
000087:0x00029280:	move	humidity, ret
000088:0x00029290:	adds	@s01, scene_path, _s' overcast'
000088:0x000292a0:	moves	@s00, @s01
000088:0x000292b0:	ncalli	DayZGame.ConfigGetFloat(@s00)
000088:0x000292b8:	move	overcast, ret
000090:0x000292c8:	cmpf	humidity, _f0.000000
000090:0x000292d8:	bne	0x0292f0
000090:0x000292e0:	imove	humidity, 0.20000
000091:0x000292f0:	cmpf	overcast, _f0.000000
000091:0x00029300:	bne	0x029318
000091:0x00029308:	imove	overcast, 0.20000
000093:0x00029318:	ncalli	DayZGame.GetWorld()
000093:0x00029320:	movec	world, ret
000095:0x00029330:	cmpc	world, NULL
000095:0x00029340:	beq	0x029420
000095:0x00029348:	ncalli	array<int>.Count()
000095:0x00029350:	cmpi	ret, _i5
000095:0x00029360:	blt	0x029420
000097:0x00029368:	icall	array<int>.Get(_i0)
000097:0x00029370:	push	ret
000097:0x00029378:	icall	array<int>.Get(_i1)
000097:0x00029380:	move	@m02, ret
000097:0x00029390:	pop	ret
000097:0x00029398:	push	ret
000097:0x000293a0:	icall	array<int>.Get(_i2)
000097:0x000293a8:	move	@m04, ret
000097:0x000293b8:	pop	ret
000097:0x000293c0:	push	ret
000097:0x000293c8:	icall	array<int>.Get(_i3)
000097:0x000293d0:	move	@m06, ret
000097:0x000293e0:	pop	ret
000097:0x000293e8:	push	ret
000097:0x000293f0:	icall	array<int>.Get(_i4)
000097:0x000293f8:	move	@m08, ret
000097:0x00029408:	pop	ret
000097:0x00029410:	ncalli	World.SetDate(ret, @m02, @m04, @m06, @m08)
000106:0x00029420:	delete	date
000107:0x00029428:	ncall	GetGame()
000107:0x00029430:	movefm	[0x3cd2c308], m_camera
000107:0x00029440:	ncalli	CGame.ObjectDelete([0x3cd2c308])
000108:0x00029448:	call	DayZIntroScene.SnapToGround(position)
000108:0x00029458:	ncalli	DayZGame.CreateObject(_s'camera', ret, true, _i0)
000108:0x00029468:	movetm	m_camera, ret
000110:0x00029478:	movea	mat, m_cameraTrans
000110:0x00029488:	call	MatrixIdentity4(mat)
000112:0x00029498:	cmpcm	m_camera, NULL
000112:0x000294a8:	beq	0x029680
000114:0x000294b0:	movefm	[0x3cd36120], m_camera
000114:0x000294c0:	ncalli	World.SetCameraEffect([0x3cd36120], _s'internal', CamEffectBack, true)
000115:0x000294d0:	movefm	[0x3cd169d8], m_camera
000115:0x000294e0:	ncalli	Camera.PrepareTarget(target)
000116:0x000294e8:	movefm	[0x3cd169d8], m_camera
000116:0x000294f8:	ncalli	Camera.GetPosition()
000116:0x00029500:	movefm	[0x3cd169d8], m_camera
000116:0x00029510:	ncalli	Camera.PreparePos(ret)
000117:0x00029518:	movefm	[0x3cd169d8], m_camera
000117:0x00029528:	ncalli	Camera.PrepareFOV(fov)
000118:0x00029530:	movefm	[0x3cd169d8], m_camera
000118:0x00029540:	ncalli	Camera.PrepareFocus(_f5.000000, _f1.000000)
000119:0x00029548:	movefm	[0x3cd169d8], m_camera
000119:0x00029558:	ncalli	Camera.CommitPrepared(_f0.000000)
000120:0x00029560:	movefm	[0x3cd169d8], m_camera
000120:0x00029570:	ncalli	Camera.PreloadPrepared(_f1.000000)
000122:0x00029578:	subv	@v01, target, position
000122:0x00029588:	movev	@v00, @v01
000122:0x00029598:	icall	DirectionAndUpMatrix(@v00, _v<0.000000,1.000000,0.000000>, m_cameraTrans)
000123:0x000295a8:	movefm	[0x3cd169d8], m_camera
000123:0x000295b8:	ncalli	Camera.GetPosition()
000123:0x000295c0:	ctv	m_cameraTrans[_i3], ret
000125:0x000295d0:	ncall	Vector(_f0.685547, _f-0.988281, _f3.688230)
000125:0x000295e0:	icall	Multiply4(m_cameraTrans)
000125:0x000295e8:	ncalli	DayZGame.SnapToGround(ret)
000125:0x000295f0:	movev	m_demoPos, ret
000126:0x00029600:	movev	m_demoRot, _v<0.000000,0.000000,0.000000>
000127:0x00029610:	movefm	[0x3cd169d8], m_camera
000127:0x00029620:	ncalli	Camera.GetPosition()
000127:0x00029628:	subv	to_cam_dir, ret, m_demoPos
000128:0x00029638:	ifv	@f02, to_cam_dir[0x000000]
000128:0x00029648:	ifv	@f04, to_cam_dir[0x000002]
000128:0x00029658:	ncall	Atan2(@f02, @f04)
000128:0x00029660:	mulf	@f06, ret, RAD2DEG
000128:0x00029670:	itv	m_demoRot[0x000000], @f06
000133:0x00029680:	movec	target, this
000133:0x00029690:	movec	params, NULL
000133:0x000296a0:	new	@c00, EntityAnimEndEventHandler
000133:0x000296c8:	movec	m_anim_end_event_handler, @c00
000135:0x000296d8:	call	DayZIntroScene.ChangeCharacter(character_to_select)
000135:0x000296e8:	release	date
000135:0x000296f0:	rts
DayZIntroScene::TryTakeToHands()
000141:0x00029718:	cmpcm	m_entity_to_take, NULL
000141:0x00029728:	bne	0x029750
000143:0x00029730:	movec	[0x3cd17138], m_timer
000143:0x00029740:	call	Timer.Stop()
000144:0x00029748:	rts
000147:0x00029750:	cmpcm	m_demoUnit, NULL
000147:0x00029760:	bne	0x029770
000147:0x00029768:	rts
000149:0x00029770:	movefm	[0x45f48920], m_demoUnit
000149:0x00029780:	ncalli	PlayerBase.GetEntityInHands()
000149:0x00029788:	movetm	item_in_hands, ret
000151:0x00029798:	cmpcm	item_in_hands, NULL
000151:0x000297a8:	beq	0x0297c0
000151:0x000297b0:	release	item_in_hands
000151:0x000297b8:	rts
000154:0x000297c0:	movem	item, m_entity_to_take
000154:0x000297d0:	movefm	[0x45f48920], m_demoUnit
000154:0x000297e0:	call	PlayerBase.TakeEntityToHands(item)
000155:0x000297f0:	movem	item, m_entity_to_take
000155:0x00029800:	call	DayZIntroScene.InitCharacterAnimations(item)
000157:0x00029810:	movetm	m_entity_to_take, NULL
000158:0x00029820:	movec	[0x3cd17138], m_timer
000158:0x00029830:	call	Timer.Stop()
000158:0x00029838:	release	item_in_hands
000158:0x00029840:	rts
DayZIntroScene::TakeToHands()
000164:0x000298a8:	movec	[0x3cd17138], m_timer
000164:0x000298b8:	call	Timer.Stop()
000165:0x000298c0:	movem	m_entity_to_take, item
000167:0x000298d0:	cmpcm	m_demoUnit, NULL
000167:0x000298e0:	bne	0x0298f0
000167:0x000298e8:	rts
000169:0x000298f0:	movefm	[0x45f48920], m_demoUnit
000169:0x00029900:	ncalli	PlayerBase.GetEntityInHands()
000169:0x00029908:	movetm	item_in_hands, ret
000170:0x00029918:	cmpcm	item_in_hands, NULL
000170:0x00029928:	beq	0x029950
000172:0x00029930:	movefm	[0x45f48920], m_demoUnit
000172:0x00029940:	call	PlayerBase.MoveItemFromHandsToInventory(item_in_hands)
000175:0x00029950:	cmpcm	item, NULL
000175:0x00029960:	beq	0x0299d8
000177:0x00029968:	cmpcm	item_in_hands, NULL
000177:0x00029978:	beq	0x0299d0
000179:0x00029980:	movec	obj, this
000179:0x00029990:	movec	params, NULL
000179:0x000299a0:	movec	[0x3cd17138], m_timer
000179:0x000299b0:	call	Timer.Run(_f0.500000, obj, _s'TryTakeToHands', params, true)
000179:0x000299c8:	jump	0x0299d8
000183:0x000299d0:	call	DayZIntroScene.TryTakeToHands()
000183:0x000299d8:	release	item_in_hands
000183:0x000299e0:	rts
DayZIntroScene::ChangeCharacter()
000191:0x000299e8:	cmpi	m_currentCharacterID, characterID
000191:0x000299f8:	bne	0x029a08
000193:0x00029a00:	rts
000196:0x00029a08:	cmpcm	m_demoUnit, NULL
000196:0x00029a18:	beq	0x029a48
000199:0x00029a20:	movefm	[0x3cd2c308], m_demoUnit
000199:0x00029a30:	ncalli	DayZGame.ObjectDelete([0x3cd2c308])
000200:0x00029a38:	movetm	m_demoUnit, NULL
000202:0x00029a48:	move	m_currentCharacterID, characterID
000203:0x00029a58:	subi	@m01, _i0, _i1
000203:0x00029a68:	cmpi	characterID, @m01
000203:0x00029a78:	bne	0x029a88
000205:0x00029a80:	rts
000208:0x00029a88:	ncalli	DayZGame.GetMenuData()
000208:0x00029a90:	ncalli	MenuData.CreateCharacterPerson(characterID)
000208:0x00029a98:	movetm	m_demoUnit, ret
000214:0x00029aa8:	cmpcm	m_demoUnit, NULL
000214:0x00029ab8:	beq	0x029bd8
000216:0x00029ac0:	movev	[0x3cd1e8a8], m_demoPos
000216:0x00029ad0:	movefm	[0x45f48920], m_demoUnit
000216:0x00029ae0:	ncalli	PlayerBase.SetPosition([0x3cd1e8a8])
000217:0x00029ae8:	movev	[0x3cd1e998], m_demoRot
000217:0x00029af8:	movefm	[0x45f48920], m_demoUnit
000217:0x00029b08:	ncalli	PlayerBase.SetOrientation([0x3cd1e998])
000218:0x00029b10:	movec	event_handler, m_anim_end_event_handler
000218:0x00029b20:	movefm	[0x45f48920], m_demoUnit
000218:0x00029b30:	call	PlayerBase.SetEventHandler(event_handler)
000219:0x00029b40:	move	last_shaved_seconds, m_LastShavedSeconds
000219:0x00029b50:	movefm	[0x45f48920], m_demoUnit
000219:0x00029b60:	call	PlayerBase.SetLastShavedSeconds(last_shaved_seconds)
000220:0x00029b70:	move	playtime, m_CachedPlaytime
000220:0x00029b80:	movefm	[0x45f48920], m_demoUnit
000220:0x00029b90:	call	PlayerBase.SetCachedPlaytime(playtime)
000222:0x00029ba0:	movefm	[0x45f48920], m_demoUnit
000222:0x00029bb0:	ncalli	PlayerBase.GetEntityInHands()
000222:0x00029bb8:	movetm	item, ret
000222:0x00029bc8:	call	DayZIntroScene.InitCharacterAnimations(item)
000222:0x00029bd8:	rts
DayZIntroScene::NextCharacterID()
000232:0x00029c00:	ncalli	DayZGame.GetMenuData()
000232:0x00029c08:	ncalli	MenuData.GetCharactersCount()
000232:0x00029c10:	move	count, ret
000233:0x00029c20:	cmpi	count, _i2
000233:0x00029c30:	bge	0x029c50
000235:0x00029c38:	move	ret, m_currentCharacterID
000235:0x00029c48:	rts
000237:0x00029c50:	addi	@m01, m_currentCharacterID, _i1
000237:0x00029c60:	move	@m00, @m01
000237:0x00029c70:	cmpi	@m00, count
000237:0x00029c80:	bge	0x029ca0
000239:0x00029c88:	addi	ret, m_currentCharacterID, _i1
000239:0x00029c98:	rts
000241:0x00029ca0:	imove	ret, 0x000000
000241:0x00029cb0:	rts
000241:0x00029cb8:	rts
DayZIntroScene::PrevCharacterID()
000248:0x00029cc0:	cmpi	m_currentCharacterID, _i0
000248:0x00029cd0:	ble	0x029cf0
000250:0x00029cd8:	subi	ret, m_currentCharacterID, _i1
000250:0x00029ce8:	rts
000252:0x00029cf0:	ncalli	DayZGame.GetMenuData()
000252:0x00029cf8:	ncalli	MenuData.GetCharactersCount()
000252:0x00029d00:	subi	ret, ret, _i1
000252:0x00029d10:	rts
000252:0x00029d18:	rts
DayZIntroScene::CreateSelectedCharacter()
000257:0x00029d68:	move	selChar, m_currentCharacterID
000258:0x00029d78:	imove	m_currentCharacterID, 0xffffffff
000259:0x00029d88:	call	DayZIntroScene.ChangeCharacter(selChar)
000259:0x00029d98:	rts
DayZIntroScene::DestroyDefaultCharacter()
000264:0x00029da0:	movefm	[0x3cd2c308], m_demoUnit
000264:0x00029db0:	ncalli	DayZGame.ObjectDelete([0x3cd2c308])
000265:0x00029db8:	movetm	m_demoUnit, NULL
000265:0x00029dc8:	rts
DayZIntroScene::CreateCharacter()
000270:0x00029e78:	cmpcm	m_demoUnit, NULL
000270:0x00029e88:	beq	0x029eb8
000273:0x00029e90:	movefm	[0x3cd2c308], m_demoUnit
000273:0x00029ea0:	ncalli	DayZGame.ObjectDelete([0x3cd2c308])
000274:0x00029ea8:	movetm	m_demoUnit, NULL
000279:0x00029eb8:	ncalli	DayZGame.PreloadObject(type, _f1.000000)
000281:0x00029ec0:	movev	pos, m_demoPos
000281:0x00029ed0:	call	DayZIntroScene.SnapToGround(pos)
000281:0x00029ee0:	ncalli	DayZGame.CreateObject(type, ret, true, _i0)
000281:0x00029ef0:	movetm	m_demoUnit, ret
000283:0x00029f00:	cmpcm	m_demoUnit, NULL
000283:0x00029f10:	beq	0x02a060
000285:0x00029f18:	movev	[0x3cd1e8a8], m_demoPos
000285:0x00029f28:	movefm	[0x45f48920], m_demoUnit
000285:0x00029f38:	ncalli	PlayerBase.SetPosition([0x3cd1e8a8])
000286:0x00029f40:	movev	[0x3cd1e998], m_demoRot
000286:0x00029f50:	movefm	[0x45f48920], m_demoUnit
000286:0x00029f60:	ncalli	PlayerBase.SetOrientation([0x3cd1e998])
000287:0x00029f68:	movec	event_handler, m_anim_end_event_handler
000287:0x00029f78:	movefm	[0x45f48920], m_demoUnit
000287:0x00029f88:	call	PlayerBase.SetEventHandler(event_handler)
000288:0x00029f98:	move	last_shaved_seconds, m_LastShavedSeconds
000288:0x00029fa8:	movefm	[0x45f48920], m_demoUnit
000288:0x00029fb8:	call	PlayerBase.SetLastShavedSeconds(last_shaved_seconds)
000289:0x00029fc8:	move	playtime, m_CachedPlaytime
000289:0x00029fd8:	movefm	[0x45f48920], m_demoUnit
000289:0x00029fe8:	call	PlayerBase.SetCachedPlaytime(playtime)
000292:0x00029ff8:	moves	lvalue, _s''
000293:0x0002a008:	movefm	[0x45f48920], m_demoUnit
000293:0x0002a018:	icall	PlayerBase.StatGetCounter(_s'playtime', lvalue)
000295:0x0002a020:	call	GetPlugin(_T(PluginLifespan))
000295:0x0002a030:	movec	module_lifespan, ret
000296:0x0002a040:	movem	player, m_demoUnit
000296:0x0002a050:	call	PluginLifespan.UpdateLifespanLevelParam(player, lvalue, true)
000296:0x0002a060:	rts
DayZIntroScene::AnimateCharacter()
000303:0x0002a088:	cmpcm	m_demoUnit, NULL
000303:0x0002a098:	beq	0x02a170
000303:0x0002a0a0:	movefm	[0x11d0bb58], m_characterAnimations
000303:0x0002a0b0:	ncalli	array<string>.Count()
000303:0x0002a0b8:	cmpi	ret, _i0
000303:0x0002a0c8:	ble	0x02a170
000305:0x0002a0d0:	movefm	[0x11d0bb58], m_characterAnimations
000305:0x0002a0e0:	ncalli	array<string>.Count()
000305:0x0002a0e8:	divi	@m02, ret, _i2
000305:0x0002a0f8:	move	@m01, @m02
000305:0x0002a108:	subi	@m01, @m01, _i1
000305:0x0002a118:	move	@m00, @m01
000305:0x0002a128:	ncall	RandomInt(_i0, @m00)
000305:0x0002a130:	muli	rnd, ret, _i2
000308:0x0002a140:	movefm	[0x11d0bb58], m_characterAnimations
000308:0x0002a150:	icall	array<string>.Get(rnd)
000308:0x0002a158:	movefm	[0x45f48920], m_demoUnit
000308:0x0002a168:	ncalli	PlayerBase.PlayMoveNowGlobal(ret)
000308:0x0002a170:	rts
DayZIntroScene::GetAllItemsInInventory()
000315:0x0002a1f8:	ncalli	array<InventoryItem>.Clear()
000317:0x0002a200:	cmpcm	m_demoUnit, NULL
000317:0x0002a210:	bne	0x02a220
000317:0x0002a218:	rts
000319:0x0002a220:	imove	i, 0x000000
000319:0x0002a230:	jump	0x02a240
000319:0x0002a238:	inc	i
000319:0x0002a240:	cmpi	i, IS_COUNT
000319:0x0002a250:	bge	0x02a3b0
000321:0x0002a258:	movefm	[0x45f48920], m_demoUnit
000321:0x0002a268:	ncalli	PlayerBase.FindAttachment(i)
000321:0x0002a270:	movetm	item, ret
000323:0x0002a280:	cmpcm	item, NULL
000323:0x0002a290:	bne	0x02a2a0
000323:0x0002a298:	jump	0x02a238
000325:0x0002a2a0:	movefm	@c00, item
000325:0x0002a2b0:	icall	array<InventoryItem>.Insert(@c00)
000327:0x0002a2b8:	ncalli	InventoryItem.GetCargo()
000327:0x0002a2c0:	cmpc	ret, NULL
000327:0x0002a2d0:	beq	0x02a348
000329:0x0002a2d8:	ncalli	InventoryItem.GetCargo()
000329:0x0002a2e0:	movec	cargo, ret
000331:0x0002a2f0:	imove	j, 0x000000
000331:0x0002a300:	jump	0x02a310
000331:0x0002a308:	inc	j
000331:0x0002a310:	ncalli	Cargo.GetItemCount()
000331:0x0002a318:	cmpi	j, ret
000331:0x0002a328:	bge	0x02a348
000333:0x0002a330:	ncalli	Cargo.GetItem(j)
000333:0x0002a338:	icall	array<InventoryItem>.Insert(ret)
000333:0x0002a340:	jump	0x02a308
000337:0x0002a348:	imove	j, 0x000000
000337:0x0002a358:	jump	0x02a368
000337:0x0002a360:	inc	j
000337:0x0002a368:	ncalli	InventoryItem.AttachmentsCount()
000337:0x0002a370:	cmpi	j, ret
000337:0x0002a380:	bge	0x02a3a0
000339:0x0002a388:	ncalli	InventoryItem.GetAttachmentFromIndex(j)
000339:0x0002a390:	icall	array<InventoryItem>.Insert(ret)
000339:0x0002a398:	jump	0x02a360
000339:0x0002a3a0:	release	item
000339:0x0002a3a8:	jump	0x02a238
000343:0x0002a3b0:	movefm	[0x45f48920], m_demoUnit
000343:0x0002a3c0:	ncalli	PlayerBase.GetEntityInHands()
000343:0x0002a3c8:	movetm	item, ret
000344:0x0002a3d8:	cmpcm	item, NULL
000344:0x0002a3e8:	beq	0x02a408
000344:0x0002a3f0:	movefm	@c00, item
000344:0x0002a400:	icall	array<InventoryItem>.Insert(@c00)
000344:0x0002a408:	rts
DayZIntroScene::InitItemInHands()
000350:0x0002a6f8:	cmpcm	m_demoUnit, NULL
000350:0x0002a708:	bne	0x02a718
000350:0x0002a710:	rts
000352:0x0002a718:	movetm	rifle, NULL
000353:0x0002a728:	movetm	chainsaw, NULL
000354:0x0002a738:	movetm	pistol, NULL
000355:0x0002a748:	movetm	knife, NULL
000356:0x0002a758:	movetm	baseballBat, NULL
000357:0x0002a768:	movetm	melee, NULL
000359:0x0002a778:	new	@c00, array<InventoryItem>
000359:0x0002a798:	movetm	itemsInInventory, @c00
000360:0x0002a7a8:	call	DayZIntroScene.GetAllItemsInInventory(itemsInInventory)
000362:0x0002a7b8:	imove	i, 0x000000
000362:0x0002a7c8:	jump	0x02a7d8
000362:0x0002a7d0:	inc	i
000362:0x0002a7d8:	ncalli	array<InventoryItem>.Count()
000362:0x0002a7e0:	cmpi	i, ret
000362:0x0002a7f0:	bge	0x02a990
000364:0x0002a7f8:	icall	array<InventoryItem>.Get(i)
000364:0x0002a800:	movetm	item, ret
000366:0x0002a810:	cmpcm	item, NULL
000366:0x0002a820:	bne	0x02a830
000366:0x0002a828:	jump	0x02a7d0
000368:0x0002a830:	call	InventoryItem.IsKindOf(_s'Chainsaw')
000368:0x0002a840:	cmpi	ret, _i0
000368:0x0002a850:	beq	0x02a868
000370:0x0002a858:	movem	chainsaw, item
000373:0x0002a868:	call	InventoryItem.IsKindOf(_s'Rifle')
000373:0x0002a878:	cmpi	ret, _i0
000373:0x0002a888:	beq	0x02a8a0
000375:0x0002a890:	movem	rifle, item
000378:0x0002a8a0:	call	InventoryItem.IsKindOf(_s'Pistol')
000378:0x0002a8b0:	cmpi	ret, _i0
000378:0x0002a8c0:	beq	0x02a8d8
000380:0x0002a8c8:	movem	pistol, item
000383:0x0002a8d8:	call	InventoryItem.IsKindOf(_s'KnifeBase')
000383:0x0002a8e8:	cmpi	ret, _i0
000383:0x0002a8f8:	beq	0x02a910
000385:0x0002a900:	movem	knife, item
000388:0x0002a910:	call	InventoryItem.IsKindOf(_s'BaseballBat')
000388:0x0002a920:	cmpi	ret, _i0
000388:0x0002a930:	beq	0x02a948
000390:0x0002a938:	movem	baseballBat, item
000393:0x0002a948:	call	InventoryItem.IsKindOf(_s'MeleeItemBase')
000393:0x0002a958:	cmpi	ret, _i0
000393:0x0002a968:	beq	0x02a980
000395:0x0002a970:	movem	melee, item
000395:0x0002a980:	release	item
000395:0x0002a988:	jump	0x02a7d0
000402:0x0002a990:	cmpcm	rifle, NULL
000402:0x0002a9a0:	beq	0x02a9f0
000402:0x0002a9a8:	movefm	[0x45f48920], m_demoUnit
000402:0x0002a9b8:	ncalli	PlayerBase.GetEntityInHands()
000402:0x0002a9c0:	cmpmc	ret, rifle
000402:0x0002a9d0:	beq	0x02a9f0
000404:0x0002a9d8:	call	DayZIntroScene.TakeToHands(rifle)
000404:0x0002a9e8:	jump	0x02ac08
000406:0x0002a9f0:	cmpcm	baseballBat, NULL
000406:0x0002aa00:	beq	0x02aa50
000406:0x0002aa08:	movefm	[0x45f48920], m_demoUnit
000406:0x0002aa18:	ncalli	PlayerBase.GetEntityInHands()
000406:0x0002aa20:	cmpmc	ret, baseballBat
000406:0x0002aa30:	beq	0x02aa50
000408:0x0002aa38:	call	DayZIntroScene.TakeToHands(baseballBat)
000408:0x0002aa48:	jump	0x02ac08
000410:0x0002aa50:	cmpcm	melee, NULL
000410:0x0002aa60:	beq	0x02aab0
000410:0x0002aa68:	movefm	[0x45f48920], m_demoUnit
000410:0x0002aa78:	ncalli	PlayerBase.GetEntityInHands()
000410:0x0002aa80:	cmpmc	ret, melee
000410:0x0002aa90:	beq	0x02aab0
000412:0x0002aa98:	call	DayZIntroScene.TakeToHands(melee)
000412:0x0002aaa8:	jump	0x02ac08
000414:0x0002aab0:	cmpcm	knife, NULL
000414:0x0002aac0:	beq	0x02ab10
000414:0x0002aac8:	movefm	[0x45f48920], m_demoUnit
000414:0x0002aad8:	ncalli	PlayerBase.GetEntityInHands()
000414:0x0002aae0:	cmpmc	ret, knife
000414:0x0002aaf0:	beq	0x02ab10
000416:0x0002aaf8:	call	DayZIntroScene.TakeToHands(knife)
000416:0x0002ab08:	jump	0x02ac08
000418:0x0002ab10:	cmpcm	pistol, NULL
000418:0x0002ab20:	beq	0x02ab70
000418:0x0002ab28:	movefm	[0x45f48920], m_demoUnit
000418:0x0002ab38:	ncalli	PlayerBase.GetEntityInHands()
000418:0x0002ab40:	cmpmc	ret, pistol
000418:0x0002ab50:	beq	0x02ab70
000420:0x0002ab58:	call	DayZIntroScene.TakeToHands(pistol)
000420:0x0002ab68:	jump	0x02ac08
000422:0x0002ab70:	cmpcm	chainsaw, NULL
000422:0x0002ab80:	beq	0x02abd0
000422:0x0002ab88:	movefm	[0x45f48920], m_demoUnit
000422:0x0002ab98:	ncalli	PlayerBase.GetEntityInHands()
000422:0x0002aba0:	cmpmc	ret, chainsaw
000422:0x0002abb0:	beq	0x02abd0
000424:0x0002abb8:	call	DayZIntroScene.TakeToHands(chainsaw)
000424:0x0002abc8:	jump	0x02ac08
000428:0x0002abd0:	movefm	[0x45f48920], m_demoUnit
000428:0x0002abe0:	ncalli	PlayerBase.GetEntityInHands()
000428:0x0002abe8:	movetm	item, ret
000428:0x0002abf8:	call	DayZIntroScene.InitCharacterAnimations(item)
000428:0x0002ac08:	delete	itemsInInventory
000428:0x0002ac10:	release	rifle
000428:0x0002ac18:	release	chainsaw
000428:0x0002ac20:	release	pistol
000428:0x0002ac28:	release	knife
000428:0x0002ac30:	release	baseballBat
000428:0x0002ac38:	release	melee
000428:0x0002ac40:	rts
DayZIntroScene::InitCharacterAnimations()
000435:0x0002ae08:	movefm	[0x11d0bb58], m_characterAnimations
000435:0x0002ae18:	ncalli	array<string>.Clear()
000437:0x0002ae20:	movetm	chainsaw, NULL
000438:0x0002ae30:	movetm	pistol, NULL
000439:0x0002ae40:	movetm	rifle, NULL
000440:0x0002ae50:	movetm	knife, NULL
000441:0x0002ae60:	movetm	melee, NULL
000442:0x0002ae70:	movetm	baseballBat, NULL
000444:0x0002ae80:	cmpcm	m_demoUnit, NULL
000444:0x0002ae90:	bne	0x02aed0
000444:0x0002ae98:	release	chainsaw
000444:0x0002aea0:	release	pistol
000444:0x0002aea8:	release	rifle
000444:0x0002aeb0:	release	knife
000444:0x0002aeb8:	release	melee
000444:0x0002aec0:	release	baseballBat
000444:0x0002aec8:	rts
000446:0x0002aed0:	cmpcm	item, NULL
000446:0x0002aee0:	beq	0x02b038
000448:0x0002aee8:	call	EntityAI.IsKindOf(_s'Chainsaw')
000448:0x0002aef8:	cmpi	ret, _i0
000448:0x0002af08:	beq	0x02af20
000450:0x0002af10:	movem	chainsaw, item
000453:0x0002af20:	call	EntityAI.IsKindOf(_s'Rifle')
000453:0x0002af30:	cmpi	ret, _i0
000453:0x0002af40:	beq	0x02af58
000455:0x0002af48:	movem	rifle, item
000458:0x0002af58:	call	EntityAI.IsKindOf(_s'Pistol')
000458:0x0002af68:	cmpi	ret, _i0
000458:0x0002af78:	beq	0x02af90
000460:0x0002af80:	movem	pistol, item
000463:0x0002af90:	call	EntityAI.IsKindOf(_s'KnifeBase')
000463:0x0002afa0:	cmpi	ret, _i0
000463:0x0002afb0:	beq	0x02afc8
000465:0x0002afb8:	movem	knife, item
000468:0x0002afc8:	call	EntityAI.IsKindOf(_s'BaseballBat')
000468:0x0002afd8:	cmpi	ret, _i0
000468:0x0002afe8:	beq	0x02b000
000470:0x0002aff0:	movem	baseballBat, item
000473:0x0002b000:	call	EntityAI.IsKindOf(_s'MeleeItemBase')
000473:0x0002b010:	cmpi	ret, _i0
000473:0x0002b020:	beq	0x02b038
000475:0x0002b028:	movem	melee, item
000479:0x0002b038:	cmpcm	rifle, NULL
000479:0x0002b048:	beq	0x02b070
000481:0x0002b050:	movefm	[0x3cd2baa8], m_characterAnimations
000481:0x0002b060:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idlerifleLong0 variantsPlayer', [0x3cd2baa8])
000481:0x0002b068:	jump	0x02b1a0
000483:0x0002b070:	cmpcm	baseballBat, NULL
000483:0x0002b080:	beq	0x02b0a8
000485:0x0002b088:	movefm	[0x3cd2baa8], m_characterAnimations
000485:0x0002b098:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idleBat0 variantsPlayer', [0x3cd2baa8])
000485:0x0002b0a0:	jump	0x02b1a0
000487:0x0002b0a8:	cmpcm	melee, NULL
000487:0x0002b0b8:	beq	0x02b0e0
000489:0x0002b0c0:	movefm	[0x3cd2baa8], m_characterAnimations
000489:0x0002b0d0:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idleHatchet0 variantsPlayer', [0x3cd2baa8])
000489:0x0002b0d8:	jump	0x02b1a0
000491:0x0002b0e0:	cmpcm	knife, NULL
000491:0x0002b0f0:	beq	0x02b118
000493:0x0002b0f8:	movefm	[0x3cd2baa8], m_characterAnimations
000493:0x0002b108:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idleKnife0 variantsPlayer', [0x3cd2baa8])
000493:0x0002b110:	jump	0x02b1a0
000495:0x0002b118:	cmpcm	pistol, NULL
000495:0x0002b128:	beq	0x02b150
000497:0x0002b130:	movefm	[0x3cd2baa8], m_characterAnimations
000497:0x0002b140:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idlePistol0 variantsPlayer', [0x3cd2baa8])
000497:0x0002b148:	jump	0x02b1a0
000499:0x0002b150:	cmpcm	chainsaw, NULL
000499:0x0002b160:	beq	0x02b188
000501:0x0002b168:	movefm	[0x3cd2baa8], m_characterAnimations
000501:0x0002b178:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idleChainsaw0 variantsPlayer', [0x3cd2baa8])
000501:0x0002b180:	jump	0x02b1a0
000505:0x0002b188:	movefm	[0x3cd2baa8], m_characterAnimations
000505:0x0002b198:	ncalli	DayZGame.ConfigGetTextArray(_s'CfgMovesMaleSdr2 States menu_idleUnarmed0 variantsPlayer', [0x3cd2baa8])
000508:0x0002b1a0:	movefm	[0x11d0bb58], m_characterAnimations
000508:0x0002b1b0:	ncalli	array<string>.Count()
000508:0x0002b1b8:	cmpi	ret, _i0
000508:0x0002b1c8:	ble	0x02b270
000510:0x0002b1d0:	movefm	[0x11d0bb58], m_characterAnimations
000510:0x0002b1e0:	ncalli	array<string>.Count()
000510:0x0002b1e8:	divi	@m02, ret, _i2
000510:0x0002b1f8:	move	@m01, @m02
000510:0x0002b208:	subi	@m01, @m01, _i1
000510:0x0002b218:	move	@m00, @m01
000510:0x0002b228:	ncall	RandomInt(_i0, @m00)
000510:0x0002b230:	muli	rnd, ret, _i2
000511:0x0002b240:	movefm	[0x11d0bb58], m_characterAnimations
000511:0x0002b250:	icall	array<string>.Get(rnd)
000511:0x0002b258:	movefm	[0x45f48920], m_demoUnit
000511:0x0002b268:	ncalli	PlayerBase.SwitchMoveGlobal(ret)
000511:0x0002b270:	release	chainsaw
000511:0x0002b278:	release	pistol
000511:0x0002b280:	release	rifle
000511:0x0002b288:	release	knife
000511:0x0002b290:	release	melee
000511:0x0002b298:	release	baseballBat
000511:0x0002b2a0:	rts
DayZIntroScene::~DayZIntroScene()
000519:0x0002b2a8:	ncall	GetGame()
000519:0x0002b2b0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000519:0x0002b2c0:	movec	obj, this
000519:0x0002b2d0:	call	CallQueue.RemoveCalls(obj)
000519:0x0002b2e0:	rts
DayZIntroScene::CharacterRotationStart()
000525:0x0002b2e8:	imove	m_rotatingCharacter, 0x000001
000526:0x0002b2f8:	icall	GetMousePos(m_rotatingCharacterMouseX, m_rotatingCharacterMouseY)
000527:0x0002b300:	cmpcm	m_demoUnit, NULL
000527:0x0002b310:	beq	0x02b338
000529:0x0002b318:	ifv	@f01, m_demoRot[0x000000]
000529:0x0002b328:	move	m_rotatingCharacterRot, @f01
000529:0x0002b338:	rts
DayZIntroScene::CharacterRotationStop()
000537:0x0002b340:	cmpi	m_rotatingCharacter, _i0
000537:0x0002b350:	beq	0x02b380
000539:0x0002b358:	imove	m_rotatingCharacter, 0x000000
000540:0x0002b368:	cmpcm	m_demoUnit, NULL
000540:0x0002b378:	beq	0x02b380
000540:0x0002b380:	rts
DayZIntroScene::CharacterRotate()
000552:0x0002b470:	icall	GetMousePos(actual_mouse_x, actual_mouse_y)
000554:0x0002b478:	subi	diff_x, m_rotatingCharacterMouseX, actual_mouse_x
000556:0x0002b488:	cmpcm	m_demoUnit, NULL
000556:0x0002b498:	beq	0x02b518
000558:0x0002b4a0:	citf	@f01, diff_x
000558:0x0002b4b0:	mulf	@f01, @f01, _f0.500000
000558:0x0002b4c0:	move	@f00, @f01
000558:0x0002b4d0:	addf	@f00, m_rotatingCharacterRot, @f00
000558:0x0002b4e0:	itv	m_demoRot[0x000000], @f00
000559:0x0002b4f0:	movev	[0x3cd1e998], m_demoRot
000559:0x0002b500:	movefm	[0x45f48920], m_demoUnit
000559:0x0002b510:	ncalli	PlayerBase.SetOrientation([0x3cd1e998])
000559:0x0002b518:	rts
DayZIntroScene::SaveDefaultCharacter()
000566:0x0002b5c0:	cmpcm	m_demoUnit, NULL
000566:0x0002b5d0:	beq	0x02b700
000569:0x0002b5d8:	movefm	[0x45f48920], m_demoUnit
000569:0x0002b5e8:	call	PlayerBase.GetType()
000569:0x0002b5f0:	ncalli	DayZGame.SetProfileString(_s'defaultCharacter', ret)
000571:0x0002b5f8:	movetm	item, NULL
000572:0x0002b608:	new	@c00, array<string>
000572:0x0002b628:	movetm	inventory, @c00
000574:0x0002b638:	imove	i, 0x000000
000574:0x0002b648:	jump	0x02b658
000574:0x0002b650:	inc	i
000574:0x0002b658:	cmpi	i, IS_COUNT
000574:0x0002b668:	bge	0x02b6c8
000576:0x0002b670:	movefm	[0x45f48920], m_demoUnit
000576:0x0002b680:	ncalli	PlayerBase.FindAttachment(i)
000576:0x0002b688:	movetm	item, ret
000577:0x0002b698:	cmpcm	item, NULL
000577:0x0002b6a8:	beq	0x02b6c0
000579:0x0002b6b0:	call	InventoryItem.GetType()
000579:0x0002b6b8:	icall	array<string>.Insert(ret)
000579:0x0002b6c0:	jump	0x02b650
000583:0x0002b6c8:	movefm	[0x3cd2b468], inventory
000583:0x0002b6d8:	ncalli	DayZGame.SetProfileStringList(_s'defaultInventory', [0x3cd2b468])
000584:0x0002b6e0:	ncalli	DayZGame.SaveProfile()
000586:0x0002b6e8:	delete	inventory
000586:0x0002b6f0:	release	item
000586:0x0002b6f8:	release	inventory
000586:0x0002b700:	rts
DayZIntroScene::Update()
000593:0x0002b708:	cmpi	m_rotatingCharacter, _i0
000593:0x0002b718:	beq	0x02b728
000595:0x0002b720:	call	DayZIntroScene.CharacterRotate()
000595:0x0002b728:	rts
DayZIntroScene::SwapYZ()
000603:0x0002b760:	ifv	@f01, vec[0x000000]
000603:0x0002b770:	itv	tmp[0x000000], @f01
000604:0x0002b780:	ifv	@f01, vec[0x000002]
000604:0x0002b790:	itv	tmp[0x000001], @f01
000605:0x0002b7a0:	ifv	@f01, vec[0x000001]
000605:0x0002b7b0:	itv	tmp[0x000002], @f01
000607:0x0002b7c0:	movev	ret, tmp
000607:0x0002b7d0:	rts
000607:0x0002b7d8:	rts
DayZIntroScene::SnapToGround()
000613:0x0002b838:	ncalli	DayZGame.SnapToGround(pos)
000613:0x0002b840:	movev	tmp_pos, ret
000614:0x0002b850:	ifv	@f01, tmp_pos[0x000001]
000614:0x0002b860:	ifv	@f03, pos[0x000001]
000614:0x0002b870:	addf	@f01, @f01, @f03
000614:0x0002b880:	itv	tmp_pos[0x000001], @f01
000616:0x0002b890:	movev	ret, tmp_pos
000616:0x0002b8a0:	rts
000616:0x0002b8a8:	rts
DayZIntroScene::IsRotatingCharacter()
000619:0x0002b8b0:	move	ret, m_rotatingCharacter
000619:0x0002b8c0:	rts
000619:0x0002b8c8:	rts
ActionMenu::ActionMenu()
//scripts/5_Mission/GUI/ActionMenu.c
000018:0x0002b8d0:	new	@c00, array<TextWidget>
000018:0x0002b8f0:	movetm	m_actionItems, @c00
000019:0x0002b900:	new	@c00, TActionRefArray
000019:0x0002b920:	movetm	m_actions, @c00
000020:0x0002b930:	new	@c00, WidgetFadeTimer
000020:0x0002b950:	movec	m_fade_timer, @c00
000021:0x0002b960:	new	@c00, Timer
000021:0x0002b988:	movec	m_hide_timer, @c00
000022:0x0002b998:	imove	m_selectedActionIndex, 0xffffffff
000023:0x0002b9a8:	imove	m_enabled, 0x000001
000023:0x0002b9b8:	rts
ActionMenu::Init()
000028:0x0002ba20:	movem	m_defaultActionWidget, default_action_widget
000029:0x0002ba30:	movem	m_actionsPanelWidget, actions_panel_widget
000030:0x0002ba40:	movefm	[0x704f790], m_actionItems
000030:0x0002ba50:	ncalli	array<TextWidget>.Clear()
000031:0x0002ba58:	imove	i, 0x000000
000032:0x0002ba68:	icall	ToString(i)
000032:0x0002ba70:	adds	@s01, _s'ActionListItem', ret
000032:0x0002ba80:	moves	@s00, @s01
000032:0x0002ba90:	movefm	[0x11cf2b58], m_actionsPanelWidget
000032:0x0002baa0:	ncalli	Widget.FindAnyWidget(@s00)
000032:0x0002baa8:	movetm	w, ret
000034:0x0002bab8:	cmpcm	w, NULL
000034:0x0002bac8:	beq	0x02bb60
000036:0x0002bad0:	movefm	@c00, w
000036:0x0002bae0:	movefm	[0x704f790], m_actionItems
000036:0x0002baf0:	icall	array<TextWidget>.Insert(@c00)
000037:0x0002baf8:	ncalli	TextWidget.Show(false)
000038:0x0002bb00:	inc	i
000039:0x0002bb08:	icall	ToString(i)
000039:0x0002bb10:	adds	@s01, _s'ActionListItem', ret
000039:0x0002bb20:	moves	@s00, @s01
000039:0x0002bb30:	movefm	[0x11cf2b58], m_actionsPanelWidget
000039:0x0002bb40:	ncalli	Widget.FindAnyWidget(@s00)
000039:0x0002bb48:	movetm	w, ret
000039:0x0002bb58:	jump	0x02bab8
000042:0x0002bb60:	movefm	[0x11d09418], m_defaultActionWidget
000042:0x0002bb70:	ncalli	TextWidget.Show(false)
000043:0x0002bb78:	movefm	[0x11cf2b58], m_actionsPanelWidget
000043:0x0002bb88:	ncalli	Widget.Show(true)
000044:0x0002bb90:	movefm	[0x11cf2b58], m_actionsPanelWidget
000044:0x0002bba0:	ncalli	Widget.SetAlpha(_f0.000000)
000044:0x0002bba8:	release	w
000044:0x0002bbb0:	rts
ActionMenu::UpdateActions()
000049:0x0002bc70:	movefm	[0x3cd16b18], m_actions
000049:0x0002bc80:	ncalli	TActionRefArray.Count()
000049:0x0002bc88:	move	prevActionsCount, ret
000051:0x0002bc98:	movefm	[0x3cd16b18], m_actions
000051:0x0002bca8:	call	TActionRefArray.Release()
000052:0x0002bcb0:	ncall	GetGame()
000052:0x0002bcb8:	movefm	[0x3cd2d548], m_actions
000052:0x0002bcc8:	ncalli	CGame.GetActionMenuActions([0x3cd2d548])
000054:0x0002bcd0:	ncall	GetGame()
000054:0x0002bcd8:	ncalli	CGame.GetPlayer()
000054:0x0002bce0:	movetm	player, ret
000056:0x0002bcf0:	movefm	[0x3cd16b18], m_actions
000056:0x0002bd00:	ncalli	TActionRefArray.Count()
000056:0x0002bd08:	subi	i, ret, _i1
000056:0x0002bd18:	jump	0x02bd28
000056:0x0002bd20:	dec	i
000056:0x0002bd28:	cmpi	i, _i0
000056:0x0002bd38:	blt	0x02bda8
000059:0x0002bd40:	movefm	[0x3cd16b18], m_actions
000059:0x0002bd50:	icall	TActionRefArray.Get(i)
000059:0x0002bd58:	movefm	@c00, player
000059:0x0002bd68:	icall	Action.GetText(@c00, tmp)
000060:0x0002bd70:	cmps	tmp, _s''
000060:0x0002bd80:	bne	0x02bda0
000060:0x0002bd88:	movefm	[0x3cd16b18], m_actions
000060:0x0002bd98:	ncalli	TActionRefArray.Remove(i)
000060:0x0002bda0:	jump	0x02bd20
000063:0x0002bda8:	movefm	[0x3cd16b18], m_actions
000063:0x0002bdb8:	ncalli	TActionRefArray.Count()
000063:0x0002bdc0:	cmpi	ret, _i0
000063:0x0002bdd0:	beq	0x02be68
000065:0x0002bdd8:	cmpi	m_selectedActionIndex, _i0
000065:0x0002bde8:	blt	0x02be50
000065:0x0002bdf0:	movefm	[0x3cd16b18], m_actions
000065:0x0002be00:	ncalli	TActionRefArray.Count()
000065:0x0002be08:	cmpi	m_selectedActionIndex, ret
000065:0x0002be18:	bge	0x02be50
000065:0x0002be20:	movefm	[0x3cd16b18], m_actions
000065:0x0002be30:	ncalli	TActionRefArray.Count()
000065:0x0002be38:	cmpi	prevActionsCount, ret
000065:0x0002be48:	beq	0x02be60
000067:0x0002be50:	imove	m_selectedActionIndex, 0x000000
000067:0x0002be60:	jump	0x02be78
000072:0x0002be68:	imove	m_selectedActionIndex, 0xffffffff
000075:0x0002be78:	call	ActionMenu.UpdateWidgets()
000075:0x0002be80:	release	player
000075:0x0002be88:	rts
ActionMenu::UpdateWidgets()
000080:0x0002c060:	ncall	GetGame()
000080:0x0002c068:	ncalli	CGame.GetPlayer()
000080:0x0002c070:	movetm	player, ret
000082:0x0002c080:	call	ActionMenu.GetSelectedAction()
000082:0x0002c088:	movec	selectedAction, ret
000084:0x0002c098:	cmpi	m_enabled, _i0
000084:0x0002c0a8:	bne	0x02c120
000086:0x0002c0b0:	movec	[0x3cd17138], m_hide_timer
000086:0x0002c0c0:	call	Timer.Stop()
000087:0x0002c0c8:	movec	[0x3cd17188], m_fade_timer
000087:0x0002c0d8:	call	WidgetFadeTimer.Stop()
000088:0x0002c0e0:	movefm	[0x11cf2b58], m_actionsPanelWidget
000088:0x0002c0f0:	ncalli	Widget.Show(false)
000089:0x0002c0f8:	movefm	[0x11d09418], m_defaultActionWidget
000089:0x0002c108:	ncalli	TextWidget.Show(false)
000090:0x0002c110:	release	player
000090:0x0002c118:	rts
000094:0x0002c120:	cmpc	selectedAction, NULL
000094:0x0002c130:	beq	0x02c1c0
000096:0x0002c138:	movefm	@c00, player
000096:0x0002c148:	icall	Action.GetTextRich(@c00, action_name)
000097:0x0002c150:	ncall	Length(action_name)
000097:0x0002c158:	cmpi	ret, _i0
000097:0x0002c168:	bne	0x02c188
000099:0x0002c170:	movefm	@c00, player
000099:0x0002c180:	icall	Action.GetText(@c00, action_name)
000101:0x0002c188:	movefm	[0x11d09418], m_defaultActionWidget
000101:0x0002c198:	ncalli	TextWidget.SetText(action_name)
000102:0x0002c1a0:	movefm	[0x11d09418], m_defaultActionWidget
000102:0x0002c1b0:	ncalli	TextWidget.Show(true)
000102:0x0002c1b8:	jump	0x02c1d8
000107:0x0002c1c0:	movefm	[0x11d09418], m_defaultActionWidget
000107:0x0002c1d0:	ncalli	TextWidget.Show(false)
000112:0x0002c1d8:	call	ActionMenu.IsVisible()
000112:0x0002c1e0:	cmpi	ret, _i0
000112:0x0002c1f0:	beq	0x02c408
000114:0x0002c1f8:	movem	w, m_actionsPanelWidget
000114:0x0002c208:	movec	[0x3cd17188], m_fade_timer
000114:0x0002c218:	call	WidgetFadeTimer.FadeIn(w, FADE_IN_TIME, true)
000116:0x0002c228:	imove	i, 0x000000
000116:0x0002c238:	jump	0x02c248
000116:0x0002c240:	inc	i
000116:0x0002c248:	movefm	[0x704f790], m_actionItems
000116:0x0002c258:	ncalli	array<TextWidget>.Count()
000116:0x0002c260:	cmpi	i, ret
000116:0x0002c270:	bge	0x02c360
000118:0x0002c278:	movefm	[0x704f790], m_actionItems
000118:0x0002c288:	icall	array<TextWidget>.Get(i)
000118:0x0002c290:	movetm	w, ret
000120:0x0002c2a0:	movefm	[0x3cd16b18], m_actions
000120:0x0002c2b0:	ncalli	TActionRefArray.Count()
000120:0x0002c2b8:	cmpi	i, ret
000120:0x0002c2c8:	bge	0x02c348
000122:0x0002c2d0:	movefm	[0x3cd16b18], m_actions
000122:0x0002c2e0:	icall	TActionRefArray.Get(i)
000122:0x0002c2e8:	movefm	@c00, player
000122:0x0002c2f8:	icall	Action.GetText(@c00, action_name)
000123:0x0002c300:	ncalli	TextWidget.SetText(action_name)
000125:0x0002c308:	cmpi	i, m_selectedActionIndex
000125:0x0002c318:	bne	0x02c330
000127:0x0002c320:	ncalli	TextWidget.SetColor(_i-5052)
000127:0x0002c328:	jump	0x02c338
000131:0x0002c330:	ncalli	TextWidget.SetColor(_i-1)
000134:0x0002c338:	ncalli	TextWidget.Show(true)
000134:0x0002c340:	jump	0x02c350
000138:0x0002c348:	ncalli	TextWidget.Show(false)
000138:0x0002c350:	release	w
000138:0x0002c358:	jump	0x02c240
000144:0x0002c360:	movefm	[0x11cf2b58], m_actionsPanelWidget
000144:0x0002c370:	icall	Widget.GetSize(sx, sy)
000145:0x0002c378:	movefm	[0x3cd16b18], m_actions
000145:0x0002c388:	ncalli	TActionRefArray.Count()
000145:0x0002c390:	citf	@f03, ret
000145:0x0002c3a0:	mulf	@f03, @f03, _f32.000000
000145:0x0002c3b0:	move	@f01, @f03
000145:0x0002c3c0:	addf	@f01, _f8.000000, @f01
000145:0x0002c3d0:	move	@f00, @f01
000145:0x0002c3e0:	movefm	[0x11cf2b58], m_actionsPanelWidget
000145:0x0002c3f0:	ncalli	Widget.SetSize(sx, @f00, _i1)
000145:0x0002c400:	jump	0x02c438
000149:0x0002c408:	movem	w, m_actionsPanelWidget
000149:0x0002c418:	movec	[0x3cd17188], m_fade_timer
000149:0x0002c428:	call	WidgetFadeTimer.FadeOut(w, FADE_OUT_TIME, true)
000152:0x0002c438:	movec	obj, this
000152:0x0002c448:	movec	[0x3cd17138], m_hide_timer
000152:0x0002c458:	call	Timer.Run(HIDE_MENU_TIME, obj, _s'Hide', _c0, _i0)
000152:0x0002c470:	release	player
000152:0x0002c478:	rts
ActionMenu::NextAction()
000157:0x0002c480:	movefm	[0x3cd16b18], m_actions
000157:0x0002c490:	ncalli	TActionRefArray.Count()
000157:0x0002c498:	cmpi	ret, _i0
000157:0x0002c4a8:	bne	0x02c4b8
000157:0x0002c4b0:	rts
000158:0x0002c4b8:	inc	m_selectedActionIndex
000159:0x0002c4c0:	movefm	[0x3cd16b18], m_actions
000159:0x0002c4d0:	ncalli	TActionRefArray.Count()
000159:0x0002c4d8:	cmpi	m_selectedActionIndex, ret
000159:0x0002c4e8:	blt	0x02c500
000159:0x0002c4f0:	imove	m_selectedActionIndex, 0x000000
000160:0x0002c500:	call	ActionMenu.UpdateWidgets()
000160:0x0002c508:	rts
ActionMenu::PrevAction()
000165:0x0002c510:	movefm	[0x3cd16b18], m_actions
000165:0x0002c520:	ncalli	TActionRefArray.Count()
000165:0x0002c528:	cmpi	ret, _i0
000165:0x0002c538:	bne	0x02c548
000165:0x0002c540:	rts
000166:0x0002c548:	dec	m_selectedActionIndex
000167:0x0002c550:	cmpi	m_selectedActionIndex, _i0
000167:0x0002c560:	bge	0x02c5a0
000167:0x0002c568:	movefm	[0x3cd16b18], m_actions
000167:0x0002c578:	ncalli	TActionRefArray.Count()
000167:0x0002c580:	subi	@m00, ret, _i1
000167:0x0002c590:	move	m_selectedActionIndex, @m00
000168:0x0002c5a0:	call	ActionMenu.UpdateWidgets()
000168:0x0002c5a8:	rts
ActionMenu::PerformAction()
000173:0x0002c630:	call	ActionMenu.GetSelectedAction()
000173:0x0002c638:	movec	selectedAction, ret
000175:0x0002c648:	cmpc	selectedAction, NULL
000175:0x0002c658:	beq	0x02c758
000177:0x0002c660:	movefm	[0x11d09418], m_defaultActionWidget
000177:0x0002c670:	ncalli	TextWidget.IsVisible()
000177:0x0002c678:	cmpi	ret, _i0
000177:0x0002c688:	beq	0x02c6e0
000179:0x0002c690:	ncall	GetGame()
000179:0x0002c698:	ncalli	CGame.GetPlayer()
000179:0x0002c6a0:	movetm	player, ret
000180:0x0002c6b0:	ncall	GetGame()
000180:0x0002c6b8:	movefm	[0x3cd2d4d0], player
000180:0x0002c6c8:	ncalli	CGame.PerformAction([0x3cd2d4d0], selectedAction)
000180:0x0002c6d0:	release	player
000180:0x0002c6d8:	jump	0x02c6e8
000184:0x0002c6e0:	call	ActionMenu.UpdateWidgets()
000188:0x0002c6e8:	ncall	GetGame()
000188:0x0002c6f0:	ncalli	CGame.GetMission()
000188:0x0002c6f8:	movec	mission, ret
000189:0x0002c708:	cmpc	mission, NULL
000189:0x0002c718:	beq	0x02c758
000191:0x0002c720:	call	Mission.GetHud()
000191:0x0002c728:	movec	hud, ret
000192:0x0002c738:	cmpc	hud, NULL
000192:0x0002c748:	beq	0x02c758
000194:0x0002c750:	call	IngameHud.RefreshQuickbar()
000194:0x0002c758:	rts
ActionMenu::Hide()
000202:0x0002c760:	movefm	[0x11d09418], m_defaultActionWidget
000202:0x0002c770:	ncalli	TextWidget.Show(false)
000203:0x0002c778:	movefm	[0x11cf2b58], m_actionsPanelWidget
000203:0x0002c788:	ncalli	Widget.IsVisible()
000203:0x0002c790:	cmpi	ret, _i0
000203:0x0002c7a0:	beq	0x02c7d8
000203:0x0002c7a8:	movem	w, m_actionsPanelWidget
000203:0x0002c7b8:	movec	[0x3cd17188], m_fade_timer
000203:0x0002c7c8:	call	WidgetFadeTimer.FadeOut(w, FADE_OUT_TIME, true)
000203:0x0002c7d8:	rts
ActionMenu::SetEnabled()
000208:0x0002c7e0:	cmpi	m_enabled, enabled
000208:0x0002c7f0:	bne	0x02c800
000208:0x0002c7f8:	rts
000210:0x0002c800:	move	m_enabled, enabled
000212:0x0002c810:	call	ActionMenu.UpdateWidgets()
000212:0x0002c818:	rts
ActionMenu::IsVisible()
000217:0x0002c820:	movefm	[0x3cd16b18], m_actions
000217:0x0002c830:	ncalli	TActionRefArray.Count()
000217:0x0002c838:	cmpi	ret, _i1
000217:0x0002c848:	ble	0x02c868
000219:0x0002c850:	imove	ret, 0x000001
000219:0x0002c860:	rts
000222:0x0002c868:	imove	ret, 0x000000
000222:0x0002c878:	rts
000222:0x0002c880:	rts
ActionMenu::HasDefaultAction()
000227:0x0002c888:	call	ActionMenu.GetSelectedAction()
000227:0x0002c890:	cmpc	ret, NULL
000227:0x0002c8a0:	beq	0x02c8c0
000229:0x0002c8a8:	imove	ret, 0x000001
000229:0x0002c8b8:	rts
000232:0x0002c8c0:	imove	ret, 0x000000
000232:0x0002c8d0:	rts
000232:0x0002c8d8:	rts
ActionMenu::GetSelectedAction()
000237:0x0002c8e0:	cmpi	m_selectedActionIndex, _i0
000237:0x0002c8f0:	bge	0x02c910
000237:0x0002c8f8:	movec	ret, NULL
000237:0x0002c908:	rts
000239:0x0002c910:	movefm	[0x3cd16b18], m_actions
000239:0x0002c920:	icall	TActionRefArray.Get(m_selectedActionIndex)
000239:0x0002c928:	movec	ret, ret
000239:0x0002c938:	rts
000239:0x0002c940:	rts
BookMenu::Init()
//scripts/5_Mission/GUI/BookMenu.c
000013:0x0002ca28:	ncall	GetGame()
000013:0x0002ca30:	ncalli	CGame.GetWorkspace()
000013:0x0002ca38:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_book.layout', _c0)
000013:0x0002ca40:	movetm	layoutRoot, ret
000014:0x0002ca50:	movefm	[0x11cf2b58], layoutRoot
000014:0x0002ca60:	ncalli	Widget.FindAnyWidget(_s'HtmlWidget')
000014:0x0002ca68:	movetm	m_content, ret
000015:0x0002ca78:	movefm	[0x11cf2b58], layoutRoot
000015:0x0002ca88:	ncalli	Widget.FindAnyWidget(_s'Author')
000015:0x0002ca90:	movetm	m_author, ret
000016:0x0002caa0:	movefm	[0x11cf2b58], layoutRoot
000016:0x0002cab0:	ncalli	Widget.FindAnyWidget(_s'Title')
000016:0x0002cab8:	movetm	m_title, ret
000017:0x0002cac8:	movefm	[0x11cf2b58], layoutRoot
000017:0x0002cad8:	ncalli	Widget.FindAnyWidget(_s'Page')
000017:0x0002cae0:	movetm	m_page, ret
000020:0x0002caf0:	movefm	[0x11d096f0], m_content
000020:0x0002cb00:	icall	HtmlWidget.GetScreenSize(width, m_page_height)
000021:0x0002cb08:	movem	ret, layoutRoot
000021:0x0002cb18:	rts
000021:0x0002cb20:	rts
BookMenu::ReadBook()
000026:0x0002cb88:	icall	InventoryItem.ConfigGetString(_s'file')
000026:0x0002cb90:	movefm	[0x11d096f0], m_content
000026:0x0002cba0:	ncalli	HtmlWidget.LoadFile(ret)
000027:0x0002cba8:	icall	InventoryItem.ConfigGetString(_s'author')
000027:0x0002cbb0:	movefm	[0x11d09418], m_author
000027:0x0002cbc0:	ncalli	TextWidget.SetText(ret)
000028:0x0002cbc8:	icall	InventoryItem.ConfigGetString(_s'title')
000028:0x0002cbd0:	movefm	[0x11d09418], m_title
000028:0x0002cbe0:	ncalli	TextWidget.SetText(ret)
000029:0x0002cbe8:	movefm	[0x11d096f0], m_content
000029:0x0002cbf8:	ncalli	HtmlWidget.GetContentHeight()
000029:0x0002cc00:	move	m_content_total_height, ret
000030:0x0002cc10:	imove	m_content_pos, 0.00000
000031:0x0002cc20:	call	BookMenu.NextPrevPage(false)
000031:0x0002cc30:	rts
BookMenu::OnClick()
000036:0x0002cc38:	call	UIScriptedMenu.OnClick(w, x, y, button)
000038:0x0002cc48:	ncalli	Widget.GetUserID()
000038:0x0002cc50:	imove	@m00, 0x000066
000038:0x0002cc60:	cmpi	@m00, ret
000038:0x0002cc70:	bne	0x02cca8
000041:0x0002cc78:	call	BookMenu.NextPrevPage(false)
000042:0x0002cc88:	imove	ret, 0x000001
000042:0x0002cc98:	rts
000042:0x0002cca0:	jump	0x02ccd0
000042:0x0002cca8:	imove	@m00, 0x000067
000042:0x0002ccb8:	cmpi	@m00, ret
000042:0x0002ccc8:	bne	0x02cd00
000044:0x0002ccd0:	call	BookMenu.NextPrevPage(true)
000045:0x0002cce0:	imove	ret, 0x000001
000045:0x0002ccf0:	rts
000045:0x0002ccf8:	jump	0x02cd28
000045:0x0002cd00:	imove	@m00, 0x000002
000045:0x0002cd10:	cmpi	@m00, ret
000045:0x0002cd20:	bne	0x02cd48
000047:0x0002cd28:	ncalli	BookMenu.Close()
000048:0x0002cd30:	imove	ret, 0x000001
000048:0x0002cd40:	rts
000051:0x0002cd48:	imove	ret, 0x000000
000051:0x0002cd58:	rts
000051:0x0002cd60:	rts
BookMenu::NextPrevPage()
000056:0x0002ce78:	cmpi	next, _i0
000056:0x0002ce88:	beq	0x02ceb8
000058:0x0002ce90:	addf	@f00, m_content_pos, m_page_height
000058:0x0002cea0:	move	m_content_pos, @f00
000058:0x0002ceb0:	jump	0x02ced8
000062:0x0002ceb8:	subf	@f00, m_content_pos, m_page_height
000062:0x0002cec8:	move	m_content_pos, @f00
000065:0x0002ced8:	imove	maxOffset, 0.00000
000066:0x0002cee8:	cmpf	m_content_total_height, m_page_height
000066:0x0002cef8:	ble	0x02cf20
000068:0x0002cf00:	subf	@f00, m_content_total_height, m_page_height
000068:0x0002cf10:	move	maxOffset, @f00
000071:0x0002cf20:	cmpf	m_content_pos, _f0.000000
000071:0x0002cf30:	bge	0x02cf48
000073:0x0002cf38:	imove	m_content_pos, 0.00000
000076:0x0002cf48:	cmpf	m_content_pos, maxOffset
000076:0x0002cf58:	ble	0x02cf70
000078:0x0002cf60:	move	m_content_pos, maxOffset
000081:0x0002cf70:	move	[0x11d103a8], m_content_pos
000081:0x0002cf80:	movefm	[0x11d096f0], m_content
000081:0x0002cf90:	ncalli	HtmlWidget.SetContentOffset([0x11d103a8], true)
000083:0x0002cf98:	divf	@f02, m_content_total_height, m_page_height
000083:0x0002cfa8:	move	@f01, @f02
000083:0x0002cfb8:	ncall	Ceil(@f01)
000083:0x0002cfc0:	move	pagesTotal, ret
000084:0x0002cfd0:	divf	@f02, m_content_pos, m_page_height
000084:0x0002cfe0:	move	@f01, @f02
000084:0x0002cff0:	ncall	Round(@f01)
000084:0x0002cff8:	addf	currPage, ret, _f1.000000
000086:0x0002d008:	icall	ToString(currPage)
000086:0x0002d010:	adds	@s03, ret, _s' / '
000086:0x0002d020:	moves	@s01, @s03
000086:0x0002d030:	pushs	ret
000086:0x0002d038:	icall	ToString(pagesTotal)
000086:0x0002d040:	moves	@s03, ret
000086:0x0002d050:	pops	ret
000086:0x0002d058:	adds	@s01, @s01, @s03
000086:0x0002d068:	moves	@s00, @s01
000086:0x0002d078:	movefm	[0x11d09418], m_page
000086:0x0002d088:	ncalli	TextWidget.SetText(@s00)
000086:0x0002d090:	rts
CharacterMenu::CharacterMenu()
//scripts/5_Mission/GUI/CharacterMenu.c
000044:0x0002d098:	new	@c00, TAdvanceArray<string>
000044:0x0002d0b8:	movetm	m_genderList, @c00
000045:0x0002d0c8:	new	@c00, TAdvanceArray<string>
000045:0x0002d0e8:	movetm	m_raceMaleList, @c00
000046:0x0002d0f8:	new	@c00, TAdvanceArray<string>
000046:0x0002d118:	movetm	m_raceFemaleList, @c00
000047:0x0002d128:	new	@c00, TAdvanceArray<string>
000047:0x0002d148:	movetm	m_skinMaleList, @c00
000048:0x0002d158:	new	@c00, TAdvanceArray<string>
000048:0x0002d178:	movetm	m_skinFemaleList, @c00
000049:0x0002d188:	new	@c00, TAdvanceArray<string>
000049:0x0002d1a8:	movetm	m_shirtList, @c00
000050:0x0002d1b8:	new	@c00, TAdvanceArray<string>
000050:0x0002d1d8:	movetm	m_pantsList, @c00
000051:0x0002d1e8:	new	@c00, TAdvanceArray<string>
000051:0x0002d208:	movetm	m_shoeList, @c00
000053:0x0002d218:	new	@c00, array<Man>
000053:0x0002d238:	movetm	m_preloaded, @c00
000053:0x0002d248:	rts
CharacterMenu::~CharacterMenu()
000058:0x0002d250:	cmpcm	m_scene, NULL
000058:0x0002d260:	beq	0x02d280
000060:0x0002d268:	movefm	[0x7034fc8], m_scene
000060:0x0002d278:	call	DayZIntroScene.CreateSelectedCharacter()
000063:0x0002d280:	delete	m_genderList
000064:0x0002d288:	delete	m_raceMaleList
000065:0x0002d290:	delete	m_raceFemaleList
000066:0x0002d298:	delete	m_skinMaleList
000067:0x0002d2a0:	delete	m_skinFemaleList
000068:0x0002d2a8:	delete	m_shirtList
000069:0x0002d2b0:	delete	m_pantsList
000070:0x0002d2b8:	delete	m_shoeList
000084:0x0002d2c0:	delete	m_preloaded
000084:0x0002d2c8:	rts
CharacterMenu::Init()
000089:0x0002d3d0:	ncall	GetGame()
000089:0x0002d3d8:	ncalli	CGame.GetWorkspace()
000089:0x0002d3e0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_character.layout', _c0)
000089:0x0002d3e8:	movetm	layoutRoot, ret
000091:0x0002d3f8:	ncalli	Widget.FindAnyWidget(_s'GenderComboBoxWidget')
000091:0x0002d400:	movetm	m_genderComboBox, ret
000092:0x0002d410:	ncalli	Widget.FindAnyWidget(_s'SkinComboBoxWidget')
000092:0x0002d418:	movetm	m_skinComboBox, ret
000093:0x0002d428:	ncalli	Widget.FindAnyWidget(_s'TopComboBoxWidget')
000093:0x0002d430:	movetm	m_topComboBox, ret
000094:0x0002d440:	ncalli	Widget.FindAnyWidget(_s'PantsComboBoxWidget')
000094:0x0002d448:	movetm	m_pantsComboBox, ret
000095:0x0002d458:	ncalli	Widget.FindAnyWidget(_s'ShoesComboBoxWidget')
000095:0x0002d460:	movetm	m_shoesComboBox, ret
000097:0x0002d470:	ncalli	DayZGame.GetMission()
000097:0x0002d478:	movec	mission, ret
000098:0x0002d488:	call	MissionMainMenu.GetIntroScene()
000098:0x0002d490:	movem	m_scene, ret
000099:0x0002d4a0:	call	CharacterMenu.DefaultCharacterScreen()
000100:0x0002d4a8:	movem	ret, layoutRoot
000100:0x0002d4b8:	release	layoutRoot
000100:0x0002d4c0:	rts
000100:0x0002d4c8:	release	layoutRoot
000100:0x0002d4d0:	rts
CharacterMenu::OnClick()
000109:0x0002d4d8:	call	UIScriptedMenu.OnClick(w, x, y, button)
000111:0x0002d4e8:	ncalli	Widget.GetUserID()
000111:0x0002d4f0:	imove	@m00, 0x000001
000111:0x0002d500:	cmpi	@m00, ret
000111:0x0002d510:	bne	0x02d558
000114:0x0002d518:	movefm	[0x7034fc8], m_scene
000114:0x0002d528:	call	DayZIntroScene.SaveDefaultCharacter()
000115:0x0002d530:	ncalli	CharacterMenu.Close()
000116:0x0002d538:	imove	ret, 0x000001
000116:0x0002d548:	rts
000116:0x0002d550:	jump	0x02d580
000116:0x0002d558:	imove	@m00, 0x000002
000116:0x0002d568:	cmpi	@m00, ret
000116:0x0002d578:	bne	0x02d5a8
000119:0x0002d580:	ncalli	CharacterMenu.Close()
000120:0x0002d588:	imove	ret, 0x000001
000120:0x0002d598:	rts
000120:0x0002d5a0:	jump	0x02d5d0
000120:0x0002d5a8:	imove	@m00, 0x000005
000120:0x0002d5b8:	cmpi	@m00, ret
000120:0x0002d5c8:	bne	0x02d5f0
000123:0x0002d5d0:	call	CharacterMenu.RandomCharacter()
000124:0x0002d5d8:	imove	ret, 0x000001
000124:0x0002d5e8:	rts
000127:0x0002d5f0:	cmpm	w, m_genderComboBox
000127:0x0002d600:	bne	0x02d6a8
000129:0x0002d608:	movefm	[0x11d09bb0], m_genderComboBox
000129:0x0002d618:	ncalli	XComboBoxWidget.GetCurrentItem()
000129:0x0002d620:	cmpi	ret, _i0
000129:0x0002d630:	bne	0x02d670
000131:0x0002d638:	movem	combo, m_skinComboBox
000131:0x0002d648:	movem	items, m_skinFemaleList
000131:0x0002d658:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000131:0x0002d668:	jump	0x02d6a0
000135:0x0002d670:	movem	combo, m_skinComboBox
000135:0x0002d680:	movem	items, m_skinMaleList
000135:0x0002d690:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000138:0x0002d6a0:	call	CharacterMenu.SetInventory()
000141:0x0002d6a8:	cmpm	w, m_skinComboBox
000141:0x0002d6b8:	bne	0x02d6c8
000143:0x0002d6c0:	call	CharacterMenu.SetInventory()
000146:0x0002d6c8:	movefm	[0x7034fc8], m_scene
000146:0x0002d6d8:	cmpcm	m_demoUnit, NULL
000146:0x0002d6e8:	beq	0x02d7f8
000148:0x0002d6f0:	cmpm	w, m_topComboBox
000148:0x0002d700:	bne	0x02d748
000150:0x0002d708:	movefm	[0x11d09bb0], m_topComboBox
000150:0x0002d718:	ncalli	XComboBoxWidget.GetCurrentItem()
000150:0x0002d720:	movefm	[0x7035dd8], m_shirtList
000150:0x0002d730:	icall	TAdvanceArray<string>.Get(ret)
000150:0x0002d738:	call	CharacterMenu.SetAttachment(ret, IS_BODY)
000153:0x0002d748:	cmpm	w, m_pantsComboBox
000153:0x0002d758:	bne	0x02d7a0
000155:0x0002d760:	movefm	[0x11d09bb0], m_pantsComboBox
000155:0x0002d770:	ncalli	XComboBoxWidget.GetCurrentItem()
000155:0x0002d778:	movefm	[0x7035dd8], m_pantsList
000155:0x0002d788:	icall	TAdvanceArray<string>.Get(ret)
000155:0x0002d790:	call	CharacterMenu.SetAttachment(ret, IS_LEGS)
000158:0x0002d7a0:	cmpm	w, m_shoesComboBox
000158:0x0002d7b0:	bne	0x02d7f8
000160:0x0002d7b8:	movefm	[0x11d09bb0], m_shoesComboBox
000160:0x0002d7c8:	ncalli	XComboBoxWidget.GetCurrentItem()
000160:0x0002d7d0:	movefm	[0x7035dd8], m_shoeList
000160:0x0002d7e0:	icall	TAdvanceArray<string>.Get(ret)
000160:0x0002d7e8:	call	CharacterMenu.SetAttachment(ret, IS_FEET)
000164:0x0002d7f8:	imove	ret, 0x000000
000164:0x0002d808:	rts
000164:0x0002d810:	rts
CharacterMenu::OnMouseButtonDown()
000169:0x0002d838:	call	UIScriptedMenu.OnMouseButtonDown(w, x, y, button)
000171:0x0002d848:	ncalli	Widget.GetName()
000171:0x0002d850:	cmps	ret, _s'CharacterRotationFrame'
000171:0x0002d860:	bne	0x02d898
000173:0x0002d868:	movefm	[0x7034fc8], m_scene
000173:0x0002d878:	call	DayZIntroScene.CharacterRotationStart()
000174:0x0002d880:	imove	ret, 0x000001
000174:0x0002d890:	rts
000177:0x0002d898:	imove	ret, 0x000000
000177:0x0002d8a8:	rts
000177:0x0002d8b0:	rts
CharacterMenu::OnMouseButtonUp()
000182:0x0002d8b8:	call	UIScriptedMenu.OnMouseButtonUp(w, x, y, button)
000184:0x0002d8c8:	movefm	[0x7034fc8], m_scene
000184:0x0002d8d8:	call	DayZIntroScene.CharacterRotationStop()
000185:0x0002d8e0:	imove	ret, 0x000001
000185:0x0002d8f0:	rts
000185:0x0002d8f8:	rts
CharacterMenu::DefaultCharacterScreen()
000191:0x0002de08:	imove	i, 0x000000
000192:0x0002de18:	imove	j, 0x000000
000193:0x0002de28:	moves	root_path, _s'cfgCharacterCreation'
000194:0x0002de38:	new	@c00, array<string>
000194:0x0002de58:	movetm	race, @c00
000195:0x0002de68:	new	@c00, array<string>
000195:0x0002de88:	movetm	skin, @c00
000196:0x0002de98:	new	@c00, array<string>
000196:0x0002deb8:	movetm	tmp_list, @c00
000197:0x0002dec8:	new	@c00, array<string>
000197:0x0002dee8:	movetm	defInv, @c00
000199:0x0002def8:	adds	@s01, root_path, _s' skin'
000199:0x0002df08:	moves	@s00, @s01
000199:0x0002df18:	movefm	[0x3cd2baa8], skin
000199:0x0002df28:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000200:0x0002df30:	adds	@s01, root_path, _s' gender'
000200:0x0002df40:	moves	@s00, @s01
000200:0x0002df50:	movefm	[0x3cd2baa8], m_genderList
000200:0x0002df60:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000201:0x0002df68:	adds	@s01, root_path, _s' race'
000201:0x0002df78:	moves	@s00, @s01
000201:0x0002df88:	movefm	[0x3cd2baa8], race
000201:0x0002df98:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000202:0x0002dfa0:	adds	@s01, root_path, _s' top'
000202:0x0002dfb0:	moves	@s00, @s01
000202:0x0002dfc0:	movefm	[0x3cd2baa8], m_shirtList
000202:0x0002dfd0:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000203:0x0002dfd8:	adds	@s01, root_path, _s' bottom'
000203:0x0002dfe8:	moves	@s00, @s01
000203:0x0002dff8:	movefm	[0x3cd2baa8], m_pantsList
000203:0x0002e008:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000204:0x0002e010:	adds	@s01, root_path, _s' shoe'
000204:0x0002e020:	moves	@s00, @s01
000204:0x0002e030:	movefm	[0x3cd2baa8], m_shoeList
000204:0x0002e040:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000205:0x0002e048:	adds	@s03, root_path, _s' '
000205:0x0002e058:	moves	@s02, @s03
000205:0x0002e068:	movefm	[0x7035dd8], m_genderList
000205:0x0002e078:	icall	TAdvanceArray<string>.Get(_i0)
000205:0x0002e080:	adds	@s02, @s02, ret
000205:0x0002e090:	moves	@s01, @s02
000205:0x0002e0a0:	adds	@s01, @s01, _s'custom'
000205:0x0002e0b0:	moves	@s00, @s01
000205:0x0002e0c0:	movefm	[0x3cd2baa8], tmp_list
000205:0x0002e0d0:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000206:0x0002e0d8:	movefm	@c00, skin
000206:0x0002e0e8:	movefm	[0x7035dd8], m_skinFemaleList
000206:0x0002e0f8:	icall	TAdvanceArray<string>.Copy(@c00)
000207:0x0002e100:	movefm	@c00, race
000207:0x0002e110:	movefm	[0x7035dd8], m_raceFemaleList
000207:0x0002e120:	icall	TAdvanceArray<string>.Copy(@c00)
000209:0x0002e128:	movefm	[0x7035dd8], m_skinFemaleList
000209:0x0002e138:	call	TAdvanceArray<string>.InsertArray(tmp_list)
000210:0x0002e148:	movefm	[0x7035dd8], m_raceFemaleList
000210:0x0002e158:	call	TAdvanceArray<string>.InsertArray(tmp_list)
000212:0x0002e168:	adds	@s03, root_path, _s' '
000212:0x0002e178:	moves	@s02, @s03
000212:0x0002e188:	movefm	[0x7035dd8], m_genderList
000212:0x0002e198:	icall	TAdvanceArray<string>.Get(_i1)
000212:0x0002e1a0:	adds	@s02, @s02, ret
000212:0x0002e1b0:	moves	@s01, @s02
000212:0x0002e1c0:	adds	@s01, @s01, _s'custom'
000212:0x0002e1d0:	moves	@s00, @s01
000212:0x0002e1e0:	movefm	[0x3cd2baa8], tmp_list
000212:0x0002e1f0:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
000213:0x0002e1f8:	movefm	@c00, skin
000213:0x0002e208:	movefm	[0x7035dd8], m_skinMaleList
000213:0x0002e218:	icall	TAdvanceArray<string>.Copy(@c00)
000214:0x0002e220:	movefm	@c00, race
000214:0x0002e230:	movefm	[0x7035dd8], m_raceMaleList
000214:0x0002e240:	icall	TAdvanceArray<string>.Copy(@c00)
000216:0x0002e248:	movefm	[0x7035dd8], m_skinMaleList
000216:0x0002e258:	call	TAdvanceArray<string>.InsertArray(tmp_list)
000217:0x0002e268:	movefm	[0x7035dd8], m_raceMaleList
000217:0x0002e278:	call	TAdvanceArray<string>.InsertArray(tmp_list)
000219:0x0002e288:	adds	@s01, root_path, _s' format'
000219:0x0002e298:	moves	@s00, @s01
000219:0x0002e2a8:	icall	DayZGame.ConfigGetText(@s00, m_format)
000220:0x0002e2b0:	movem	combo, m_genderComboBox
000220:0x0002e2c0:	movem	items, m_genderList
000220:0x0002e2d0:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000221:0x0002e2e0:	movem	combo, m_skinComboBox
000221:0x0002e2f0:	call	CharacterMenu.CharacterComboBoxInsertList(combo, skin, false)
000222:0x0002e300:	movem	combo, m_topComboBox
000222:0x0002e310:	movem	items, m_shirtList
000222:0x0002e320:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, true)
000223:0x0002e330:	movem	combo, m_pantsComboBox
000223:0x0002e340:	movem	items, m_pantsList
000223:0x0002e350:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, true)
000224:0x0002e360:	movem	combo, m_shoesComboBox
000224:0x0002e370:	movem	items, m_shoeList
000224:0x0002e380:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, true)
000228:0x0002e390:	movefm	[0x7035dd8], m_genderList
000228:0x0002e3a0:	icall	TAdvanceArray<string>.Get(_i0)
000228:0x0002e3a8:	ctv	params[_i0], ret
000229:0x0002e3b8:	icall	array<string>.Get(_i0)
000229:0x0002e3c0:	ctv	params[_i1], ret
000232:0x0002e3d0:	icall	DayZGame.FormatString(m_format, params, defChar)
000233:0x0002e3e0:	movefm	[0x3cd2b358], defInv
000233:0x0002e3f0:	ncalli	DayZGame.GetProfileStringList(_s'defaultInventory', [0x3cd2b358])
000234:0x0002e3f8:	icall	DayZGame.GetProfileString(_s'defaultCharacter', defChar)
000236:0x0002e400:	ncalli	array<string>.Count()
000236:0x0002e408:	cmpi	ret, _i0
000236:0x0002e418:	bne	0x02e480
000238:0x0002e420:	movefm	[0x7035dd8], m_shirtList
000238:0x0002e430:	icall	TAdvanceArray<string>.Get(_i0)
000238:0x0002e438:	icall	array<string>.Insert(ret)
000239:0x0002e440:	movefm	[0x7035dd8], m_pantsList
000239:0x0002e450:	icall	TAdvanceArray<string>.Get(_i0)
000239:0x0002e458:	icall	array<string>.Insert(ret)
000240:0x0002e460:	movefm	[0x7035dd8], m_shoeList
000240:0x0002e470:	icall	TAdvanceArray<string>.Get(_i0)
000240:0x0002e478:	icall	array<string>.Insert(ret)
000247:0x0002e480:	movefm	[0x7034fc8], m_scene
000247:0x0002e490:	cmpcm	m_demoUnit, NULL
000247:0x0002e4a0:	beq	0x02e568
000249:0x0002e4a8:	movetm	item, NULL
000251:0x0002e4b8:	imove	i, 0x000000
000251:0x0002e4c8:	jump	0x02e4d8
000251:0x0002e4d0:	inc	i
000251:0x0002e4d8:	cmpi	i, IS_COUNT
000251:0x0002e4e8:	bge	0x02e560
000253:0x0002e4f0:	movefm	[0x7034fc8], m_scene
000253:0x0002e500:	movefm	[0x45f48920], m_demoUnit
000253:0x0002e510:	ncalli	PlayerBase.FindAttachment(i)
000253:0x0002e518:	movetm	item, ret
000254:0x0002e528:	cmpcm	item, NULL
000254:0x0002e538:	beq	0x02e558
000256:0x0002e540:	movefm	[0x3cd2c308], item
000256:0x0002e550:	ncalli	DayZGame.ObjectDelete([0x3cd2c308])
000256:0x0002e558:	jump	0x02e4d0
000256:0x0002e560:	release	item
000261:0x0002e568:	movefm	[0x7034fc8], m_scene
000261:0x0002e578:	call	DayZIntroScene.CreateCharacter(defChar)
000263:0x0002e588:	movefm	[0x7034fc8], m_scene
000263:0x0002e598:	cmpcm	m_demoUnit, NULL
000263:0x0002e5a8:	bne	0x02e5d8
000263:0x0002e5b0:	release	race
000263:0x0002e5b8:	release	skin
000263:0x0002e5c0:	release	tmp_list
000263:0x0002e5c8:	release	defInv
000263:0x0002e5d0:	rts
000265:0x0002e5d8:	imove	index, 0xffffffff
000269:0x0002e5e8:	movetm	preloaded_object, NULL
000272:0x0002e5f8:	ncall	Vector(_f0.000000, _f0.000000, _f-2.000000)
000272:0x0002e608:	movefm	[0x7034fc8], m_scene
000272:0x0002e618:	icall	Multiply4(m_cameraTrans)
000272:0x0002e620:	movev	preloaded_pos, ret
000274:0x0002e630:	imove	i, 0x000000
000274:0x0002e640:	jump	0x02e650
000274:0x0002e648:	inc	i
000274:0x0002e650:	movefm	[0x7035dd8], m_raceMaleList
000274:0x0002e660:	ncalli	TAdvanceArray<string>.Count()
000274:0x0002e668:	cmpi	i, ret
000274:0x0002e678:	bge	0x02e760
000276:0x0002e680:	movefm	[0x7035dd8], m_genderList
000276:0x0002e690:	icall	TAdvanceArray<string>.Get(_i1)
000276:0x0002e698:	ctv	params[_i0], ret
000277:0x0002e6a8:	movefm	[0x7035dd8], m_raceMaleList
000277:0x0002e6b8:	icall	TAdvanceArray<string>.Get(i)
000277:0x0002e6c0:	ctv	params[_i1], ret
000279:0x0002e6d0:	icall	DayZGame.FormatString(m_format, params, tmp)
000281:0x0002e6e0:	ncalli	DayZGame.PreloadObject(tmp, _f1.000000)
000282:0x0002e6e8:	ncalli	DayZGame.CreateObject(tmp, preloaded_pos, true, _i0)
000282:0x0002e6f8:	movetm	preloaded_object, ret
000284:0x0002e708:	cmpcm	preloaded_object, NULL
000284:0x0002e718:	beq	0x02e758
000286:0x0002e720:	ncalli	Man.SetPosition(preloaded_pos)
000287:0x0002e728:	ncalli	Man.DisableSimulation(true)
000289:0x0002e730:	movefm	@c00, preloaded_object
000289:0x0002e740:	movefm	[0x3cd2d358], m_preloaded
000289:0x0002e750:	icall	array<Man>.Insert(@c00)
000289:0x0002e758:	jump	0x02e648
000293:0x0002e760:	imove	i, 0x000000
000293:0x0002e770:	jump	0x02e780
000293:0x0002e778:	inc	i
000293:0x0002e780:	movefm	[0x7035dd8], m_raceFemaleList
000293:0x0002e790:	ncalli	TAdvanceArray<string>.Count()
000293:0x0002e798:	cmpi	i, ret
000293:0x0002e7a8:	bge	0x02e890
000295:0x0002e7b0:	movefm	[0x7035dd8], m_genderList
000295:0x0002e7c0:	icall	TAdvanceArray<string>.Get(_i0)
000295:0x0002e7c8:	ctv	params[_i0], ret
000296:0x0002e7d8:	movefm	[0x7035dd8], m_raceFemaleList
000296:0x0002e7e8:	icall	TAdvanceArray<string>.Get(i)
000296:0x0002e7f0:	ctv	params[_i1], ret
000298:0x0002e800:	icall	DayZGame.FormatString(m_format, params, tmp)
000300:0x0002e810:	ncalli	DayZGame.PreloadObject(tmp, _f1.000000)
000301:0x0002e818:	ncalli	DayZGame.CreateObject(tmp, preloaded_pos, true, _i0)
000301:0x0002e828:	movetm	preloaded_object, ret
000303:0x0002e838:	cmpcm	preloaded_object, NULL
000303:0x0002e848:	beq	0x02e888
000305:0x0002e850:	ncalli	Man.SetPosition(preloaded_pos)
000306:0x0002e858:	ncalli	Man.DisableSimulation(true)
000308:0x0002e860:	movefm	@c00, preloaded_object
000308:0x0002e870:	movefm	[0x3cd2d358], m_preloaded
000308:0x0002e880:	icall	array<Man>.Insert(@c00)
000308:0x0002e888:	jump	0x02e778
000313:0x0002e890:	ncalli	array<string>.Clear()
000315:0x0002e898:	movefm	[0x7034fc8], m_scene
000315:0x0002e8a8:	movefm	[0x45f48920], m_demoUnit
000315:0x0002e8b8:	call	PlayerBase.IsKindOf(_s'SurvivorMale')
000315:0x0002e8c8:	cmpi	ret, _i0
000315:0x0002e8d8:	beq	0x02ea08
000317:0x0002e8e0:	movem	combo, m_skinComboBox
000317:0x0002e8f0:	movem	items, m_skinMaleList
000317:0x0002e900:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000318:0x0002e910:	movefm	[0x11d09bb0], m_genderComboBox
000318:0x0002e920:	ncalli	XComboBoxWidget.SetCurrentItem(_i1)
000320:0x0002e928:	movefm	[0x11d09bb0], m_genderComboBox
000320:0x0002e938:	ncalli	XComboBoxWidget.GetCurrentItem()
000320:0x0002e940:	movefm	[0x7035dd8], m_genderList
000320:0x0002e950:	icall	TAdvanceArray<string>.Get(ret)
000320:0x0002e958:	ctv	params[_i0], ret
000322:0x0002e968:	imove	i, 0x000000
000322:0x0002e978:	jump	0x02e988
000322:0x0002e980:	inc	i
000322:0x0002e988:	movefm	[0x7035dd8], m_raceMaleList
000322:0x0002e998:	ncalli	TAdvanceArray<string>.Count()
000322:0x0002e9a0:	cmpi	i, ret
000322:0x0002e9b0:	bge	0x02ea00
000324:0x0002e9b8:	movefm	[0x7035dd8], m_raceMaleList
000324:0x0002e9c8:	icall	TAdvanceArray<string>.Get(i)
000324:0x0002e9d0:	ctv	params[_i1], ret
000325:0x0002e9e0:	icall	DayZGame.FormatString(m_format, params, tmp)
000326:0x0002e9f0:	icall	array<string>.Insert(tmp)
000326:0x0002e9f8:	jump	0x02e980
000326:0x0002ea00:	jump	0x02eb28
000331:0x0002ea08:	movem	combo, m_skinComboBox
000331:0x0002ea18:	movem	items, m_skinFemaleList
000331:0x0002ea28:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000332:0x0002ea38:	movefm	[0x11d09bb0], m_genderComboBox
000332:0x0002ea48:	ncalli	XComboBoxWidget.SetCurrentItem(_i0)
000334:0x0002ea50:	movefm	[0x11d09bb0], m_genderComboBox
000334:0x0002ea60:	ncalli	XComboBoxWidget.GetCurrentItem()
000334:0x0002ea68:	movefm	[0x7035dd8], m_genderList
000334:0x0002ea78:	icall	TAdvanceArray<string>.Get(ret)
000334:0x0002ea80:	ctv	params[_i0], ret
000335:0x0002ea90:	imove	i, 0x000000
000335:0x0002eaa0:	jump	0x02eab0
000335:0x0002eaa8:	inc	i
000335:0x0002eab0:	movefm	[0x7035dd8], m_raceFemaleList
000335:0x0002eac0:	ncalli	TAdvanceArray<string>.Count()
000335:0x0002eac8:	cmpi	i, ret
000335:0x0002ead8:	bge	0x02eb28
000337:0x0002eae0:	movefm	[0x7035dd8], m_raceFemaleList
000337:0x0002eaf0:	icall	TAdvanceArray<string>.Get(i)
000337:0x0002eaf8:	ctv	params[_i1], ret
000338:0x0002eb08:	icall	DayZGame.FormatString(m_format, params, tmp)
000339:0x0002eb18:	icall	array<string>.Insert(tmp)
000339:0x0002eb20:	jump	0x02eaa8
000344:0x0002eb28:	movefm	[0x7034fc8], m_scene
000344:0x0002eb38:	movefm	[0x45f48920], m_demoUnit
000344:0x0002eb48:	call	PlayerBase.GetType()
000344:0x0002eb50:	icall	array<string>.Find(ret)
000344:0x0002eb58:	move	index, ret
000346:0x0002eb68:	cmpi	index, _i-1
000346:0x0002eb78:	bne	0x02eb90
000348:0x0002eb80:	imove	index, 0x000000
000350:0x0002eb90:	movefm	[0x11d09bb0], m_skinComboBox
000350:0x0002eba0:	ncalli	XComboBoxWidget.SetCurrentItem(index)
000352:0x0002eba8:	imove	i, 0x000000
000352:0x0002ebb8:	jump	0x02ebc8
000352:0x0002ebc0:	inc	i
000352:0x0002ebc8:	cmpi	i, _i3
000352:0x0002ebd8:	bge	0x02ede0
000354:0x0002ebe0:	icall	array<string>.Get(i)
000354:0x0002ebe8:	call	DayZGame.IsKindOf(ret, _s'TopwearBase')
000354:0x0002ebf8:	cmpi	ret, _i0
000354:0x0002ec08:	beq	0x02ec88
000356:0x0002ec10:	icall	array<string>.Get(i)
000356:0x0002ec18:	movefm	[0x7035dd8], m_shirtList
000356:0x0002ec28:	icall	TAdvanceArray<string>.Find(ret)
000356:0x0002ec30:	move	index, ret
000357:0x0002ec40:	cmpi	index, _i-1
000357:0x0002ec50:	bne	0x02ec68
000359:0x0002ec58:	imove	index, 0x000000
000362:0x0002ec68:	movefm	[0x11d09bb0], m_topComboBox
000362:0x0002ec78:	ncalli	XComboBoxWidget.SetCurrentItem(index)
000363:0x0002ec80:	jump	0x02ebc0
000366:0x0002ec88:	icall	array<string>.Get(i)
000366:0x0002ec90:	call	DayZGame.IsKindOf(ret, _s'BottomwearBase')
000366:0x0002eca0:	cmpi	ret, _i0
000366:0x0002ecb0:	beq	0x02ed30
000368:0x0002ecb8:	icall	array<string>.Get(i)
000368:0x0002ecc0:	movefm	[0x7035dd8], m_pantsList
000368:0x0002ecd0:	icall	TAdvanceArray<string>.Find(ret)
000368:0x0002ecd8:	move	index, ret
000369:0x0002ece8:	cmpi	index, _i-1
000369:0x0002ecf8:	bne	0x02ed10
000371:0x0002ed00:	imove	index, 0x000000
000373:0x0002ed10:	movefm	[0x11d09bb0], m_pantsComboBox
000373:0x0002ed20:	ncalli	XComboBoxWidget.SetCurrentItem(index)
000374:0x0002ed28:	jump	0x02ebc0
000377:0x0002ed30:	icall	array<string>.Get(i)
000377:0x0002ed38:	call	DayZGame.IsKindOf(ret, _s'FootwearBase')
000377:0x0002ed48:	cmpi	ret, _i0
000377:0x0002ed58:	beq	0x02edd8
000379:0x0002ed60:	icall	array<string>.Get(i)
000379:0x0002ed68:	movefm	[0x7035dd8], m_shoeList
000379:0x0002ed78:	icall	TAdvanceArray<string>.Find(ret)
000379:0x0002ed80:	move	index, ret
000380:0x0002ed90:	cmpi	index, _i-1
000380:0x0002eda0:	bne	0x02edb8
000382:0x0002eda8:	imove	index, 0x000000
000384:0x0002edb8:	movefm	[0x11d09bb0], m_shoesComboBox
000384:0x0002edc8:	ncalli	XComboBoxWidget.SetCurrentItem(index)
000385:0x0002edd0:	jump	0x02ebc0
000385:0x0002edd8:	jump	0x02ebc0
000389:0x0002ede0:	call	CharacterMenu.SetInventory()
000392:0x0002ede8:	delete	race
000393:0x0002edf0:	delete	skin
000394:0x0002edf8:	delete	tmp_list
000395:0x0002ee00:	delete	defInv
000395:0x0002ee08:	release	race
000395:0x0002ee10:	release	skin
000395:0x0002ee18:	release	tmp_list
000395:0x0002ee20:	release	defInv
000395:0x0002ee28:	release	preloaded_object
000395:0x0002ee30:	rts
CharacterMenu::SetInventory()
000403:0x0002eeb8:	movefm	[0x11d09bb0], m_genderComboBox
000403:0x0002eec8:	ncalli	XComboBoxWidget.GetCurrentItem()
000403:0x0002eed0:	cmpi	ret, _i0
000403:0x0002eee0:	bne	0x02ef58
000405:0x0002eee8:	movefm	[0x7035dd8], m_genderList
000405:0x0002eef8:	icall	TAdvanceArray<string>.Get(_i0)
000405:0x0002ef00:	ctv	params[_i0], ret
000406:0x0002ef10:	movefm	[0x11d09bb0], m_skinComboBox
000406:0x0002ef20:	ncalli	XComboBoxWidget.GetCurrentItem()
000406:0x0002ef28:	movefm	[0x7035dd8], m_raceFemaleList
000406:0x0002ef38:	icall	TAdvanceArray<string>.Get(ret)
000406:0x0002ef40:	ctv	params[_i1], ret
000406:0x0002ef50:	jump	0x02efc0
000410:0x0002ef58:	movefm	[0x7035dd8], m_genderList
000410:0x0002ef68:	icall	TAdvanceArray<string>.Get(_i1)
000410:0x0002ef70:	ctv	params[_i0], ret
000411:0x0002ef80:	movefm	[0x11d09bb0], m_skinComboBox
000411:0x0002ef90:	ncalli	XComboBoxWidget.GetCurrentItem()
000411:0x0002ef98:	movefm	[0x7035dd8], m_raceMaleList
000411:0x0002efa8:	icall	TAdvanceArray<string>.Get(ret)
000411:0x0002efb0:	ctv	params[_i1], ret
000414:0x0002efc0:	icall	DayZGame.FormatString(m_format, params, character)
000415:0x0002efd0:	movefm	[0x7034fc8], m_scene
000415:0x0002efe0:	call	DayZIntroScene.CreateCharacter(character)
000416:0x0002eff0:	movefm	[0x7034fc8], m_scene
000416:0x0002f000:	cmpcm	m_demoUnit, NULL
000416:0x0002f010:	beq	0x02f130
000418:0x0002f018:	movefm	[0x11d09bb0], m_topComboBox
000418:0x0002f028:	ncalli	XComboBoxWidget.GetCurrentItem()
000418:0x0002f030:	movefm	[0x7035dd8], m_shirtList
000418:0x0002f040:	icall	TAdvanceArray<string>.Get(ret)
000418:0x0002f048:	call	CharacterMenu.SetAttachment(ret, IS_BODY)
000419:0x0002f058:	movefm	[0x11d09bb0], m_pantsComboBox
000419:0x0002f068:	ncalli	XComboBoxWidget.GetCurrentItem()
000419:0x0002f070:	movefm	[0x7035dd8], m_pantsList
000419:0x0002f080:	icall	TAdvanceArray<string>.Get(ret)
000419:0x0002f088:	call	CharacterMenu.SetAttachment(ret, IS_LEGS)
000420:0x0002f098:	movefm	[0x11d09bb0], m_shoesComboBox
000420:0x0002f0a8:	ncalli	XComboBoxWidget.GetCurrentItem()
000420:0x0002f0b0:	movefm	[0x7035dd8], m_shoeList
000420:0x0002f0c0:	icall	TAdvanceArray<string>.Get(ret)
000420:0x0002f0c8:	call	CharacterMenu.SetAttachment(ret, IS_FEET)
000421:0x0002f0d8:	movefm	[0x7034fc8], m_scene
000421:0x0002f0e8:	movefm	[0x45f48920], m_demoUnit
000421:0x0002f0f8:	ncalli	PlayerBase.GetEntityInHands()
000421:0x0002f100:	movetm	item, ret
000421:0x0002f110:	movefm	[0x7034fc8], m_scene
000421:0x0002f120:	call	DayZIntroScene.InitCharacterAnimations(item)
000421:0x0002f130:	rts
CharacterMenu::RandomCharacter()
000428:0x0002f138:	movem	combo, m_genderComboBox
000428:0x0002f148:	call	CharacterMenu.RandomSelectComboBox(combo)
000430:0x0002f158:	movefm	[0x11d09bb0], m_genderComboBox
000430:0x0002f168:	ncalli	XComboBoxWidget.GetCurrentItem()
000430:0x0002f170:	cmpi	ret, _i0
000430:0x0002f180:	bne	0x02f1c0
000432:0x0002f188:	movem	combo, m_skinComboBox
000432:0x0002f198:	movem	items, m_skinFemaleList
000432:0x0002f1a8:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000432:0x0002f1b8:	jump	0x02f1f0
000436:0x0002f1c0:	movem	combo, m_skinComboBox
000436:0x0002f1d0:	movem	items, m_skinMaleList
000436:0x0002f1e0:	call	CharacterMenu.CharacterComboBoxInsertList(combo, items, false)
000439:0x0002f1f0:	movem	combo, m_skinComboBox
000439:0x0002f200:	call	CharacterMenu.RandomSelectComboBox(combo)
000440:0x0002f210:	movem	combo, m_topComboBox
000440:0x0002f220:	call	CharacterMenu.RandomSelectComboBox(combo)
000441:0x0002f230:	movem	combo, m_pantsComboBox
000441:0x0002f240:	call	CharacterMenu.RandomSelectComboBox(combo)
000442:0x0002f250:	movem	combo, m_shoesComboBox
000442:0x0002f260:	call	CharacterMenu.RandomSelectComboBox(combo)
000445:0x0002f270:	call	CharacterMenu.SetInventory()
000448:0x0002f278:	movefm	[0x7034fc8], m_scene
000448:0x0002f288:	cmpcm	m_demoUnit, NULL
000448:0x0002f298:	beq	0x02f360
000450:0x0002f2a0:	movefm	[0x11d09bb0], m_topComboBox
000450:0x0002f2b0:	ncalli	XComboBoxWidget.GetCurrentItem()
000450:0x0002f2b8:	movefm	[0x7035dd8], m_shirtList
000450:0x0002f2c8:	icall	TAdvanceArray<string>.Get(ret)
000450:0x0002f2d0:	call	CharacterMenu.SetAttachment(ret, IS_BODY)
000451:0x0002f2e0:	movefm	[0x11d09bb0], m_pantsComboBox
000451:0x0002f2f0:	ncalli	XComboBoxWidget.GetCurrentItem()
000451:0x0002f2f8:	movefm	[0x7035dd8], m_pantsList
000451:0x0002f308:	icall	TAdvanceArray<string>.Get(ret)
000451:0x0002f310:	call	CharacterMenu.SetAttachment(ret, IS_LEGS)
000452:0x0002f320:	movefm	[0x11d09bb0], m_shoesComboBox
000452:0x0002f330:	ncalli	XComboBoxWidget.GetCurrentItem()
000452:0x0002f338:	movefm	[0x7035dd8], m_shoeList
000452:0x0002f348:	icall	TAdvanceArray<string>.Get(ret)
000452:0x0002f350:	call	CharacterMenu.SetAttachment(ret, IS_FEET)
000452:0x0002f360:	rts
CharacterMenu::RandomSelectComboBox()
000458:0x0002f388:	cmpcm	combo, NULL
000458:0x0002f398:	beq	0x02f3c8
000460:0x0002f3a0:	ncalli	XComboBoxWidget.GetNumItems()
000460:0x0002f3a8:	ncall	RandomInt(_i0, ret)
000460:0x0002f3b0:	move	rnd, ret
000461:0x0002f3c0:	ncalli	XComboBoxWidget.SetCurrentItem(rnd)
000461:0x0002f3c8:	rts
CharacterMenu::SetAttachment()
000467:0x0002f420:	movefm	[0x7034fc8], m_scene
000467:0x0002f430:	cmpcm	m_demoUnit, NULL
000467:0x0002f440:	bne	0x02f450
000467:0x0002f448:	rts
000468:0x0002f450:	movefm	[0x7034fc8], m_scene
000468:0x0002f460:	movefm	[0x45f48920], m_demoUnit
000468:0x0002f470:	ncalli	PlayerBase.FindAttachment(slot)
000468:0x0002f478:	movec	[0x3cd2c308], ret
000468:0x0002f488:	ncalli	DayZGame.ObjectDelete([0x3cd2c308])
000469:0x0002f490:	ncalli	DayZGame.CreateObject(type, _v<0.000000,0.000000,0.000000>, true, _i0)
000469:0x0002f4a0:	movetm	item, ret
000470:0x0002f4b0:	cmpcm	item, NULL
000470:0x0002f4c0:	beq	0x02f508
000470:0x0002f4c8:	movefm	[0x7034fc8], m_scene
000470:0x0002f4d8:	movem	item, item
000470:0x0002f4e8:	movefm	[0x45f48920], m_demoUnit
000470:0x0002f4f8:	call	PlayerBase.TakeEntityAsAttachmentToSlot(item, slot)
000470:0x0002f508:	release	item
000470:0x0002f510:	rts
CharacterMenu::CharacterComboBoxInsertList()
000475:0x0002f5c8:	cmpcm	combo, NULL
000475:0x0002f5d8:	bne	0x02f5e8
000475:0x0002f5e0:	rts
000479:0x0002f5e8:	ncalli	XComboBoxWidget.SetCurrentItem(_i0)
000480:0x0002f5f0:	ncalli	XComboBoxWidget.ClearAll()
000482:0x0002f5f8:	imove	i, 0x000000
000482:0x0002f608:	jump	0x02f618
000482:0x0002f610:	inc	i
000482:0x0002f618:	ncalli	array<string>.Count()
000482:0x0002f620:	cmpi	i, ret
000482:0x0002f630:	bge	0x02f6d0
000484:0x0002f638:	cmpi	search_display_name, _i0
000484:0x0002f648:	beq	0x02f6a8
000486:0x0002f650:	icall	array<string>.Get(i)
000486:0x0002f658:	adds	@s02, _s'cfgVehicles ', ret
000486:0x0002f668:	moves	@s01, @s02
000486:0x0002f678:	adds	@s01, @s01, _s' displayName'
000486:0x0002f688:	moves	@s00, @s01
000486:0x0002f698:	icall	DayZGame.ConfigGetText(@s00, display_name)
000486:0x0002f6a0:	jump	0x02f6c0
000490:0x0002f6a8:	icall	array<string>.Get(i)
000490:0x0002f6b0:	moves	display_name, ret
000493:0x0002f6c0:	ncalli	XComboBoxWidget.AddItem(display_name)
000493:0x0002f6c8:	jump	0x02f610
000493:0x0002f6d0:	rts
EarlyAccessMenu::Init()
//scripts/5_Mission/GUI/EarlyAccessMenu.c
000013:0x0002f718:	ncall	GetGame()
000013:0x0002f720:	ncalli	CGame.GetWorkspace()
000013:0x0002f728:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_early_access.layout', _c0)
000013:0x0002f730:	movetm	layoutRoot, ret
000015:0x0002f740:	movem	ret, layoutRoot
000015:0x0002f750:	release	layoutRoot
000015:0x0002f758:	rts
000015:0x0002f760:	release	layoutRoot
000015:0x0002f768:	rts
EarlyAccessMenu::OnClick()
000020:0x0002f770:	call	UIScriptedMenu.OnClick(w, x, y, button)
000022:0x0002f780:	ncalli	Widget.GetUserID()
000022:0x0002f788:	cmpi	ret, IDC_OK
000022:0x0002f798:	bne	0x02f7c0
000024:0x0002f7a0:	ncalli	EarlyAccessMenu.Close()
000025:0x0002f7a8:	imove	ret, 0x000001
000025:0x0002f7b8:	rts
000028:0x0002f7c0:	imove	ret, 0x000000
000028:0x0002f7d0:	rts
000028:0x0002f7d8:	rts
HelpScreen::Init()
//scripts/5_Mission/GUI/HelpScreen.c
000019:0x0002f9b8:	call	GetPlugin(_T(PluginKeyBinding))
000019:0x0002f9c8:	movec	module_keybinding, ret
000021:0x0002f9d8:	ncall	GetGame()
000021:0x0002f9e0:	ncalli	CGame.GetWorkspace()
000021:0x0002f9e8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/help_screen.layout', _c0)
000021:0x0002f9f0:	movetm	layoutRoot, ret
000022:0x0002fa00:	ncalli	Widget.FindAnyWidget(_s'KeyBindingsTextListboxWidget')
000022:0x0002fa08:	movetm	m_KeyBindingsTextListboxWidget, ret
000023:0x0002fa18:	ncalli	Widget.FindAnyWidget(_s'MouseBindingsTextListboxWidget')
000023:0x0002fa20:	movetm	m_MouseBindingsTextListboxWidget, ret
000025:0x0002fa30:	call	PluginKeyBinding.GetKeyBindings()
000025:0x0002fa38:	movem	keybindings, ret
000026:0x0002fa48:	imove	i, 0x000000
000026:0x0002fa58:	jump	0x02fa68
000026:0x0002fa60:	inc	i
000026:0x0002fa68:	ncalli	array<KeyBinding>.Count()
000026:0x0002fa70:	cmpi	i, ret
000026:0x0002fa80:	bge	0x02faf0
000028:0x0002fa88:	icall	array<KeyBinding>.Get(i)
000028:0x0002fa90:	call	KeyBinding.GetInfoBind()
000028:0x0002fa98:	movefm	[0x11d0a1c0], m_KeyBindingsTextListboxWidget
000028:0x0002faa8:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000029:0x0002fab8:	icall	array<KeyBinding>.Get(i)
000029:0x0002fac0:	call	KeyBinding.GetInfoDescription()
000029:0x0002fac8:	movefm	[0x11d0a1c0], m_KeyBindingsTextListboxWidget
000029:0x0002fad8:	ncalli	TextListboxWidget.SetItem(i, ret, NULL, _i1)
000029:0x0002fae8:	jump	0x02fa60
000032:0x0002faf0:	call	PluginKeyBinding.GetMouseBindings()
000032:0x0002faf8:	movem	mousebindings, ret
000033:0x0002fb08:	imove	i, 0x000000
000033:0x0002fb18:	jump	0x02fb28
000033:0x0002fb20:	inc	i
000033:0x0002fb28:	ncalli	array<MouseBinding>.Count()
000033:0x0002fb30:	cmpi	i, ret
000033:0x0002fb40:	bge	0x02fbb0
000035:0x0002fb48:	icall	array<MouseBinding>.Get(i)
000035:0x0002fb50:	call	MouseBinding.GetInfoBind()
000035:0x0002fb58:	movefm	[0x11d0a1c0], m_MouseBindingsTextListboxWidget
000035:0x0002fb68:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000036:0x0002fb78:	icall	array<MouseBinding>.Get(i)
000036:0x0002fb80:	call	MouseBinding.GetInfoDescription()
000036:0x0002fb88:	movefm	[0x11d0a1c0], m_MouseBindingsTextListboxWidget
000036:0x0002fb98:	ncalli	TextListboxWidget.SetItem(i, ret, NULL, _i1)
000036:0x0002fba8:	jump	0x02fb20
000039:0x0002fbb0:	ncalli	Widget.FindAnyWidget(_s'CloseButtonWidget')
000039:0x0002fbb8:	movetm	m_CloseConsoleButton, ret
000041:0x0002fbc8:	movem	ret, layoutRoot
000041:0x0002fbd8:	release	layoutRoot
000041:0x0002fbe0:	release	keybindings
000041:0x0002fbe8:	release	mousebindings
000041:0x0002fbf0:	rts
000041:0x0002fbf8:	release	layoutRoot
000041:0x0002fc00:	release	keybindings
000041:0x0002fc08:	release	mousebindings
000041:0x0002fc10:	rts
HelpScreen::OnClick()
000046:0x0002fc18:	call	UIScriptedMenu.OnClick(w, x, y, button)
000048:0x0002fc28:	cmpm	w, m_CloseConsoleButton
000048:0x0002fc38:	bne	0x02fc60
000050:0x0002fc40:	ncalli	HelpScreen.Close()
000051:0x0002fc48:	imove	ret, 0x000001
000051:0x0002fc58:	rts
000054:0x0002fc60:	imove	ret, 0x000000
000054:0x0002fc70:	rts
000054:0x0002fc78:	rts
HudDebug::~HudDebug()
//scripts/5_Mission/GUI/HudDebug.c
000028:0x0002fca0:	movefm	[0x11cf2b58], m_WgtRoot
000028:0x0002fcb0:	ncalli	Widget.Destroy()
000029:0x0002fcb8:	movec	[0x3cd17138], m_TimerUpdate
000029:0x0002fcc8:	call	Timer.Stop()
000030:0x0002fcd0:	delete	m_TimerUpdate
000032:0x0002fcd8:	imove	i, 0x000000
000032:0x0002fce8:	jump	0x02fcf8
000032:0x0002fcf0:	inc	i
000032:0x0002fcf8:	movefm	[0x7041570], m_Panels
000032:0x0002fd08:	ncalli	array<HudDebugWinBase>.Count()
000032:0x0002fd10:	cmpi	i, ret
000032:0x0002fd20:	bge	0x02fd50
000034:0x0002fd28:	movefm	[0x7041570], m_Panels
000034:0x0002fd38:	icall	array<HudDebugWinBase>.Get(i)
000034:0x0002fd40:	delete	ret
000034:0x0002fd48:	jump	0x02fcf0
000037:0x0002fd50:	delete	m_Panels
000037:0x0002fd58:	rts
HudDebug::Init()
000045:0x0002ff88:	movem	m_WgtRoot, hud_panel_widget
000046:0x0002ff98:	movefm	[0x11cf2b58], m_WgtRoot
000046:0x0002ffa8:	ncalli	Widget.Show(true)
000049:0x0002ffb0:	movefm	[0x11cf2b58], m_WgtRoot
000049:0x0002ffc0:	ncalli	Widget.FindAnyWidget(_s'wdw_Crosshair')
000049:0x0002ffc8:	movetm	m_Crosshair, ret
000051:0x0002ffd8:	new	@c00, array<HudDebugWinBase>
000051:0x0002fff8:	movetm	m_Panels, @c00
000054:0x00030008:	movefm	[0x11cf2b58], m_WgtRoot
000054:0x00030018:	ncalli	Widget.FindAnyWidget(_s'wdw_CharacterStats')
000054:0x00030020:	movetm	widget_root, ret
000054:0x00030030:	new	@c01, HudDebugWinCharStats
000054:0x00030058:	movec	win_char_stats, @c01
000055:0x00030068:	movefm	[0x7041570], m_Panels
000055:0x00030078:	icall	array<HudDebugWinBase>.Insert(win_char_stats)
000058:0x00030080:	movefm	[0x11cf2b58], m_WgtRoot
000058:0x00030090:	ncalli	Widget.FindAnyWidget(_s'wdw_CharacterModifiers')
000058:0x00030098:	movetm	widget_root, ret
000058:0x000300a8:	new	@c01, HudDebugWinCharModifiers
000058:0x000300d0:	movec	win_char_modifiers, @c01
000059:0x000300e0:	movefm	[0x7041570], m_Panels
000059:0x000300f0:	icall	array<HudDebugWinBase>.Insert(win_char_modifiers)
000062:0x000300f8:	movefm	[0x11cf2b58], m_WgtRoot
000062:0x00030108:	ncalli	Widget.FindAnyWidget(_s'wdw_CharacterAgents')
000062:0x00030110:	movetm	widget_root, ret
000062:0x00030120:	new	@c01, HudDebugWinCharAgents
000062:0x00030148:	movec	win_char_agents, @c01
000063:0x00030158:	movefm	[0x7041570], m_Panels
000063:0x00030168:	icall	array<HudDebugWinBase>.Insert(win_char_agents)
000066:0x00030170:	movefm	[0x11cf2b58], m_WgtRoot
000066:0x00030180:	ncalli	Widget.FindAnyWidget(_s'wdw_CharacterDebug')
000066:0x00030188:	movetm	widget_root, ret
000066:0x00030198:	new	@c01, HudDebugWinCharDebug
000066:0x000301c0:	movec	win_char_debug, @c01
000067:0x000301d0:	movefm	[0x7041570], m_Panels
000067:0x000301e0:	icall	array<HudDebugWinBase>.Insert(win_char_debug)
000069:0x000301e8:	call	HudDebug.RefreshByLocalProfile()
000070:0x000301f0:	call	HudDebug.RefreshCrosshairVisibility()
000072:0x000301f8:	new	@c00, Timer
000072:0x00030220:	movec	m_TimerUpdate, @c00
000073:0x00030230:	movec	obj, this
000073:0x00030240:	movec	params, NULL
000073:0x00030250:	movec	[0x3cd17138], m_TimerUpdate
000073:0x00030260:	call	Timer.Run(_f0.300000, obj, _s'Update', params, true)
000073:0x00030278:	rts
HudDebug::Update()
000081:0x000302a0:	imove	i, 0x000000
000081:0x000302b0:	jump	0x0302c0
000081:0x000302b8:	inc	i
000081:0x000302c0:	movefm	[0x7041570], m_Panels
000081:0x000302d0:	ncalli	array<HudDebugWinBase>.Count()
000081:0x000302d8:	cmpi	i, ret
000081:0x000302e8:	bge	0x030350
000083:0x000302f0:	movefm	[0x7041570], m_Panels
000083:0x00030300:	icall	array<HudDebugWinBase>.Get(i)
000083:0x00030308:	call	HudDebugWinBase.IsVisible()
000083:0x00030310:	cmpi	ret, _i0
000083:0x00030320:	beq	0x030348
000085:0x00030328:	movefm	[0x7041570], m_Panels
000085:0x00030338:	icall	array<HudDebugWinBase>.Get(i)
000085:0x00030340:	call	HudDebugWinBase.Update()
000085:0x00030348:	jump	0x0302b8
000085:0x00030350:	rts
HudDebug::SetPanelVisible()
000095:0x00030358:	cmpi	visible, _i0
000095:0x00030368:	beq	0x030388
000097:0x00030370:	call	HudDebug.PanelShow(panel_type)
000097:0x00030380:	jump	0x030398
000101:0x00030388:	call	HudDebug.PanelHide(panel_type)
000101:0x00030398:	rts
HudDebug::PanelShow()
000110:0x00030408:	imove	i, 0x000000
000110:0x00030418:	jump	0x030428
000110:0x00030420:	inc	i
000110:0x00030428:	movefm	[0x7041570], m_Panels
000110:0x00030438:	ncalli	array<HudDebugWinBase>.Count()
000110:0x00030440:	cmpi	i, ret
000110:0x00030450:	bge	0x0304b0
000112:0x00030458:	movefm	[0x7041570], m_Panels
000112:0x00030468:	icall	array<HudDebugWinBase>.Get(i)
000112:0x00030470:	movec	panel, ret
000114:0x00030480:	call	HudDebugWinBase.GetType()
000114:0x00030488:	cmpi	ret, panel_type
000114:0x00030498:	bne	0x0304a8
000116:0x000304a0:	call	HudDebugWinBase.Show()
000116:0x000304a8:	jump	0x030420
000116:0x000304b0:	rts
HudDebug::PanelHide()
000126:0x000304f8:	imove	i, 0x000000
000126:0x00030508:	jump	0x030518
000126:0x00030510:	inc	i
000126:0x00030518:	movefm	[0x7041570], m_Panels
000126:0x00030528:	ncalli	array<HudDebugWinBase>.Count()
000126:0x00030530:	cmpi	i, ret
000126:0x00030540:	bge	0x0305a0
000128:0x00030548:	movefm	[0x7041570], m_Panels
000128:0x00030558:	icall	array<HudDebugWinBase>.Get(i)
000128:0x00030560:	movec	panel, ret
000130:0x00030570:	call	HudDebugWinBase.GetType()
000130:0x00030578:	cmpi	ret, panel_type
000130:0x00030588:	bne	0x030598
000132:0x00030590:	call	HudDebugWinBase.Hide()
000132:0x00030598:	jump	0x030510
000132:0x000305a0:	rts
HudDebug::RefreshCrosshairVisibility()
000142:0x00030690:	call	GetPlugin(_T(PluginConfigDebugProfile))
000142:0x000306a0:	movec	module_cfg_profile, ret
000144:0x000306b0:	cmpc	module_cfg_profile, NULL
000144:0x000306c0:	beq	0x030748
000146:0x000306c8:	call	GetPlugin(_T(PluginDeveloper))
000146:0x000306d8:	movec	modul_dev, ret
000148:0x000306e8:	call	PluginDeveloper.IsEnabledFreeCamera()
000148:0x000306f0:	cmpi	ret, _i0
000148:0x00030700:	beq	0x030730
000150:0x00030708:	call	PluginConfigDebugProfile.GetFreeCameraCrosshairVisible()
000150:0x00030710:	movefm	[0x11cf2b58], m_Crosshair
000150:0x00030720:	ncalli	Widget.Show(ret)
000150:0x00030728:	jump	0x030748
000154:0x00030730:	movefm	[0x11cf2b58], m_Crosshair
000154:0x00030740:	ncalli	Widget.Show(false)
000154:0x00030748:	rts
HudDebug::RefreshByLocalProfile()
000164:0x00030770:	call	GetPlugin(_T(PluginConfigDebugProfile))
000164:0x00030780:	movec	module_cfg_profile, ret
000166:0x00030790:	cmpc	module_cfg_profile, NULL
000166:0x000307a0:	beq	0x030808
000168:0x000307a8:	call	PluginConfigDebugProfile.GetCharacterStatsVisible()
000168:0x000307b0:	call	HudDebug.SetPanelVisible(HUD_WIN_CHAR_STATS, ret)
000169:0x000307c0:	call	PluginConfigDebugProfile.GetCharacterModifiersVisible()
000169:0x000307c8:	call	HudDebug.SetPanelVisible(HUD_WIN_CHAR_MODIFIERS, ret)
000170:0x000307d8:	call	PluginConfigDebugProfile.GetCharacterAgentsVisible()
000170:0x000307e0:	call	HudDebug.SetPanelVisible(HUD_WIN_CHAR_AGENTS, ret)
000171:0x000307f0:	call	PluginConfigDebugProfile.GetCharacterDebugVisible()
000171:0x000307f8:	call	HudDebug.SetPanelVisible(HUD_WIN_CHAR_DEBUG, ret)
000171:0x00030808:	rts
HudDebug::IsInitialized()
000180:0x00030810:	cmpcm	m_WgtRoot, NULL
000180:0x00030820:	bne	0x030840
000182:0x00030828:	imove	ret, 0x000000
000182:0x00030838:	rts
000185:0x00030840:	imove	ret, 0x000000
000185:0x00030850:	rts
000185:0x00030858:	rts
IngameHud::IngameHud()
//scripts/5_Mission/GUI/IngameHud.c
000063:0x000309a0:	new	@c00, array<WidgetFadeTimer>
000063:0x000309c0:	movetm	m_fade_timers, @c00
000065:0x000309d0:	new	@c00, WidgetFadeTimer
000065:0x000309f0:	movec	m_fade_timer_weapon_mode, @c00
000066:0x00030a00:	new	@c00, WidgetFadeTimer
000066:0x00030a20:	movec	m_fade_timer_zeroing, @c00
000067:0x00030a30:	new	@c00, WidgetFadeTimer
000067:0x00030a50:	movec	m_fade_timer_zeroing_old, @c00
000068:0x00030a60:	new	@c00, WidgetFadeTimer
000068:0x00030a80:	movec	m_fade_timer_magazine_name, @c00
000069:0x00030a90:	new	@c00, WidgetFadeTimer
000069:0x00030ab0:	movec	m_fade_timer_weapon_name, @c00
000070:0x00030ac0:	new	@c00, WidgetFadeTimer
000070:0x00030ae0:	movec	m_fade_timer_weapon_stats, @c00
000071:0x00030af0:	new	@c00, WidgetFadeTimer
000071:0x00030b10:	movec	m_fade_timer_quickbar, @c00
000072:0x00030b20:	new	@c00, Timer
000072:0x00030b48:	movec	m_hide_timer, @c00
000073:0x00030b58:	new	@c00, Timer
000073:0x00030b80:	movec	m_vehicle_timer, @c00
000074:0x00030b90:	new	@c00, Timer
000074:0x00030bb8:	movec	m_zeroing_and_weaponmode_timer, @c00
000076:0x00030bc8:	new	@c00, map<int,ImageWidget>
000076:0x00030be8:	movetm	m_StatesWidgets, @c00
000077:0x00030bf8:	new	@c00, map<int,string>
000077:0x00030c18:	movetm	m_StatesWidgetNames, @c00
000079:0x00030c28:	new	@c00, map<int,ImageWidget>
000079:0x00030c48:	movetm	m_BadgesWidgets, @c00
000080:0x00030c58:	new	@c00, map<int,string>
000080:0x00030c78:	movetm	m_BadgesWidgetNames, @c00
000081:0x00030c88:	new	@c00, map<int,bool>
000081:0x00030ca8:	movetm	m_BadgesWidgetDisplay, @c00
000083:0x00030cb8:	new	@c00, map<int,string>
000083:0x00030cd8:	movetm	m_VehicleGearTable, @c00
000084:0x00030ce8:	movefm	[0x11d0d2a8], m_VehicleGearTable
000084:0x00030cf8:	icall	map<int,string>.Set(_i-1, _s'')
000085:0x00030d00:	cfti	@m00, GEAR_NEUTRAL
000085:0x00030d10:	movefm	[0x11d0d2a8], m_VehicleGearTable
000085:0x00030d20:	icall	map<int,string>.Set(@m00, _s'N')
000086:0x00030d28:	cfti	@m00, GEAR_FIRST
000086:0x00030d38:	movefm	[0x11d0d2a8], m_VehicleGearTable
000086:0x00030d48:	icall	map<int,string>.Set(@m00, _s'1')
000087:0x00030d50:	cfti	@m00, GEAR_SECOND
000087:0x00030d60:	movefm	[0x11d0d2a8], m_VehicleGearTable
000087:0x00030d70:	icall	map<int,string>.Set(@m00, _s'2')
000088:0x00030d78:	cfti	@m00, GEAR_THIRD
000088:0x00030d88:	movefm	[0x11d0d2a8], m_VehicleGearTable
000088:0x00030d98:	icall	map<int,string>.Set(@m00, _s'3')
000089:0x00030da0:	cfti	@m00, GEAR_FOURTH
000089:0x00030db0:	movefm	[0x11d0d2a8], m_VehicleGearTable
000089:0x00030dc0:	icall	map<int,string>.Set(@m00, _s'4')
000090:0x00030dc8:	cfti	@m00, GEAR_FIFTH
000090:0x00030dd8:	movefm	[0x11d0d2a8], m_VehicleGearTable
000090:0x00030de8:	icall	map<int,string>.Set(@m00, _s'5')
000091:0x00030df0:	cfti	@m00, GEAR_SIXTH
000091:0x00030e00:	movefm	[0x11d0d2a8], m_VehicleGearTable
000091:0x00030e10:	icall	map<int,string>.Set(@m00, _s'6')
000092:0x00030e18:	cfti	@m00, GEAR_SEVENTH
000092:0x00030e28:	movefm	[0x11d0d2a8], m_VehicleGearTable
000092:0x00030e38:	icall	map<int,string>.Set(@m00, _s'7')
000093:0x00030e40:	cfti	@m00, GEAR_EIGTH
000093:0x00030e50:	movefm	[0x11d0d2a8], m_VehicleGearTable
000093:0x00030e60:	icall	map<int,string>.Set(@m00, _s'8')
000094:0x00030e68:	cfti	@m00, GEAR_REVERSE
000094:0x00030e78:	movefm	[0x11d0d2a8], m_VehicleGearTable
000094:0x00030e88:	icall	map<int,string>.Set(@m00, _s'R')
000094:0x00030e90:	rts
IngameHud::Init()
000099:0x000314d8:	movem	m_HudPanelWidget, hud_panel_widget
000100:0x000314e8:	movefm	[0x11cf2b58], m_HudPanelWidget
000100:0x000314f8:	ncalli	Widget.Show(true)
000102:0x00031500:	new	@c00, Timer
000102:0x00031528:	movec	m_quickbar_timer, @c00
000105:0x00031538:	movefm	[0x11cf2b58], m_HudPanelWidget
000105:0x00031548:	ncalli	Widget.FindAnyWidget(_s'QuickbarGrid')
000105:0x00031550:	movetm	m_quickbar_widget, ret
000106:0x00031560:	movefm	[0x11cf2b58], m_quickbar_widget
000106:0x00031570:	ncalli	Widget.Show(false)
000109:0x00031578:	new	@c00, Timer
000109:0x000315a0:	movec	myTimer, @c00
000110:0x000315b0:	movec	obj, this
000110:0x000315c0:	movec	[0x3cd17138], myTimer
000110:0x000315d0:	call	Timer.Run(_f1.000000, obj, _s'InitQuickbar', _c0, _i0)
000113:0x000315e8:	movefm	[0x11cf2b58], m_HudPanelWidget
000113:0x000315f8:	ncalli	Widget.FindAnyWidget(_s'StaminaBar')
000113:0x00031600:	movetm	m_stamina, ret
000114:0x00031610:	movefm	[0x11cf2b58], m_HudPanelWidget
000114:0x00031620:	ncalli	Widget.FindAnyWidget(_s'PresencePanel')
000114:0x00031628:	movetm	m_presence, ret
000115:0x00031638:	ncalli	Widget.FindAnyWidget(_s'BadgesPanel')
000115:0x00031640:	movetm	m_Badges, ret
000116:0x00031650:	movefm	[0x11cf2b58], m_HudPanelWidget
000116:0x00031660:	ncalli	Widget.FindAnyWidget(_s'NotifiersPanel')
000116:0x00031668:	movetm	m_Notifiers, ret
000117:0x00031678:	movefm	[0x11cf2b58], m_HudPanelWidget
000117:0x00031688:	ncalli	Widget.FindAnyWidget(_s'VehiclePanel')
000117:0x00031690:	movetm	m_VehiclePanel, ret
000118:0x000316a0:	movefm	[0x11cf2b58], m_HudPanelWidget
000118:0x000316b0:	ncalli	Widget.FindAnyWidget(_s'SpeedValue0')
000118:0x000316b8:	movetm	VehiclePanelSpeedValue, ret
000119:0x000316c8:	movefm	[0x11cf2b58], m_HudPanelWidget
000119:0x000316d8:	ncalli	Widget.FindAnyWidget(_s'SpeedValue1')
000119:0x000316e0:	movetm	VehiclePanelGearValue, ret
000120:0x000316f0:	movefm	[0x11cf2b58], m_HudPanelWidget
000120:0x00031700:	ncalli	Widget.FindAnyWidget(_s'VehiclePanel0')
000120:0x00031708:	movetm	m_VehiclePanel0, ret
000121:0x00031718:	movefm	[0x11cf2b58], m_HudPanelWidget
000121:0x00031728:	ncalli	Widget.FindAnyWidget(_s'Zeroing')
000121:0x00031730:	movetm	m_Zeroing, ret
000122:0x00031740:	movefm	[0x11cf2b58], m_HudPanelWidget
000122:0x00031750:	ncalli	Widget.FindAnyWidget(_s'WeaponMode')
000122:0x00031758:	movetm	m_WeaponMode, ret
000123:0x00031768:	movefm	[0x11cf2b58], m_HudPanelWidget
000123:0x00031778:	ncalli	Widget.FindAnyWidget(_s'WeaponStats')
000123:0x00031780:	movetm	m_WeaponStats, ret
000124:0x00031790:	movefm	[0x11cf2b58], m_HudPanelWidget
000124:0x000317a0:	ncalli	Widget.FindAnyWidget(_s'ZeroingOld')
000124:0x000317a8:	movetm	m_ZeroingOld, ret
000125:0x000317b8:	movefm	[0x11cf2b58], m_HudPanelWidget
000125:0x000317c8:	ncalli	Widget.FindAnyWidget(_s'WeaponName')
000125:0x000317d0:	movetm	m_WeaponName, ret
000126:0x000317e0:	movefm	[0x11cf2b58], m_HudPanelWidget
000126:0x000317f0:	ncalli	Widget.FindAnyWidget(_s'MagazineName')
000126:0x000317f8:	movetm	m_MagazineName, ret
000127:0x00031808:	movefm	[0x11cf2b58], m_HudPanelWidget
000127:0x00031818:	ncalli	Widget.FindAnyWidget(_s'StaminaBackground')
000127:0x00031820:	movetm	m_stamina_background, ret
000128:0x00031830:	movefm	[0x11cf2b58], m_stamina_background
000128:0x00031840:	ncalli	Widget.Show(true)
000129:0x00031848:	movefm	[0x11cf2b58], m_HudPanelWidget
000129:0x00031858:	ncalli	Widget.FindAnyWidget(_s'StanceProne')
000129:0x00031860:	movetm	m_stanceProne, ret
000130:0x00031870:	movefm	[0x11cf2b58], m_HudPanelWidget
000130:0x00031880:	ncalli	Widget.FindAnyWidget(_s'StanceCrouch')
000130:0x00031888:	movetm	m_stanceCrouch, ret
000131:0x00031898:	movefm	[0x11cf2b58], m_HudPanelWidget
000131:0x000318a8:	ncalli	Widget.FindAnyWidget(_s'StanceStand')
000131:0x000318b0:	movetm	m_stanceStand, ret
000132:0x000318c0:	movefm	[0x11cf2b58], m_HudPanelWidget
000132:0x000318d0:	ncalli	Widget.FindAnyWidget(_s'StancePanel')
000132:0x000318d8:	movetm	m_stancePanel, ret
000135:0x000318e8:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000135:0x000318f8:	ncalli	map<int,string>.Clear()
000136:0x00031900:	movefm	[0x7043898], m_StatesWidgets
000136:0x00031910:	ncalli	map<int,ImageWidget>.Clear()
000137:0x00031918:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000137:0x00031928:	icall	map<int,string>.Set(NTFKEY_THIRSTY, _s'Thirsty')
000138:0x00031930:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000138:0x00031940:	icall	map<int,string>.Set(NTFKEY_HUNGRY, _s'Hungry')
000139:0x00031948:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000139:0x00031958:	icall	map<int,string>.Set(NTFKEY_SICK, _s'Health')
000140:0x00031960:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000140:0x00031970:	icall	map<int,string>.Set(NTFKEY_BACTERIA, _s'Bacteria')
000141:0x00031978:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000141:0x00031988:	icall	map<int,string>.Set(NTFKEY_BLEEDISH, _s'Blood')
000142:0x00031990:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000142:0x000319a0:	icall	map<int,string>.Set(NTFKEY_FEVERISH, _s'Temperature')
000150:0x000319a8:	call	GetDayZGame()
000150:0x000319b0:	call	DayZGame.IsNewPlayer()
000150:0x000319b8:	cmpi	ret, _i0
000150:0x000319c8:	beq	0x031f80
000152:0x000319d0:	movefm	[0x11cf2b58], m_Notifiers
000152:0x000319e0:	ncalli	Widget.Show(true)
000154:0x000319e8:	movefm	[0x11cf2b58], m_Badges
000154:0x000319f8:	ncalli	Widget.Show(true)
000157:0x00031a00:	imove	i, 0x000000
000158:0x00031a10:	imove	key, 0x000000
000159:0x00031a20:	imove	i, 0x000000
000159:0x00031a30:	jump	0x031a40
000159:0x00031a38:	inc	i
000159:0x00031a40:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000159:0x00031a50:	ncalli	map<int,string>.Count()
000159:0x00031a58:	cmpi	i, ret
000159:0x00031a68:	bge	0x031ca8
000161:0x00031a70:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000161:0x00031a80:	icall	map<int,string>.GetElement(i)
000161:0x00031a88:	moves	widget_name, ret
000162:0x00031a98:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000162:0x00031aa8:	icall	map<int,string>.GetKey(i)
000162:0x00031ab0:	move	key, ret
000163:0x00031ac0:	adds	@s01, _s'Icon', widget_name
000163:0x00031ad0:	moves	@s00, @s01
000163:0x00031ae0:	call	String(@s00)
000163:0x00031af0:	movefm	[0x11cf2b58], m_Notifiers
000163:0x00031b00:	ncalli	Widget.FindAnyWidget(ret)
000163:0x00031b08:	movetm	w, ret
000164:0x00031b18:	movefm	@c00, w
000164:0x00031b28:	movefm	[0x7043898], m_StatesWidgets
000164:0x00031b38:	icall	map<int,ImageWidget>.Set(key, @c00)
000165:0x00031b40:	ncalli	ImageWidget.Show(true)
000167:0x00031b48:	imove	x, 0x000001
000167:0x00031b58:	jump	0x031b68
000167:0x00031b60:	inc	x
000167:0x00031b68:	cmpi	x, _i4
000167:0x00031b78:	bge	0x031c98
000169:0x00031b80:	adds	@s02, widget_name, _s'ArrowUp'
000169:0x00031b90:	moves	@s01, @s02
000169:0x00031ba0:	icall	ToString(x)
000169:0x00031ba8:	adds	@s01, @s01, ret
000169:0x00031bb8:	moves	@s00, @s01
000169:0x00031bc8:	call	String(@s00)
000169:0x00031bd8:	movefm	[0x11cf2b58], m_Notifiers
000169:0x00031be8:	ncalli	Widget.FindAnyWidget(ret)
000169:0x00031bf0:	movetm	w, ret
000170:0x00031c00:	ncalli	ImageWidget.Show(false)
000171:0x00031c08:	adds	@s02, widget_name, _s'ArrowDown'
000171:0x00031c18:	moves	@s01, @s02
000171:0x00031c28:	icall	ToString(x)
000171:0x00031c30:	adds	@s01, @s01, ret
000171:0x00031c40:	moves	@s00, @s01
000171:0x00031c50:	call	String(@s00)
000171:0x00031c60:	movefm	[0x11cf2b58], m_Notifiers
000171:0x00031c70:	ncalli	Widget.FindAnyWidget(ret)
000171:0x00031c78:	movetm	w, ret
000172:0x00031c88:	ncalli	ImageWidget.Show(false)
000172:0x00031c90:	jump	0x031b60
000172:0x00031c98:	release	w
000172:0x00031ca0:	jump	0x031a38
000177:0x00031ca8:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000177:0x00031cb8:	ncalli	map<int,string>.Clear()
000178:0x00031cc0:	movefm	[0x7043898], m_BadgesWidgets
000178:0x00031cd0:	ncalli	map<int,ImageWidget>.Clear()
000179:0x00031cd8:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000179:0x00031ce8:	ncalli	map<int,bool>.Clear()
000180:0x00031cf0:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000180:0x00031d00:	icall	map<int,string>.Set(NTFKEY_FRACTURE, _s'Fracture')
000181:0x00031d08:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000181:0x00031d18:	icall	map<int,string>.Set(NTFKEY_STUFFED, _s'Stomach')
000182:0x00031d20:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000182:0x00031d30:	icall	map<int,string>.Set(NTFKEY_SICK, _s'Pill')
000183:0x00031d38:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000183:0x00031d48:	icall	map<int,string>.Set(NTFKEY_BLEEDISH, _s'Wetness')
000184:0x00031d50:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000184:0x00031d60:	icall	map<int,string>.Set(NTFKEY_FEVERISH, _s'Skull')
000191:0x00031d68:	imove	i, 0x000000
000191:0x00031d78:	jump	0x031d88
000191:0x00031d80:	inc	i
000191:0x00031d88:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000191:0x00031d98:	ncalli	map<int,string>.Count()
000191:0x00031da0:	cmpi	i, ret
000191:0x00031db0:	bge	0x031e88
000193:0x00031db8:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000193:0x00031dc8:	icall	map<int,string>.GetElement(i)
000193:0x00031dd0:	moves	badge_name, ret
000194:0x00031de0:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000194:0x00031df0:	icall	map<int,string>.GetKey(i)
000194:0x00031df8:	move	key, ret
000195:0x00031e08:	movefm	[0x11cf2b58], m_Badges
000195:0x00031e18:	ncalli	Widget.FindAnyWidget(badge_name)
000195:0x00031e20:	movetm	badge_widget, ret
000196:0x00031e30:	movefm	@c00, badge_widget
000196:0x00031e40:	movefm	[0x7043898], m_BadgesWidgets
000196:0x00031e50:	icall	map<int,ImageWidget>.Set(key, @c00)
000197:0x00031e58:	ncalli	ImageWidget.Show(false)
000198:0x00031e60:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000198:0x00031e70:	icall	map<int,bool>.Set(key, false)
000198:0x00031e78:	release	badge_widget
000198:0x00031e80:	jump	0x031d80
000201:0x00031e88:	ncalli	Widget.FindAnyWidget(_s'Presence0')
000201:0x00031e90:	movetm	m_PresenceLevel0, ret
000202:0x00031ea0:	ncalli	Widget.FindAnyWidget(_s'Presence1')
000202:0x00031ea8:	movetm	m_PresenceLevel1, ret
000203:0x00031eb8:	ncalli	Widget.FindAnyWidget(_s'Presence2')
000203:0x00031ec0:	movetm	m_PresenceLevel2, ret
000204:0x00031ed0:	ncalli	Widget.FindAnyWidget(_s'Presence3')
000204:0x00031ed8:	movetm	m_PresenceLevel3, ret
000205:0x00031ee8:	ncalli	Widget.FindAnyWidget(_s'Presence4')
000205:0x00031ef0:	movetm	m_PresenceLevel4, ret
000206:0x00031f00:	movefm	[0x11cf2b58], m_PresenceLevel0
000206:0x00031f10:	ncalli	Widget.Show(false)
000207:0x00031f18:	movefm	[0x11cf2b58], m_PresenceLevel1
000207:0x00031f28:	ncalli	Widget.Show(false)
000208:0x00031f30:	movefm	[0x11cf2b58], m_PresenceLevel2
000208:0x00031f40:	ncalli	Widget.Show(false)
000209:0x00031f48:	movefm	[0x11cf2b58], m_PresenceLevel3
000209:0x00031f58:	ncalli	Widget.Show(false)
000210:0x00031f60:	movefm	[0x11cf2b58], m_PresenceLevel4
000210:0x00031f70:	ncalli	Widget.Show(false)
000210:0x00031f78:	jump	0x032040
000214:0x00031f80:	movefm	[0x11cf2b58], m_stamina_background
000214:0x00031f90:	ncalli	Widget.Show(false)
000215:0x00031f98:	movefm	[0x11d0a118], m_stamina
000215:0x00031fa8:	ncalli	ProgressBarWidget.Show(false)
000216:0x00031fb0:	movefm	[0x11cf2b58], m_presence
000216:0x00031fc0:	ncalli	Widget.Show(false)
000217:0x00031fc8:	movefm	[0x11cf2b58], m_stanceProne
000217:0x00031fd8:	ncalli	Widget.Show(false)
000218:0x00031fe0:	movefm	[0x11cf2b58], m_stanceStand
000218:0x00031ff0:	ncalli	Widget.Show(false)
000219:0x00031ff8:	movefm	[0x11cf2b58], m_stanceCrouch
000219:0x00032008:	ncalli	Widget.Show(false)
000220:0x00032010:	movefm	[0x11cf2b58], m_Badges
000220:0x00032020:	ncalli	Widget.Show(false)
000221:0x00032028:	movefm	[0x11cf2b58], m_Notifiers
000221:0x00032038:	ncalli	Widget.Show(false)
000221:0x00032040:	rts
IngameHud::DisplayNotifier()
000242:0x00032118:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000242:0x00032128:	icall	map<int,string>.Get(key)
000242:0x00032130:	adds	@s01, _s'Icon', ret
000242:0x00032140:	moves	@s00, @s01
000242:0x00032150:	call	String(@s00)
000242:0x00032160:	movefm	[0x11cf2b58], m_Notifiers
000242:0x00032170:	ncalli	Widget.FindAnyWidget(ret)
000242:0x00032178:	movetm	w, ret
000243:0x00032188:	ncalli	ImageWidget.Show(true)
000246:0x00032190:	moves	arrow_name, _s'ArrowUp'
000247:0x000321a0:	cmpi	tendency, _i0
000247:0x000321b0:	bge	0x0321c8
000249:0x000321b8:	moves	arrow_name, _s'ArrowDown'
000251:0x000321c8:	ncall	AbsInt(tendency)
000251:0x000321d0:	move	tendency, ret
000253:0x000321e0:	imove	x, 0x000001
000253:0x000321f0:	jump	0x032200
000253:0x000321f8:	inc	x
000253:0x00032200:	cmpi	x, _i4
000253:0x00032210:	bge	0x032360
000255:0x00032218:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000255:0x00032228:	icall	map<int,string>.Get(key)
000255:0x00032230:	adds	@s03, ret, _s'ArrowUp'
000255:0x00032240:	moves	@s01, @s03
000255:0x00032250:	icall	ToString(x)
000255:0x00032258:	adds	@s01, @s01, ret
000255:0x00032268:	moves	@s00, @s01
000255:0x00032278:	call	String(@s00)
000255:0x00032288:	movefm	[0x11cf2b58], m_Notifiers
000255:0x00032298:	ncalli	Widget.FindAnyWidget(ret)
000255:0x000322a0:	movetm	w, ret
000256:0x000322b0:	ncalli	ImageWidget.Show(false)
000257:0x000322b8:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000257:0x000322c8:	icall	map<int,string>.Get(key)
000257:0x000322d0:	adds	@s03, ret, _s'ArrowDown'
000257:0x000322e0:	moves	@s01, @s03
000257:0x000322f0:	icall	ToString(x)
000257:0x000322f8:	adds	@s01, @s01, ret
000257:0x00032308:	moves	@s00, @s01
000257:0x00032318:	call	String(@s00)
000257:0x00032328:	movefm	[0x11cf2b58], m_Notifiers
000257:0x00032338:	ncalli	Widget.FindAnyWidget(ret)
000257:0x00032340:	movetm	w, ret
000258:0x00032350:	ncalli	ImageWidget.Show(false)
000258:0x00032358:	jump	0x0321f8
000261:0x00032360:	imove	i, 0x000001
000261:0x00032370:	jump	0x032380
000261:0x00032378:	inc	i
000261:0x00032380:	addi	@m02, tendency, _i1
000261:0x00032390:	move	@m01, @m02
000261:0x000323a0:	cmpi	i, @m01
000261:0x000323b0:	bge	0x032440
000263:0x000323b8:	movefm	[0x11d0d2a8], m_StatesWidgetNames
000263:0x000323c8:	icall	map<int,string>.Get(key)
000263:0x000323d0:	adds	@s02, ret, arrow_name
000263:0x000323e0:	moves	@s00, @s02
000263:0x000323f0:	icall	ToString(i)
000263:0x000323f8:	adds	widget_name, @s00, ret
000264:0x00032408:	movefm	[0x11cf2b58], m_Notifiers
000264:0x00032418:	ncalli	Widget.FindAnyWidget(widget_name)
000264:0x00032420:	movetm	w, ret
000265:0x00032430:	ncalli	ImageWidget.Show(true)
000265:0x00032438:	jump	0x032378
000265:0x00032440:	release	w
000265:0x00032448:	rts
IngameHud::DisplayBadge()
000271:0x00032520:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000271:0x00032530:	icall	map<int,bool>.Set(key, show)
000273:0x00032538:	imove	x, 0x000000
000274:0x00032548:	imove	i, 0x000000
000274:0x00032558:	jump	0x032568
000274:0x00032560:	inc	i
000274:0x00032568:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000274:0x00032578:	ncalli	map<int,bool>.Count()
000274:0x00032580:	cmpi	i, ret
000274:0x00032590:	bge	0x0326c8
000276:0x00032598:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000276:0x000325a8:	icall	map<int,bool>.GetKey(i)
000276:0x000325b0:	move	badge_key, ret
000277:0x000325c0:	movefm	[0x11d0d2a8], m_BadgesWidgetNames
000277:0x000325d0:	icall	map<int,string>.Get(badge_key)
000277:0x000325d8:	moves	badge_name, ret
000278:0x000325e8:	movefm	[0x11cf2b58], m_Badges
000278:0x000325f8:	ncalli	Widget.FindAnyWidget(badge_name)
000278:0x00032600:	movetm	badge_widget, ret
000279:0x00032610:	cmpcm	badge_widget, NULL
000279:0x00032620:	beq	0x0326b8
000281:0x00032628:	movefm	[0x70439e0], m_BadgesWidgetDisplay
000281:0x00032638:	icall	map<int,bool>.Get(badge_key)
000281:0x00032640:	cmpi	ret, true
000281:0x00032650:	bne	0x0326b0
000283:0x00032658:	citf	@f01, x
000283:0x00032668:	mulf	@f01, @f01, _f0.200000
000283:0x00032678:	move	@f00, @f01
000283:0x00032688:	ncalli	ImageWidget.SetPos(@f00, _f0.000000, true)
000284:0x00032698:	ncalli	ImageWidget.Show(true)
000285:0x000326a0:	inc	x
000285:0x000326a8:	jump	0x0326b8
000289:0x000326b0:	ncalli	ImageWidget.Show(false)
000289:0x000326b8:	release	badge_widget
000289:0x000326c0:	jump	0x032560
000289:0x000326c8:	rts
IngameHud::SetStamina()
000297:0x00032780:	ncall	GetGame()
000297:0x00032788:	ncalli	CGame.GetPlayer()
000297:0x00032790:	movetm	player, ret
000298:0x000327a0:	movefm	@c00, player
000298:0x000327b0:	cmpc	m_PlayerStats, NULL
000298:0x000327c0:	bne	0x0327d8
000300:0x000327c8:	release	player
000300:0x000327d0:	rts
000302:0x000327d8:	movefm	@c00, player
000302:0x000327e8:	movec	[0x45f516d0], m_PlayerStats
000302:0x000327f8:	movec	[0x45f6c558], m_Stamina
000302:0x00032808:	call	PlayerStat<float>.GetMax()
000302:0x00032810:	move	max, ret
000303:0x00032820:	citf	@f00, range
000303:0x00032830:	divf	percentage, @f00, max
000304:0x00032840:	citf	@f02, value
000304:0x00032850:	citf	@f03, range
000304:0x00032860:	divf	@f02, @f02, @f03
000304:0x00032870:	move	@f01, @f02
000304:0x00032880:	mulf	@f01, @f01, max
000304:0x00032890:	move	@f00, @f01
000304:0x000328a0:	movefm	[0x11d0a118], m_stamina
000304:0x000328b0:	ncalli	ProgressBarWidget.SetCurrent(@f00)
000305:0x000328b8:	movefm	[0x11d0a118], m_stamina
000305:0x000328c8:	ncalli	ProgressBarWidget.SetSize(percentage, _f0.100000, _i1)
000306:0x000328d8:	subf	@f01, _f1.000000, percentage
000306:0x000328e8:	move	@f00, @f01
000306:0x000328f8:	movefm	[0x11cf2b58], m_stamina_background
000306:0x00032908:	ncalli	Widget.SetSize(@f00, _f0.100000, _i1)
000306:0x00032918:	release	player
000306:0x00032920:	rts
IngameHud::RefreshZeroingAndWeaponModeOld()
000311:0x000329f0:	ncall	GetGame()
000311:0x000329f8:	ncalli	CGame.GetPlayer()
000311:0x00032a00:	movetm	player, ret
000313:0x00032a10:	cmpcm	player, NULL
000313:0x00032a20:	beq	0x032d60
000315:0x00032a28:	ncalli	PlayerBase.GetEntityInHands()
000315:0x00032a30:	movetm	entity, ret
000317:0x00032a40:	cmpcm	entity, NULL
000317:0x00032a50:	beq	0x032d30
000317:0x00032a58:	call	EntityAI.IsWeapon()
000317:0x00032a60:	cmpi	ret, _i0
000317:0x00032a70:	beq	0x032d30
000319:0x00032a78:	ncalli	PlayerBase.GetCurrentZeroing()
000319:0x00032a80:	move	zeroing, ret
000321:0x00032a90:	cmpi	zeroing_key_pressed, _i0
000321:0x00032aa0:	beq	0x032ac8
000323:0x00032aa8:	imove	zeroing_key_pressed, 0x000000
000324:0x00032ab8:	imove	faded, 0x000000
000327:0x00032ac8:	cmpi	faded, _i0
000327:0x00032ad8:	bne	0x032bb0
000329:0x00032ae0:	movem	w, m_WeaponStats
000329:0x00032af0:	movec	[0x3cd17188], m_fade_timer_zeroing_old
000329:0x00032b00:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000330:0x00032b10:	movem	w, m_WeaponName
000330:0x00032b20:	movec	[0x3cd17188], m_fade_timer_magazine_name
000330:0x00032b30:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000331:0x00032b40:	movem	w, m_MagazineName
000331:0x00032b50:	movec	[0x3cd17188], m_fade_timer_weapon_name
000331:0x00032b60:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000332:0x00032b70:	movem	w, m_ZeroingOld
000332:0x00032b80:	movec	[0x3cd17188], m_fade_timer_weapon_stats
000332:0x00032b90:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000333:0x00032ba0:	imove	faded, 0x000001
000336:0x00032bb0:	ncalli	EntityAI.AttachmentsCount()
000336:0x00032bb8:	cmpi	ret, _i0
000336:0x00032bc8:	bne	0x032be8
000338:0x00032bd0:	movefm	[0x11d09418], m_MagazineName
000338:0x00032be0:	ncalli	TextWidget.SetText(_s'')
000341:0x00032be8:	imove	i, 0x000000
000341:0x00032bf8:	jump	0x032c08
000341:0x00032c00:	inc	i
000341:0x00032c08:	ncalli	EntityAI.AttachmentsCount()
000341:0x00032c10:	cmpi	i, ret
000341:0x00032c20:	bge	0x032cd0
000343:0x00032c28:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000343:0x00032c30:	movetm	attachment, ret
000344:0x00032c40:	cmpcm	attachment, NULL
000344:0x00032c50:	bne	0x032c60
000344:0x00032c58:	jump	0x032c00
000346:0x00032c60:	call	EntityAI.IsMagazine()
000346:0x00032c68:	cmpi	ret, _i0
000346:0x00032c78:	beq	0x032ca8
000348:0x00032c80:	call	EntityAI.GetName()
000348:0x00032c88:	movefm	[0x11d09418], m_MagazineName
000348:0x00032c98:	ncalli	TextWidget.SetText(ret)
000348:0x00032ca0:	jump	0x032cc0
000352:0x00032ca8:	movefm	[0x11d09418], m_MagazineName
000352:0x00032cb8:	ncalli	TextWidget.SetText(_s'')
000352:0x00032cc0:	release	attachment
000352:0x00032cc8:	jump	0x032c00
000356:0x00032cd0:	call	EntityAI.GetName()
000356:0x00032cd8:	movefm	[0x11d09418], m_WeaponName
000356:0x00032ce8:	ncalli	TextWidget.SetText(ret)
000357:0x00032cf0:	movefm	[0x11cf2b58], m_WeaponStats
000357:0x00032d00:	ncalli	Widget.Show(true)
000358:0x00032d08:	icall	ToString(zeroing)
000358:0x00032d10:	movefm	[0x11d09418], m_ZeroingOld
000358:0x00032d20:	ncalli	TextWidget.SetText(ret)
000358:0x00032d28:	jump	0x032d58
000362:0x00032d30:	imove	faded, 0x000000
000363:0x00032d40:	movefm	[0x11cf2b58], m_WeaponStats
000363:0x00032d50:	ncalli	Widget.Show(false)
000363:0x00032d58:	release	entity
000363:0x00032d60:	release	player
000363:0x00032d68:	rts
IngameHud::RefreshZeroingAndWeaponMode()
000370:0x00032e20:	ncall	GetGame()
000370:0x00032e28:	ncalli	CGame.GetPlayer()
000370:0x00032e30:	movetm	player, ret
000372:0x00032e40:	cmpcm	player, NULL
000372:0x00032e50:	beq	0x033050
000374:0x00032e58:	ncalli	PlayerBase.GetEntityInHands()
000374:0x00032e60:	movetm	entity, ret
000376:0x00032e70:	cmpcm	entity, NULL
000376:0x00032e80:	beq	0x033008
000376:0x00032e88:	call	EntityAI.IsWeapon()
000376:0x00032e90:	cmpi	ret, _i0
000376:0x00032ea0:	beq	0x033008
000378:0x00032ea8:	ncalli	PlayerBase.GetCurrentZeroing()
000378:0x00032eb0:	move	zeroing, ret
000379:0x00032ec0:	ncalli	PlayerBase.GetCurrentWeaponMode()
000379:0x00032ec8:	moves	weaponMode, ret
000381:0x00032ed8:	cmpi	zeroing_key_pressed, _i0
000381:0x00032ee8:	beq	0x032f10
000383:0x00032ef0:	imove	zeroing_key_pressed, 0x000000
000384:0x00032f00:	imove	faded, 0x000000
000387:0x00032f10:	cmpi	faded, _i0
000387:0x00032f20:	bne	0x032f98
000389:0x00032f28:	movem	w, m_WeaponMode
000389:0x00032f38:	movec	[0x3cd17188], m_fade_timer_weapon_mode
000389:0x00032f48:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000390:0x00032f58:	movem	w, m_Zeroing
000390:0x00032f68:	movec	[0x3cd17188], m_fade_timer_zeroing
000390:0x00032f78:	call	WidgetFadeTimer.FadeOut(w, _f5.000000, _i0)
000391:0x00032f88:	imove	faded, 0x000001
000394:0x00032f98:	movefm	[0x11d09418], m_Zeroing
000394:0x00032fa8:	ncalli	TextWidget.Show(true)
000395:0x00032fb0:	movefm	[0x11d09418], m_WeaponMode
000395:0x00032fc0:	ncalli	TextWidget.Show(true)
000396:0x00032fc8:	icall	ToString(zeroing)
000396:0x00032fd0:	movefm	[0x11d09418], m_Zeroing
000396:0x00032fe0:	ncalli	TextWidget.SetText(ret)
000397:0x00032fe8:	movefm	[0x11d09418], m_WeaponMode
000397:0x00032ff8:	ncalli	TextWidget.SetText(weaponMode)
000397:0x00033000:	jump	0x033048
000401:0x00033008:	imove	faded, 0x000000
000402:0x00033018:	movefm	[0x11d09418], m_WeaponMode
000402:0x00033028:	ncalli	TextWidget.Show(false)
000403:0x00033030:	movefm	[0x11d09418], m_Zeroing
000403:0x00033040:	ncalli	TextWidget.Show(false)
000403:0x00033048:	release	entity
000403:0x00033050:	release	player
000403:0x00033058:	rts
IngameHud::ZeroingKeyPress()
000414:0x00033060:	imove	zeroing_key_pressed, 0x000001
000414:0x00033070:	rts
IngameHud::DisplayStance()
000419:0x00033078:	cmpi	stance, _i1
000419:0x00033088:	bne	0x0330d8
000421:0x00033090:	movefm	[0x11cf2b58], m_stanceStand
000421:0x000330a0:	ncalli	Widget.Show(true)
000422:0x000330a8:	movefm	[0x11cf2b58], m_stanceCrouch
000422:0x000330b8:	ncalli	Widget.Show(false)
000423:0x000330c0:	movefm	[0x11cf2b58], m_stanceProne
000423:0x000330d0:	ncalli	Widget.Show(false)
000425:0x000330d8:	cmpi	stance, _i2
000425:0x000330e8:	bne	0x033138
000427:0x000330f0:	movefm	[0x11cf2b58], m_stanceStand
000427:0x00033100:	ncalli	Widget.Show(false)
000428:0x00033108:	movefm	[0x11cf2b58], m_stanceCrouch
000428:0x00033118:	ncalli	Widget.Show(true)
000429:0x00033120:	movefm	[0x11cf2b58], m_stanceProne
000429:0x00033130:	ncalli	Widget.Show(false)
000431:0x00033138:	cmpi	stance, _i3
000431:0x00033148:	bne	0x033198
000433:0x00033150:	movefm	[0x11cf2b58], m_stanceStand
000433:0x00033160:	ncalli	Widget.Show(false)
000434:0x00033168:	movefm	[0x11cf2b58], m_stanceCrouch
000434:0x00033178:	ncalli	Widget.Show(false)
000435:0x00033180:	movefm	[0x11cf2b58], m_stanceProne
000435:0x00033190:	ncalli	Widget.Show(true)
000435:0x00033198:	rts
IngameHud::DisplayPresence()
000442:0x00033270:	ncall	GetGame()
000442:0x00033278:	ncalli	CGame.GetPlayer()
000442:0x00033280:	movetm	player, ret
000443:0x00033290:	cmpcm	player, NULL
000443:0x000332a0:	beq	0x033428
000446:0x000332a8:	ncalli	PlayerBase.GetPresenceInAI()
000446:0x000332b0:	move	presence_level, ret
000447:0x000332c0:	movefm	[0x11cf2b58], m_PresenceLevel0
000447:0x000332d0:	ncalli	Widget.Show(false)
000448:0x000332d8:	movefm	[0x11cf2b58], m_PresenceLevel1
000448:0x000332e8:	ncalli	Widget.Show(false)
000449:0x000332f0:	movefm	[0x11cf2b58], m_PresenceLevel2
000449:0x00033300:	ncalli	Widget.Show(false)
000450:0x00033308:	movefm	[0x11cf2b58], m_PresenceLevel3
000450:0x00033318:	ncalli	Widget.Show(false)
000451:0x00033320:	movefm	[0x11cf2b58], m_PresenceLevel4
000451:0x00033330:	ncalli	Widget.Show(false)
000453:0x00033338:	cmpf	presence_level, _f0.000000
000453:0x00033348:	ble	0x033368
000455:0x00033350:	movefm	[0x11cf2b58], m_PresenceLevel0
000455:0x00033360:	ncalli	Widget.Show(true)
000457:0x00033368:	cmpf	presence_level, _f0.200000
000457:0x00033378:	ble	0x033398
000459:0x00033380:	movefm	[0x11cf2b58], m_PresenceLevel1
000459:0x00033390:	ncalli	Widget.Show(true)
000461:0x00033398:	cmpf	presence_level, _f0.400000
000461:0x000333a8:	ble	0x0333c8
000463:0x000333b0:	movefm	[0x11cf2b58], m_PresenceLevel2
000463:0x000333c0:	ncalli	Widget.Show(true)
000465:0x000333c8:	cmpf	presence_level, _f0.600000
000465:0x000333d8:	ble	0x0333f8
000467:0x000333e0:	movefm	[0x11cf2b58], m_PresenceLevel3
000467:0x000333f0:	ncalli	Widget.Show(true)
000469:0x000333f8:	cmpf	presence_level, _f0.800000
000469:0x00033408:	ble	0x033428
000471:0x00033410:	movefm	[0x11cf2b58], m_PresenceLevel4
000471:0x00033420:	ncalli	Widget.Show(true)
000471:0x00033428:	release	player
000471:0x00033430:	rts
IngameHud::RefreshVehicleSpeedHud()
000528:0x00033558:	ncall	GetGame()
000528:0x00033560:	ncalli	CGame.GetPlayer()
000528:0x00033568:	movetm	player, ret
000529:0x00033578:	cmpcm	player, NULL
000529:0x00033588:	beq	0x0336d0
000531:0x00033590:	ncalli	PlayerBase.GetDrivingVehicle()
000531:0x00033598:	movetm	vehicle, ret
000532:0x000335a8:	cmpcm	vehicle, NULL
000532:0x000335b8:	beq	0x0336b0
000532:0x000335c0:	movefm	[0x11d0a2c8], vehicle
000532:0x000335d0:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000532:0x000335d8:	cmpi	ret, _i0
000532:0x000335e8:	beq	0x0336b0
000534:0x000335f0:	movefm	@c00, vehicle
000534:0x00033600:	movetm	car, @c00
000535:0x00033610:	movefm	[0x11cf2b58], m_VehiclePanel0
000535:0x00033620:	ncalli	Widget.Show(true)
000536:0x00033628:	ncalli	Transport.GetSpeedometerValue()
000536:0x00033630:	ncall	Floor(ret)
000536:0x00033638:	icall	ToString(ret)
000536:0x00033640:	movefm	[0x11d09418], VehiclePanelSpeedValue
000536:0x00033650:	ncalli	TextWidget.SetText(ret)
000538:0x00033658:	ncalli	TankOrCar.GetEngagedGear()
000538:0x00033660:	move	engaged_gear, ret
000539:0x00033670:	movefm	[0x11d0d2a8], m_VehicleGearTable
000539:0x00033680:	icall	map<int,string>.Get(engaged_gear)
000539:0x00033688:	movefm	[0x11d09418], VehiclePanelGearValue
000539:0x00033698:	ncalli	TextWidget.SetText(ret)
000539:0x000336a0:	release	car
000539:0x000336a8:	jump	0x0336c8
000543:0x000336b0:	movefm	[0x11cf2b58], m_VehiclePanel0
000543:0x000336c0:	ncalli	Widget.Show(false)
000543:0x000336c8:	release	vehicle
000543:0x000336d0:	release	player
000543:0x000336d8:	rts
IngameHud::InitQuickbar()
000550:0x000336e0:	cmpcm	m_quickbar, NULL
000550:0x000336f0:	bne	0x033748
000552:0x000336f8:	movem	quickbarGridWidget, m_quickbar_widget
000552:0x00033708:	new	@c00, InventoryQuickbar
000552:0x00033730:	movetm	m_quickbar, @c00
000553:0x00033740:	call	IngameHud.ShowQuickbar()
000553:0x00033748:	rts
IngameHud::GetQuickbar()
000559:0x00033750:	movem	ret, m_quickbar
000559:0x00033760:	rts
000559:0x00033768:	rts
IngameHud::ShowQuickbar()
000564:0x00033880:	ncall	GetGame()
000564:0x00033888:	ncalli	CGame.GetPlayer()
000564:0x00033890:	cmpm	ret, NULL
000564:0x000338a0:	bne	0x0338b0
000566:0x000338a8:	rts
000569:0x000338b0:	cmpcm	m_quickbar_widget, NULL
000569:0x000338c0:	beq	0x033af0
000569:0x000338c8:	ncall	GetGame()
000569:0x000338d0:	ncalli	CGame.GetPlayer()
000569:0x000338d8:	ncalli	Man.GetQuickBarSize()
000569:0x000338e0:	cmpi	ret, _i0
000569:0x000338f0:	beq	0x033af0
000572:0x000338f8:	movefm	[0x11cf2b58], m_quickbar_widget
000572:0x00033908:	icall	Widget.GetScript(quickbarGrid)
000573:0x00033910:	call	InventoryGrid.GetRoot()
000573:0x00033918:	ncalli	Widget.GetChildren()
000573:0x00033920:	movetm	child, ret
000574:0x00033930:	call	InventoryGrid.GetRoot()
000574:0x00033938:	ncalli	Widget.GetAlpha()
000574:0x00033940:	move	alpha, ret
000575:0x00033950:	call	IngameHud.RefreshQuickbar()
000577:0x00033958:	imove	i, 0x000000
000577:0x00033968:	jump	0x033978
000577:0x00033970:	inc	i
000577:0x00033978:	movefm	[0x7044e88], m_fade_timers
000577:0x00033988:	ncalli	array<WidgetFadeTimer>.Count()
000577:0x00033990:	cmpi	i, ret
000577:0x000339a0:	bge	0x0339e8
000579:0x000339a8:	movefm	[0x7044e88], m_fade_timers
000579:0x000339b8:	icall	array<WidgetFadeTimer>.Get(i)
000579:0x000339c0:	movec	timer, ret
000580:0x000339d0:	call	WidgetFadeTimer.Stop()
000581:0x000339d8:	delete	timer
000581:0x000339e0:	jump	0x033970
000583:0x000339e8:	movefm	[0x7044e88], m_fade_timers
000583:0x000339f8:	ncalli	array<WidgetFadeTimer>.Clear()
000585:0x00033a00:	movefm	[0x11cf2b58], m_quickbar_widget
000585:0x00033a10:	ncalli	Widget.Show(true)
000586:0x00033a18:	imove	m_quickbar_state, 0x000001
000588:0x00033a28:	cmpcm	child, NULL
000588:0x00033a38:	beq	0x033a90
000590:0x00033a40:	ncalli	Widget.Show(true)
000591:0x00033a48:	ncalli	Widget.GetChildren()
000591:0x00033a50:	ncalli	Widget.Show(true)
000592:0x00033a58:	ncalli	Widget.SetAlpha(alpha)
000593:0x00033a60:	ncalli	Widget.GetChildren()
000593:0x00033a68:	ncalli	Widget.SetAlpha(_f1.000000)
000594:0x00033a70:	ncalli	Widget.GetSibling()
000594:0x00033a78:	movetm	child, ret
000594:0x00033a88:	jump	0x033a28
000596:0x00033a90:	movec	[0x3cd17138], m_quickbar_timer
000596:0x00033aa0:	call	Timer.Stop()
000597:0x00033aa8:	movec	obj, this
000597:0x00033ab8:	movec	[0x3cd17138], m_quickbar_timer
000597:0x00033ac8:	call	Timer.Run(_f45.000000, obj, _s'HideQuickbar', _c0, _i0)
000597:0x00033ae0:	release	quickbarGrid
000597:0x00033ae8:	release	child
000597:0x00033af0:	rts
IngameHud::HideQuickbar()
000603:0x00033b58:	cmpcm	m_quickbar_widget, NULL
000603:0x00033b68:	beq	0x033cc0
000606:0x00033b70:	movefm	[0x11cf2b58], m_quickbar_widget
000606:0x00033b80:	icall	Widget.GetScript(quickbarGrid)
000608:0x00033b88:	cmpi	instant_hide, _i0
000608:0x00033b98:	bne	0x033c60
000610:0x00033ba0:	call	InventoryGrid.GetRoot()
000610:0x00033ba8:	ncalli	Widget.GetChildren()
000610:0x00033bb0:	movetm	child, ret
000611:0x00033bc0:	cmpcm	child, NULL
000611:0x00033bd0:	beq	0x033c50
000613:0x00033bd8:	new	@c00, WidgetFadeTimer
000613:0x00033bf8:	movec	m_fade_timer_quickbar, @c00
000614:0x00033c08:	call	WidgetFadeTimer.FadeOut(child, _f5.000000, true)
000615:0x00033c18:	movefm	[0x7044e88], m_fade_timers
000615:0x00033c28:	icall	array<WidgetFadeTimer>.Insert(m_fade_timer_quickbar)
000616:0x00033c30:	ncalli	Widget.GetSibling()
000616:0x00033c38:	movetm	child, ret
000616:0x00033c48:	jump	0x033bc0
000616:0x00033c50:	release	child
000616:0x00033c58:	jump	0x033c78
000621:0x00033c60:	movefm	[0x11cf2b58], m_quickbar_widget
000621:0x00033c70:	ncalli	Widget.Show(false)
000624:0x00033c78:	cmpi	ignore_state, _i0
000624:0x00033c88:	bne	0x033ca0
000626:0x00033c90:	imove	m_quickbar_state, 0x000000
000628:0x00033ca0:	movec	[0x3cd17138], m_quickbar_timer
000628:0x00033cb0:	call	Timer.Stop()
000628:0x00033cb8:	release	quickbarGrid
000628:0x00033cc0:	rts
IngameHud::RefreshQuickbar()
000642:0x00033cc8:	cmpcm	m_quickbar, NULL
000642:0x00033cd8:	beq	0x033d10
000644:0x00033ce0:	movem	quickbarGridWidget, m_quickbar_widget
000644:0x00033cf0:	movefm	[0x7035888], m_quickbar
000644:0x00033d00:	call	InventoryQuickbar.UpdateItems(quickbarGridWidget)
000644:0x00033d10:	rts
InGameMenu::~InGameMenu()
//scripts/5_Mission/GUI/InGameMenu.c
000010:0x00033d18:	ncall	GetGame()
000010:0x00033d20:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000010:0x00033d30:	movec	obj, this
000010:0x00033d40:	call	CallQueue.RemoveCalls(obj)
000010:0x00033d50:	rts
InGameMenu::Init()
000015:0x00033fa0:	ncall	GetGame()
000015:0x00033fa8:	ncalli	CGame.GetWorkspace()
000015:0x00033fb0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_ingamemenu.layout', _c0)
000015:0x00033fb8:	movetm	layoutRoot, ret
000018:0x00033fc8:	ncall	GetGame()
000018:0x00033fd0:	icall	CGame.GetVersion(version)
000020:0x00033fd8:	movefm	[0x11cf2b58], layoutRoot
000020:0x00033fe8:	ncalli	Widget.FindAnyWidget(_s'VersionTextWidget')
000020:0x00033ff0:	movetm	version_widget, ret
000021:0x00034000:	adds	@s01, _s'#main_menu_version ', version
000021:0x00034010:	moves	@s00, @s01
000021:0x00034020:	ncalli	TextWidget.SetText(@s00)
000023:0x00034028:	movefm	[0x11cf2b58], layoutRoot
000023:0x00034038:	ncalli	Widget.FindAnyWidgetById(IDC_INT_RETRY)
000023:0x00034040:	movetm	restart_btn, ret
000025:0x00034050:	ncall	GetGame()
000025:0x00034058:	ncalli	CGame.GetPlayer()
000025:0x00034060:	movetm	player, ret
000026:0x00034070:	imove	player_is_alive, 0x000000
000027:0x00034080:	cmpcm	player, NULL
000027:0x00034090:	beq	0x0340d8
000029:0x00034098:	ncalli	Man.GetLifeState()
000029:0x000340a0:	move	life_state, ret
000031:0x000340b0:	cmpi	life_state, LifeStateAlive
000031:0x000340c0:	bne	0x0340d8
000033:0x000340c8:	imove	player_is_alive, 0x000001
000037:0x000340d8:	ncall	GetGame()
000037:0x000340e0:	ncalli	CGame.IsMultiplayer()
000037:0x000340e8:	cmpi	ret, _i0
000037:0x000340f8:	beq	0x034110
000039:0x00034100:	ncalli	ButtonWidget.SetText(_s'#main_menu_respawn')
000039:0x00034108:	jump	0x034118
000043:0x00034110:	ncalli	ButtonWidget.SetText(_s'#main_menu_restart')
000046:0x00034118:	ncall	GetGame()
000046:0x00034120:	ncalli	CGame.IsMultiplayer()
000046:0x00034128:	cmpi	ret, _i0
000046:0x00034138:	beq	0x034170
000046:0x00034140:	ncall	GetGame()
000046:0x00034148:	ncalli	CGame.CanRespawnPlayer()
000046:0x00034150:	cmpi	ret, false
000046:0x00034160:	bne	0x034170
000048:0x00034168:	ncalli	ButtonWidget.Enable(false)
000051:0x00034170:	movem	ret, layoutRoot
000051:0x00034180:	release	version_widget
000051:0x00034188:	release	restart_btn
000051:0x00034190:	release	player
000051:0x00034198:	rts
000051:0x000341a0:	release	version_widget
000051:0x000341a8:	release	restart_btn
000051:0x000341b0:	release	player
000051:0x000341b8:	rts
InGameMenu::OnClick()
000056:0x00034280:	call	UIScriptedMenu.OnClick(w, x, y, button)
000058:0x00034290:	ncall	GetGame()
000058:0x00034298:	ncalli	CGame.GetMission()
000058:0x000342a0:	movec	mission, ret
000060:0x000342b0:	ncalli	Widget.GetUserID()
000060:0x000342b8:	imove	@m00, 0x000072
000060:0x000342c8:	cmpi	@m00, ret
000060:0x000342d8:	bne	0x034368
000063:0x000342e0:	ncall	GetGame()
000063:0x000342e8:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000063:0x000342f8:	pushc	ret
000063:0x00034300:	ncall	GetGame()
000063:0x00034308:	movec	@c01, ret
000063:0x00034318:	popc	ret
000063:0x00034320:	ncalli	CGame.GetMission()
000063:0x00034328:	movec	obj, ret
000063:0x00034338:	call	CallQueue.Call(obj, _s'Continue', _c0)
000064:0x00034348:	imove	ret, 0x000001
000064:0x00034358:	rts
000064:0x00034360:	jump	0x034390
000064:0x00034368:	imove	@m00, 0x000066
000064:0x00034378:	cmpi	@m00, ret
000064:0x00034388:	bne	0x0343b8
000067:0x00034390:	ncalli	InGameMenu.EnterScriptedMenu(MENU_OPTIONS)
000068:0x00034398:	imove	ret, 0x000001
000068:0x000343a8:	rts
000068:0x000343b0:	jump	0x0343e0
000068:0x000343b8:	imove	@m00, 0x00006a
000068:0x000343c8:	cmpi	@m00, ret
000068:0x000343d8:	bne	0x034438
000071:0x000343e0:	ncall	GetGame()
000071:0x000343e8:	ncalli	CGame.GetUIManager()
000071:0x000343f0:	movec	[0x3cd3f758], NULL
000071:0x00034400:	ncalli	UIManager.ShowDialog(_s'EXIT', _s'Are you sure you want to exit?', IDC_INT_EXIT, DBT_YESNO, DBB_YES, DMT_QUESTION, [0x3cd3f758])
000072:0x00034418:	imove	ret, 0x000001
000072:0x00034428:	rts
000072:0x00034430:	jump	0x034460
000072:0x00034438:	imove	@m00, 0x000069
000072:0x00034448:	cmpi	@m00, ret
000072:0x00034458:	bne	0x034540
000075:0x00034460:	ncall	GetGame()
000075:0x00034468:	ncalli	CGame.IsMultiplayer()
000075:0x00034470:	cmpi	ret, _i0
000075:0x00034480:	bne	0x0344f0
000077:0x00034488:	ncall	GetGame()
000077:0x00034490:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000077:0x000344a0:	pushc	ret
000077:0x000344a8:	ncall	GetGame()
000077:0x000344b0:	movec	@c00, ret
000077:0x000344c0:	popc	ret
000077:0x000344c8:	movec	obj, @c00
000077:0x000344d8:	call	CallQueue.Call(obj, _s'RestartMission', _c0)
000077:0x000344e8:	jump	0x034528
000081:0x000344f0:	ncall	GetGame()
000081:0x000344f8:	ncalli	CGame.GetUIManager()
000081:0x00034500:	movec	[0x3cd3f758], this
000081:0x00034510:	ncalli	UIManager.ShowDialog(_s'#main_menu_respawn', _s'#main_menu_respawn_question', _i0, DBT_YESNO, DBB_YES, DMT_QUESTION, [0x3cd3f758])
000083:0x00034528:	imove	ret, 0x000001
000083:0x00034538:	rts
000086:0x00034540:	imove	ret, 0x000000
000086:0x00034550:	rts
000086:0x00034558:	rts
InGameMenu::OnModalResult()
000091:0x000345a0:	call	UIScriptedMenu.OnModalResult(w, x, y, code, result)
000093:0x000345b8:	cmpi	code, IDC_INT_EXIT
000093:0x000345c8:	bne	0x034650
000093:0x000345d0:	cmpi	result, DBB_YES
000093:0x000345e0:	bne	0x034650
000095:0x000345e8:	ncall	GetGame()
000095:0x000345f0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000095:0x00034600:	pushc	ret
000095:0x00034608:	ncall	GetGame()
000095:0x00034610:	movec	@c00, ret
000095:0x00034620:	popc	ret
000095:0x00034628:	movec	obj, @c00
000095:0x00034638:	call	CallQueue.Call(obj, _s'AbortMission', _c0)
000095:0x00034648:	jump	0x034758
000097:0x00034650:	cmpi	result, DBB_YES
000097:0x00034660:	bne	0x034758
000097:0x00034668:	ncall	GetGame()
000097:0x00034670:	ncalli	CGame.IsMultiplayer()
000097:0x00034678:	cmpi	ret, _i0
000097:0x00034688:	beq	0x034758
000099:0x00034690:	ncall	GetGame()
000099:0x00034698:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000099:0x000346a8:	pushc	ret
000099:0x000346b0:	ncall	GetGame()
000099:0x000346b8:	movec	@c00, ret
000099:0x000346c8:	popc	ret
000099:0x000346d0:	movec	obj, @c00
000099:0x000346e0:	call	CallQueue.Call(obj, _s'RespawnPlayer', _c0)
000100:0x000346f0:	ncall	GetGame()
000100:0x000346f8:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000100:0x00034708:	pushc	ret
000100:0x00034710:	ncall	GetGame()
000100:0x00034718:	movec	@c01, ret
000100:0x00034728:	popc	ret
000100:0x00034730:	ncalli	CGame.GetMission()
000100:0x00034738:	movec	obj, ret
000100:0x00034748:	call	CallQueue.Call(obj, _s'Continue', _c0)
000100:0x00034758:	rts
InspectMenu::~InspectMenu()
//scripts/5_Mission/GUI/InspectMenu.c
000018:0x00034760:	ncall	GetGame()
000018:0x00034768:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000018:0x00034778:	movec	obj, this
000018:0x00034788:	call	CallQueue.RemoveCalls(obj)
000019:0x00034798:	ncall	GetGame()
000019:0x000347a0:	call	CGame.GetDragQueue()
000019:0x000347a8:	movec	obj, this
000019:0x000347b8:	call	DragQueue.RemoveCalls(obj)
000021:0x000347c8:	cmpcm	m_item_widget, NULL
000021:0x000347d8:	beq	0x034808
000023:0x000347e0:	movefm	[0x3cd16e10], m_item_widget
000023:0x000347f0:	ncalli	ItemPreviewWidget.Destroy()
000024:0x000347f8:	movetm	m_item_widget, NULL
000024:0x00034808:	rts
InspectMenu::Init()
000031:0x00034830:	ncall	GetGame()
000031:0x00034838:	ncalli	CGame.GetWorkspace()
000031:0x00034840:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory_inspect.layout', _c0)
000031:0x00034848:	movetm	layoutRoot, ret
000034:0x00034858:	movem	ret, layoutRoot
000034:0x00034868:	rts
000034:0x00034870:	rts
InspectMenu::OnClick()
000040:0x00034878:	call	UIScriptedMenu.OnClick(w, x, y, button)
000042:0x00034888:	ncalli	Widget.GetUserID()
000042:0x00034890:	imove	@m00, 0x000002
000042:0x000348a0:	cmpi	@m00, ret
000042:0x000348b0:	bne	0x0348d8
000045:0x000348b8:	ncalli	InspectMenu.Close()
000046:0x000348c0:	imove	ret, 0x000001
000046:0x000348d0:	rts
000049:0x000348d8:	imove	ret, 0x000000
000049:0x000348e8:	rts
000049:0x000348f0:	rts
InspectMenu::SetItem()
000055:0x000349e8:	cmpcm	item, NULL
000055:0x000349f8:	beq	0x034b40
000057:0x00034a00:	movem	root_widget, layoutRoot
000057:0x00034a10:	call	UpdateItemInfo(root_widget, item)
000059:0x00034a20:	cmpcm	m_item_widget, NULL
000059:0x00034a30:	bne	0x034af0
000061:0x00034a38:	movefm	[0x11cf2b58], layoutRoot
000061:0x00034a48:	ncalli	Widget.FindAnyWidget(_s'ItemFrameWidget')
000061:0x00034a50:	movetm	preview_frame, ret
000062:0x00034a60:	cmpcm	preview_frame, NULL
000062:0x00034a70:	beq	0x034ae8
000066:0x00034a78:	icall	Widget.GetSize(w, h)
000067:0x00034a80:	ncall	GetGame()
000067:0x00034a88:	ncalli	CGame.GetWorkspace()
000067:0x00034a90:	movea	[0x11d181d8], ItemPreviewWidgetTypeID
000067:0x00034aa0:	call	ARGB(_i255, _i255, _i255, _i255)
000067:0x00034ab0:	movefm	[0x11d182d8], preview_frame
000067:0x00034ac0:	ncall	CreateWidget(ret, [0x11d181d8], _i0, _i0, _i1, _i1, _i1, ret, _i10, [0x11d182d8])
000067:0x00034ad8:	movetm	m_item_widget, ret
000067:0x00034ae8:	release	preview_frame
000071:0x00034af0:	movefm	[0x3cd324b0], item
000071:0x00034b00:	movefm	[0x3cd16e10], m_item_widget
000071:0x00034b10:	ncalli	ItemPreviewWidget.SetItem([0x3cd324b0])
000072:0x00034b18:	ncall	Vector(_f0.000000, _f0.000000, _f1.000000)
000072:0x00034b28:	movefm	[0x3cd16e10], m_item_widget
000072:0x00034b38:	ncalli	ItemPreviewWidget.SetModelPosition(ret)
000072:0x00034b40:	rts
InspectMenu::OnMouseButtonDown()
000079:0x00034b68:	call	UIScriptedMenu.OnMouseButtonDown(w, x, y, button)
000081:0x00034b78:	cmpm	w, m_item_widget
000081:0x00034b88:	bne	0x034bc8
000083:0x00034b90:	ncall	GetGame()
000083:0x00034b98:	call	CGame.GetDragQueue()
000083:0x00034ba0:	movec	obj, this
000083:0x00034bb0:	call	DragQueue.Call(obj, _s'UpdateRotation', _c0)
000084:0x00034bc0:	icall	GetMousePos(m_characterRotationX, m_characterRotationY)
000084:0x00034bc8:	rts
InspectMenu::UpdateRotation()
000091:0x00034c00:	movev	o, m_characterOrientation
000092:0x00034c10:	ifv	@f01, o[0x000000]
000092:0x00034c20:	citf	@f03, m_characterRotationY
000092:0x00034c30:	citf	@f04, mouse_y
000092:0x00034c40:	subf	@f03, @f03, @f04
000092:0x00034c50:	move	@f02, @f03
000092:0x00034c60:	addf	@f01, @f01, @f02
000092:0x00034c70:	itv	o[0x000000], @f01
000093:0x00034c80:	ifv	@f01, o[0x000001]
000093:0x00034c90:	citf	@f03, m_characterRotationX
000093:0x00034ca0:	citf	@f04, mouse_x
000093:0x00034cb0:	subf	@f03, @f03, @f04
000093:0x00034cc0:	move	@f02, @f03
000093:0x00034cd0:	subf	@f01, @f01, @f02
000093:0x00034ce0:	itv	o[0x000001], @f01
000095:0x00034cf0:	movefm	[0x3cd16e10], m_item_widget
000095:0x00034d00:	ncalli	ItemPreviewWidget.SetModelOrientation(o)
000097:0x00034d08:	cmpi	is_dragging, _i0
000097:0x00034d18:	bne	0x034d30
000099:0x00034d20:	movev	m_characterOrientation, o
000099:0x00034d30:	rts
InspectMenu::OnMouseWheel()
000106:0x00034d58:	call	UIScriptedMenu.OnMouseWheel(w, x, y, wheel)
000108:0x00034d68:	cmpm	w, m_item_widget
000108:0x00034d78:	bne	0x034dc0
000110:0x00034d80:	ncall	GetGame()
000110:0x00034d88:	call	CGame.GetDragQueue()
000110:0x00034d90:	movec	obj, this
000110:0x00034da0:	call	DragQueue.Call(obj, _s'UpdateScale', _c0)
000111:0x00034db0:	move	m_characterScaleDelta, wheel
000113:0x00034dc0:	imove	ret, 0x000000
000113:0x00034dd0:	rts
000113:0x00034dd8:	rts
InspectMenu::UpdateScale()
000120:0x00034f70:	movefm	[0x3cd16e10], m_item_widget
000120:0x00034f80:	icall	ItemPreviewWidget.GetPos(x, y)
000121:0x00034f88:	movefm	[0x3cd16e10], m_item_widget
000121:0x00034f98:	icall	ItemPreviewWidget.GetSize(w, h)
000122:0x00034fa0:	citf	@f01, m_characterScaleDelta
000122:0x00034fb0:	divf	@f01, @f01, _f4.000000
000122:0x00034fc0:	move	@f00, @f01
000122:0x00034fd0:	addf	@f00, w, @f00
000122:0x00034fe0:	move	w, @f00
000123:0x00034ff0:	citf	@f01, m_characterScaleDelta
000123:0x00035000:	divf	@f01, @f01, _f4.000000
000123:0x00035010:	move	@f00, @f01
000123:0x00035020:	addf	@f00, h, @f00
000123:0x00035030:	move	h, @f00
000124:0x00035040:	cmpf	w, _f0.500000
000124:0x00035050:	ble	0x035138
000124:0x00035058:	cmpf	w, _f3.000000
000124:0x00035068:	bge	0x035138
000126:0x00035070:	movefm	[0x3cd16e10], m_item_widget
000126:0x00035080:	ncalli	ItemPreviewWidget.SetSize(w, h, _i1)
000130:0x00035090:	icall	GetScreenSize(screen_w, screen_h)
000131:0x00035098:	citf	@f01, m_characterScaleDelta
000131:0x000350a8:	divf	@f01, @f01, _f8.000000
000131:0x000350b8:	move	@f00, @f01
000131:0x000350c8:	subf	new_x, x, @f00
000132:0x000350d8:	citf	@f01, m_characterScaleDelta
000132:0x000350e8:	divf	@f01, @f01, _f8.000000
000132:0x000350f8:	move	@f00, @f01
000132:0x00035108:	subf	new_y, y, @f00
000133:0x00035118:	movefm	[0x3cd16e10], m_item_widget
000133:0x00035128:	ncalli	ItemPreviewWidget.SetPos(new_x, new_y, _i1)
000133:0x00035138:	rts
InspectMenu::UseKeyboard()
000139:0x00035140:	imove	ret, 0x000000
000139:0x00035150:	rts
000139:0x00035158:	rts
UpdateItemInfo()
000162:0x00035278:	cmpcm	root_widget, NULL
000162:0x00035288:	beq	0x0352a8
000162:0x00035290:	cmpcm	item, NULL
000162:0x000352a0:	bne	0x0352b0
000162:0x000352a8:	rts
000164:0x000352b0:	ncalli	Widget.FindAnyWidget(_s'InventoryInfoPanelWidget')
000164:0x000352b8:	movetm	panelInfo, ret
000165:0x000352c8:	cmpcm	panelInfo, NULL
000165:0x000352d8:	beq	0x035358
000167:0x000352e0:	movefm	[0x11d0a2c8], item
000167:0x000352f0:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000167:0x000352f8:	cmpi	ret, _i0
000167:0x00035308:	bne	0x035340
000167:0x00035310:	movefm	[0x11d0a2c8], item
000167:0x00035320:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000167:0x00035328:	cmpi	ret, _i0
000167:0x00035338:	beq	0x035350
000169:0x00035340:	ncalli	Widget.Show(false)
000169:0x00035348:	jump	0x035358
000173:0x00035350:	ncalli	Widget.Show(true)
000177:0x00035358:	movefm	[0x11d0a2c8], item
000177:0x00035368:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000177:0x00035370:	cmpi	ret, _i0
000177:0x00035380:	bne	0x0353f8
000177:0x00035388:	movefm	[0x11d0a2c8], item
000177:0x00035398:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000177:0x000353a0:	cmpi	ret, _i0
000177:0x000353b0:	bne	0x0353f8
000179:0x000353b8:	movefm	@c00, item
000179:0x000353c8:	movetm	iItem, @c00
000180:0x000353d8:	call	InventoryItem.GetTooltip()
000180:0x000353e0:	call	WidgetTrySetText(root_widget, _s'ItemDescWidget', ret, _i0)
000180:0x000353f0:	release	iItem
000183:0x000353f8:	call	EntityAI.GetName()
000183:0x00035400:	call	WidgetTrySetText(root_widget, _s'ItemNameWidget', ret, _i0)
000184:0x00035410:	call	UpdateItemInfoDamage(root_widget, item)
000185:0x00035420:	call	UpdateItemInfoWetness(root_widget, item)
000186:0x00035430:	call	UpdateItemInfoWeight(root_widget, item)
000187:0x00035440:	call	UpdateItemInfoQuantity(root_widget, item)
000188:0x00035450:	call	UpdateItemInfoDebug(root_widget, item)
000188:0x00035460:	release	panelInfo
000188:0x00035468:	rts
UpdateItemInfoDamage()
000194:0x000355e0:	movefm	[0x11d0a2c8], item
000194:0x000355f0:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000194:0x000355f8:	cmpi	ret, _i0
000194:0x00035608:	bne	0x035640
000194:0x00035610:	movefm	[0x11d0a2c8], item
000194:0x00035620:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000194:0x00035628:	cmpi	ret, _i0
000194:0x00035638:	beq	0x035648
000194:0x00035640:	rts
000195:0x00035648:	ncalli	EntityAI.GetDamage()
000195:0x00035650:	move	damage, ret
000200:0x00035660:	cmpf	damage, _f0.990000
000200:0x00035670:	ble	0x0356a0
000202:0x00035678:	moves	widgetText, _s'Ruined'
000203:0x00035688:	call	WidgetTrySetText(root_widget, _s'ItemDamageWidget', widgetText, COLOR_RUINED)
000203:0x00035698:	jump	0x035780
000207:0x000356a0:	cmpf	damage, _f0.700000
000207:0x000356b0:	blt	0x0356e0
000209:0x000356b8:	moves	widgetText, _s'Badly Damaged'
000210:0x000356c8:	call	WidgetTrySetText(root_widget, _s'ItemDamageWidget', widgetText, COLOR_BADLY_DAMAGED)
000210:0x000356d8:	jump	0x035780
000214:0x000356e0:	cmpf	damage, _f0.500000
000214:0x000356f0:	blt	0x035720
000216:0x000356f8:	moves	widgetText, _s'Damaged'
000217:0x00035708:	call	WidgetTrySetText(root_widget, _s'ItemDamageWidget', widgetText, COLOR_DAMAGED)
000217:0x00035718:	jump	0x035780
000221:0x00035720:	cmpf	damage, _f0.300000
000221:0x00035730:	ble	0x035760
000223:0x00035738:	moves	widgetText, _s'Worn'
000224:0x00035748:	call	WidgetTrySetText(root_widget, _s'ItemDamageWidget', widgetText, COLOR_WORN)
000224:0x00035758:	jump	0x035780
000228:0x00035760:	moves	widgetText, _s'Pristine'
000229:0x00035770:	call	WidgetTrySetText(root_widget, _s'ItemDamageWidget', widgetText, COLOR_PRISTINE)
000229:0x00035780:	rts
UpdateItemInfoWetness()
000239:0x00035940:	movefm	[0x11d0a2c8], item
000239:0x00035950:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000239:0x00035958:	cmpi	ret, _i0
000239:0x00035968:	bne	0x0359a0
000239:0x00035970:	movefm	[0x11d0a2c8], item
000239:0x00035980:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000239:0x00035988:	cmpi	ret, _i0
000239:0x00035998:	beq	0x0359a8
000239:0x000359a0:	rts
000251:0x000359a8:	ncall	GetGame()
000251:0x000359b0:	ncalli	CGame.GetPlayer()
000251:0x000359b8:	call	Man.GetVariableFloat(_s'wet')
000251:0x000359c8:	move	pwetness, ret
000252:0x000359d8:	call	EntityAI.GetVariableFloat(_s'wet')
000252:0x000359e8:	move	wetness, ret
000253:0x000359f8:	imove	bagwet, 1.00000
000255:0x00035a08:	ncalli	EntityAI.GetOwner()
000255:0x00035a10:	movetm	parent, ret
000256:0x00035a20:	cmpcm	parent, NULL
000256:0x00035a30:	beq	0x035a70
000256:0x00035a38:	call	EntityAI.IsClothing()
000256:0x00035a40:	cmpi	ret, _i0
000256:0x00035a50:	beq	0x035a70
000258:0x00035a58:	icall	EntityAI.ConfigGetFloat(_s'absorbency')
000258:0x00035a60:	move	bagwet, ret
000261:0x00035a70:	cmpcm	parent, NULL
000261:0x00035a80:	beq	0x035af8
000261:0x00035a88:	cmpf	bagwet, _f0.000000
000261:0x00035a98:	ble	0x035af8
000261:0x00035aa0:	cmpf	pwetness, _f0.000000
000261:0x00035ab0:	ble	0x035af8
000263:0x00035ab8:	icall	EntityAI.ConfigGetFloat(_s'absorbency')
000263:0x00035ac0:	move	wetness, ret
000264:0x00035ad0:	cmpf	pwetness, wetness
000264:0x00035ae0:	bge	0x035af8
000264:0x00035ae8:	move	wetness, pwetness
000267:0x00035af8:	cmpf	wetness, _f0.900000
000267:0x00035b08:	blt	0x035b28
000269:0x00035b10:	call	WidgetTrySetText(root_widget, _s'ItemWetnessWidget', _s'Soaking Wet', COLOR_SOAKING_WET)
000269:0x00035b20:	jump	0x035b98
000271:0x00035b28:	cmpf	wetness, _f0.500000
000271:0x00035b38:	blt	0x035b58
000273:0x00035b40:	call	WidgetTrySetText(root_widget, _s'ItemWetnessWidget', _s'Wet', COLOR_WET)
000273:0x00035b50:	jump	0x035b98
000275:0x00035b58:	cmpf	wetness, _f0.000000
000275:0x00035b68:	ble	0x035b88
000277:0x00035b70:	call	WidgetTrySetText(root_widget, _s'ItemWetnessWidget', _s'Damp', COLOR_DAMP)
000277:0x00035b80:	jump	0x035b98
000281:0x00035b88:	call	WidgetTrySetText(root_widget, _s'ItemWetnessWidget', _s'', _i0)
000281:0x00035b98:	release	parent
000281:0x00035ba0:	rts
UpdateItemInfoWeight()
000288:0x00035e40:	movefm	[0x11d0a2c8], item
000288:0x00035e50:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000288:0x00035e58:	cmpi	ret, _i0
000288:0x00035e68:	bne	0x035ea0
000288:0x00035e70:	movefm	[0x11d0a2c8], item
000288:0x00035e80:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000288:0x00035e88:	cmpi	ret, _i0
000288:0x00035e98:	beq	0x035ea8
000288:0x00035ea0:	rts
000289:0x00035ea8:	call	EntityAI.GetVariableFloat(_s'quantity')
000289:0x00035eb8:	move	quantity, ret
000290:0x00035ec8:	call	EntityAI.GetVariableFloat(_s'wet')
000290:0x00035ed8:	move	wetness, ret
000292:0x00035ee8:	icall	EntityAI.ConfigGetString(_s'stackedUnit')
000292:0x00035ef0:	cmps	ret, _s'ml'
000292:0x00035f00:	beq	0x036148
000294:0x00035f08:	icall	EntityAI.ConfigGetInt(_s'weight')
000294:0x00035f10:	citf	confweight, ret
000295:0x00035f20:	imove	weight, 0.00000
000297:0x00035f30:	cmpf	quantity, _f0.000000
000297:0x00035f40:	ble	0x035fc8
000299:0x00035f48:	addf	@f04, wetness, _f1.000000
000299:0x00035f58:	move	@f03, @f04
000299:0x00035f68:	mulf	@f03, @f03, confweight
000299:0x00035f78:	move	@f02, @f03
000299:0x00035f88:	mulf	@f02, @f02, quantity
000299:0x00035f98:	move	@f01, @f02
000299:0x00035fa8:	ncall	Round(@f01)
000299:0x00035fb0:	move	weight, ret
000299:0x00035fc0:	jump	0x036020
000303:0x00035fc8:	addf	@f03, wetness, _f1.000000
000303:0x00035fd8:	move	@f02, @f03
000303:0x00035fe8:	mulf	@f02, @f02, confweight
000303:0x00035ff8:	move	@f01, @f02
000303:0x00036008:	ncall	Round(@f01)
000303:0x00036010:	move	weight, ret
000306:0x00036020:	cmpf	weight, _f1000.000000
000306:0x00036030:	blt	0x0360d0
000308:0x00036038:	divf	@f01, weight, _f1000.000000
000308:0x00036048:	move	@f00, @f01
000308:0x00036058:	ncall	Round(@f00)
000308:0x00036060:	cfti	kilos, ret
000309:0x00036070:	icall	ToString(kilos)
000309:0x00036078:	adds	@s02, _s'around ', ret
000309:0x00036088:	moves	@s01, @s02
000309:0x00036098:	adds	@s01, @s01, _s' kg'
000309:0x000360a8:	moves	@s00, @s01
000309:0x000360b8:	call	WidgetTrySetText(root_widget, _s'ItemWeightWidget', @s00, _i0)
000309:0x000360c8:	jump	0x036140
000311:0x000360d0:	cmpf	weight, _f500.000000
000311:0x000360e0:	blt	0x036100
000313:0x000360e8:	call	WidgetTrySetText(root_widget, _s'ItemWeightWidget', _s'under 1 kg', _i0)
000313:0x000360f8:	jump	0x036140
000315:0x00036100:	cmpf	weight, _f250.000000
000315:0x00036110:	blt	0x036130
000317:0x00036118:	call	WidgetTrySetText(root_widget, _s'ItemWeightWidget', _s'under 0.5 kg', _i0)
000317:0x00036128:	jump	0x036140
000321:0x00036130:	call	WidgetTrySetText(root_widget, _s'ItemWeightWidget', _s'under 0.25 kg', _i0)
000321:0x00036140:	jump	0x036158
000326:0x00036148:	call	WidgetTrySetText(root_widget, _s'ItemWeightWidget', _s'', _i0)
000326:0x00036158:	rts
UpdateItemInfoQuantity()
000333:0x00036438:	movefm	[0x11d0a2c8], item
000333:0x00036448:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000333:0x00036450:	cmpi	ret, _i0
000333:0x00036460:	bne	0x036498
000333:0x00036468:	movefm	[0x11d0a2c8], item
000333:0x00036478:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000333:0x00036480:	cmpi	ret, _i0
000333:0x00036490:	beq	0x0364a0
000333:0x00036498:	rts
000334:0x000364a0:	moves	quantity_text, _s''
000335:0x000364b0:	movefm	@c00, item
000335:0x000364c0:	movetm	item_base, @c00
000336:0x000364d0:	call	ItemBase.GetQuantity()
000336:0x000364d8:	move	quantity, ret
000337:0x000364e8:	icall	EntityAI.ConfigGetInt(_s'stackedMax')
000337:0x000364f0:	move	max, ret
000338:0x00036500:	icall	EntityAI.ConfigGetString(_s'stackedUnit')
000338:0x00036508:	moves	unit, ret
000340:0x00036518:	moves	item_quantity_text, _s''
000341:0x00036528:	movefm	[0x11d0a2c8], item
000341:0x00036538:	ncall	IsInherited([0x11d0a2c8], _T(ItemBook))
000341:0x00036540:	cmpi	ret, _i0
000341:0x00036550:	beq	0x036560
000341:0x00036558:	jump	0x0367b8
000345:0x00036560:	cmpi	max, _i0
000345:0x00036570:	ble	0x0367b8
000347:0x00036578:	cmpi	max, _i1
000347:0x00036588:	bne	0x036628
000349:0x00036590:	citf	@f03, max
000349:0x000365a0:	divf	@f03, quantity, @f03
000349:0x000365b0:	move	@f02, @f03
000349:0x000365c0:	mulf	@f02, @f02, _f100.000000
000349:0x000365d0:	move	@f01, @f02
000349:0x000365e0:	ncall	Round(@f01)
000349:0x000365e8:	move	tmp, ret
000350:0x000365f8:	icall	ToString(tmp)
000350:0x00036600:	adds	@s01, ret, _s'% remaining'
000350:0x00036610:	moves	item_quantity_text, @s01
000350:0x00036620:	jump	0x0367b8
000354:0x00036628:	cmps	unit, _s'ml'
000354:0x00036638:	bne	0x036758
000356:0x00036640:	cmpf	quantity, _f1000.000000
000356:0x00036650:	blt	0x0366e0
000358:0x00036658:	divf	@f01, quantity, _f1000.000000
000358:0x00036668:	move	@f00, @f01
000358:0x00036678:	ncall	Round(@f00)
000358:0x00036680:	cfti	liters, ret
000359:0x00036690:	icall	ToString(liters)
000359:0x00036698:	adds	@s01, _s'around ', ret
000359:0x000366a8:	moves	@s00, @s01
000359:0x000366b8:	adds	@s00, @s00, _s' l'
000359:0x000366c8:	moves	item_quantity_text, @s00
000359:0x000366d8:	jump	0x036750
000361:0x000366e0:	cmpf	quantity, _f500.000000
000361:0x000366f0:	blt	0x036710
000363:0x000366f8:	moves	item_quantity_text, _s'under 1 l'
000363:0x00036708:	jump	0x036750
000365:0x00036710:	cmpf	quantity, _f250.000000
000365:0x00036720:	blt	0x036740
000367:0x00036728:	moves	item_quantity_text, _s'under 0.5 l'
000367:0x00036738:	jump	0x036750
000371:0x00036740:	moves	item_quantity_text, _s'under 0.25 l'
000371:0x00036750:	jump	0x0367b8
000376:0x00036758:	cmps	unit, _s''
000376:0x00036768:	beq	0x036790
000376:0x00036770:	adds	@s00, _s' ', unit
000376:0x00036780:	moves	unit, @s00
000377:0x00036790:	icall	ToString(quantity)
000377:0x00036798:	adds	@s01, ret, unit
000377:0x000367a8:	moves	item_quantity_text, @s01
000381:0x000367b8:	call	WidgetTrySetText(root_widget, _s'ItemQuantityWidget', item_quantity_text, _i0)
000381:0x000367c8:	release	item_base
000381:0x000367d0:	rts
UpdateItemInfoDebug()
000387:0x000367f8:	movefm	[0x11d0a2c8], item
000387:0x00036808:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000387:0x00036810:	cmpi	ret, _i0
000387:0x00036820:	bne	0x036858
000387:0x00036828:	movefm	[0x11d0a2c8], item
000387:0x00036838:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000387:0x00036840:	cmpi	ret, _i0
000387:0x00036850:	beq	0x036860
000387:0x00036858:	rts
000388:0x00036860:	call	WidgetTrySetText(root_widget, _s'DebugTextWidget', _s'', _i0)
000388:0x00036870:	rts
WidgetTrySetText()
000394:0x00036958:	ncalli	Widget.FindAnyWidget(widget_name)
000394:0x00036960:	movetm	widget, ret
000395:0x00036970:	cmpcm	widget, NULL
000395:0x00036980:	beq	0x036a40
000397:0x00036988:	ncalli	TextWidget.SetText(text)
000399:0x00036990:	adds	@s01, widget_name, _s'Background'
000399:0x000369a0:	moves	@s00, @s01
000399:0x000369b0:	ncalli	Widget.FindAnyWidget(@s00)
000399:0x000369b8:	movetm	widget_background, ret
000400:0x000369c8:	cmpcm	widget_background, NULL
000400:0x000369d8:	beq	0x036a38
000402:0x000369e0:	cmpi	color, _i0
000402:0x000369f0:	beq	0x036a30
000404:0x000369f8:	ncalli	Widget.Show(true)
000405:0x00036a00:	ori	@m01, color, _i2130706432
000405:0x00036a10:	move	@m00, @m01
000405:0x00036a20:	ncalli	Widget.SetColor(@m00)
000405:0x00036a28:	jump	0x036a38
000409:0x00036a30:	ncalli	Widget.Show(false)
000409:0x00036a38:	release	widget_background
000409:0x00036a40:	release	widget
000409:0x00036a48:	rts
CanShowItemInInventory()
//scripts/5_Mission/GUI/Inventory/InventoryContainer/InventoryContainer.c
000003:0x00036ba0:	cmpcm	player, NULL
000003:0x00036bb0:	beq	0x036be8
000003:0x00036bb8:	cmpcm	obj, NULL
000003:0x00036bc8:	beq	0x036be8
000003:0x00036bd0:	cmpm	player, obj
000003:0x00036be0:	bne	0x036c00
000005:0x00036be8:	imove	ret, 0x000000
000005:0x00036bf8:	rts
000009:0x00036c00:	movefm	[0x11d0a2c8], obj
000009:0x00036c10:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000009:0x00036c18:	cmpi	ret, _i0
000009:0x00036c28:	bne	0x036d38
000009:0x00036c30:	movefm	[0x11d0a2c8], obj
000009:0x00036c40:	ncall	IsInherited([0x11d0a2c8], _T(Building))
000009:0x00036c48:	cmpi	ret, _i0
000009:0x00036c58:	bne	0x036d38
000009:0x00036c60:	movefm	[0x11d0a2c8], obj
000009:0x00036c70:	ncall	IsInherited([0x11d0a2c8], _T(PlayerBase))
000009:0x00036c78:	cmpi	ret, _i0
000009:0x00036c88:	bne	0x036d38
000009:0x00036c90:	movefm	[0x11d0a2c8], obj
000009:0x00036ca0:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000009:0x00036ca8:	cmpi	ret, _i0
000009:0x00036cb8:	bne	0x036d38
000009:0x00036cc0:	movefm	[0x11d0a2c8], obj
000009:0x00036cd0:	ncall	IsInherited([0x11d0a2c8], _T(AnimalBase))
000009:0x00036cd8:	cmpi	ret, _i0
000009:0x00036ce8:	bne	0x036d38
000009:0x00036cf0:	movefm	[0x11d0a2c8], obj
000009:0x00036d00:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000009:0x00036d08:	cmpi	ret, _i0
000009:0x00036d18:	bne	0x036d38
000011:0x00036d20:	imove	ret, 0x000000
000011:0x00036d30:	rts
000015:0x00036d38:	call	Object.IsKindOf(_s'PlantBase')
000015:0x00036d48:	cmpi	ret, _i0
000015:0x00036d58:	bne	0x036db0
000015:0x00036d60:	call	Object.IsKindOf(_s'DiggedSoil')
000015:0x00036d70:	cmpi	ret, _i0
000015:0x00036d80:	bne	0x036db0
000015:0x00036d88:	call	Object.IsKindOf(_s'GardenPlot')
000015:0x00036d98:	cmpi	ret, _i0
000015:0x00036da8:	beq	0x036dc8
000017:0x00036db0:	imove	ret, 0x000000
000017:0x00036dc0:	rts
000021:0x00036dc8:	movefm	[0x11d0a2c8], obj
000021:0x00036dd8:	ncall	IsInherited([0x11d0a2c8], _T(PlayerBase))
000021:0x00036de0:	cmpi	ret, _i0
000021:0x00036df0:	beq	0x036e70
000023:0x00036df8:	movem	obj_player, obj
000025:0x00036e08:	ncalli	PlayerBase.GetLifeState()
000025:0x00036e10:	cmpi	ret, LifeStateAlive
000025:0x00036e20:	bne	0x036e68
000025:0x00036e28:	ncalli	PlayerBase.IsCaptive()
000025:0x00036e30:	cmpi	ret, _i0
000025:0x00036e40:	bne	0x036e68
000027:0x00036e48:	imove	ret, 0x000000
000027:0x00036e58:	release	obj_player
000027:0x00036e60:	rts
000027:0x00036e68:	release	obj_player
000032:0x00036e70:	movefm	[0x11d0a2c8], obj
000032:0x00036e80:	ncall	IsInherited([0x11d0a2c8], _T(TentBase))
000032:0x00036e88:	cmpi	ret, _i0
000032:0x00036e98:	bne	0x036f00
000032:0x00036ea0:	ncall	GetGame()
000032:0x00036ea8:	movefm	[0x3cd2c8c0], obj
000032:0x00036eb8:	movefm	[0x3cd2c8e0], player
000032:0x00036ec8:	ncalli	CGame.IsInventoryTreeLocked([0x3cd2c8c0], [0x3cd2c8e0])
000032:0x00036ed0:	cmpi	ret, _i0
000032:0x00036ee0:	beq	0x036f00
000034:0x00036ee8:	imove	ret, 0x000000
000034:0x00036ef8:	rts
000037:0x00036f00:	ncall	GetGame()
000037:0x00036f08:	movefm	[0x3cd2c828], obj
000037:0x00036f18:	movefm	[0x3cd2c848], player
000037:0x00036f28:	ncalli	CGame.IsObjectAccesible([0x3cd2c828], [0x3cd2c848])
000037:0x00036f30:	cmpi	ret, _i0
000037:0x00036f40:	bne	0x036f60
000039:0x00036f48:	imove	ret, 0x000000
000039:0x00036f58:	rts
000042:0x00036f60:	imove	ret, 0x000001
000042:0x00036f70:	rts
000042:0x00036f78:	rts
InventoryContainer::InventoryContainer()
000062:0x00037060:	move	m_isOwnedByPlayer, ownedByPlayer
000063:0x00037070:	move	m_isContentGrid, isContentGrid
000064:0x00037080:	call	InventoryContainer.CreateLayout(parent)
000064:0x00037090:	movem	m_root, ret
000065:0x000370a0:	movefm	[0x11cf2b58], m_root
000065:0x000370b0:	icall	Widget.GetScript(m_spacer)
000066:0x000370b8:	movefm	[0x11cf2b58], m_root
000066:0x000370c8:	ncalli	Widget.FindAnyWidget(_s'ContentList')
000066:0x000370d0:	movetm	m_contentList, ret
000067:0x000370e0:	movefm	[0x11cf2b58], m_root
000067:0x000370f0:	ncalli	Widget.FindAnyWidget(_s'ContentGrid')
000067:0x000370f8:	movetm	m_contentGrid, ret
000068:0x00037108:	movefm	[0x11cf2b58], m_root
000068:0x00037118:	ncalli	Widget.FindAnyWidget(_s'ButtonFrame')
000068:0x00037120:	movetm	m_button, ret
000069:0x00037130:	movefm	[0x11cf2b58], m_root
000069:0x00037140:	ncalli	Widget.FindAnyWidget(_s'Header')
000069:0x00037148:	movetm	m_header, ret
000070:0x00037158:	movefm	[0x11cf2b58], m_root
000070:0x00037168:	ncalli	Widget.FindAnyWidget(_s'HeaderBar')
000070:0x00037170:	movetm	m_header_bar, ret
000071:0x00037180:	movefm	[0x11cf2b58], m_root
000071:0x00037190:	ncalli	Widget.FindAnyWidget(_s'MinimizeWidget')
000071:0x00037198:	movetm	m_minimize_widget, ret
000072:0x000371a8:	movefm	[0x11cf2b58], m_root
000072:0x000371b8:	ncalli	Widget.FindAnyWidget(_s'MaximizeWidget')
000072:0x000371c0:	movetm	m_maximize_widget, ret
000074:0x000371d0:	cmpcm	m_contentGrid, NULL
000074:0x000371e0:	beq	0x037200
000074:0x000371e8:	movefm	[0x11cf2b58], m_contentGrid
000074:0x000371f8:	ncalli	Widget.Show(false)
000075:0x00037200:	cmpcm	m_button, NULL
000075:0x00037210:	beq	0x037240
000075:0x00037218:	movec	[0x11d0f728], this
000075:0x00037228:	movefm	[0x11cf2b58], m_button
000075:0x00037238:	ncalli	Widget.SetHandler([0x11d0f728])
000076:0x00037240:	cmpcm	m_header, NULL
000076:0x00037250:	beq	0x037280
000076:0x00037258:	movec	[0x11d0f728], this
000076:0x00037268:	movefm	[0x11d09418], m_header
000076:0x00037278:	ncalli	TextWidget.SetHandler([0x11d0f728])
000077:0x00037280:	cmpcm	m_header_bar, NULL
000077:0x00037290:	beq	0x0372c0
000077:0x00037298:	movec	[0x11d0f728], this
000077:0x000372a8:	movefm	[0x11cf2b58], m_header_bar
000077:0x000372b8:	ncalli	Widget.SetHandler([0x11d0f728])
000078:0x000372c0:	cmpcm	m_minimize_widget, NULL
000078:0x000372d0:	beq	0x037300
000078:0x000372d8:	movec	[0x11d0f728], this
000078:0x000372e8:	movefm	[0x11cf2b58], m_minimize_widget
000078:0x000372f8:	ncalli	Widget.SetHandler([0x11d0f728])
000079:0x00037300:	cmpcm	m_maximize_widget, NULL
000079:0x00037310:	beq	0x037340
000079:0x00037318:	movec	[0x11d0f728], this
000079:0x00037328:	movefm	[0x11cf2b58], m_maximize_widget
000079:0x00037338:	ncalli	Widget.SetHandler([0x11d0f728])
000081:0x00037340:	cmpcm	m_spacer, NULL
000081:0x00037350:	beq	0x037370
000081:0x00037358:	movefm	[0x3cd18378], m_spacer
000081:0x00037368:	call	AutoHeightSpacer.Update()
000083:0x00037370:	cmpcm	m_minimize_widget, NULL
000083:0x00037380:	beq	0x0373a0
000083:0x00037388:	movefm	[0x11cf2b58], m_minimize_widget
000083:0x00037398:	ncalli	Widget.Show(false)
000084:0x000373a0:	cmpcm	m_maximize_widget, NULL
000084:0x000373b0:	beq	0x0373d0
000084:0x000373b8:	movefm	[0x11cf2b58], m_maximize_widget
000084:0x000373c8:	ncalli	Widget.Show(false)
000086:0x000373d0:	call	InventoryContainer.IsHistoryExpanded()
000086:0x000373d8:	cmpi	ret, _i0
000086:0x000373e8:	bne	0x037450
000086:0x000373f0:	movefm	[0x11cf2b58], m_contentList
000086:0x00037400:	ncalli	Widget.IsVisible()
000086:0x00037408:	cmpi	ret, _i0
000086:0x00037418:	bne	0x037450
000086:0x00037420:	movefm	[0x11cf2b58], m_contentGrid
000086:0x00037430:	ncalli	Widget.IsVisible()
000086:0x00037438:	cmpi	ret, _i0
000086:0x00037448:	beq	0x037518
000088:0x00037450:	cmpcm	m_minimize_widget, NULL
000088:0x00037460:	beq	0x037498
000090:0x00037468:	movefm	[0x11cf2b58], m_minimize_widget
000090:0x00037478:	ncalli	Widget.Show(true)
000091:0x00037480:	movefm	[0x11cf2b58], m_maximize_widget
000091:0x00037490:	ncalli	Widget.Show(false)
000093:0x00037498:	cmpcm	m_contentList, NULL
000093:0x000374a8:	beq	0x0374c8
000093:0x000374b0:	movefm	[0x11cf2b58], m_contentList
000093:0x000374c0:	ncalli	Widget.Show(true)
000094:0x000374c8:	cmpi	m_isContentGrid, _i0
000094:0x000374d8:	beq	0x037510
000096:0x000374e0:	cmpcm	m_contentGrid, NULL
000096:0x000374f0:	beq	0x037510
000096:0x000374f8:	movefm	[0x11cf2b58], m_contentGrid
000096:0x00037508:	ncalli	Widget.Show(true)
000096:0x00037510:	jump	0x0375c0
000101:0x00037518:	cmpcm	m_minimize_widget, NULL
000101:0x00037528:	beq	0x037560
000103:0x00037530:	movefm	[0x11cf2b58], m_minimize_widget
000103:0x00037540:	ncalli	Widget.Show(false)
000104:0x00037548:	movefm	[0x11cf2b58], m_maximize_widget
000104:0x00037558:	ncalli	Widget.Show(true)
000106:0x00037560:	cmpcm	m_contentList, NULL
000106:0x00037570:	beq	0x037590
000106:0x00037578:	movefm	[0x11cf2b58], m_contentList
000106:0x00037588:	ncalli	Widget.Show(false)
000107:0x00037590:	cmpcm	m_contentGrid, NULL
000107:0x000375a0:	beq	0x0375c0
000107:0x000375a8:	movefm	[0x11cf2b58], m_contentGrid
000107:0x000375b8:	ncalli	Widget.Show(false)
000107:0x000375c0:	rts
InventoryContainer::~InventoryContainer()
000113:0x000375c8:	call	InventoryContainer.SaveHistory()
000114:0x000375d0:	movefm	[0x11cf2b58], m_root
000114:0x000375e0:	ncalli	Widget.Destroy()
000114:0x000375e8:	rts
InventoryContainer::CreateLayout()
000119:0x00037630:	cmpi	m_isOwnedByPlayer, _i0
000119:0x00037640:	beq	0x037690
000121:0x00037648:	ncall	GetGame()
000121:0x00037650:	ncalli	CGame.GetWorkspace()
000121:0x00037658:	movefm	[0x11d18388], parent
000121:0x00037668:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryContainerRight.layout', [0x11d18388])
000121:0x00037670:	movetm	ret, ret
000121:0x00037680:	rts
000121:0x00037688:	jump	0x0376d0
000125:0x00037690:	ncall	GetGame()
000125:0x00037698:	ncalli	CGame.GetWorkspace()
000125:0x000376a0:	movefm	[0x11d18388], parent
000125:0x000376b0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryContainer.layout', [0x11d18388])
000125:0x000376b8:	movetm	ret, ret
000125:0x000376c8:	rts
000125:0x000376d0:	rts
InventoryContainer::IsOwnedByPlayer()
000130:0x000376d8:	move	ret, m_isOwnedByPlayer
000130:0x000376e8:	rts
000130:0x000376f0:	rts
InventoryContainer::isContentGrid()
000135:0x000376f8:	move	ret, m_isContentGrid
000135:0x00037708:	rts
000135:0x00037710:	rts
InventoryContainer::GetRootWidget()
000142:0x00037718:	movem	ret, m_root
000142:0x00037728:	rts
000142:0x00037730:	rts
InventoryContainer::GetContentListWidget()
000146:0x00037738:	movem	ret, m_contentList
000146:0x00037748:	rts
000146:0x00037750:	rts
InventoryContainer::GetContentGridWidget()
000150:0x00037758:	movem	ret, m_contentGrid
000150:0x00037768:	rts
000150:0x00037770:	rts
InventoryContainer::SetHeaderText()
000155:0x00037778:	cmpcm	m_header, NULL
000155:0x00037788:	beq	0x0377a8
000155:0x00037790:	movefm	[0x11d09418], m_header
000155:0x000377a0:	ncalli	TextWidget.SetText(text)
000155:0x000377a8:	rts
InventoryContainer::IsListView()
000160:0x000377b0:	imove	ret, 0x000000
000160:0x000377c0:	rts
000160:0x000377c8:	rts
InventoryContainer::OnItemDoubleClick()
000165:0x00037850:	icall	Print(_s'OnItemDoubleClick')
000166:0x00037858:	call	GetInstance()
000166:0x00037860:	movec	manager, ret
000167:0x00037870:	ncall	GetGame()
000167:0x00037878:	ncalli	CGame.GetPlayer()
000167:0x00037880:	movetm	player, ret
000169:0x00037890:	cmpi	m_isOwnedByPlayer, _i0
000169:0x000378a0:	beq	0x0378c0
000171:0x000378a8:	call	InventoryManager.TakeToHands(item)
000171:0x000378b8:	jump	0x037938
000175:0x000378c0:	movem	item, item
000175:0x000378d0:	call	Man.CanTakeEntityAsOwned(item)
000175:0x000378e0:	cmpi	ret, _i0
000175:0x000378f0:	beq	0x037938
000175:0x000378f8:	ncalli	InventoryItem.CanRemoveEntity()
000175:0x00037900:	cmpi	ret, _i0
000175:0x00037910:	beq	0x037938
000177:0x00037918:	movem	item, item
000177:0x00037928:	call	Man.TakeEntityAsOwned(item)
000180:0x00037938:	ncall	GetGame()
000180:0x00037940:	ncalli	CGame.GetUIManager()
000180:0x00037948:	call	UIManager.FindMenu(MENU_INVENTORY)
000180:0x00037958:	movem	menu, ret
000181:0x00037968:	cmpcm	menu, NULL
000181:0x00037978:	beq	0x037988
000183:0x00037980:	call	InventoryMenu.RefreshQuickbar()
000183:0x00037988:	release	player
000183:0x00037990:	release	menu
000183:0x00037998:	rts
InventoryContainer::OnMouseButtonDown()
000189:0x00037a10:	cmpm	w, m_header_bar
000189:0x00037a20:	beq	0x037a70
000189:0x00037a28:	cmpm	w, m_header
000189:0x00037a38:	beq	0x037a70
000189:0x00037a40:	cmpm	w, m_minimize_widget
000189:0x00037a50:	beq	0x037a70
000189:0x00037a58:	cmpm	w, m_maximize_widget
000189:0x00037a68:	bne	0x037be0
000191:0x00037a70:	movefm	[0x11cf2b58], m_contentList
000191:0x00037a80:	ncalli	Widget.IsVisible()
000191:0x00037a88:	cmpi	ret, _i0
000191:0x00037a98:	bne	0x037ad0
000191:0x00037aa0:	movefm	[0x11cf2b58], m_contentGrid
000191:0x00037ab0:	ncalli	Widget.IsVisible()
000191:0x00037ab8:	cmpi	ret, _i0
000191:0x00037ac8:	beq	0x037b38
000193:0x00037ad0:	movefm	[0x11cf2b58], m_contentList
000193:0x00037ae0:	ncalli	Widget.Show(false)
000194:0x00037ae8:	movefm	[0x11cf2b58], m_contentGrid
000194:0x00037af8:	ncalli	Widget.Show(false)
000195:0x00037b00:	movefm	[0x11cf2b58], m_minimize_widget
000195:0x00037b10:	ncalli	Widget.Show(false)
000196:0x00037b18:	movefm	[0x11cf2b58], m_maximize_widget
000196:0x00037b28:	ncalli	Widget.Show(true)
000196:0x00037b30:	jump	0x037bb0
000200:0x00037b38:	movefm	[0x11cf2b58], m_contentList
000200:0x00037b48:	ncalli	Widget.Show(true)
000201:0x00037b50:	cmpi	m_isContentGrid, _i0
000201:0x00037b60:	beq	0x037b80
000203:0x00037b68:	movefm	[0x11cf2b58], m_contentGrid
000203:0x00037b78:	ncalli	Widget.Show(true)
000206:0x00037b80:	movefm	[0x11cf2b58], m_minimize_widget
000206:0x00037b90:	ncalli	Widget.Show(true)
000207:0x00037b98:	movefm	[0x11cf2b58], m_maximize_widget
000207:0x00037ba8:	ncalli	Widget.Show(false)
000209:0x00037bb0:	movem	container_root, m_root
000211:0x00037bc0:	icall	Widget.GetScript(spacer)
000212:0x00037bc8:	call	AutoHeightSpacer.Update()
000212:0x00037bd0:	release	container_root
000212:0x00037bd8:	release	spacer
000214:0x00037be0:	imove	ret, 0x000001
000214:0x00037bf0:	rts
000214:0x00037bf8:	rts
InventoryContainerEntity::InventoryContainerEntity()
//scripts/5_Mission/GUI/Inventory/InventoryContainer/InventoryContainerEntity.c
000012:0x00037c00:	new	@c00, map<EntityAI,InventoryViewBase>
000012:0x00037c20:	movetm	m_views, @c00
000013:0x00037c30:	new	@c00, map<EntityAI,InventoryViewBase>
000013:0x00037c50:	movetm	m_view_grids, @c00
000014:0x00037c60:	movetm	init, NULL
000014:0x00037c70:	new	@c00, Link<EntityAI>
000014:0x00037c98:	movec	m_entity, @c00
000015:0x00037ca8:	new	@c00, array<EntityAI>
000015:0x00037cc8:	movetm	m_entities, @c00
000016:0x00037cd8:	new	@c00, map<int,Widget>
000016:0x00037cf8:	movetm	m_inventory_slots, @c00
000016:0x00037d08:	rts
InventoryContainerEntity::~InventoryContainerEntity()
000022:0x00037d50:	movefm	[0x7042598], m_views
000022:0x00037d60:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000022:0x00037d68:	move	c, ret
000023:0x00037d78:	imove	i, 0x000000
000023:0x00037d88:	jump	0x037d98
000023:0x00037d90:	inc	i
000023:0x00037d98:	cmpi	i, c
000023:0x00037da8:	bge	0x037dd8
000025:0x00037db0:	movefm	[0x7042598], m_views
000025:0x00037dc0:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000025:0x00037dc8:	delete	ret
000025:0x00037dd0:	jump	0x037d90
000027:0x00037dd8:	cmpcm	m_cargo_view, NULL
000027:0x00037de8:	beq	0x037df8
000029:0x00037df0:	delete	m_cargo_view
000029:0x00037df8:	rts
InventoryContainerEntity::Init()
000035:0x00038150:	delete	m_entity
000036:0x00038158:	new	@c00, Link<EntityAI>
000036:0x00038180:	movec	m_entity, @c00
000037:0x00038190:	ncalli	EntityAI.GetCargo()
000037:0x00038198:	cmpc	ret, NULL
000037:0x000381a8:	beq	0x038210
000039:0x000381b0:	movetm	container, this
000039:0x000381c0:	new	@c00, InventoryView
000039:0x000381e8:	movetm	m_cargo_view, @c00
000040:0x000381f8:	movefm	[0x70345b0], m_cargo_view
000040:0x00038208:	call	InventoryViewBase.CreateLayout()
000043:0x00038210:	call	GetDayZGame()
000043:0x00038218:	call	DayZGame.IsNewInventory()
000043:0x00038220:	cmpi	ret, _i0
000043:0x00038230:	beq	0x0384b0
000046:0x00038238:	adds	config_path_ghosts_icons, _s'CfgVehicles SurvivorBase', _s' InventoryEquipment playerItemsIcons'
000047:0x00038248:	adds	config_path_ghosts_slots, _s'CfgVehicles SurvivorBase', _s' InventoryEquipment playerItemsSlots'
000048:0x00038258:	new	@c00, array<string>
000048:0x00038278:	movetm	player_ghosts_icons, @c00
000049:0x00038288:	new	@c00, array<int>
000049:0x000382a8:	movetm	player_ghosts_slots, @c00
000050:0x000382b8:	ncall	GetGame()
000050:0x000382c0:	movefm	[0x3cd2baa8], player_ghosts_icons
000050:0x000382d0:	ncalli	CGame.ConfigGetTextArray(config_path_ghosts_icons, [0x3cd2baa8])
000051:0x000382d8:	ncall	GetGame()
000051:0x000382e0:	movefm	[0x3cd2bb28], player_ghosts_slots
000051:0x000382f0:	ncalli	CGame.ConfigGetIntArray(config_path_ghosts_slots, [0x3cd2bb28])
000054:0x000382f8:	call	GetInstance()
000054:0x00038300:	movec	manager, ret
000055:0x00038310:	imove	i, 0x000000
000055:0x00038320:	jump	0x038330
000055:0x00038328:	inc	i
000055:0x00038330:	ncalli	array<string>.Count()
000055:0x00038338:	cmpi	i, ret
000055:0x00038348:	bge	0x0384a0
000057:0x00038350:	icall	array<int>.Get(i)
000057:0x00038358:	move	slot_id, ret
000058:0x00038368:	ncall	GetGame()
000058:0x00038370:	ncalli	CGame.GetWorkspace()
000058:0x00038378:	call	InventoryContainerEntity.GetContentGridWidget()
000058:0x00038380:	movefm	[0x11d18388], ret
000058:0x00038390:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGhost.layout', [0x11d18388])
000058:0x00038398:	movetm	ghost_widget, ret
000059:0x000383a8:	call	InventoryManager.GetAttachmentItemSize()
000059:0x000383b0:	push	ret
000059:0x000383b8:	call	InventoryManager.GetAttachmentItemSize()
000059:0x000383c0:	move	@f02, ret
000059:0x000383d0:	pop	ret
000059:0x000383d8:	ncalli	Widget.SetSize(ret, @f02, _i1)
000060:0x000383e8:	icall	array<string>.Get(i)
000060:0x000383f0:	moves	icon_name, ret
000061:0x00038400:	ncalli	Widget.FindAnyWidget(_s'GhostIcon')
000061:0x00038408:	movetm	ghost_icon, ret
000062:0x00038418:	cmpcm	ghost_icon, NULL
000062:0x00038428:	beq	0x038460
000064:0x00038430:	adds	@s01, _s'set:dayz_inventory image:', icon_name
000064:0x00038440:	moves	@s00, @s01
000064:0x00038450:	ncalli	ImageWidget.LoadImageFile(_i0, @s00, _i0)
000066:0x00038460:	movefm	@c00, ghost_widget
000066:0x00038470:	movefm	[0x703ac40], m_inventory_slots
000066:0x00038480:	icall	map<int,Widget>.Set(slot_id, @c00)
000066:0x00038488:	release	ghost_widget
000066:0x00038490:	release	ghost_icon
000066:0x00038498:	jump	0x038328
000066:0x000384a0:	delete	player_ghosts_icons
000066:0x000384a8:	delete	player_ghosts_slots
000066:0x000384b0:	rts
InventoryContainerEntity::ToggleExpandView()
000073:0x000384f8:	movefm	@c01, entity
000073:0x00038508:	movefm	[0x7042598], m_views
000073:0x00038518:	icall	map<EntityAI,InventoryViewBase>.Get(@c01)
000073:0x00038520:	movetm	view, ret
000074:0x00038530:	cmpcm	view, NULL
000074:0x00038540:	beq	0x0385c0
000076:0x00038548:	call	InventoryViewBase.GetRootWidget()
000076:0x00038550:	movem	root_widget, ret
000077:0x00038560:	cmpcm	root_widget, NULL
000077:0x00038570:	beq	0x0385b8
000079:0x00038578:	ncalli	Widget.IsVisible()
000079:0x00038580:	cmpi	ret, _i0
000079:0x00038590:	beq	0x0385a8
000081:0x00038598:	ncalli	Widget.Show(false)
000081:0x000385a0:	jump	0x0385b0
000085:0x000385a8:	ncalli	Widget.Show(true)
000087:0x000385b0:	call	InventoryContainerEntity.UpdateItems()
000087:0x000385b8:	release	root_widget
000087:0x000385c0:	release	view
000087:0x000385c8:	rts
Param2<EntityAI,Widget>::Param2()
//scripts/1_CoreExt/param.c
000048:0x00038a20:	movem	param1, p1
000049:0x00038a30:	movem	param2, p2
000049:0x00038a40:	rts
array<Param2<EntityAI,Widget>>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x00038de8:	imove	i, 0x000000
000341:0x00038df8:	jump	0x038e08
000341:0x00038e00:	inc	i
000341:0x00038e08:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000341:0x00038e10:	cmpi	i, ret
000341:0x00038e20:	bge	0x038e40
000343:0x00038e28:	icall	array<Param2<EntityAI,Widget>>.Get(i)
000343:0x00038e30:	icall	array<Param2<EntityAI,Widget>>.Insert(ret)
000343:0x00038e38:	jump	0x038e00
000343:0x00038e40:	rts
array<Param2<EntityAI,Widget>>::RemoveItem()
000366:0x00038e68:	icall	array<Param2<EntityAI,Widget>>.Find(value)
000366:0x00038e70:	move	remove_index, ret
000368:0x00038e80:	cmpi	remove_index, _i0
000368:0x00038e90:	blt	0x038ea0
000370:0x00038e98:	ncalli	array<Param2<EntityAI,Widget>>.Remove(remove_index)
000370:0x00038ea0:	rts
array<Param2<EntityAI,Widget>>::Debug()
000387:0x00038ee8:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000387:0x00038ef0:	icall	ToString(ret)
000387:0x00038ef8:	adds	@s01, _s'Array count: ', ret
000387:0x00038f08:	moves	@s00, @s01
000387:0x00038f18:	call	PrintString(@s00)
000388:0x00038f28:	imove	i, 0x000000
000388:0x00038f38:	jump	0x038f48
000388:0x00038f40:	inc	i
000388:0x00038f48:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000388:0x00038f50:	cmpi	i, ret
000388:0x00038f60:	bge	0x039028
000390:0x00038f68:	icall	array<Param2<EntityAI,Widget>>.Get(i)
000390:0x00038f70:	movec	item, ret
000392:0x00038f80:	cmpc	item, NULL
000392:0x00038f90:	beq	0x039020
000394:0x00038f98:	icall	ToString(i)
000394:0x00038fa0:	adds	@s03, _s'[', ret
000394:0x00038fb0:	moves	@s02, @s03
000394:0x00038fc0:	adds	@s02, @s02, _s'] => '
000394:0x00038fd0:	moves	@s01, @s02
000394:0x00038fe0:	icall	ToString(item, _i0, _i0)
000394:0x00038ff0:	adds	@s01, @s01, ret
000394:0x00039000:	moves	@s00, @s01
000394:0x00039010:	call	PrintString(@s00)
000394:0x00039020:	jump	0x038f40
000394:0x00039028:	rts
array<Param2<EntityAI,Widget>>::GetRandomIndex()
000411:0x00039030:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000411:0x00039038:	cmpi	ret, _i0
000411:0x00039048:	ble	0x039078
000413:0x00039050:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000413:0x00039058:	ncall	RandomInt(_i0, ret)
000413:0x00039060:	move	ret, ret
000413:0x00039070:	rts
000416:0x00039078:	imove	ret, 0xffffffff
000416:0x00039088:	rts
000416:0x00039090:	rts
array<Param2<EntityAI,Widget>>::GetRandomElement()
000430:0x00039098:	call	array<Param2<EntityAI,Widget>>.GetRandomIndex()
000430:0x000390a0:	icall	array<Param2<EntityAI,Widget>>.Get(ret)
000430:0x000390a8:	movec	ret, ret
000430:0x000390b8:	rts
000430:0x000390c0:	rts
array<Param2<EntityAI,Widget>>::SwapItems()
000435:0x000390e8:	icall	array<Param2<EntityAI,Widget>>.Get(item1_index)
000435:0x000390f0:	movec	item1, ret
000436:0x00039100:	icall	array<Param2<EntityAI,Widget>>.Get(item2_index)
000436:0x00039108:	icall	array<Param2<EntityAI,Widget>>.Set(item1_index, ret)
000437:0x00039110:	icall	array<Param2<EntityAI,Widget>>.Set(item2_index, item1)
000437:0x00039118:	rts
InventoryContainerEntity::UpdateItemsNewInventory()
//scripts/5_Mission/GUI/Inventory/InventoryContainer/InventoryContainerEntity.c
000102:0x00039378:	imove	change, 0x000000
000103:0x00039388:	imove	added_item, 0x000000
000106:0x00039398:	call	GetInstance()
000106:0x000393a0:	movec	manager, ret
000109:0x000393b0:	movec	[0x45f9f240], m_entity
000109:0x000393c0:	call	Link<EntityAI>.Ptr()
000109:0x000393c8:	ncalli	EntityAI.AttachmentsCount()
000109:0x000393d0:	move	c, ret
000111:0x000393e0:	imove	i, 0x000000
000111:0x000393f0:	jump	0x039400
000111:0x000393f8:	inc	i
000111:0x00039400:	cmpi	i, c
000111:0x00039410:	bge	0x039738
000113:0x00039418:	movec	[0x45f9f240], m_entity
000113:0x00039428:	call	Link<EntityAI>.Ptr()
000113:0x00039430:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000113:0x00039438:	movetm	entity, ret
000114:0x00039448:	cmpcm	entity, NULL
000114:0x00039458:	beq	0x039730
000114:0x00039460:	call	EntityAI.IsInventoryItem()
000114:0x00039468:	cmpi	ret, _i0
000114:0x00039478:	beq	0x039730
000116:0x00039480:	movefm	@c00, entity
000116:0x00039490:	movefm	[0x7042598], m_view_grids
000116:0x000394a0:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000116:0x000394a8:	cmpi	ret, false
000116:0x000394b8:	bne	0x039708
000118:0x000394c0:	ncalli	EntityAI.GetSlotId()
000118:0x000394c8:	move	attachment_slot_id, ret
000119:0x000394d8:	movefm	[0x703ac40], m_inventory_slots
000119:0x000394e8:	icall	map<int,Widget>.Contains(attachment_slot_id)
000119:0x000394f0:	move	is_valid_slot, ret
000120:0x00039500:	cmpi	is_valid_slot, _i0
000120:0x00039510:	beq	0x039708
000122:0x00039518:	movetm	container, this
000122:0x00039528:	new	@c00, InventoryViewGrid
000122:0x00039550:	movetm	view, @c00
000123:0x00039560:	imove	added_item, 0x000001
000125:0x00039570:	movefm	[0x703ac40], m_inventory_slots
000125:0x00039580:	icall	map<int,Widget>.Get(attachment_slot_id)
000125:0x00039588:	ncalli	Widget.Show(false)
000126:0x00039590:	call	InventoryViewBase.CreateLayout()
000127:0x00039598:	movefm	@c00, entity
000127:0x000395a8:	movefm	@c01, view
000127:0x000395b8:	movefm	[0x7042598], m_view_grids
000127:0x000395c8:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000135:0x000395d0:	ncalli	EntityAI.GetCargo()
000135:0x000395d8:	cmpc	ret, NULL
000135:0x000395e8:	beq	0x039708
000137:0x000395f0:	call	InventoryViewBase.GetContainerIcon()
000137:0x000395f8:	movem	container_icon, ret
000138:0x00039608:	ncalli	Widget.FindAnyWidget(_s'ExpandIcon')
000138:0x00039610:	movetm	expand_icon, ret
000139:0x00039620:	cmpcm	expand_icon, NULL
000139:0x00039630:	beq	0x039640
000141:0x00039638:	ncalli	ImageWidget.Show(true)
000144:0x00039640:	movetm	container, this
000144:0x00039650:	imove	@m01, 0x000003
000144:0x00039660:	move	@m00, @m01
000144:0x00039670:	new	@c00, InventoryView
000144:0x00039698:	movetm	view, @c00
000145:0x000396a8:	call	InventoryViewBase.CreateLayout()
000146:0x000396b0:	movefm	@c00, entity
000146:0x000396c0:	movefm	@c01, view
000146:0x000396d0:	movefm	[0x7042598], m_views
000146:0x000396e0:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000147:0x000396e8:	call	InventoryViewBase.GetRootWidget()
000147:0x000396f0:	ncalli	Widget.Show(false)
000147:0x000396f8:	release	container_icon
000147:0x00039700:	release	expand_icon
000152:0x00039708:	movefm	@c00, entity
000152:0x00039718:	movefm	[0x3cd28b78], m_entities
000152:0x00039728:	icall	array<EntityAI>.Insert(@c00)
000152:0x00039730:	jump	0x0393f8
000158:0x00039738:	movefm	[0x7042598], m_view_grids
000158:0x00039748:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000158:0x00039750:	move	c, ret
000159:0x00039760:	imove	i, 0x000000
000159:0x00039770:	jump	0x039780
000159:0x00039778:	inc	i
000159:0x00039780:	cmpi	i, c
000159:0x00039790:	bge	0x039860
000161:0x00039798:	movefm	[0x7042598], m_view_grids
000161:0x000397a8:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000161:0x000397b0:	movetm	entity, ret
000162:0x000397c0:	movefm	@c00, entity
000162:0x000397d0:	movefm	[0x3cd28b78], m_entities
000162:0x000397e0:	icall	array<EntityAI>.Find(@c00)
000162:0x000397e8:	cmpi	ret, INDEX_NOT_FOUND
000162:0x000397f8:	bne	0x039858
000164:0x00039800:	movefm	[0x7042598], m_view_grids
000164:0x00039810:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000164:0x00039818:	delete	ret
000165:0x00039820:	movefm	[0x7042598], m_view_grids
000165:0x00039830:	icall	map<EntityAI,InventoryViewBase>.RemoveElement(i)
000166:0x00039838:	dec	c
000167:0x00039840:	dec	i
000168:0x00039848:	imove	change, 0x000001
000168:0x00039858:	jump	0x039778
000175:0x00039860:	movefm	[0x7042598], m_view_grids
000175:0x00039870:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000175:0x00039878:	move	c, ret
000176:0x00039888:	imove	i, 0x000000
000176:0x00039898:	jump	0x0398a8
000176:0x000398a0:	inc	i
000176:0x000398a8:	cmpi	i, c
000176:0x000398b8:	bge	0x0398e8
000178:0x000398c0:	movefm	[0x7042598], m_view_grids
000178:0x000398d0:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000178:0x000398d8:	call	InventoryViewBase.UpdateItems()
000178:0x000398e0:	jump	0x0398a0
000184:0x000398e8:	cmpi	added_item, _i0
000184:0x000398f8:	bne	0x039918
000184:0x00039900:	cmpi	true, _i0
000184:0x00039910:	beq	0x039e18
000187:0x00039918:	new	@c00, array<EntityAI>
000187:0x00039938:	movetm	unsorted_objects, @c00
000188:0x00039948:	new	@c00, array<Param2<EntityAI,Widget>>
000188:0x00039968:	movetm	sorted_objects, @c00
000189:0x00039978:	call	InventoryManager.GetSortedKeys()
000189:0x00039980:	movem	sorted_keys, ret
000192:0x00039990:	movefm	[0x7042598], m_view_grids
000192:0x000399a0:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000192:0x000399a8:	move	c, ret
000193:0x000399b8:	imove	i, 0x000000
000193:0x000399c8:	jump	0x0399d8
000193:0x000399d0:	inc	i
000193:0x000399d8:	cmpi	i, c
000193:0x000399e8:	bge	0x039a18
000195:0x000399f0:	movefm	[0x7042598], m_view_grids
000195:0x00039a00:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000195:0x00039a08:	icall	array<EntityAI>.Insert(ret)
000195:0x00039a10:	jump	0x0399d0
000199:0x00039a18:	imove	i, 0x000000
000199:0x00039a28:	jump	0x039a38
000199:0x00039a30:	inc	i
000199:0x00039a38:	ncalli	array<int>.Count()
000199:0x00039a40:	cmpi	i, ret
000199:0x00039a50:	bge	0x039c80
000201:0x00039a58:	icall	array<int>.Get(i)
000201:0x00039a60:	move	sort_key, ret
000202:0x00039a70:	imove	is_found, 0x000000
000203:0x00039a80:	moves	www, _s''
000204:0x00039a90:	imove	x, 0x000000
000204:0x00039aa0:	jump	0x039ab0
000204:0x00039aa8:	inc	x
000204:0x00039ab0:	ncalli	array<EntityAI>.Count()
000204:0x00039ab8:	cmpi	x, ret
000204:0x00039ac8:	bge	0x039b90
000206:0x00039ad0:	icall	array<EntityAI>.Get(x)
000206:0x00039ad8:	movetm	entity, ret
000207:0x00039ae8:	ncalli	EntityAI.GetSlotId()
000207:0x00039af0:	move	sort_id, ret
000208:0x00039b00:	cmpi	sort_key, sort_id
000208:0x00039b10:	bne	0x039b88
000210:0x00039b18:	movetm	p2, NULL
000210:0x00039b28:	new	@c00, Param2<EntityAI,Widget>
000210:0x00039b50:	icall	array<Param2<EntityAI,Widget>>.Insert(@c00)
000211:0x00039b58:	call	EntityAI.GetName()
000211:0x00039b60:	moves	www, ret
000212:0x00039b70:	imove	is_found, 0x000001
000213:0x00039b80:	jump	0x039b90
000213:0x00039b88:	jump	0x039aa8
000217:0x00039b90:	cmpi	is_found, false
000217:0x00039ba0:	bne	0x039c78
000220:0x00039ba8:	movefm	[0x703ac40], m_inventory_slots
000220:0x00039bb8:	icall	map<int,Widget>.Contains(sort_key)
000220:0x00039bc0:	cmpi	ret, _i0
000220:0x00039bd0:	beq	0x039c78
000222:0x00039bd8:	movefm	[0x703ac40], m_inventory_slots
000222:0x00039be8:	icall	map<int,Widget>.Get(sort_key)
000222:0x00039bf0:	movetm	ghost, ret
000223:0x00039c00:	movetm	p1, NULL
000223:0x00039c10:	new	@c00, Param2<EntityAI,Widget>
000223:0x00039c38:	icall	array<Param2<EntityAI,Widget>>.Insert(@c00)
000224:0x00039c40:	ncalli	Widget.Show(true)
000225:0x00039c48:	icall	ToString(sort_key)
000225:0x00039c50:	adds	@s00, _s'GHOST-', ret
000225:0x00039c60:	moves	www, @s00
000225:0x00039c70:	release	ghost
000225:0x00039c78:	jump	0x039a30
000239:0x00039c80:	ncalli	array<Param2<EntityAI,Widget>>.Count()
000239:0x00039c88:	move	c, ret
000240:0x00039c98:	imove	i, 0x000000
000240:0x00039ca8:	jump	0x039cb8
000240:0x00039cb0:	inc	i
000240:0x00039cb8:	cmpi	i, c
000240:0x00039cc8:	bge	0x039de8
000242:0x00039cd0:	icall	array<Param2<EntityAI,Widget>>.Get(i)
000242:0x00039cd8:	cmpcm	param1, NULL
000242:0x00039ce8:	beq	0x039d40
000245:0x00039cf0:	icall	array<Param2<EntityAI,Widget>>.Get(i)
000245:0x00039cf8:	movem	entity, param1
000246:0x00039d08:	movefm	@c00, entity
000246:0x00039d18:	movefm	[0x7042598], m_view_grids
000246:0x00039d28:	icall	map<EntityAI,InventoryViewBase>.Get(@c00)
000246:0x00039d30:	call	InventoryViewBase.UpdateSort()
000246:0x00039d38:	jump	0x039de0
000250:0x00039d40:	icall	array<Param2<EntityAI,Widget>>.Get(i)
000250:0x00039d48:	movem	ghost_widget, param2
000251:0x00039d58:	call	InventoryContainerEntity.GetContentGridWidget()
000251:0x00039d60:	movefm	[0x11d0f508], ghost_widget
000251:0x00039d70:	ncalli	Widget.RemoveChild([0x11d0f508])
000252:0x00039d78:	call	InventoryContainerEntity.GetContentGridWidget()
000252:0x00039d80:	movefm	[0x11d0f498], ghost_widget
000252:0x00039d90:	ncalli	Widget.AddChild([0x11d0f498], _i1)
000253:0x00039d98:	call	InventoryManager.GetAttachmentItemSize()
000253:0x00039da0:	push	ret
000253:0x00039da8:	call	InventoryManager.GetAttachmentItemSize()
000253:0x00039db0:	move	@f02, ret
000253:0x00039dc0:	pop	ret
000253:0x00039dc8:	ncalli	Widget.SetSize(ret, @f02, _i1)
000253:0x00039dd8:	release	ghost_widget
000253:0x00039de0:	jump	0x039cb0
000258:0x00039de8:	movefm	[0x11cf2b58], m_contentGrid
000258:0x00039df8:	ncalli	Widget.Update()
000258:0x00039e00:	delete	unsorted_objects
000258:0x00039e08:	delete	sorted_objects
000258:0x00039e10:	release	sorted_keys
000262:0x00039e18:	cmpcm	m_cargo_view, NULL
000262:0x00039e28:	beq	0x039e48
000264:0x00039e30:	movefm	[0x70345b0], m_cargo_view
000264:0x00039e40:	call	InventoryViewBase.UpdateItems()
000264:0x00039e48:	release	entity
000264:0x00039e50:	release	view
000264:0x00039e58:	rts
InventoryContainerEntity::UpdateItems()
000270:0x0003a060:	movec	[0x45f9f240], m_entity
000270:0x0003a070:	call	Link<EntityAI>.IsNull()
000270:0x0003a078:	cmpi	ret, _i0
000270:0x0003a088:	beq	0x03a098
000270:0x0003a090:	rts
000275:0x0003a098:	imove	change, 0x000000
000276:0x0003a0a8:	imove	added_item, 0x000000
000278:0x0003a0b8:	movefm	[0x3cd28b78], m_entities
000278:0x0003a0c8:	ncalli	array<EntityAI>.Clear()
000281:0x0003a0d0:	call	GetInstance()
000281:0x0003a0d8:	movec	manager, ret
000283:0x0003a0e8:	call	GetDayZGame()
000283:0x0003a0f0:	call	DayZGame.IsNewInventory()
000283:0x0003a0f8:	cmpi	ret, _i0
000283:0x0003a108:	beq	0x03a130
000285:0x0003a110:	call	InventoryContainerEntity.UpdateItemsNewInventory()
000286:0x0003a118:	release	entity
000286:0x0003a120:	release	view
000286:0x0003a128:	rts
000292:0x0003a130:	cmpi	m_isOwnedByPlayer, _i0
000292:0x0003a140:	beq	0x03a5b0
000295:0x0003a148:	movec	[0x45f9f240], m_entity
000295:0x0003a158:	call	Link<EntityAI>.Ptr()
000295:0x0003a160:	ncalli	EntityAI.AttachmentsCount()
000295:0x0003a168:	move	c, ret
000296:0x0003a178:	imove	i, 0x000000
000296:0x0003a188:	jump	0x03a198
000296:0x0003a190:	inc	i
000296:0x0003a198:	cmpi	i, c
000296:0x0003a1a8:	bge	0x03a360
000298:0x0003a1b0:	movec	[0x45f9f240], m_entity
000298:0x0003a1c0:	call	Link<EntityAI>.Ptr()
000298:0x0003a1c8:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000298:0x0003a1d0:	movetm	entity, ret
000300:0x0003a1e0:	cmpcm	entity, NULL
000300:0x0003a1f0:	beq	0x03a358
000300:0x0003a1f8:	call	EntityAI.IsInventoryItem()
000300:0x0003a200:	cmpi	ret, _i0
000300:0x0003a210:	beq	0x03a358
000300:0x0003a218:	ncalli	EntityAI.GetCargo()
000300:0x0003a220:	cmpc	ret, NULL
000300:0x0003a230:	beq	0x03a358
000302:0x0003a238:	movefm	@c00, entity
000302:0x0003a248:	movefm	[0x7042598], m_views
000302:0x0003a258:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000302:0x0003a260:	cmpi	ret, false
000302:0x0003a270:	bne	0x03a330
000304:0x0003a278:	movetm	container, this
000304:0x0003a288:	imove	@m01, 0x000003
000304:0x0003a298:	move	@m00, @m01
000304:0x0003a2a8:	new	@c00, InventoryView
000304:0x0003a2d0:	movetm	view, @c00
000305:0x0003a2e0:	imove	added_item, 0x000001
000306:0x0003a2f0:	call	InventoryViewBase.CreateLayout()
000307:0x0003a2f8:	movefm	@c00, entity
000307:0x0003a308:	movefm	@c01, view
000307:0x0003a318:	movefm	[0x7042598], m_views
000307:0x0003a328:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000309:0x0003a330:	movefm	@c00, entity
000309:0x0003a340:	movefm	[0x3cd28b78], m_entities
000309:0x0003a350:	icall	array<EntityAI>.Insert(@c00)
000309:0x0003a358:	jump	0x03a190
000314:0x0003a360:	movec	[0x45f9f240], m_entity
000314:0x0003a370:	call	Link<EntityAI>.Ptr()
000314:0x0003a378:	ncalli	EntityAI.GetCargo()
000314:0x0003a380:	cmpc	ret, NULL
000314:0x0003a390:	beq	0x03a5b0
000316:0x0003a398:	movec	[0x45f9f240], m_entity
000316:0x0003a3a8:	call	Link<EntityAI>.Ptr()
000316:0x0003a3b0:	ncalli	EntityAI.GetCargo()
000316:0x0003a3b8:	movec	cargo, ret
000317:0x0003a3c8:	ncalli	Cargo.GetItemCount()
000317:0x0003a3d0:	move	c, ret
000319:0x0003a3e0:	imove	i, 0x000000
000319:0x0003a3f0:	jump	0x03a400
000319:0x0003a3f8:	inc	i
000319:0x0003a400:	cmpi	i, c
000319:0x0003a410:	bge	0x03a5b0
000321:0x0003a418:	ncalli	Cargo.GetItem(i)
000321:0x0003a420:	movetm	entity, ret
000323:0x0003a430:	cmpcm	entity, NULL
000323:0x0003a440:	beq	0x03a5a8
000323:0x0003a448:	call	EntityAI.IsInventoryItem()
000323:0x0003a450:	cmpi	ret, _i0
000323:0x0003a460:	beq	0x03a5a8
000323:0x0003a468:	ncalli	EntityAI.GetCargo()
000323:0x0003a470:	cmpc	ret, NULL
000323:0x0003a480:	beq	0x03a5a8
000325:0x0003a488:	movefm	@c00, entity
000325:0x0003a498:	movefm	[0x7042598], m_views
000325:0x0003a4a8:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000325:0x0003a4b0:	cmpi	ret, false
000325:0x0003a4c0:	bne	0x03a580
000327:0x0003a4c8:	movetm	container, this
000327:0x0003a4d8:	imove	@m01, 0x000003
000327:0x0003a4e8:	move	@m00, @m01
000327:0x0003a4f8:	new	@c00, InventoryView
000327:0x0003a520:	movetm	view, @c00
000328:0x0003a530:	imove	added_item, 0x000001
000329:0x0003a540:	call	InventoryViewBase.CreateLayout()
000330:0x0003a548:	movefm	@c00, entity
000330:0x0003a558:	movefm	@c01, view
000330:0x0003a568:	movefm	[0x7042598], m_views
000330:0x0003a578:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000332:0x0003a580:	movefm	@c00, entity
000332:0x0003a590:	movefm	[0x3cd28b78], m_entities
000332:0x0003a5a0:	icall	array<EntityAI>.Insert(@c00)
000332:0x0003a5a8:	jump	0x03a3f8
000341:0x0003a5b0:	movec	[0x45f9f240], m_entity
000341:0x0003a5c0:	call	Link<EntityAI>.Ptr()
000341:0x0003a5c8:	ncalli	EntityAI.AttachmentsCount()
000341:0x0003a5d0:	move	c, ret
000342:0x0003a5e0:	imove	i, 0x000000
000342:0x0003a5f0:	jump	0x03a600
000342:0x0003a5f8:	inc	i
000342:0x0003a600:	cmpi	i, c
000342:0x0003a610:	bge	0x03a848
000344:0x0003a618:	movec	[0x45f9f240], m_entity
000344:0x0003a628:	call	Link<EntityAI>.Ptr()
000344:0x0003a630:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000344:0x0003a638:	movetm	entity, ret
000346:0x0003a648:	cmpcm	entity, NULL
000346:0x0003a658:	beq	0x03a840
000346:0x0003a660:	call	EntityAI.IsInventoryItem()
000346:0x0003a668:	cmpi	ret, _i0
000346:0x0003a678:	beq	0x03a840
000348:0x0003a680:	movefm	@c00, entity
000348:0x0003a690:	movefm	[0x7042598], m_views
000348:0x0003a6a0:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000348:0x0003a6a8:	cmpi	ret, false
000348:0x0003a6b8:	bne	0x03a818
000350:0x0003a6c0:	ncalli	EntityAI.GetCargo()
000350:0x0003a6c8:	cmpc	ret, NULL
000350:0x0003a6d8:	bne	0x03a760
000350:0x0003a6e0:	ncalli	EntityAI.GetSlotsCount()
000350:0x0003a6e8:	cmpi	ret, _i1
000350:0x0003a6f8:	bge	0x03a760
000352:0x0003a700:	movetm	container, this
000352:0x0003a710:	new	@c00, InventoryViewGrid
000352:0x0003a738:	movetm	view, @c00
000353:0x0003a748:	imove	added_item, 0x000001
000353:0x0003a758:	jump	0x03a7d8
000357:0x0003a760:	movetm	container, this
000357:0x0003a770:	imove	@m01, 0x000003
000357:0x0003a780:	move	@m00, @m01
000357:0x0003a790:	new	@c00, InventoryView
000357:0x0003a7b8:	movetm	view, @c00
000358:0x0003a7c8:	imove	added_item, 0x000001
000360:0x0003a7d8:	call	InventoryViewBase.CreateLayout()
000361:0x0003a7e0:	movefm	@c00, entity
000361:0x0003a7f0:	movefm	@c01, view
000361:0x0003a800:	movefm	[0x7042598], m_views
000361:0x0003a810:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000363:0x0003a818:	movefm	@c00, entity
000363:0x0003a828:	movefm	[0x3cd28b78], m_entities
000363:0x0003a838:	icall	array<EntityAI>.Insert(@c00)
000363:0x0003a840:	jump	0x03a5f8
000368:0x0003a848:	movec	[0x45f9f240], m_entity
000368:0x0003a858:	call	Link<EntityAI>.Ptr()
000368:0x0003a860:	ncalli	EntityAI.GetCargo()
000368:0x0003a868:	cmpc	ret, NULL
000368:0x0003a878:	beq	0x03aa78
000370:0x0003a880:	movec	[0x45f9f240], m_entity
000370:0x0003a890:	call	Link<EntityAI>.Ptr()
000370:0x0003a898:	ncalli	EntityAI.GetCargo()
000370:0x0003a8a0:	movec	cargo, ret
000371:0x0003a8b0:	ncalli	Cargo.GetItemCount()
000371:0x0003a8b8:	move	c, ret
000373:0x0003a8c8:	imove	i, 0x000000
000373:0x0003a8d8:	jump	0x03a8e8
000373:0x0003a8e0:	inc	i
000373:0x0003a8e8:	cmpi	i, c
000373:0x0003a8f8:	bge	0x03aa78
000375:0x0003a900:	ncalli	Cargo.GetItem(i)
000375:0x0003a908:	movetm	entity, ret
000377:0x0003a918:	cmpcm	entity, NULL
000377:0x0003a928:	beq	0x03aa70
000377:0x0003a930:	call	EntityAI.IsInventoryItem()
000377:0x0003a938:	cmpi	ret, _i0
000377:0x0003a948:	beq	0x03aa70
000377:0x0003a950:	ncalli	EntityAI.GetCargo()
000377:0x0003a958:	cmpc	ret, NULL
000377:0x0003a968:	bne	0x03aa70
000379:0x0003a970:	movefm	@c00, entity
000379:0x0003a980:	movefm	[0x7042598], m_views
000379:0x0003a990:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000379:0x0003a998:	cmpi	ret, false
000379:0x0003a9a8:	bne	0x03aa48
000381:0x0003a9b0:	movetm	container, this
000381:0x0003a9c0:	new	@c00, InventoryViewGrid
000381:0x0003a9e8:	movetm	view, @c00
000382:0x0003a9f8:	imove	added_item, 0x000001
000383:0x0003aa08:	call	InventoryViewBase.CreateLayout()
000384:0x0003aa10:	movefm	@c00, entity
000384:0x0003aa20:	movefm	@c01, view
000384:0x0003aa30:	movefm	[0x7042598], m_views
000384:0x0003aa40:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000386:0x0003aa48:	movefm	@c00, entity
000386:0x0003aa58:	movefm	[0x3cd28b78], m_entities
000386:0x0003aa68:	icall	array<EntityAI>.Insert(@c00)
000386:0x0003aa70:	jump	0x03a8e0
000392:0x0003aa78:	movefm	[0x7042598], m_views
000392:0x0003aa88:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000392:0x0003aa90:	move	c, ret
000393:0x0003aaa0:	imove	i, 0x000000
000393:0x0003aab0:	jump	0x03aac0
000393:0x0003aab8:	inc	i
000393:0x0003aac0:	cmpi	i, c
000393:0x0003aad0:	bge	0x03aba0
000395:0x0003aad8:	movefm	[0x7042598], m_views
000395:0x0003aae8:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000395:0x0003aaf0:	movetm	entity, ret
000396:0x0003ab00:	movefm	@c00, entity
000396:0x0003ab10:	movefm	[0x3cd28b78], m_entities
000396:0x0003ab20:	icall	array<EntityAI>.Find(@c00)
000396:0x0003ab28:	cmpi	ret, INDEX_NOT_FOUND
000396:0x0003ab38:	bne	0x03ab98
000398:0x0003ab40:	movefm	[0x7042598], m_views
000398:0x0003ab50:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000398:0x0003ab58:	delete	ret
000399:0x0003ab60:	movefm	[0x7042598], m_views
000399:0x0003ab70:	icall	map<EntityAI,InventoryViewBase>.RemoveElement(i)
000400:0x0003ab78:	dec	c
000401:0x0003ab80:	dec	i
000402:0x0003ab88:	imove	change, 0x000001
000402:0x0003ab98:	jump	0x03aab8
000406:0x0003aba0:	cmpcm	m_empty_slot, NULL
000406:0x0003abb0:	bne	0x03ac68
000408:0x0003abb8:	ncall	GetGame()
000408:0x0003abc0:	ncalli	CGame.GetWorkspace()
000408:0x0003abc8:	movefm	[0x11d18388], m_contentGrid
000408:0x0003abd8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridItemEmpty.layout', [0x11d18388])
000408:0x0003abe0:	movetm	m_empty_slot, ret
000409:0x0003abf0:	call	InventoryManager.GetAttachmentItemSize()
000409:0x0003abf8:	push	ret
000409:0x0003ac00:	call	InventoryManager.GetAttachmentItemSize()
000409:0x0003ac08:	move	@f02, ret
000409:0x0003ac18:	pop	ret
000409:0x0003ac20:	movefm	[0x11cf2b58], m_empty_slot
000409:0x0003ac30:	ncalli	Widget.SetSize(ret, @f02, _i1)
000410:0x0003ac40:	movec	[0x11d0f728], this
000410:0x0003ac50:	movefm	[0x11cf2b58], m_empty_slot
000410:0x0003ac60:	ncalli	Widget.SetHandler([0x11d0f728])
000414:0x0003ac68:	movefm	[0x7042598], m_views
000414:0x0003ac78:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000414:0x0003ac80:	move	c, ret
000415:0x0003ac90:	imove	i, 0x000000
000415:0x0003aca0:	jump	0x03acb0
000415:0x0003aca8:	inc	i
000415:0x0003acb0:	cmpi	i, c
000415:0x0003acc0:	bge	0x03acf0
000417:0x0003acc8:	movefm	[0x7042598], m_views
000417:0x0003acd8:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000417:0x0003ace0:	call	InventoryViewBase.UpdateItems()
000417:0x0003ace8:	jump	0x03aca8
000421:0x0003acf0:	cmpi	added_item, _i0
000421:0x0003ad00:	beq	0x03b030
000423:0x0003ad08:	new	@c00, array<EntityAI>
000423:0x0003ad28:	movetm	unsorted_objects, @c00
000424:0x0003ad38:	new	@c00, array<EntityAI>
000424:0x0003ad58:	movetm	sorted_objects, @c00
000425:0x0003ad68:	call	InventoryManager.GetSortedKeys()
000425:0x0003ad70:	movem	sorted_keys, ret
000427:0x0003ad80:	movefm	[0x7042598], m_views
000427:0x0003ad90:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000427:0x0003ad98:	move	c, ret
000428:0x0003ada8:	imove	i, 0x000000
000428:0x0003adb8:	jump	0x03adc8
000428:0x0003adc0:	inc	i
000428:0x0003adc8:	cmpi	i, c
000428:0x0003add8:	bge	0x03ae08
000430:0x0003ade0:	movefm	[0x7042598], m_views
000430:0x0003adf0:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000430:0x0003adf8:	icall	array<EntityAI>.Insert(ret)
000430:0x0003ae00:	jump	0x03adc0
000433:0x0003ae08:	imove	i, 0x000000
000433:0x0003ae18:	jump	0x03ae28
000433:0x0003ae20:	inc	i
000433:0x0003ae28:	ncalli	array<int>.Count()
000433:0x0003ae30:	cmpi	i, ret
000433:0x0003ae40:	bge	0x03af20
000435:0x0003ae48:	icall	array<int>.Get(i)
000435:0x0003ae50:	move	sort_key, ret
000436:0x0003ae60:	imove	x, 0x000000
000436:0x0003ae70:	jump	0x03ae80
000436:0x0003ae78:	inc	x
000436:0x0003ae80:	ncalli	array<EntityAI>.Count()
000436:0x0003ae88:	cmpi	x, ret
000436:0x0003ae98:	bge	0x03af18
000438:0x0003aea0:	icall	array<EntityAI>.Get(x)
000438:0x0003aea8:	movetm	entity, ret
000439:0x0003aeb8:	ncalli	EntityAI.GetSlotId()
000439:0x0003aec0:	move	sort_id, ret
000440:0x0003aed0:	cmpi	sort_key, sort_id
000440:0x0003aee0:	bne	0x03af10
000442:0x0003aee8:	movefm	@c00, entity
000442:0x0003aef8:	icall	array<EntityAI>.Insert(@c00)
000443:0x0003af00:	ncalli	array<EntityAI>.Remove(x)
000444:0x0003af08:	jump	0x03af18
000444:0x0003af10:	jump	0x03ae78
000444:0x0003af18:	jump	0x03ae20
000449:0x0003af20:	imove	x, 0x000000
000449:0x0003af30:	jump	0x03af40
000449:0x0003af38:	inc	x
000449:0x0003af40:	ncalli	array<EntityAI>.Count()
000449:0x0003af48:	cmpi	x, ret
000449:0x0003af58:	bge	0x03af78
000451:0x0003af60:	icall	array<EntityAI>.Get(x)
000451:0x0003af68:	icall	array<EntityAI>.Insert(ret)
000451:0x0003af70:	jump	0x03af38
000454:0x0003af78:	ncalli	array<EntityAI>.Count()
000454:0x0003af80:	move	c, ret
000455:0x0003af90:	imove	i, 0x000000
000455:0x0003afa0:	jump	0x03afb0
000455:0x0003afa8:	inc	i
000455:0x0003afb0:	cmpi	i, c
000455:0x0003afc0:	bge	0x03b018
000457:0x0003afc8:	icall	array<EntityAI>.Get(i)
000457:0x0003afd0:	movetm	entity, ret
000458:0x0003afe0:	movefm	@c00, entity
000458:0x0003aff0:	movefm	[0x7042598], m_views
000458:0x0003b000:	icall	map<EntityAI,InventoryViewBase>.Get(@c00)
000458:0x0003b008:	call	InventoryViewBase.UpdateSort()
000458:0x0003b010:	jump	0x03afa8
000458:0x0003b018:	delete	unsorted_objects
000458:0x0003b020:	delete	sorted_objects
000458:0x0003b028:	release	sorted_keys
000462:0x0003b030:	cmpi	change, _i0
000462:0x0003b040:	beq	0x03b060
000464:0x0003b048:	movefm	[0x11cf2b58], m_contentGrid
000464:0x0003b058:	ncalli	Widget.Update()
000467:0x0003b060:	cmpcm	m_cargo_view, NULL
000467:0x0003b070:	beq	0x03b090
000469:0x0003b078:	movefm	[0x70345b0], m_cargo_view
000469:0x0003b088:	call	InventoryViewBase.UpdateItems()
000469:0x0003b090:	release	entity
000469:0x0003b098:	release	view
000469:0x0003b0a0:	rts
InventoryContainerEntity::OnDraggingOver()
000476:0x0003b118:	call	GetInstance()
000476:0x0003b120:	movec	manager, ret
000477:0x0003b130:	call	InventoryManager.GetItem()
000477:0x0003b138:	movem	dragged_item, ret
000479:0x0003b148:	movec	[0x45f9f240], m_entity
000479:0x0003b158:	call	Link<EntityAI>.IsNull()
000479:0x0003b160:	cmpi	ret, _i0
000479:0x0003b170:	bne	0x03b190
000479:0x0003b178:	cmpcm	dragged_item, NULL
000479:0x0003b188:	bne	0x03b1b0
000479:0x0003b190:	imove	ret, 0x000000
000479:0x0003b1a0:	release	dragged_item
000479:0x0003b1a8:	rts
000481:0x0003b1b0:	call	InventoryManager.IsDragging()
000481:0x0003b1b8:	cmpi	ret, false
000481:0x0003b1c8:	bne	0x03b1f0
000481:0x0003b1d0:	imove	ret, 0x000000
000481:0x0003b1e0:	release	dragged_item
000481:0x0003b1e8:	rts
000483:0x0003b1f0:	cmpcm	dragged_item, NULL
000483:0x0003b200:	beq	0x03b240
000483:0x0003b208:	ncalli	InventoryItem.CanRemoveEntity()
000483:0x0003b210:	cmpi	ret, false
000483:0x0003b220:	bne	0x03b240
000485:0x0003b228:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000485:0x0003b238:	jump	0x03b300
000487:0x0003b240:	movec	[0x45f9f240], m_entity
000487:0x0003b250:	call	Link<EntityAI>.Ptr()
000487:0x0003b258:	cmpm	dragged_item, ret
000487:0x0003b268:	bne	0x03b288
000489:0x0003b270:	call	InventoryManager.SetItemColor(ITEM_COLOR_DRAG)
000489:0x0003b280:	jump	0x03b300
000491:0x0003b288:	movec	[0x45f9f240], m_entity
000491:0x0003b298:	call	Link<EntityAI>.Ptr()
000491:0x0003b2a0:	movem	item, dragged_item
000491:0x0003b2b0:	call	EntityAI.CanTakeEntityAsOwned(item)
000491:0x0003b2c0:	cmpi	ret, _i0
000491:0x0003b2d0:	beq	0x03b2f0
000493:0x0003b2d8:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000493:0x0003b2e8:	jump	0x03b300
000497:0x0003b2f0:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000499:0x0003b300:	imove	ret, 0x000001
000499:0x0003b310:	release	dragged_item
000499:0x0003b318:	rts
000499:0x0003b320:	release	dragged_item
000499:0x0003b328:	rts
InventoryContainerEntity::OnDropReceived()
000504:0x0003b370:	movec	[0x45f9f240], m_entity
000504:0x0003b380:	call	Link<EntityAI>.IsNull()
000504:0x0003b388:	cmpi	ret, _i0
000504:0x0003b398:	beq	0x03b3b8
000504:0x0003b3a0:	imove	ret, 0x000000
000504:0x0003b3b0:	rts
000506:0x0003b3b8:	call	GetInstance()
000506:0x0003b3c0:	movec	manager, ret
000507:0x0003b3d0:	call	InventoryManager.GetItem()
000507:0x0003b3d8:	movem	dragged_item, ret
000509:0x0003b3e8:	call	InventoryManager.IsDragging()
000509:0x0003b3f0:	cmpi	ret, false
000509:0x0003b400:	beq	0x03b420
000509:0x0003b408:	cmpcm	dragged_item, NULL
000509:0x0003b418:	bne	0x03b440
000509:0x0003b420:	imove	ret, 0x000000
000509:0x0003b430:	release	dragged_item
000509:0x0003b438:	rts
000511:0x0003b440:	movec	[0x45f9f240], m_entity
000511:0x0003b450:	call	Link<EntityAI>.Ptr()
000511:0x0003b458:	cmpm	dragged_item, ret
000511:0x0003b468:	beq	0x03b4f8
000511:0x0003b470:	movec	[0x45f9f240], m_entity
000511:0x0003b480:	call	Link<EntityAI>.Ptr()
000511:0x0003b488:	movem	item, dragged_item
000511:0x0003b498:	call	EntityAI.CanTakeEntityAsOwned(item)
000511:0x0003b4a8:	cmpi	ret, _i0
000511:0x0003b4b8:	beq	0x03b4f8
000513:0x0003b4c0:	movec	[0x45f9f240], m_entity
000513:0x0003b4d0:	call	Link<EntityAI>.Ptr()
000513:0x0003b4d8:	movem	item, dragged_item
000513:0x0003b4e8:	call	EntityAI.TakeEntityAsOwned(item)
000516:0x0003b4f8:	call	InventoryManager.Drop()
000517:0x0003b500:	imove	ret, 0x000001
000517:0x0003b510:	release	dragged_item
000517:0x0003b518:	rts
000517:0x0003b520:	release	dragged_item
000517:0x0003b528:	rts
InventoryContainerHands::~InventoryContainerHands()
//scripts/5_Mission/GUI/Inventory/InventoryContainer/InventoryContainerHands.c
000011:0x0003b530:	delete	m_view
000011:0x0003b538:	rts
InventoryContainerHands::UpdateItems()
000020:0x0003b580:	ncall	GetGame()
000020:0x0003b588:	ncalli	CGame.GetPlayer()
000020:0x0003b590:	movetm	player, ret
000021:0x0003b5a0:	cmpcm	player, NULL
000021:0x0003b5b0:	bne	0x03b5c8
000023:0x0003b5b8:	release	player
000023:0x0003b5c0:	rts
000026:0x0003b5c8:	ncalli	PlayerBase.GetEntityInHands()
000026:0x0003b5d0:	movetm	item_in_hands, ret
000028:0x0003b5e0:	cmpcm	item_in_hands, NULL
000028:0x0003b5f0:	bne	0x03b698
000030:0x0003b5f8:	cmpcm	m_view, NULL
000030:0x0003b608:	beq	0x03b618
000030:0x0003b610:	delete	m_view
000031:0x0003b618:	movetm	container, this
000031:0x0003b628:	imove	@m01, 0x000003
000031:0x0003b638:	move	@m00, @m01
000031:0x0003b648:	new	@c00, InventoryViewHands
000031:0x0003b670:	movetm	m_view, @c00
000032:0x0003b680:	movefm	[0x70345b0], m_view
000032:0x0003b690:	call	InventoryViewBase.CreateLayout()
000035:0x0003b698:	cmpcm	item_in_hands, NULL
000035:0x0003b6a8:	beq	0x03b700
000035:0x0003b6b0:	cmpcm	m_view, NULL
000035:0x0003b6c0:	beq	0x03b700
000035:0x0003b6c8:	movefm	[0x70345b0], m_view
000035:0x0003b6d8:	call	InventoryViewBase.GetEntity()
000035:0x0003b6e0:	cmpm	ret, item_in_hands
000035:0x0003b6f0:	beq	0x03b700
000037:0x0003b6f8:	delete	m_view
000040:0x0003b700:	cmpcm	item_in_hands, NULL
000040:0x0003b710:	beq	0x03b7b0
000040:0x0003b718:	cmpcm	m_view, NULL
000040:0x0003b728:	bne	0x03b7b0
000042:0x0003b730:	movetm	container, this
000042:0x0003b740:	imove	@m01, 0x000003
000042:0x0003b750:	move	@m00, @m01
000042:0x0003b760:	new	@c00, InventoryViewHands
000042:0x0003b788:	movetm	m_view, @c00
000043:0x0003b798:	movefm	[0x70345b0], m_view
000043:0x0003b7a8:	call	InventoryViewBase.CreateLayout()
000046:0x0003b7b0:	cmpcm	m_view, NULL
000046:0x0003b7c0:	beq	0x03b7e0
000046:0x0003b7c8:	movefm	[0x70345b0], m_view
000046:0x0003b7d8:	call	InventoryViewBase.UpdateItems()
000047:0x0003b7e0:	cmpcm	m_spacer, NULL
000047:0x0003b7f0:	beq	0x03b810
000047:0x0003b7f8:	movefm	[0x3cd18378], m_spacer
000047:0x0003b808:	call	AutoHeightSpacer.Update()
000047:0x0003b810:	release	player
000047:0x0003b818:	release	item_in_hands
000047:0x0003b820:	rts
InventoryContainerHands::CreateLayout()
000053:0x0003b848:	ncall	GetGame()
000053:0x0003b850:	ncalli	CGame.GetWorkspace()
000053:0x0003b858:	movefm	[0x11d18388], parent
000053:0x0003b868:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryContainerHands.layout', [0x11d18388])
000053:0x0003b870:	movetm	ret, ret
000053:0x0003b880:	rts
000053:0x0003b888:	rts
InventoryContainerHands::OnItemDoubleClick()
000058:0x0003b8f0:	ncall	GetGame()
000058:0x0003b8f8:	ncalli	CGame.GetPlayer()
000058:0x0003b900:	movetm	player, ret
000059:0x0003b910:	cmpcm	player, NULL
000059:0x0003b920:	bne	0x03b938
000061:0x0003b928:	release	player
000061:0x0003b930:	rts
000064:0x0003b938:	call	GetInstance()
000064:0x0003b940:	movec	manager, ret
000065:0x0003b950:	ncalli	PlayerBase.GetEntityInHands()
000065:0x0003b958:	movetm	item_in_hands, ret
000067:0x0003b968:	cmpm	item_in_hands, item
000067:0x0003b978:	bne	0x03b9a8
000069:0x0003b980:	movetm	item, NULL
000069:0x0003b990:	call	InventoryManager.TakeToHands(item)
000069:0x0003b9a0:	jump	0x03b9b8
000073:0x0003b9a8:	call	InventoryContainer.OnItemDoubleClick(view, item)
000073:0x0003b9b8:	release	player
000073:0x0003b9c0:	release	item_in_hands
000073:0x0003b9c8:	rts
InventoryContainerHands::OnDraggingOver()
000080:0x0003ba10:	call	GetInstance()
000080:0x0003ba18:	movec	manager, ret
000081:0x0003ba28:	call	InventoryManager.GetItem()
000081:0x0003ba30:	movem	dragged_item, ret
000083:0x0003ba40:	call	InventoryManager.IsDragging()
000083:0x0003ba48:	cmpi	ret, false
000083:0x0003ba58:	beq	0x03ba78
000083:0x0003ba60:	cmpcm	dragged_item, NULL
000083:0x0003ba70:	bne	0x03ba98
000083:0x0003ba78:	imove	ret, 0x000000
000083:0x0003ba88:	release	dragged_item
000083:0x0003ba90:	rts
000085:0x0003ba98:	cmpcm	dragged_item, NULL
000085:0x0003baa8:	beq	0x03bae8
000085:0x0003bab0:	ncalli	InventoryItem.CanRemoveEntity()
000085:0x0003bab8:	cmpi	ret, false
000085:0x0003bac8:	bne	0x03bae8
000087:0x0003bad0:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000087:0x0003bae0:	jump	0x03baf8
000091:0x0003bae8:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000093:0x0003baf8:	imove	ret, 0x000001
000093:0x0003bb08:	release	dragged_item
000093:0x0003bb10:	rts
000093:0x0003bb18:	release	dragged_item
000093:0x0003bb20:	rts
InventoryContainerHands::OnDropReceived()
000098:0x0003bb88:	ncall	GetGame()
000098:0x0003bb90:	ncalli	CGame.GetPlayer()
000098:0x0003bb98:	movetm	player, ret
000099:0x0003bba8:	call	GetInstance()
000099:0x0003bbb0:	movec	manager, ret
000100:0x0003bbc0:	call	InventoryManager.GetItem()
000100:0x0003bbc8:	movem	dragged_item, ret
000102:0x0003bbd8:	call	InventoryManager.IsDragging()
000102:0x0003bbe0:	cmpi	ret, false
000102:0x0003bbf0:	beq	0x03bc10
000102:0x0003bbf8:	cmpcm	dragged_item, NULL
000102:0x0003bc08:	bne	0x03bc38
000102:0x0003bc10:	imove	ret, 0x000000
000102:0x0003bc20:	release	player
000102:0x0003bc28:	release	dragged_item
000102:0x0003bc30:	rts
000104:0x0003bc38:	movefm	[0x3cd32d50], dragged_item
000104:0x0003bc48:	ncalli	PlayerBase.CanAddEntityInHands([0x3cd32d50])
000104:0x0003bc50:	cmpi	ret, _i0
000104:0x0003bc60:	beq	0x03bca0
000104:0x0003bc68:	ncalli	InventoryItem.CanRemoveEntity()
000104:0x0003bc70:	cmpi	ret, _i0
000104:0x0003bc80:	beq	0x03bca0
000106:0x0003bc88:	call	InventoryManager.TakeToHands(dragged_item)
000107:0x0003bc98:	call	InventoryManager.Drop()
000110:0x0003bca0:	imove	ret, 0x000001
000110:0x0003bcb0:	release	player
000110:0x0003bcb8:	release	dragged_item
000110:0x0003bcc0:	rts
000110:0x0003bcc8:	release	player
000110:0x0003bcd0:	release	dragged_item
000110:0x0003bcd8:	rts
InventoryContainerVicinity::InventoryContainerVicinity()
//scripts/5_Mission/GUI/Inventory/InventoryContainer/InventoryContainerVicinity.c
000007:0x0003bce0:	new	@c00, map<EntityAI,InventoryViewBase>
000007:0x0003bd00:	movetm	m_views, @c00
000007:0x0003bd10:	rts
InventoryContainerVicinity::~InventoryContainerVicinity()
000013:0x0003bd58:	movefm	[0x7042598], m_views
000013:0x0003bd68:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000013:0x0003bd70:	move	c, ret
000014:0x0003bd80:	imove	i, 0x000000
000014:0x0003bd90:	jump	0x03bda0
000014:0x0003bd98:	inc	i
000014:0x0003bda0:	cmpi	i, c
000014:0x0003bdb0:	bge	0x03bde0
000016:0x0003bdb8:	movefm	[0x7042598], m_views
000016:0x0003bdc8:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000016:0x0003bdd0:	delete	ret
000016:0x0003bdd8:	jump	0x03bd98
000016:0x0003bde0:	rts
InventoryContainerVicinity::UpdateItems()
000026:0x0003c088:	ncall	GetGame()
000026:0x0003c090:	ncalli	CGame.GetPlayer()
000026:0x0003c098:	movetm	player, ret
000027:0x0003c0a8:	ncalli	Man.GetPosition()
000027:0x0003c0b0:	movev	pos, ret
000028:0x0003c0c0:	ncalli	Man.GetDirection()
000028:0x0003c0c8:	movev	dir, ret
000034:0x0003c0d8:	new	@c00, array<Object>
000034:0x0003c0f8:	movetm	objects, @c00
000035:0x0003c108:	new	@c00, array<Cargo>
000035:0x0003c128:	movetm	proxyCargos, @c00
000036:0x0003c138:	ncall	GetGame()
000036:0x0003c140:	scalev	@v02, dir, _f0.750000
000036:0x0003c150:	movev	@v01, @v02
000036:0x0003c160:	addv	@v01, pos, @v01
000036:0x0003c170:	movev	@v00, @v01
000036:0x0003c180:	movec	[0x3cd2cef8], NULL
000036:0x0003c190:	movefm	[0x3cd2cf68], objects
000036:0x0003c1a0:	movefm	[0x3cd2cfd8], proxyCargos
000036:0x0003c1b0:	ncalli	CGame.GetObjectsAtPosition(@v00, _f1.000000, [0x3cd2cef8], [0x3cd2cf68], [0x3cd2cfd8])
000037:0x0003c1c0:	call	GetInstance()
000037:0x0003c1c8:	movec	manager, ret
000039:0x0003c1d8:	ncalli	array<Cargo>.Count()
000039:0x0003c1e0:	move	c, ret
000041:0x0003c1f0:	imove	i, 0x000000
000041:0x0003c200:	jump	0x03c210
000041:0x0003c208:	inc	i
000041:0x0003c210:	cmpi	i, c
000041:0x0003c220:	bge	0x03c258
000043:0x0003c228:	icall	array<Cargo>.Get(i)
000043:0x0003c230:	movec	cargo, ret
000044:0x0003c240:	ncalli	Cargo.GetParent()
000044:0x0003c248:	icall	array<Object>.Insert(ret)
000044:0x0003c250:	jump	0x03c208
000048:0x0003c258:	movefm	[0x7042598], m_views
000048:0x0003c268:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000048:0x0003c270:	move	c, ret
000049:0x0003c280:	imove	i, 0x000000
000049:0x0003c290:	jump	0x03c2a0
000049:0x0003c298:	inc	i
000049:0x0003c2a0:	cmpi	i, c
000049:0x0003c2b0:	bge	0x03c360
000051:0x0003c2b8:	movefm	[0x7042598], m_views
000051:0x0003c2c8:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000051:0x0003c2d0:	movetm	entity, ret
000052:0x0003c2e0:	movefm	@c00, entity
000052:0x0003c2f0:	icall	array<Object>.Find(@c00)
000052:0x0003c2f8:	cmpi	ret, INDEX_NOT_FOUND
000052:0x0003c308:	bne	0x03c358
000054:0x0003c310:	movefm	[0x7042598], m_views
000054:0x0003c320:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000054:0x0003c328:	delete	ret
000055:0x0003c330:	movefm	[0x7042598], m_views
000055:0x0003c340:	icall	map<EntityAI,InventoryViewBase>.RemoveElement(i)
000056:0x0003c348:	dec	c
000057:0x0003c350:	dec	i
000057:0x0003c358:	jump	0x03c298
000062:0x0003c360:	imove	i, 0x000000
000062:0x0003c370:	jump	0x03c380
000062:0x0003c378:	inc	i
000062:0x0003c380:	ncalli	array<Object>.Count()
000062:0x0003c388:	cmpi	i, ret
000062:0x0003c398:	bge	0x03c838
000064:0x0003c3a0:	icall	array<Object>.Get(i)
000064:0x0003c3a8:	movetm	obj, ret
000066:0x0003c3b8:	movem	player, player
000066:0x0003c3c8:	call	CanShowItemInInventory(player, obj)
000066:0x0003c3d8:	cmpi	ret, _i0
000066:0x0003c3e8:	beq	0x03c830
000066:0x0003c3f0:	movefm	[0x11d0a2c8], obj
000066:0x0003c400:	ncall	IsInherited([0x11d0a2c8], _T(PlayerBase))
000066:0x0003c408:	cmpi	ret, _i0
000066:0x0003c418:	bne	0x03c830
000066:0x0003c420:	movefm	[0x11d0a2c8], obj
000066:0x0003c430:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000066:0x0003c438:	cmpi	ret, _i0
000066:0x0003c448:	bne	0x03c830
000068:0x0003c450:	movem	e, obj
000069:0x0003c460:	movefm	@c00, e
000069:0x0003c470:	movefm	[0x7042598], m_views
000069:0x0003c480:	icall	map<EntityAI,InventoryViewBase>.Contains(@c00)
000069:0x0003c488:	cmpi	ret, false
000069:0x0003c498:	bne	0x03c830
000071:0x0003c4a0:	imove	addEntity, 0x000001
000072:0x0003c4b0:	movefm	[0x11d0a2c8], e
000072:0x0003c4c0:	ncall	IsInherited([0x11d0a2c8], _T(Building))
000072:0x0003c4c8:	cmpi	ret, _i0
000072:0x0003c4d8:	beq	0x03c530
000074:0x0003c4e0:	ncalli	EntityAI.GetCargo()
000074:0x0003c4e8:	cmpc	ret, NULL
000074:0x0003c4f8:	beq	0x03c520
000074:0x0003c500:	call	EntityAI.GetSlotsCountCorrect()
000074:0x0003c508:	cmpi	ret, _i1
000074:0x0003c518:	bge	0x03c530
000076:0x0003c520:	imove	addEntity, 0x000000
000080:0x0003c530:	cmpi	addEntity, _i0
000080:0x0003c540:	beq	0x03c830
000095:0x0003c548:	ncalli	EntityAI.GetCargo()
000095:0x0003c550:	cmpc	ret, NULL
000095:0x0003c560:	bne	0x03c5f8
000095:0x0003c568:	ncalli	EntityAI.GetSlotsCount()
000095:0x0003c570:	cmpi	ret, _i1
000095:0x0003c580:	bge	0x03c5f8
000098:0x0003c588:	movetm	container, this
000098:0x0003c598:	imove	@m01, 0x000003
000098:0x0003c5a8:	move	@m00, @m01
000098:0x0003c5b8:	new	@c00, InventoryViewGrid
000098:0x0003c5e0:	movetm	view, @c00
000098:0x0003c5f0:	jump	0x03c748
000100:0x0003c5f8:	ncall	GetGame()
000100:0x0003c600:	movefm	[0x3cd2c8c0], obj
000100:0x0003c610:	movefm	[0x3cd2c8e0], player
000100:0x0003c620:	ncalli	CGame.IsInventoryTreeLocked([0x3cd2c8c0], [0x3cd2c8e0])
000100:0x0003c628:	cmpi	ret, _i0
000100:0x0003c638:	beq	0x03c6e0
000100:0x0003c640:	movefm	[0x11d0a2c8], e
000100:0x0003c650:	ncall	IsInherited([0x11d0a2c8], _T(TentBase))
000100:0x0003c658:	cmpi	ret, _i0
000100:0x0003c668:	beq	0x03c6e0
000103:0x0003c670:	movetm	container, this
000103:0x0003c680:	imove	@m01, 0x000003
000103:0x0003c690:	move	@m00, @m01
000103:0x0003c6a0:	new	@c00, InventoryViewGrid
000103:0x0003c6c8:	movetm	view, @c00
000103:0x0003c6d8:	jump	0x03c748
000107:0x0003c6e0:	movetm	container, this
000107:0x0003c6f0:	imove	@m01, 0x000003
000107:0x0003c700:	move	@m00, @m01
000107:0x0003c710:	new	@c00, InventoryView
000107:0x0003c738:	movetm	view, @c00
000110:0x0003c748:	call	InventoryViewBase.CreateLayout()
000111:0x0003c750:	ncalli	array<Cargo>.Count()
000111:0x0003c758:	move	c, ret
000112:0x0003c768:	imove	j, 0x000000
000112:0x0003c778:	jump	0x03c788
000112:0x0003c780:	inc	j
000112:0x0003c788:	cmpi	j, c
000112:0x0003c798:	bge	0x03c7f0
000114:0x0003c7a0:	icall	array<Cargo>.Get(j)
000114:0x0003c7a8:	movec	cargo, ret
000115:0x0003c7b8:	ncalli	Cargo.GetParent()
000115:0x0003c7c0:	cmpmc	ret, e
000115:0x0003c7d0:	bne	0x03c7e8
000117:0x0003c7d8:	call	InventoryViewBase.AddProxyCargo(cargo)
000117:0x0003c7e8:	jump	0x03c780
000121:0x0003c7f0:	movefm	@c00, e
000121:0x0003c800:	movefm	@c01, view
000121:0x0003c810:	movefm	[0x7042598], m_views
000121:0x0003c820:	icall	map<EntityAI,InventoryViewBase>.Set(@c00, @c01)
000121:0x0003c828:	release	view
000121:0x0003c830:	jump	0x03c378
000127:0x0003c838:	cmpcm	m_empty_slot, NULL
000127:0x0003c848:	bne	0x03c900
000129:0x0003c850:	ncall	GetGame()
000129:0x0003c858:	ncalli	CGame.GetWorkspace()
000129:0x0003c860:	movefm	[0x11d18388], m_contentGrid
000129:0x0003c870:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridItemEmpty.layout', [0x11d18388])
000129:0x0003c878:	movetm	m_empty_slot, ret
000130:0x0003c888:	call	InventoryManager.GetAttachmentItemSize()
000130:0x0003c890:	push	ret
000130:0x0003c898:	call	InventoryManager.GetAttachmentItemSize()
000130:0x0003c8a0:	move	@f02, ret
000130:0x0003c8b0:	pop	ret
000130:0x0003c8b8:	movefm	[0x11cf2b58], m_empty_slot
000130:0x0003c8c8:	ncalli	Widget.SetSize(ret, @f02, _i1)
000131:0x0003c8d8:	movec	[0x11d0f728], this
000131:0x0003c8e8:	movefm	[0x11cf2b58], m_empty_slot
000131:0x0003c8f8:	ncalli	Widget.SetHandler([0x11d0f728])
000135:0x0003c900:	movefm	[0x7042598], m_views
000135:0x0003c910:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000135:0x0003c918:	move	c, ret
000136:0x0003c928:	imove	i, 0x000000
000136:0x0003c938:	jump	0x03c948
000136:0x0003c940:	inc	i
000136:0x0003c948:	cmpi	i, c
000136:0x0003c958:	bge	0x03ca20
000138:0x0003c960:	movefm	[0x7042598], m_views
000138:0x0003c970:	icall	map<EntityAI,InventoryViewBase>.GetKey(i)
000138:0x0003c978:	movetm	e, ret
000139:0x0003c988:	movem	player, player
000139:0x0003c998:	movem	obj, e
000139:0x0003c9a8:	call	CanShowItemInInventory(player, obj)
000139:0x0003c9b8:	cmpi	ret, _i0
000139:0x0003c9c8:	bne	0x03ca18
000141:0x0003c9d0:	movefm	[0x7042598], m_views
000141:0x0003c9e0:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000141:0x0003c9e8:	delete	ret
000142:0x0003c9f0:	movefm	[0x7042598], m_views
000142:0x0003ca00:	icall	map<EntityAI,InventoryViewBase>.RemoveElement(i)
000143:0x0003ca08:	dec	c
000144:0x0003ca10:	dec	i
000144:0x0003ca18:	jump	0x03c940
000149:0x0003ca20:	movefm	[0x7042598], m_views
000149:0x0003ca30:	ncalli	map<EntityAI,InventoryViewBase>.Count()
000149:0x0003ca38:	move	c, ret
000150:0x0003ca48:	imove	i, 0x000000
000150:0x0003ca58:	jump	0x03ca68
000150:0x0003ca60:	inc	i
000150:0x0003ca68:	cmpi	i, c
000150:0x0003ca78:	bge	0x03caa8
000152:0x0003ca80:	movefm	[0x7042598], m_views
000152:0x0003ca90:	icall	map<EntityAI,InventoryViewBase>.GetElement(i)
000152:0x0003ca98:	call	InventoryViewBase.UpdateItems()
000152:0x0003caa0:	jump	0x03ca60
000155:0x0003caa8:	cmpcm	m_spacer, NULL
000155:0x0003cab8:	beq	0x03cad8
000155:0x0003cac0:	movefm	[0x3cd18378], m_spacer
000155:0x0003cad0:	call	AutoHeightSpacer.Update()
000155:0x0003cad8:	delete	objects
000155:0x0003cae0:	delete	proxyCargos
000155:0x0003cae8:	release	player
000155:0x0003caf0:	release	entity
000155:0x0003caf8:	release	obj
000155:0x0003cb00:	release	e
000155:0x0003cb08:	rts
InventoryContainerVicinity::OnDraggingOver()
000161:0x0003cb70:	call	GetInstance()
000161:0x0003cb78:	movec	manager, ret
000162:0x0003cb88:	call	InventoryManager.GetItem()
000162:0x0003cb90:	movem	dragged_item, ret
000164:0x0003cba0:	call	InventoryManager.IsDragging()
000164:0x0003cba8:	cmpi	ret, false
000164:0x0003cbb8:	beq	0x03cbd8
000164:0x0003cbc0:	cmpcm	dragged_item, NULL
000164:0x0003cbd0:	bne	0x03cbf8
000164:0x0003cbd8:	imove	ret, 0x000000
000164:0x0003cbe8:	release	dragged_item
000164:0x0003cbf0:	rts
000166:0x0003cbf8:	ncall	GetGame()
000166:0x0003cc00:	ncalli	CGame.GetPlayer()
000166:0x0003cc08:	movetm	player, ret
000167:0x0003cc18:	cmpcm	dragged_item, NULL
000167:0x0003cc28:	beq	0x03cc88
000167:0x0003cc30:	ncalli	PlayerBase.GetEntityInHands()
000167:0x0003cc38:	cmpmc	ret, dragged_item
000167:0x0003cc48:	bne	0x03cc88
000167:0x0003cc50:	ncalli	PlayerBase.CanRemoveEntityInHands()
000167:0x0003cc58:	cmpi	ret, _i0
000167:0x0003cc68:	bne	0x03cc88
000169:0x0003cc70:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000169:0x0003cc80:	jump	0x03cc98
000173:0x0003cc88:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000175:0x0003cc98:	imove	ret, 0x000001
000175:0x0003cca8:	release	dragged_item
000175:0x0003ccb0:	release	player
000175:0x0003ccb8:	rts
000175:0x0003ccc0:	release	dragged_item
000175:0x0003ccc8:	release	player
000175:0x0003ccd0:	rts
InventoryContainerVicinity::OnDropReceived()
000180:0x0003cd38:	ncall	GetGame()
000180:0x0003cd40:	ncalli	CGame.GetPlayer()
000180:0x0003cd48:	movetm	player, ret
000181:0x0003cd58:	call	GetInstance()
000181:0x0003cd60:	movec	manager, ret
000182:0x0003cd70:	call	InventoryManager.GetItem()
000182:0x0003cd78:	movem	dragged_item, ret
000184:0x0003cd88:	call	InventoryManager.IsDragging()
000184:0x0003cd90:	cmpi	ret, false
000184:0x0003cda0:	beq	0x03cdc0
000184:0x0003cda8:	cmpcm	dragged_item, NULL
000184:0x0003cdb8:	bne	0x03cde8
000184:0x0003cdc0:	imove	ret, 0x000000
000184:0x0003cdd0:	release	player
000184:0x0003cdd8:	release	dragged_item
000184:0x0003cde0:	rts
000193:0x0003cde8:	call	InventoryManager.DropItem(dragged_item)
000194:0x0003cdf8:	call	InventoryManager.Drop()
000195:0x0003ce00:	imove	ret, 0x000001
000195:0x0003ce10:	release	player
000195:0x0003ce18:	release	dragged_item
000195:0x0003ce20:	rts
000195:0x0003ce28:	release	player
000195:0x0003ce30:	release	dragged_item
000195:0x0003ce38:	rts
InventoryManager::InventoryManager()
//scripts/5_Mission/GUI/Inventory/InventoryManager.c
000048:0x0003ce60:	movec	s_instance, this
000049:0x0003ce70:	movetm	init, NULL
000049:0x0003ce80:	new	@c00, Link<InventoryItem>
000049:0x0003cea8:	movec	m_drag_item, @c00
000050:0x0003ceb8:	movetm	init, NULL
000050:0x0003cec8:	new	@c00, Link<EntityAI>
000050:0x0003cef0:	movec	m_am_entity1, @c00
000051:0x0003cf00:	movetm	init, NULL
000051:0x0003cf10:	new	@c00, Link<EntityAI>
000051:0x0003cf38:	movec	m_am_entity2, @c00
000052:0x0003cf48:	new	@c00, TActionRefArray
000052:0x0003cf68:	movetm	m_actions, @c00
000053:0x0003cf78:	ncall	GetGame()
000053:0x0003cf80:	ncalli	CGame.GetPlayer()
000053:0x0003cf88:	movetm	m_player, ret
000058:0x0003cf98:	new	@c00, array<int>
000058:0x0003cfb8:	movetm	m_sorted_keys, @c00
000059:0x0003cfc8:	movefm	[0x11d0bd68], m_sorted_keys
000059:0x0003cfd8:	icall	array<int>.Insert(IS_HANDS)
000060:0x0003cfe0:	movefm	[0x11d0bd68], m_sorted_keys
000060:0x0003cff0:	icall	array<int>.Insert(IS_SHOULDER)
000061:0x0003cff8:	movefm	[0x11d0bd68], m_sorted_keys
000061:0x0003d008:	icall	array<int>.Insert(IS_BOW)
000062:0x0003d010:	movefm	[0x11d0bd68], m_sorted_keys
000062:0x0003d020:	icall	array<int>.Insert(IS_MELEE)
000063:0x0003d028:	movefm	[0x11d0bd68], m_sorted_keys
000063:0x0003d038:	icall	array<int>.Insert(IS_VEST)
000064:0x0003d040:	movefm	[0x11d0bd68], m_sorted_keys
000064:0x0003d050:	icall	array<int>.Insert(IS_BODY)
000065:0x0003d058:	movefm	[0x11d0bd68], m_sorted_keys
000065:0x0003d068:	icall	array<int>.Insert(IS_HIPS)
000066:0x0003d070:	movefm	[0x11d0bd68], m_sorted_keys
000066:0x0003d080:	icall	array<int>.Insert(IS_LEGS)
000067:0x0003d088:	movefm	[0x11d0bd68], m_sorted_keys
000067:0x0003d098:	icall	array<int>.Insert(IS_BACK)
000068:0x0003d0a0:	movefm	[0x11d0bd68], m_sorted_keys
000068:0x0003d0b0:	icall	array<int>.Insert(IS_HEADGEAR)
000069:0x0003d0b8:	movefm	[0x11d0bd68], m_sorted_keys
000069:0x0003d0c8:	icall	array<int>.Insert(IS_MASK)
000070:0x0003d0d0:	movefm	[0x11d0bd68], m_sorted_keys
000070:0x0003d0e0:	icall	array<int>.Insert(IS_EYEWEAR)
000071:0x0003d0e8:	movefm	[0x11d0bd68], m_sorted_keys
000071:0x0003d0f8:	icall	array<int>.Insert(IS_GLOVES)
000072:0x0003d100:	movefm	[0x11d0bd68], m_sorted_keys
000072:0x0003d110:	icall	array<int>.Insert(IS_FEET)
000073:0x0003d118:	movefm	[0x11d0bd68], m_sorted_keys
000073:0x0003d128:	icall	array<int>.Insert(IS_ARMBAND)
000076:0x0003d130:	ncall	GetGame()
000076:0x0003d138:	ncalli	CGame.GetWorkspace()
000076:0x0003d140:	movec	[0x11d18388], NULL
000076:0x0003d150:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory_tooltip.layout', [0x11d18388])
000076:0x0003d158:	movetm	m_tooltip_widget, ret
000077:0x0003d168:	movefm	[0x11cf2b58], m_tooltip_widget
000077:0x0003d178:	ncalli	Widget.Show(false)
000077:0x0003d180:	rts
InventoryManager::~InventoryManager()
000082:0x0003d188:	movec	s_instance, NULL
000083:0x0003d198:	movefm	[0x11cf2b58], m_tooltip_widget
000083:0x0003d1a8:	ncalli	Widget.Destroy()
000083:0x0003d1b0:	rts
InventoryManager::DropItem()
000089:0x0003d1d8:	cmpcm	item, NULL
000089:0x0003d1e8:	beq	0x03d300
000089:0x0003d1f0:	ncalli	InventoryItem.GetOwner()
000089:0x0003d1f8:	cmpm	ret, NULL
000089:0x0003d208:	beq	0x03d300
000089:0x0003d210:	movefm	[0x45f48920], m_player
000089:0x0003d220:	ncalli	PlayerBase.GetEntityInHands()
000089:0x0003d228:	call	InventoryManager.GetItem()
000089:0x0003d230:	cmpmc	ret, ret
000089:0x0003d240:	bne	0x03d278
000089:0x0003d248:	movefm	[0x45f48920], m_player
000089:0x0003d258:	ncalli	PlayerBase.CanRemoveEntityInHands()
000089:0x0003d260:	cmpi	ret, _i0
000089:0x0003d270:	beq	0x03d300
000091:0x0003d278:	movem	item, item
000091:0x0003d288:	movefm	[0x45f48920], m_player
000091:0x0003d298:	call	PlayerBase.DropEntity(item)
000093:0x0003d2a8:	ncall	GetGame()
000093:0x0003d2b0:	ncalli	CGame.GetUIManager()
000093:0x0003d2b8:	call	UIManager.FindMenu(MENU_INVENTORY)
000093:0x0003d2c8:	movem	menu, ret
000094:0x0003d2d8:	cmpcm	menu, NULL
000094:0x0003d2e8:	beq	0x03d2f8
000096:0x0003d2f0:	call	InventoryMenu.RefreshQuickbar()
000096:0x0003d2f8:	release	menu
000096:0x0003d300:	rts
InventoryManager::TakeToHands()
000129:0x0003d328:	movefm	[0x45f48920], m_player
000129:0x0003d338:	ncalli	PlayerBase.GetEntityInHands()
000129:0x0003d340:	movetm	item_in_hands, ret
000130:0x0003d350:	cmpcm	item_in_hands, NULL
000130:0x0003d360:	beq	0x03d3b8
000133:0x0003d368:	movefm	[0x45f48920], m_player
000133:0x0003d378:	ncalli	PlayerBase.CanRemoveEntityInHands()
000133:0x0003d380:	cmpi	ret, _i0
000133:0x0003d390:	beq	0x03d3b8
000134:0x0003d398:	movefm	[0x45f48920], m_player
000134:0x0003d3a8:	call	PlayerBase.MoveItemFromHandsToInventory(item_in_hands)
000137:0x0003d3b8:	cmpcm	item_in_hands, NULL
000137:0x0003d3c8:	beq	0x03d3d8
000137:0x0003d3d0:	jump	0x03d3d8
000145:0x0003d3d8:	movem	item, item
000145:0x0003d3e8:	movefm	[0x45f48920], m_player
000145:0x0003d3f8:	call	PlayerBase.TakeEntityToHands(item)
000145:0x0003d408:	release	item_in_hands
000145:0x0003d410:	rts
InventoryManager::TakeAsOwned()
000151:0x0003d458:	cmpcm	entity1, NULL
000151:0x0003d468:	beq	0x03d488
000151:0x0003d470:	cmpcm	entity2, NULL
000151:0x0003d480:	bne	0x03d490
000151:0x0003d488:	rts
000153:0x0003d490:	movefm	[0x11d0a2c8], entity1
000153:0x0003d4a0:	ncall	IsInherited([0x11d0a2c8], _T(Weapon))
000153:0x0003d4a8:	cmpi	ret, _i0
000153:0x0003d4b8:	beq	0x03d538
000153:0x0003d4c0:	movefm	[0x11d0a2c8], entity2
000153:0x0003d4d0:	ncall	IsInherited([0x11d0a2c8], _T(Magazine))
000153:0x0003d4d8:	cmpi	ret, _i0
000153:0x0003d4e8:	beq	0x03d538
000155:0x0003d4f0:	movefm	[0x3cd44f38], m_player
000155:0x0003d500:	movefm	[0x3cd44f58], entity1
000155:0x0003d510:	movefm	[0x3cd44f78], entity2
000155:0x0003d520:	ncall	TryReloadWeapon([0x3cd44f38], [0x3cd44f58], [0x3cd44f78])
000155:0x0003d530:	jump	0x03d548
000159:0x0003d538:	call	EntityAI.TakeEntityAsOwned(entity2)
000159:0x0003d548:	rts
InventoryManager::Drag()
000169:0x0003d5b8:	imove	m_is_dragging, 0x000001
000170:0x0003d5c8:	delete	m_drag_item
000171:0x0003d5d0:	new	@c00, Link<InventoryItem>
000171:0x0003d5f8:	movec	m_drag_item, @c00
000172:0x0003d608:	movem	m_grid, grid
000173:0x0003d618:	move	m_from_type, type
000175:0x0003d628:	call	InventoryManager.SetItemColor(ITEM_COLOR_DRAG)
000179:0x0003d638:	ncall	GetGame()
000179:0x0003d640:	movefm	@c00, item
000179:0x0003d650:	icall	CGame.GetInventoryItemSize(@c00, item_w, item_h)
000181:0x0003d660:	call	InventoryManager.GetNormalItemSize()
000181:0x0003d668:	citf	@f01, item_w
000181:0x0003d678:	mulf	@f01, @f01, ret
000181:0x0003d688:	move	@f00, @f01
000181:0x0003d698:	subi	@m02, item_w, _i1
000181:0x0003d6a8:	move	@m01, @m02
000181:0x0003d6b8:	citf	@f02, @m01
000181:0x0003d6c8:	mulf	@f02, GRID_CARGO_GAP, @f02
000181:0x0003d6d8:	move	@f01, @f02
000181:0x0003d6e8:	cfti	@m01, @f00
000181:0x0003d6f8:	cfti	@m02, @f01
000181:0x0003d708:	addi	@m01, @m01, @m02
000181:0x0003d718:	move	@m00, @m01
000181:0x0003d728:	call	InventoryManager.GetNormalItemSize()
000181:0x0003d730:	citf	@f01, item_h
000181:0x0003d740:	mulf	@f01, @f01, ret
000181:0x0003d750:	move	@f00, @f01
000181:0x0003d760:	subi	@m03, item_h, _i1
000181:0x0003d770:	move	@m02, @m03
000181:0x0003d780:	citf	@f02, @m02
000181:0x0003d790:	mulf	@f02, GRID_CARGO_GAP, @f02
000181:0x0003d7a0:	move	@f01, @f02
000181:0x0003d7b0:	cfti	@m02, @f00
000181:0x0003d7c0:	cfti	@m03, @f01
000181:0x0003d7d0:	addi	@m02, @m02, @m03
000181:0x0003d7e0:	move	@m01, @m02
000181:0x0003d7f0:	call	InventoryManager.SetItemSize(@m00, @m01)
000181:0x0003d800:	rts
InventoryManager::Drop()
000187:0x0003d828:	cmpcm	m_grid, NULL
000187:0x0003d838:	beq	0x03d8a8
000187:0x0003d840:	movec	[0x704d080], m_drag_item
000187:0x0003d850:	call	Link<InventoryItem>.Ptr()
000187:0x0003d858:	cmpcm	ret, NULL
000187:0x0003d868:	beq	0x03d8a8
000187:0x0003d870:	movec	[0x704d080], m_drag_item
000187:0x0003d880:	call	Link<InventoryItem>.Ptr()
000187:0x0003d888:	movefm	[0x3cd17878], m_grid
000187:0x0003d898:	call	InventoryGrid.ResetItem(ret)
000189:0x0003d8a8:	movetm	m_grid, NULL
000190:0x0003d8b8:	delete	m_drag_item
000191:0x0003d8c0:	movetm	init, NULL
000191:0x0003d8d0:	new	@c00, Link<InventoryItem>
000191:0x0003d8f8:	movec	m_drag_item, @c00
000193:0x0003d908:	imove	m_is_dragging, 0x000000
000195:0x0003d918:	ncall	GetGame()
000195:0x0003d920:	ncalli	CGame.GetUIManager()
000195:0x0003d928:	call	UIManager.FindMenu(MENU_INVENTORY)
000195:0x0003d938:	movem	menu, ret
000196:0x0003d948:	cmpcm	menu, NULL
000196:0x0003d958:	beq	0x03d968
000198:0x0003d960:	call	InventoryMenu.RefreshQuickbar()
000198:0x0003d968:	release	menu
000198:0x0003d970:	rts
InventoryManager::SetItemColor()
000204:0x0003d978:	cmpi	m_is_dragging, _i0
000204:0x0003d988:	beq	0x03da10
000204:0x0003d990:	cmpcm	m_grid, NULL
000204:0x0003d9a0:	beq	0x03da10
000204:0x0003d9a8:	movec	[0x704d080], m_drag_item
000204:0x0003d9b8:	call	Link<InventoryItem>.Ptr()
000204:0x0003d9c0:	cmpcm	ret, NULL
000204:0x0003d9d0:	beq	0x03da10
000206:0x0003d9d8:	movec	[0x704d080], m_drag_item
000206:0x0003d9e8:	call	Link<InventoryItem>.Ptr()
000206:0x0003d9f0:	movefm	[0x3cd17878], m_grid
000206:0x0003da00:	call	InventoryGrid.SetItemColor(ret, color)
000206:0x0003da10:	rts
InventoryManager::SetItemSize()
000212:0x0003da18:	cmpi	m_is_dragging, _i0
000212:0x0003da28:	beq	0x03dab0
000212:0x0003da30:	cmpcm	m_grid, NULL
000212:0x0003da40:	beq	0x03dab0
000212:0x0003da48:	movec	[0x704d080], m_drag_item
000212:0x0003da58:	call	Link<InventoryItem>.Ptr()
000212:0x0003da60:	cmpcm	ret, NULL
000212:0x0003da70:	beq	0x03dab0
000214:0x0003da78:	movec	[0x704d080], m_drag_item
000214:0x0003da88:	call	Link<InventoryItem>.Ptr()
000214:0x0003da90:	movefm	[0x3cd17878], m_grid
000214:0x0003daa0:	call	InventoryGrid.SetItemSize(ret, pixels_w, pixels_h)
000214:0x0003dab0:	rts
InventoryManager::IsDragging()
000220:0x0003dab8:	move	ret, m_is_dragging
000220:0x0003dac8:	rts
000220:0x0003dad0:	rts
InventoryManager::GetItem()
000224:0x0003dad8:	movec	[0x704d080], m_drag_item
000224:0x0003dae8:	call	Link<InventoryItem>.Ptr()
000224:0x0003daf0:	movem	ret, ret
000224:0x0003db00:	rts
000224:0x0003db08:	rts
InventoryManager::GetGrid()
000228:0x0003db10:	movem	ret, m_grid
000228:0x0003db20:	rts
000228:0x0003db28:	rts
InventoryManager::GetSortedKeys()
000233:0x0003db30:	movem	ret, m_sorted_keys
000233:0x0003db40:	rts
000233:0x0003db48:	rts
InventoryManager::OnPerformCraft()
000239:0x0003db70:	movec	[0x45f9f240], m_am_entity1
000239:0x0003db80:	call	Link<EntityAI>.IsNull()
000239:0x0003db88:	cmpi	ret, _i0
000239:0x0003db98:	bne	0x03dbd0
000239:0x0003dba0:	movec	[0x45f9f240], m_am_entity2
000239:0x0003dbb0:	call	Link<EntityAI>.IsNull()
000239:0x0003dbb8:	cmpi	ret, _i0
000239:0x0003dbc8:	beq	0x03dbd8
000239:0x0003dbd0:	rts
000241:0x0003dbd8:	ncall	GetGame()
000241:0x0003dbe0:	movefm	[0x3cd2de90], m_player
000241:0x0003dbf0:	movec	[0x45f9f240], m_am_entity2
000241:0x0003dc00:	call	Link<EntityAI>.Ptr()
000241:0x0003dc08:	movefm	[0x3cd2deb0], ret
000241:0x0003dc18:	movec	[0x45f9f240], m_am_entity1
000241:0x0003dc28:	pushc	ret
000241:0x0003dc30:	call	Link<EntityAI>.Ptr()
000241:0x0003dc38:	movefm	@c02, ret
000241:0x0003dc48:	popc	ret
000241:0x0003dc50:	ncalli	CGame.RecipeProcess(recipe_name, [0x3cd2de90], [0x3cd2deb0], @c02)
000242:0x0003dc60:	ncall	GetGame()
000242:0x0003dc68:	ncalli	CGame.GetUIManager()
000242:0x0003dc70:	call	UIManager.FindMenu(MENU_INVENTORY)
000242:0x0003dc80:	movem	menu, ret
000243:0x0003dc90:	cmpcm	menu, NULL
000243:0x0003dca0:	beq	0x03dcb8
000245:0x0003dca8:	call	InventoryMenu.RefreshQuickbar()
000246:0x0003dcb0:	call	InventoryMenu.PerformRefreshInventory()
000246:0x0003dcb8:	release	menu
000246:0x0003dcc0:	rts
InventoryManager::OnPerformRecipe()
000252:0x0003dd68:	movec	[0x45f9f240], m_am_entity1
000252:0x0003dd78:	call	Link<EntityAI>.IsNull()
000252:0x0003dd80:	cmpi	ret, _i0
000252:0x0003dd90:	bne	0x03ddc8
000252:0x0003dd98:	movec	[0x45f9f240], m_am_entity2
000252:0x0003dda8:	call	Link<EntityAI>.IsNull()
000252:0x0003ddb0:	cmpi	ret, _i0
000252:0x0003ddc0:	beq	0x03ddd0
000252:0x0003ddc8:	rts
000254:0x0003ddd0:	icall	ToString(id)
000254:0x0003ddd8:	adds	@s01, _s'OnPerformRecipe called for id:', ret
000254:0x0003dde8:	moves	@s00, @s01
000254:0x0003ddf8:	call	Log(@s00, _s'recipes', _s'n/a', _s'n/a', _s'n/a')
000255:0x0003de10:	call	GetPlugin(_T(PluginRecipesManager))
000255:0x0003de20:	movec	plugin, ret
000256:0x0003de30:	movec	[0x45f9f240], m_am_entity1
000256:0x0003de40:	call	Link<EntityAI>.Ptr()
000256:0x0003de48:	movec	[0x45f9f240], m_am_entity2
000256:0x0003de58:	pushc	ret
000256:0x0003de60:	call	Link<EntityAI>.Ptr()
000256:0x0003de68:	movefm	@c02, ret
000256:0x0003de78:	popc	ret
000256:0x0003de80:	movetm	item_b, @c02
000256:0x0003de90:	call	PluginRecipesManager.PerformRecipeClientRequest(id, ret, item_b)
000256:0x0003dea0:	rts
InventoryManager::OnPerformAction()
000261:0x0003dec8:	movefm	[0x45f48920], m_player
000261:0x0003ded8:	call	PlayerBase.PerformAction(action)
000262:0x0003dee8:	ncall	GetGame()
000262:0x0003def0:	ncalli	CGame.GetUIManager()
000262:0x0003def8:	call	UIManager.FindMenu(MENU_INVENTORY)
000262:0x0003df08:	movem	menu, ret
000263:0x0003df18:	cmpcm	menu, NULL
000263:0x0003df28:	beq	0x03df40
000265:0x0003df30:	call	InventoryMenu.RefreshQuickbar()
000266:0x0003df38:	call	InventoryMenu.PerformRefreshInventory()
000268:0x0003df40:	call	InventoryManager.HideTooltip()
000268:0x0003df48:	release	menu
000268:0x0003df50:	rts
InventoryManager::InspectItem()
000273:0x0003dfc8:	ncall	GetGame()
000273:0x0003dfd0:	ncalli	CGame.GetUIManager()
000273:0x0003dfd8:	call	UIManager.FindMenu(MENU_INVENTORY)
000273:0x0003dfe8:	movem	menu, ret
000274:0x0003dff8:	ncalli	InventoryMenu.EnterScriptedMenu(MENU_INSPECT)
000274:0x0003e000:	movetm	inspect_menu, ret
000275:0x0003e010:	cmpcm	inspect_menu, NULL
000275:0x0003e020:	beq	0x03e048
000277:0x0003e028:	movem	item, item
000277:0x0003e038:	call	InspectMenu.SetItem(item)
000277:0x0003e048:	release	menu
000277:0x0003e050:	release	inspect_menu
000277:0x0003e058:	rts
Param1<InventoryItem>::Param1()
//scripts/1_CoreExt/param.c
000030:0x0003e200:	movem	param1, p1
000030:0x0003e210:	rts
InventoryManager::ShowActionMenu()
//scripts/5_Mission/GUI/Inventory/InventoryManager.c
000283:0x0003e258:	call	InventoryManager.HideTooltip()
000284:0x0003e260:	cmpcm	item, NULL
000284:0x0003e270:	beq	0x03e2b0
000284:0x0003e278:	call	InventoryItem.GetName()
000284:0x0003e280:	adds	@s01, _s'Showing action menu for ', ret
000284:0x0003e290:	moves	@s00, @s01
000284:0x0003e2a0:	call	PrintString(@s00)
000285:0x0003e2b0:	delete	m_am_entity1
000286:0x0003e2b8:	movem	init, item
000286:0x0003e2c8:	new	@c00, Link<EntityAI>
000286:0x0003e2f0:	movec	m_am_entity1, @c00
000287:0x0003e300:	delete	m_am_entity2
000288:0x0003e308:	movetm	init, NULL
000288:0x0003e318:	new	@c00, Link<EntityAI>
000288:0x0003e340:	movec	m_am_entity2, @c00
000289:0x0003e350:	ncall	GetGame()
000289:0x0003e358:	ncalli	CGame.GetUIManager()
000289:0x0003e360:	ncalli	UIManager.GetMenu()
000289:0x0003e368:	call	UIScriptedMenu.GetContextMenu()
000289:0x0003e370:	movem	cmenu, ret
000291:0x0003e380:	call	ContextMenu.Hide()
000292:0x0003e388:	call	ContextMenu.Clear()
000294:0x0003e390:	movec	[0x45f9f240], m_am_entity1
000294:0x0003e3a0:	call	Link<EntityAI>.IsNull()
000294:0x0003e3a8:	cmpi	ret, _i0
000294:0x0003e3b8:	beq	0x03e3d0
000294:0x0003e3c0:	release	cmenu
000294:0x0003e3c8:	rts
000296:0x0003e3d0:	movefm	[0x45f48920], m_player
000296:0x0003e3e0:	ncalli	PlayerBase.GetEntityInHands()
000296:0x0003e3e8:	cmpmc	ret, item
000296:0x0003e3f8:	bne	0x03e488
000296:0x0003e400:	ncalli	InventoryItem.CanRemoveEntity()
000296:0x0003e408:	cmpi	ret, _i0
000296:0x0003e418:	beq	0x03e488
000296:0x0003e420:	movec	obj, this
000296:0x0003e430:	movetm	p1, NULL
000296:0x0003e440:	new	@c00, Param1<EntityAI>
000296:0x0003e468:	movec	params, @c00
000296:0x0003e478:	call	ContextMenu.Add(_s'#inv_context_remove_from_hands', obj, _s'TakeToHands', params)
000297:0x0003e488:	movefm	[0x3cd32d50], item
000297:0x0003e498:	movefm	[0x45f48920], m_player
000297:0x0003e4a8:	ncalli	PlayerBase.CanAddEntityInHands([0x3cd32d50])
000297:0x0003e4b0:	cmpi	ret, _i0
000297:0x0003e4c0:	beq	0x03e550
000297:0x0003e4c8:	ncalli	InventoryItem.CanRemoveEntity()
000297:0x0003e4d0:	cmpi	ret, _i0
000297:0x0003e4e0:	beq	0x03e550
000297:0x0003e4e8:	movec	obj, this
000297:0x0003e4f8:	movem	p1, item
000297:0x0003e508:	new	@c00, Param1<EntityAI>
000297:0x0003e530:	movec	params, @c00
000297:0x0003e540:	call	ContextMenu.Add(_s'#inv_context_take_to_hands', obj, _s'TakeToHands', params)
000301:0x0003e550:	movec	obj, this
000301:0x0003e560:	new	@c00, Param1<InventoryItem>
000301:0x0003e588:	movec	params, @c00
000301:0x0003e598:	call	ContextMenu.Add(_s'#inv_context_inspect', obj, _s'InspectItem', params)
000304:0x0003e5a8:	movec	params, NULL
000304:0x0003e5b8:	call	ContextMenu.Add(_s'#inv_receiving', NULL, _s'', params)
000306:0x0003e5c8:	icall	GetMousePos(m_am_pos_x, m_am_pos_y)
000307:0x0003e5d0:	move	x, m_am_pos_x
000307:0x0003e5e0:	move	y, m_am_pos_y
000307:0x0003e5f0:	call	ContextMenu.Show(x, y)
000309:0x0003e600:	movefm	[0x3cd24428], m_player
000309:0x0003e610:	ncalli	InventoryItem.GetActions([0x3cd24428], _c0)
000309:0x0003e618:	release	cmenu
000309:0x0003e620:	rts
InventoryManager::ShowAllValidRecipes()
000314:0x0003e750:	movem	p, m_player
000315:0x0003e760:	movefm	@c01, p
000315:0x0003e770:	movem	recipesMap, m_Recipes
000316:0x0003e780:	call	GetPlugin(_T(PluginRecipesManager))
000316:0x0003e790:	movec	module_recipes_manager, ret
000317:0x0003e7a0:	movem	player, m_player
000317:0x0003e7b0:	call	PluginRecipesManager.GetValidRecipes(entity1, entity2, recipesMap, player)
000319:0x0003e7c0:	imove	key, 0x000000
000320:0x0003e7d0:	imove	x, 0x000000
000320:0x0003e7e0:	jump	0x03e7f0
000320:0x0003e7e8:	inc	x
000320:0x0003e7f0:	ncalli	map<int,string>.Count()
000320:0x0003e7f8:	cmpi	x, ret
000320:0x0003e808:	bge	0x03e890
000322:0x0003e810:	icall	map<int,string>.GetKey(x)
000322:0x0003e818:	move	key, ret
000324:0x0003e828:	icall	map<int,string>.Get(key)
000324:0x0003e830:	movec	obj, this
000324:0x0003e840:	new	@c00, Param1<int>
000324:0x0003e868:	movec	params, @c00
000324:0x0003e878:	call	ContextMenu.Add(ret, obj, _s'OnPerformRecipe', params)
000324:0x0003e888:	jump	0x03e7e8
000324:0x0003e890:	release	p
000324:0x0003e898:	release	recipesMap
000324:0x0003e8a0:	rts
InventoryManager::ShowActionMenuCombine()
000330:0x0003ea58:	cmpcm	entity1, NULL
000330:0x0003ea68:	beq	0x03eb08
000330:0x0003ea70:	cmpcm	entity2, NULL
000330:0x0003ea80:	beq	0x03eb08
000330:0x0003ea88:	call	EntityAI.GetName()
000330:0x0003ea90:	adds	@s03, _s'Showing action menu for ', ret
000330:0x0003eaa0:	moves	@s02, @s03
000330:0x0003eab0:	adds	@s02, @s02, _s' and '
000330:0x0003eac0:	moves	@s01, @s02
000330:0x0003ead0:	call	EntityAI.GetName()
000330:0x0003ead8:	adds	@s01, @s01, ret
000330:0x0003eae8:	moves	@s00, @s01
000330:0x0003eaf8:	call	PrintString(@s00)
000331:0x0003eb08:	delete	m_am_entity1
000332:0x0003eb10:	new	@c00, Link<EntityAI>
000332:0x0003eb38:	movec	m_am_entity1, @c00
000333:0x0003eb48:	delete	m_am_entity2
000334:0x0003eb50:	new	@c00, Link<EntityAI>
000334:0x0003eb78:	movec	m_am_entity2, @c00
000336:0x0003eb88:	move	m_am_itemes_combination_flags, combinationFlags
000338:0x0003eb98:	ncall	GetGame()
000338:0x0003eba0:	ncalli	CGame.GetUIManager()
000338:0x0003eba8:	ncalli	UIManager.GetMenu()
000338:0x0003ebb0:	call	UIScriptedMenu.GetContextMenu()
000338:0x0003ebb8:	movem	cmenu, ret
000340:0x0003ebc8:	call	ContextMenu.Hide()
000341:0x0003ebd0:	call	ContextMenu.Clear()
000343:0x0003ebd8:	ncall	GetGame()
000343:0x0003ebe0:	call	CGame.IsNewPlayer()
000343:0x0003ebe8:	cmpi	ret, _i0
000343:0x0003ebf8:	beq	0x03ec70
000343:0x0003ec00:	ncall	GetGame()
000343:0x0003ec08:	call	CGame.IsDebugActions()
000343:0x0003ec10:	cmpi	ret, _i0
000343:0x0003ec20:	beq	0x03ec70
000345:0x0003ec28:	andi	@m01, combinationFlags, RECIPE
000345:0x0003ec38:	move	@m00, @m01
000345:0x0003ec48:	cmpi	@m00, _i0
000345:0x0003ec58:	beq	0x03ec70
000347:0x0003ec60:	call	InventoryManager.ShowAllValidRecipes(entity1, entity2, cmenu)
000351:0x0003ec70:	movec	[0x45f9f240], m_am_entity1
000351:0x0003ec80:	call	Link<EntityAI>.IsNull()
000351:0x0003ec88:	cmpi	ret, _i0
000351:0x0003ec98:	bne	0x03ecd0
000351:0x0003eca0:	movec	[0x45f9f240], m_am_entity2
000351:0x0003ecb0:	call	Link<EntityAI>.IsNull()
000351:0x0003ecb8:	cmpi	ret, _i0
000351:0x0003ecc8:	beq	0x03ece0
000351:0x0003ecd0:	release	cmenu
000351:0x0003ecd8:	rts
000353:0x0003ece0:	cmpi	combinationFlags, NONE
000353:0x0003ecf0:	bne	0x03ed08
000353:0x0003ecf8:	release	cmenu
000353:0x0003ed00:	rts
000355:0x0003ed08:	andi	@m01, combinationFlags, ADD_AS_ATTACHMENT
000355:0x0003ed18:	move	@m00, @m01
000355:0x0003ed28:	cmpi	@m00, _i0
000355:0x0003ed38:	beq	0x03ed98
000357:0x0003ed40:	movec	obj, this
000357:0x0003ed50:	new	@c00, Param1<int>
000357:0x0003ed78:	movec	params, @c00
000357:0x0003ed88:	call	ContextMenu.Add(_s'#inv_context_add_as_attachment', obj, _s'OnPerformCombination', params)
000360:0x0003ed98:	andi	@m01, combinationFlags, ADD_AS_CARGO
000360:0x0003eda8:	move	@m00, @m01
000360:0x0003edb8:	cmpi	@m00, _i0
000360:0x0003edc8:	beq	0x03ee28
000362:0x0003edd0:	movec	obj, this
000362:0x0003ede0:	new	@c00, Param1<int>
000362:0x0003ee08:	movec	params, @c00
000362:0x0003ee18:	call	ContextMenu.Add(_s'#inv_context_add_as_cargo', obj, _s'OnPerformCombination', params)
000365:0x0003ee28:	andi	@m01, combinationFlags, SWAP
000365:0x0003ee38:	move	@m00, @m01
000365:0x0003ee48:	cmpi	@m00, _i0
000365:0x0003ee58:	beq	0x03eeb8
000367:0x0003ee60:	movec	obj, this
000367:0x0003ee70:	new	@c00, Param1<int>
000367:0x0003ee98:	movec	params, @c00
000367:0x0003eea8:	call	ContextMenu.Add(_s'#inv_context_swap', obj, _s'OnPerformCombination', params)
000370:0x0003eeb8:	andi	@m01, combinationFlags, TAKE_TO_HANDS
000370:0x0003eec8:	move	@m00, @m01
000370:0x0003eed8:	cmpi	@m00, _i0
000370:0x0003eee8:	beq	0x03ef48
000372:0x0003eef0:	movec	obj, this
000372:0x0003ef00:	new	@c00, Param1<int>
000372:0x0003ef28:	movec	params, @c00
000372:0x0003ef38:	call	ContextMenu.Add(_s'#inv_context_take_to_hands', obj, _s'OnPerformCombination', params)
000375:0x0003ef48:	andi	@m01, combinationFlags, COMBINE_QUANTITY
000375:0x0003ef58:	move	@m00, @m01
000375:0x0003ef68:	cmpi	@m00, _i0
000375:0x0003ef78:	beq	0x03efd8
000377:0x0003ef80:	movec	obj, this
000377:0x0003ef90:	new	@c00, Param1<int>
000377:0x0003efb8:	movec	params, @c00
000377:0x0003efc8:	call	ContextMenu.Add(_s'#inv_context_combine', obj, _s'OnPerformCombination', params)
000380:0x0003efd8:	andi	@m01, combinationFlags, CRAFT
000380:0x0003efe8:	move	@m00, @m01
000380:0x0003eff8:	cmpi	@m00, _i0
000380:0x0003f008:	beq	0x03f1a0
000382:0x0003f010:	new	@c00, array<string>
000382:0x0003f030:	movetm	recipes, @c00
000383:0x0003f040:	ncall	GetGame()
000383:0x0003f048:	movefm	[0x3cd2dd10], m_player
000383:0x0003f058:	movefm	[0x3cd2dd30], entity1
000383:0x0003f068:	movefm	[0x3cd2dd50], entity2
000383:0x0003f078:	movefm	[0x3cd2dd70], recipes
000383:0x0003f088:	ncalli	CGame.RecipesGet([0x3cd2dd10], [0x3cd2dd30], [0x3cd2dd50], [0x3cd2dd70])
000385:0x0003f098:	imove	i, 0x000000
000385:0x0003f0a8:	jump	0x03f0b8
000385:0x0003f0b0:	inc	i
000385:0x0003f0b8:	ncalli	array<string>.Count()
000385:0x0003f0c0:	cmpi	i, ret
000385:0x0003f0d0:	bge	0x03f198
000387:0x0003f0d8:	icall	array<string>.Get(i)
000387:0x0003f0e0:	moves	recipe_name, ret
000389:0x0003f0f0:	ncall	GetGame()
000389:0x0003f0f8:	movefm	@c00, m_player
000389:0x0003f108:	movefm	@c01, entity2
000389:0x0003f118:	movefm	@c02, entity1
000389:0x0003f128:	icall	CGame.RecipeGetDescription(recipe_name, @c00, @c01, @c02, recipe_desc)
000390:0x0003f138:	movec	obj, this
000390:0x0003f148:	new	@c00, Param1<string>
000390:0x0003f170:	movec	params, @c00
000390:0x0003f180:	call	ContextMenu.Add(recipe_desc, obj, _s'OnPerformCraft', params)
000390:0x0003f190:	jump	0x03f0b0
000390:0x0003f198:	delete	recipes
000394:0x0003f1a0:	andi	@m01, combinationFlags, ACTIONS
000394:0x0003f1b0:	move	@m00, @m01
000394:0x0003f1c0:	cmpi	@m00, _i0
000394:0x0003f1d0:	beq	0x03f220
000396:0x0003f1d8:	movec	params, NULL
000396:0x0003f1e8:	call	ContextMenu.Add(_s'#inv_receiving', NULL, _s'', params)
000397:0x0003f1f8:	movefm	[0x3cd24428], m_player
000397:0x0003f208:	movefm	[0x3cd24448], entity1
000397:0x0003f218:	ncalli	EntityAI.GetActions([0x3cd24428], [0x3cd24448])
000400:0x0003f220:	icall	GetMousePos(m_am_pos_x, m_am_pos_y)
000401:0x0003f228:	imove	@m00, 0x000005
000401:0x0003f238:	subi	m_am_pos_x, m_am_pos_x, @m00
000402:0x0003f248:	imove	@m00, 0x000005
000402:0x0003f258:	subi	m_am_pos_y, m_am_pos_y, @m00
000404:0x0003f268:	move	x, m_am_pos_x
000404:0x0003f278:	move	y, m_am_pos_y
000404:0x0003f288:	call	ContextMenu.Show(x, y)
000404:0x0003f298:	release	cmenu
000404:0x0003f2a0:	rts
Param1<Action>::Param1()
//scripts/1_CoreExt/param.c
000030:0x0003f430:	movec	param1, p1
000030:0x0003f440:	rts
InventoryManager::UpdateEntityActions()
//scripts/5_Mission/GUI/Inventory/InventoryManager.c
000414:0x0003f448:	ncall	GetGame()
000414:0x0003f450:	ncalli	CGame.GetUIManager()
000414:0x0003f458:	ncalli	UIManager.GetMenu()
000414:0x0003f460:	call	UIScriptedMenu.GetContextMenu()
000414:0x0003f468:	movem	cmenu, ret
000415:0x0003f478:	cmpcm	cmenu, NULL
000415:0x0003f488:	bne	0x03f4a0
000415:0x0003f490:	release	cmenu
000415:0x0003f498:	rts
000417:0x0003f4a0:	movefm	[0x3cd16b18], m_actions
000417:0x0003f4b0:	call	TActionRefArray.Release()
000418:0x0003f4b8:	movefm	@c00, test
000418:0x0003f4c8:	movefm	[0x3cd16b18], m_actions
000418:0x0003f4d8:	icall	TActionRefArray.Copy(@c00)
000419:0x0003f4e0:	movefm	[0x3cd16b18], m_actions
000419:0x0003f4f0:	call	TActionRefArray.AddRef()
000422:0x0003f4f8:	call	ContextMenu.Count()
000422:0x0003f500:	cmpi	ret, _i0
000422:0x0003f510:	beq	0x03f550
000422:0x0003f518:	call	ContextMenu.Count()
000422:0x0003f520:	subi	@m01, ret, _i1
000422:0x0003f530:	move	@m00, @m01
000422:0x0003f540:	call	ContextMenu.Remove(@m00)
000424:0x0003f550:	movefm	[0x3cd16b18], m_actions
000424:0x0003f560:	ncalli	TActionRefArray.Count()
000424:0x0003f568:	cmpi	ret, _i0
000424:0x0003f578:	beq	0x03f688
000426:0x0003f580:	imove	i, 0x000000
000426:0x0003f590:	jump	0x03f5a0
000426:0x0003f598:	inc	i
000426:0x0003f5a0:	movefm	[0x3cd16b18], m_actions
000426:0x0003f5b0:	ncalli	TActionRefArray.Count()
000426:0x0003f5b8:	cmpi	i, ret
000426:0x0003f5c8:	bge	0x03f688
000429:0x0003f5d0:	movefm	[0x3cd16b18], m_actions
000429:0x0003f5e0:	icall	TActionRefArray.Get(i)
000429:0x0003f5e8:	movec	action, ret
000430:0x0003f5f8:	movefm	@c00, m_player
000430:0x0003f608:	icall	Action.GetText(@c00, action_text)
000431:0x0003f610:	cmps	action_text, _s''
000431:0x0003f620:	beq	0x03f680
000433:0x0003f628:	movec	obj, this
000433:0x0003f638:	new	@c00, Param1<Action>
000433:0x0003f660:	movec	params, @c00
000433:0x0003f670:	call	ContextMenu.Add(action_text, obj, _s'OnPerformAction', params)
000433:0x0003f680:	jump	0x03f598
000438:0x0003f688:	move	x, m_am_pos_x
000438:0x0003f698:	move	y, m_am_pos_y
000438:0x0003f6a8:	call	ContextMenu.Show(x, y)
000438:0x0003f6b8:	release	cmenu
000438:0x0003f6c0:	rts
InventoryManager::GetCombinationFlags()
000444:0x0003f798:	imove	flags, 0x000000
000445:0x0003f7a8:	movefm	[0x45f48920], m_player
000445:0x0003f7b8:	ncalli	PlayerBase.GetEntityInHands()
000445:0x0003f7c0:	movetm	entity_in_hands, ret
000447:0x0003f7d0:	cmpcm	entity1, NULL
000447:0x0003f7e0:	beq	0x03f800
000447:0x0003f7e8:	cmpcm	entity2, NULL
000447:0x0003f7f8:	bne	0x03f820
000447:0x0003f800:	move	ret, flags
000447:0x0003f810:	release	entity_in_hands
000447:0x0003f818:	rts
000449:0x0003f820:	movefm	[0x45f48920], m_player
000449:0x0003f830:	ncalli	PlayerBase.GetEntityInHands()
000449:0x0003f838:	cmpcm	entity1, ret
000449:0x0003f848:	bne	0x03f878
000449:0x0003f850:	ori	@m00, flags, TAKE_TO_HANDS
000449:0x0003f860:	move	flags, @m00
000449:0x0003f870:	jump	0x03f938
000450:0x0003f878:	movefm	[0x3cd45778], entity1
000450:0x0003f888:	movefm	[0x3cd45798], entity2
000450:0x0003f898:	ncall	CanSwapEntities([0x3cd45778], [0x3cd45798])
000450:0x0003f8a0:	cmpi	ret, _i0
000450:0x0003f8b0:	beq	0x03f938
000452:0x0003f8b8:	movefm	[0x11d0a2c8], entity1
000452:0x0003f8c8:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000452:0x0003f8d0:	cmpi	ret, _i0
000452:0x0003f8e0:	bne	0x03f938
000452:0x0003f8e8:	movefm	[0x11d0a2c8], entity1
000452:0x0003f8f8:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000452:0x0003f900:	cmpi	ret, _i0
000452:0x0003f910:	bne	0x03f938
000454:0x0003f918:	ori	@m00, flags, SWAP
000454:0x0003f928:	move	flags, @m00
000458:0x0003f938:	movefm	[0x3cd244d8], m_player
000458:0x0003f948:	movefm	[0x3cd244f8], entity1
000458:0x0003f958:	ncalli	EntityAI.HasActions([0x3cd244d8], [0x3cd244f8])
000458:0x0003f960:	cmpi	ret, _i0
000458:0x0003f970:	beq	0x03f998
000458:0x0003f978:	ori	@m00, flags, ACTIONS
000458:0x0003f988:	move	flags, @m00
000460:0x0003f998:	movefm	[0x11d0a2c8], entity1
000460:0x0003f9a8:	ncall	IsInherited([0x11d0a2c8], _T(ItemBase))
000460:0x0003f9b0:	cmpi	ret, _i0
000460:0x0003f9c0:	beq	0x03fa68
000460:0x0003f9c8:	movefm	[0x11d0a2c8], entity2
000460:0x0003f9d8:	ncall	IsInherited([0x11d0a2c8], _T(ItemBase))
000460:0x0003f9e0:	cmpi	ret, _i0
000460:0x0003f9f0:	beq	0x03fa68
000462:0x0003f9f8:	movem	entity1ItemBase, entity1
000463:0x0003fa08:	movem	other_item, entity2
000463:0x0003fa18:	call	ItemBase.CanQuantityCombine(other_item)
000463:0x0003fa28:	cmpi	ret, _i0
000463:0x0003fa38:	beq	0x03fa60
000463:0x0003fa40:	ori	@m00, flags, COMBINE_QUANTITY
000463:0x0003fa50:	move	flags, @m00
000463:0x0003fa60:	release	entity1ItemBase
000466:0x0003fa68:	movefm	[0x3cd23308], entity2
000466:0x0003fa78:	ncalli	EntityAI.CanAddAttachment([0x3cd23308])
000466:0x0003fa80:	cmpi	ret, _i0
000466:0x0003fa90:	beq	0x03fb78
000468:0x0003fa98:	movefm	[0x11d0a2c8], entity1
000468:0x0003faa8:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000468:0x0003fab0:	cmpi	ret, _i0
000468:0x0003fac0:	bne	0x03fb78
000468:0x0003fac8:	movefm	[0x11d0a2c8], entity1
000468:0x0003fad8:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000468:0x0003fae0:	cmpi	ret, _i0
000468:0x0003faf0:	bne	0x03fb78
000468:0x0003faf8:	movefm	[0x11d0a2c8], entity2
000468:0x0003fb08:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000468:0x0003fb10:	cmpi	ret, _i0
000468:0x0003fb20:	bne	0x03fb78
000468:0x0003fb28:	movefm	[0x11d0a2c8], entity2
000468:0x0003fb38:	ncall	IsInherited([0x11d0a2c8], _T(TankOrCar))
000468:0x0003fb40:	cmpi	ret, _i0
000468:0x0003fb50:	bne	0x03fb78
000470:0x0003fb58:	ori	@m00, flags, ADD_AS_ATTACHMENT
000470:0x0003fb68:	move	flags, @m00
000473:0x0003fb78:	movefm	[0x3cd238f8], entity2
000473:0x0003fb88:	ncalli	EntityAI.CanAddEntityInCargo([0x3cd238f8])
000473:0x0003fb90:	cmpi	ret, _i0
000473:0x0003fba0:	beq	0x03fbc8
000473:0x0003fba8:	ori	@m00, flags, ADD_AS_CARGO
000473:0x0003fbb8:	move	flags, @m00
000474:0x0003fbc8:	ncall	GetGame()
000474:0x0003fbd0:	movefm	[0x3cd2dde0], m_player
000474:0x0003fbe0:	movefm	[0x3cd2de00], entity1
000474:0x0003fbf0:	movefm	[0x3cd2de20], entity2
000474:0x0003fc00:	ncalli	CGame.RecipesHas([0x3cd2dde0], [0x3cd2de00], [0x3cd2de20])
000474:0x0003fc10:	cmpi	ret, _i0
000474:0x0003fc20:	beq	0x03fc48
000474:0x0003fc28:	ori	@m00, flags, CRAFT
000474:0x0003fc38:	move	flags, @m00
000475:0x0003fc48:	ncall	GetGame()
000475:0x0003fc50:	call	CGame.IsNewPlayer()
000475:0x0003fc58:	cmpi	ret, _i0
000475:0x0003fc68:	beq	0x03fd00
000475:0x0003fc70:	ncall	GetGame()
000475:0x0003fc78:	call	CGame.IsDebugActions()
000475:0x0003fc80:	cmpi	ret, _i0
000475:0x0003fc90:	beq	0x03fd00
000477:0x0003fc98:	movefm	[0x45f48920], m_player
000477:0x0003fca8:	ncalli	PlayerBase.GetEntityInHands()
000477:0x0003fcb0:	cmpcm	entity1, ret
000477:0x0003fcc0:	bne	0x03fd00
000479:0x0003fcc8:	call	Log(_s'GetCombinationFlags called, setting comb. flag', _s'recipes', _s'n/a', _s'n/a', _s'n/a')
000480:0x0003fce0:	ori	@m00, flags, RECIPE
000480:0x0003fcf0:	move	flags, @m00
000483:0x0003fd00:	move	ret, flags
000483:0x0003fd10:	release	entity_in_hands
000483:0x0003fd18:	rts
000483:0x0003fd20:	release	entity_in_hands
000483:0x0003fd28:	rts
InventoryManager::GetNormalItemSize()
000488:0x0003fd30:	move	ret, m_normal_item_size
000488:0x0003fd40:	rts
000488:0x0003fd48:	rts
InventoryManager::GetAttachmentItemSize()
000492:0x0003fd50:	move	ret, m_attachment_item_size
000492:0x0003fd60:	rts
000492:0x0003fd68:	rts
InventoryManager::GetIconItemSize()
000495:0x0003fd70:	move	ret, m_icon_item_size
000495:0x0003fd80:	rts
000495:0x0003fd88:	rts
InventoryManager::GetHandsNormalItemSize()
000498:0x0003fd90:	move	ret, m_hands_normal_item_size
000498:0x0003fda0:	rts
000498:0x0003fda8:	rts
InventoryManager::GetHandsAttachmentItemSize()
000501:0x0003fdb0:	move	ret, m_hands_attachment_item_size
000501:0x0003fdc0:	rts
000501:0x0003fdc8:	rts
InventoryManager::GetPanelsSize()
000504:0x0003fdd0:	move	ret, m_panels_size
000504:0x0003fde0:	rts
000504:0x0003fde8:	rts
InventoryManager::GetQuantityStackPanelSize()
000508:0x0003fdf0:	move	ret, m_quantity_stack_panel_size
000508:0x0003fe00:	rts
000508:0x0003fe08:	rts
InventoryManager::RecalculateIconSize()
000513:0x0003fe50:	divf	@f01, maxGridWidth, MAX_CARGO_GRID_WIDTH
000513:0x0003fe60:	move	@f00, @f01
000513:0x0003fe70:	mulf	@f00, _f0.970000, @f00
000513:0x0003fe80:	move	m_normal_item_size, @f00
000514:0x0003fe90:	divf	@f01, maxGridWidth, MAX_ATTACHMENT_GRID_WIDTH
000514:0x0003fea0:	move	@f00, @f01
000514:0x0003feb0:	mulf	@f00, _f0.970000, @f00
000514:0x0003fec0:	move	m_attachment_item_size, @f00
000515:0x0003fed0:	imove	m_icon_item_size, 70.00000
000517:0x0003fee0:	divf	@f01, maxGridWidth, MAX_CARGO_GRID_WIDTH
000517:0x0003fef0:	move	@f00, @f01
000517:0x0003ff00:	mulf	@f00, _f0.970000, @f00
000517:0x0003ff10:	move	m_hands_normal_item_size, @f00
000518:0x0003ff20:	divf	@f01, maxGridWidth, MAX_HANDS_ATTACHMENT_GRID_WIDTH
000518:0x0003ff30:	move	@f00, @f01
000518:0x0003ff40:	mulf	@f00, _f0.970000, @f00
000518:0x0003ff50:	move	m_hands_attachment_item_size, @f00
000519:0x0003ff60:	mulf	@f00, m_normal_item_size, _f0.500000
000519:0x0003ff70:	move	m_quantity_stack_panel_size, @f00
000519:0x0003ff80:	rts
InventoryManager::ShowTooltip()
000524:0x00040158:	call	InventoryManager.IsDragging()
000524:0x00040160:	cmpi	ret, _i0
000524:0x00040170:	beq	0x040180
000524:0x00040178:	rts
000525:0x00040180:	movefm	[0x11d0a2c8], item
000525:0x00040190:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000525:0x00040198:	cmpi	ret, _i0
000525:0x000401a8:	beq	0x040560
000527:0x000401b0:	movem	root_widget, m_tooltip_widget
000527:0x000401c0:	call	UpdateItemInfo(root_widget, item)
000531:0x000401d0:	icall	GetMousePos(x, y)
000532:0x000401d8:	icall	GetScreenSize(screen_w, screen_h)
000533:0x000401e0:	movefm	[0x11cf2b58], m_tooltip_widget
000533:0x000401f0:	icall	Widget.GetScreenSize(w, h)
000535:0x000401f8:	imove	@m00, 0x00000a
000535:0x00040208:	subi	screen_w, screen_w, @m00
000536:0x00040218:	imove	@m00, 0x00000a
000536:0x00040228:	subi	screen_h, screen_h, @m00
000537:0x00040238:	cfti	@m00, m_normal_item_size
000537:0x00040248:	addi	x, x, @m00
000538:0x00040258:	cfti	@m00, m_normal_item_size
000538:0x00040268:	addi	y, y, @m00
000540:0x00040278:	citf	@f01, x
000540:0x00040288:	addf	@f00, @f01, w
000540:0x00040298:	cfti	right_edge, @f00
000541:0x000402a8:	cmpi	right_edge, screen_w
000541:0x000402b8:	ble	0x040300
000543:0x000402c0:	citf	@f01, screen_w
000543:0x000402d0:	subf	@f00, @f01, w
000543:0x000402e0:	cfti	@m00, @f00
000543:0x000402f0:	move	x, @m00
000546:0x00040300:	citf	@f01, y
000546:0x00040310:	addf	@f00, @f01, h
000546:0x00040320:	cfti	bottom_edge, @f00
000547:0x00040330:	cmpi	bottom_edge, screen_h
000547:0x00040340:	ble	0x0403e8
000549:0x00040348:	citf	@f01, y
000549:0x00040358:	subf	@f01, @f01, h
000549:0x00040368:	move	@f00, @f01
000549:0x00040378:	citf	@f02, _i2
000549:0x00040388:	mulf	@f02, @f02, m_normal_item_size
000549:0x00040398:	move	@f01, @f02
000549:0x000403a8:	cfti	@m00, @f00
000549:0x000403b8:	cfti	@m01, @f01
000549:0x000403c8:	subi	@m00, @m00, @m01
000549:0x000403d8:	move	y, @m00
000552:0x000403e8:	citf	[0x11d0ee50], x
000552:0x000403f8:	citf	[0x11d0ee70], y
000552:0x00040408:	movefm	[0x11cf2b58], m_tooltip_widget
000552:0x00040418:	ncalli	Widget.SetPos([0x11d0ee50], [0x11d0ee70], _i1)
000553:0x00040428:	movefm	[0x11cf2b58], m_tooltip_widget
000553:0x00040438:	ncalli	Widget.Show(true)
000556:0x00040440:	cmpcm	m_item_preview_widget, NULL
000556:0x00040450:	beq	0x040480
000558:0x00040458:	movefm	[0x3cd16e10], m_item_preview_widget
000558:0x00040468:	ncalli	ItemPreviewWidget.Destroy()
000559:0x00040470:	movetm	m_item_preview_widget, NULL
000562:0x00040480:	movefm	[0x11cf2b58], m_tooltip_widget
000562:0x00040490:	ncalli	Widget.FindAnyWidget(_s'ItemFrameWidget')
000562:0x00040498:	movetm	preview_frame, ret
000563:0x000404a8:	cmpcm	preview_frame, NULL
000563:0x000404b8:	beq	0x040558
000567:0x000404c0:	icall	Widget.GetSize(ww, hh)
000568:0x000404c8:	ncall	GetGame()
000568:0x000404d0:	ncalli	CGame.GetWorkspace()
000568:0x000404d8:	movea	[0x11d181d8], ItemPreviewWidgetTypeID
000568:0x000404e8:	call	ARGB(_i255, _i255, _i255, _i255)
000568:0x000404f8:	movefm	[0x11d182d8], preview_frame
000568:0x00040508:	ncall	CreateWidget(ret, [0x11d181d8], _i0, _i0, _i1, _i1, _i1, ret, _i210, [0x11d182d8])
000568:0x00040520:	movetm	m_item_preview_widget, ret
000569:0x00040530:	movefm	[0x3cd324b0], item
000569:0x00040540:	movefm	[0x3cd16e10], m_item_preview_widget
000569:0x00040550:	ncalli	ItemPreviewWidget.SetItem([0x3cd324b0])
000569:0x00040558:	release	preview_frame
000569:0x00040560:	rts
InventoryManager::HideTooltip()
000576:0x00040568:	movefm	[0x11cf2b58], m_tooltip_widget
000576:0x00040578:	ncalli	Widget.Show(false)
000577:0x00040580:	cmpcm	m_item_preview_widget, NULL
000577:0x00040590:	beq	0x0405c0
000579:0x00040598:	movefm	[0x3cd16e10], m_item_preview_widget
000579:0x000405a8:	ncalli	ItemPreviewWidget.Destroy()
000580:0x000405b0:	movetm	m_item_preview_widget, NULL
000580:0x000405c0:	rts
InventoryManager::GetInstance()
000587:0x000405c8:	movec	ret, s_instance
000587:0x000405d8:	rts
000587:0x000405e0:	rts
InventoryManager::GetItemQuantityText()
000592:0x00040738:	moves	quantity_text, _s''
000593:0x00040748:	movefm	[0x11d0a2c8], item
000593:0x00040758:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000593:0x00040760:	cmpi	ret, _i0
000593:0x00040770:	beq	0x0409d0
000595:0x00040778:	movefm	@c00, item
000595:0x00040788:	movetm	item_base, @c00
000596:0x00040798:	call	ItemBase.GetQuantity()
000596:0x000407a0:	move	quantity, ret
000598:0x000407b0:	movefm	[0x11d0a2c8], item
000598:0x000407c0:	ncall	IsInherited([0x11d0a2c8], _T(Magazine))
000598:0x000407c8:	cmpi	ret, _i0
000598:0x000407d8:	beq	0x040868
000600:0x000407e0:	movefm	@c00, item
000600:0x000407f0:	movetm	magazine_item, @c00
000601:0x00040800:	ncalli	Magazine.GetAmmoCount()
000601:0x00040808:	move	ammo, ret
000602:0x00040818:	icall	ToString(ammo)
000602:0x00040820:	moves	quantity_text, ret
000603:0x00040830:	moves	ret, quantity_text
000603:0x00040840:	release	magazine_item
000603:0x00040848:	release	item_base
000603:0x00040850:	rts
000603:0x00040858:	release	magazine_item
000603:0x00040860:	jump	0x0408b8
000605:0x00040868:	movefm	[0x11d0a2c8], item
000605:0x00040878:	ncall	IsInherited([0x11d0a2c8], _T(ItemBook))
000605:0x00040880:	cmpi	ret, _i0
000605:0x00040890:	beq	0x0408b8
000607:0x00040898:	moves	ret, _s''
000607:0x000408a8:	release	item_base
000607:0x000408b0:	rts
000609:0x000408b8:	icall	EntityAI.ConfigGetInt(_s'stackedMax')
000609:0x000408c0:	move	max, ret
000610:0x000408d0:	icall	EntityAI.ConfigGetString(_s'stackedUnit')
000610:0x000408d8:	moves	unit, ret
000612:0x000408e8:	cmpi	max, _i0
000612:0x000408f8:	ble	0x0409c8
000614:0x00040900:	cmpi	max, _i1
000614:0x00040910:	bne	0x0409b0
000616:0x00040918:	citf	@f03, max
000616:0x00040928:	divf	@f03, quantity, @f03
000616:0x00040938:	move	@f02, @f03
000616:0x00040948:	mulf	@f02, @f02, _f100.000000
000616:0x00040958:	move	@f01, @f02
000616:0x00040968:	ncall	Round(@f01)
000616:0x00040970:	move	tmp, ret
000617:0x00040980:	icall	ToString(tmp)
000617:0x00040988:	adds	@s01, ret, _s'%'
000617:0x00040998:	moves	quantity_text, @s01
000617:0x000409a8:	jump	0x0409c8
000621:0x000409b0:	icall	ToString(quantity)
000621:0x000409b8:	moves	quantity_text, ret
000621:0x000409c8:	release	item_base
000638:0x000409d0:	moves	ret, quantity_text
000638:0x000409e0:	rts
000638:0x000409e8:	rts
InventoryManager::HasItemQuantity()
000643:0x00040a98:	movefm	[0x11d0a2c8], item
000643:0x00040aa8:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000643:0x00040ab0:	cmpi	ret, _i0
000643:0x00040ac0:	beq	0x040c60
000645:0x00040ac8:	movefm	@c00, item
000645:0x00040ad8:	movetm	item_base, @c00
000646:0x00040ae8:	movefm	[0x11d0a2c8], item
000646:0x00040af8:	ncall	IsInherited([0x11d0a2c8], _T(Magazine))
000646:0x00040b00:	cmpi	ret, _i0
000646:0x00040b10:	beq	0x040b40
000648:0x00040b18:	imove	ret, 0x000001
000648:0x00040b28:	release	item_base
000648:0x00040b30:	rts
000648:0x00040b38:	jump	0x040b90
000650:0x00040b40:	movefm	[0x11d0a2c8], item
000650:0x00040b50:	ncall	IsInherited([0x11d0a2c8], _T(ItemBook))
000650:0x00040b58:	cmpi	ret, _i0
000650:0x00040b68:	beq	0x040b90
000652:0x00040b70:	imove	ret, 0x000000
000652:0x00040b80:	release	item_base
000652:0x00040b88:	rts
000654:0x00040b90:	icall	EntityAI.ConfigGetInt(_s'stackedMax')
000654:0x00040b98:	move	max, ret
000655:0x00040ba8:	call	EntityAI.ConfigGetBool(_s'quantityBar')
000655:0x00040bb8:	move	bar, ret
000656:0x00040bc8:	cmpi	max, _i0
000656:0x00040bd8:	ble	0x040c58
000658:0x00040be0:	cmpi	max, _i1
000658:0x00040bf0:	beq	0x040c10
000658:0x00040bf8:	cmpi	bar, _i0
000658:0x00040c08:	beq	0x040c38
000660:0x00040c10:	imove	ret, 0x000002
000660:0x00040c20:	release	item_base
000660:0x00040c28:	rts
000660:0x00040c30:	jump	0x040c58
000664:0x00040c38:	imove	ret, 0x000001
000664:0x00040c48:	release	item_base
000664:0x00040c50:	rts
000664:0x00040c58:	release	item_base
000668:0x00040c60:	imove	ret, 0x000000
000668:0x00040c70:	rts
000668:0x00040c78:	rts
InventoryManager::GetItemQuantity()
000673:0x00040ce0:	imove	quantity, 0.00000
000674:0x00040cf0:	movefm	[0x11d0a2c8], item
000674:0x00040d00:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000674:0x00040d08:	cmpi	ret, _i0
000674:0x00040d18:	beq	0x040dd8
000676:0x00040d20:	movefm	@c00, item
000676:0x00040d30:	movetm	item_base, @c00
000677:0x00040d40:	movefm	[0x11d0a2c8], item
000677:0x00040d50:	ncall	IsInherited([0x11d0a2c8], _T(Magazine))
000677:0x00040d58:	cmpi	ret, _i0
000677:0x00040d68:	beq	0x040db8
000679:0x00040d70:	movefm	@c00, item
000679:0x00040d80:	movetm	magazine_item, @c00
000680:0x00040d90:	ncalli	Magazine.GetAmmoCount()
000680:0x00040d98:	citf	quantity, ret
000680:0x00040da8:	release	magazine_item
000680:0x00040db0:	jump	0x040dd0
000684:0x00040db8:	call	ItemBase.GetQuantity()
000684:0x00040dc0:	move	quantity, ret
000684:0x00040dd0:	release	item_base
000687:0x00040dd8:	move	ret, quantity
000687:0x00040de8:	rts
000687:0x00040df0:	rts
InventoryManager::OnPerformCombination()
000692:0x00040e18:	movec	[0x45f9f240], m_am_entity1
000692:0x00040e28:	call	Link<EntityAI>.IsNull()
000692:0x00040e30:	cmpi	ret, _i0
000692:0x00040e40:	bne	0x040e78
000692:0x00040e48:	movec	[0x45f9f240], m_am_entity2
000692:0x00040e58:	call	Link<EntityAI>.IsNull()
000692:0x00040e60:	cmpi	ret, _i0
000692:0x00040e70:	beq	0x040e80
000692:0x00040e78:	rts
000694:0x00040e80:	cmpi	combinationFlags, NONE
000694:0x00040e90:	bne	0x040ea0
000694:0x00040e98:	rts
000707:0x00040ea0:	andi	@m01, combinationFlags, ADD_AS_ATTACHMENT
000707:0x00040eb0:	move	@m00, @m01
000707:0x00040ec0:	cmpi	@m00, _i0
000707:0x00040ed0:	beq	0x040f48
000709:0x00040ed8:	movec	[0x45f9f240], m_am_entity1
000709:0x00040ee8:	call	Link<EntityAI>.Ptr()
000709:0x00040ef0:	movec	[0x45f9f240], m_am_entity2
000709:0x00040f00:	pushc	ret
000709:0x00040f08:	call	Link<EntityAI>.Ptr()
000709:0x00040f10:	movefm	@c02, ret
000709:0x00040f20:	popc	ret
000709:0x00040f28:	movetm	entity2, @c02
000709:0x00040f38:	call	InventoryManager.TakeAsOwned(ret, entity2)
000712:0x00040f48:	andi	@m01, combinationFlags, ADD_AS_CARGO
000712:0x00040f58:	move	@m00, @m01
000712:0x00040f68:	cmpi	@m00, _i0
000712:0x00040f78:	beq	0x040ff0
000714:0x00040f80:	movec	[0x45f9f240], m_am_entity1
000714:0x00040f90:	call	Link<EntityAI>.Ptr()
000714:0x00040f98:	movec	[0x45f9f240], m_am_entity2
000714:0x00040fa8:	pushc	ret
000714:0x00040fb0:	call	Link<EntityAI>.Ptr()
000714:0x00040fb8:	movefm	@c01, ret
000714:0x00040fc8:	popc	ret
000714:0x00040fd0:	movetm	item, @c01
000714:0x00040fe0:	call	EntityAI.TakeEntityToCargo(item)
000717:0x00040ff0:	andi	@m01, combinationFlags, SWAP
000717:0x00041000:	move	@m00, @m01
000717:0x00041010:	cmpi	@m00, _i0
000717:0x00041020:	beq	0x0410a8
000719:0x00041028:	movec	[0x45f9f240], m_am_entity1
000719:0x00041038:	call	Link<EntityAI>.Ptr()
000719:0x00041040:	movec	[0x45f9f240], m_am_entity2
000719:0x00041050:	pushc	ret
000719:0x00041058:	call	Link<EntityAI>.Ptr()
000719:0x00041060:	movefm	@c02, ret
000719:0x00041070:	popc	ret
000719:0x00041078:	movetm	item2, @c02
000719:0x00041088:	movefm	[0x45f48920], m_player
000719:0x00041098:	call	PlayerBase.SwapEntities(ret, item2)
000722:0x000410a8:	andi	@m01, combinationFlags, TAKE_TO_HANDS
000722:0x000410b8:	move	@m00, @m01
000722:0x000410c8:	cmpi	@m00, _i0
000722:0x000410d8:	beq	0x041118
000724:0x000410e0:	movec	[0x45f9f240], m_am_entity2
000724:0x000410f0:	call	Link<EntityAI>.Ptr()
000724:0x000410f8:	movem	item, ret
000724:0x00041108:	call	InventoryManager.TakeToHands(item)
000727:0x00041118:	movec	[0x45f9f240], m_am_entity1
000727:0x00041128:	call	Link<EntityAI>.Ptr()
000727:0x00041130:	movefm	[0x11d0a2c8], ret
000727:0x00041140:	ncall	IsInherited([0x11d0a2c8], _T(ItemBase))
000727:0x00041148:	cmpi	ret, _i0
000727:0x00041158:	beq	0x041248
000727:0x00041160:	movec	[0x45f9f240], m_am_entity2
000727:0x00041170:	call	Link<EntityAI>.Ptr()
000727:0x00041178:	movefm	[0x11d0a2c8], ret
000727:0x00041188:	ncall	IsInherited([0x11d0a2c8], _T(ItemBase))
000727:0x00041190:	cmpi	ret, _i0
000727:0x000411a0:	beq	0x041248
000729:0x000411a8:	movec	[0x45f9f240], m_am_entity1
000729:0x000411b8:	call	Link<EntityAI>.Ptr()
000729:0x000411c0:	movem	entity1ItemBase, ret
000730:0x000411d0:	andi	@m01, combinationFlags, COMBINE_QUANTITY
000730:0x000411e0:	move	@m00, @m01
000730:0x000411f0:	cmpi	@m00, _i0
000730:0x00041200:	beq	0x041240
000732:0x00041208:	movec	[0x45f9f240], m_am_entity2
000732:0x00041218:	call	Link<EntityAI>.Ptr()
000732:0x00041220:	movem	other_item, ret
000732:0x00041230:	call	ItemBase.QuantityCombine(other_item)
000732:0x00041240:	release	entity1ItemBase
000732:0x00041248:	rts
InventoryQuickbar::InventoryQuickbar()
//scripts/5_Mission/GUI/Inventory/InventoryQuickbar.c
000012:0x00041250:	imove	m_dragging_index, 0xffffffff
000013:0x00041260:	new	@c00, map<InventoryItem,vector>
000013:0x00041280:	movetm	m_items, @c00
000014:0x00041290:	call	InventoryQuickbar.UpdateItems(quickbarGridWidget)
000014:0x000412a0:	rts
InventoryQuickbar::UpdateItems()
000024:0x00041448:	ncall	GetGame()
000024:0x00041450:	ncalli	CGame.GetPlayer()
000024:0x00041458:	movetm	player, ret
000026:0x00041468:	cmpcm	player, NULL
000026:0x00041478:	bne	0x041490
000026:0x00041480:	release	player
000026:0x00041488:	rts
000027:0x00041490:	movefm	[0x3cd18618], m_items
000027:0x000414a0:	ncalli	map<InventoryItem,vector>.Clear()
000030:0x000414a8:	cmpcm	quickbarGridWidget, NULL
000030:0x000414b8:	beq	0x0414c8
000030:0x000414c0:	icall	Widget.GetScript(m_grid)
000031:0x000414c8:	cmpcm	m_grid, NULL
000031:0x000414d8:	beq	0x041758
000033:0x000414e0:	ncalli	Man.GetQuickBarSize()
000033:0x000414e8:	cmpi	m_quickbar_size, ret
000033:0x000414f8:	beq	0x041758
000036:0x00041500:	movefm	[0x3cd18618], m_items
000036:0x00041510:	ncalli	map<InventoryItem,vector>.Clear()
000037:0x00041518:	movem	items, m_items
000037:0x00041528:	movefm	[0x3cd17878], m_grid
000037:0x00041538:	call	InventoryGrid.UpdateQuickbarItems(items)
000038:0x00041548:	movefm	[0x3cd17878], m_grid
000038:0x00041558:	call	InventoryGrid.GetRoot()
000038:0x00041560:	ncalli	Widget.GetChildren()
000038:0x00041568:	cmpm	ret, NULL
000038:0x00041578:	beq	0x0415b0
000038:0x00041580:	movefm	[0x3cd17878], m_grid
000038:0x00041590:	call	InventoryGrid.GetRoot()
000038:0x00041598:	ncalli	Widget.GetChildren()
000038:0x000415a0:	ncalli	Widget.Destroy()
000038:0x000415a8:	jump	0x041548
000040:0x000415b0:	ncalli	Man.GetQuickBarSize()
000040:0x000415b8:	move	m_quickbar_size, ret
000041:0x000415c8:	movefm	[0x3cd17878], m_grid
000041:0x000415d8:	call	InventoryGrid.SetGridItemsSize(QUICKBAR_GRID_WIDTH, QUICKBAR_GRID_WIDTH)
000042:0x000415e8:	move	items_horizontal, m_quickbar_size
000042:0x000415f8:	movefm	[0x3cd17878], m_grid
000042:0x00041608:	call	InventoryGrid.SetGridSize(items_horizontal, _i1)
000043:0x00041618:	movetm	controller, this
000043:0x00041628:	movefm	[0x3cd17878], m_grid
000043:0x00041638:	call	InventoryGrid.SetController(controller)
000044:0x00041648:	move	count, m_quickbar_size
000044:0x00041658:	movefm	[0x3cd17878], m_grid
000044:0x00041668:	call	InventoryGrid.GenerateQuickBarBackgroundTiles(count)
000045:0x00041678:	citf	@f00, QUICKBAR_GRID_WIDTH
000045:0x00041688:	divf	size, @f00, _f2.500000
000046:0x00041698:	cfti	size, size
000046:0x000416a8:	movefm	[0x3cd17878], m_grid
000046:0x000416b8:	call	InventoryGrid.SetQuantityPanelSize(size)
000051:0x000416c8:	icall	Widget.GetSize(width, height)
000052:0x000416d0:	icall	Widget.GetPos(x, y)
000053:0x000416d8:	icall	GetScreenSize(screen_w, screen_h)
000054:0x000416e0:	citf	@f02, screen_w
000054:0x000416f0:	divf	@f02, width, @f02
000054:0x00041700:	move	@f01, @f02
000054:0x00041710:	mulf	@f01, @f01, _f0.500000
000054:0x00041720:	move	@f00, @f01
000054:0x00041730:	subf	new_x, _f0.500000, @f00
000056:0x00041740:	ncalli	Widget.SetPos(new_x, _f0.000000, _i1)
000057:0x00041750:	ncalli	Widget.SetColor(_i2147483647)
000061:0x00041758:	ncalli	Man.GetQuickBarSize()
000061:0x00041760:	move	m_quickbar_size, ret
000062:0x00041770:	imove	i, 0x000000
000062:0x00041780:	jump	0x041790
000062:0x00041788:	inc	i
000062:0x00041790:	cmpi	i, m_quickbar_size
000062:0x000417a0:	bge	0x041830
000064:0x000417a8:	ncalli	Man.GetEntityInQuickBar(i)
000064:0x000417b0:	movetm	item, ret
000065:0x000417c0:	cmpcm	item, NULL
000065:0x000417d0:	beq	0x041820
000067:0x000417d8:	movefm	@c00, item
000067:0x000417e8:	citf	[0x11d1e520], i
000067:0x000417f8:	ncall	Vector([0x11d1e520], _f1.000000, _f1.000000)
000067:0x00041808:	movefm	[0x3cd18618], m_items
000067:0x00041818:	icall	map<InventoryItem,vector>.Set(@c00, ret)
000067:0x00041820:	release	item
000067:0x00041828:	jump	0x041788
000071:0x00041830:	cmpcm	m_grid, NULL
000071:0x00041840:	beq	0x041878
000071:0x00041848:	movem	items, m_items
000071:0x00041858:	movefm	[0x3cd17878], m_grid
000071:0x00041868:	call	InventoryGrid.UpdateQuickbarItems(items)
000071:0x00041878:	release	player
000071:0x00041880:	rts
InventoryQuickbar::Remove()
000076:0x000418e8:	ncall	GetGame()
000076:0x000418f0:	ncalli	CGame.GetPlayer()
000076:0x000418f8:	movetm	player, ret
000078:0x00041908:	imove	i, 0x000000
000078:0x00041918:	jump	0x041928
000078:0x00041920:	inc	i
000078:0x00041928:	cmpi	i, m_quickbar_size
000078:0x00041938:	bge	0x0419a0
000080:0x00041940:	ncalli	Man.GetEntityInQuickBar(i)
000080:0x00041948:	movetm	item, ret
000081:0x00041958:	cmpm	item, itemToRemove
000081:0x00041968:	bne	0x041990
000083:0x00041970:	movetm	item, NULL
000083:0x00041980:	call	Man.SetEntityShortcut(item, i)
000083:0x00041990:	release	item
000083:0x00041998:	jump	0x041920
000083:0x000419a0:	release	player
000083:0x000419a8:	rts
InventoryQuickbar::OnItemEnter()
000091:0x00041a00:	call	InventoryGrid.GetRoot()
000091:0x00041a08:	movem	quickbar, ret
000092:0x00041a18:	cmpcm	quickbar, NULL
000092:0x00041a28:	beq	0x041a30
000092:0x00041a30:	release	quickbar
000092:0x00041a38:	rts
InventoryQuickbar::OnItemLeave()
000100:0x00041a60:	call	InventoryGrid.GetRoot()
000100:0x00041a68:	movem	quickbar, ret
000101:0x00041a78:	cmpcm	quickbar, NULL
000101:0x00041a88:	beq	0x041a90
000101:0x00041a90:	release	quickbar
000101:0x00041a98:	rts
InventoryQuickbar::OnItemDraggingOver()
000109:0x00041b20:	ncall	GetGame()
000109:0x00041b28:	ncalli	CGame.GetPlayer()
000109:0x00041b30:	movetm	player, ret
000111:0x00041b40:	ncall	GetGame()
000111:0x00041b48:	ncalli	CGame.GetUIManager()
000111:0x00041b50:	ncalli	UIManager.GetMenu()
000111:0x00041b58:	movetm	menu, ret
000112:0x00041b68:	cmpcm	menu, NULL
000112:0x00041b78:	beq	0x041b80
000117:0x00041b80:	call	GetInstance()
000117:0x00041b88:	movec	manager, ret
000118:0x00041b98:	cmpc	manager, NULL
000118:0x00041ba8:	beq	0x041c88
000120:0x00041bb0:	call	InventoryManager.GetItem()
000120:0x00041bb8:	movem	dragged_item, ret
000121:0x00041bc8:	call	InventoryManager.IsDragging()
000121:0x00041bd0:	cmpi	ret, false
000121:0x00041be0:	beq	0x041c00
000121:0x00041be8:	cmpcm	dragged_item, NULL
000121:0x00041bf8:	bne	0x041c20
000121:0x00041c00:	release	dragged_item
000121:0x00041c08:	release	player
000121:0x00041c10:	release	menu
000121:0x00041c18:	rts
000123:0x00041c20:	cmpcm	dragged_item, NULL
000123:0x00041c30:	beq	0x041c70
000123:0x00041c38:	ncalli	InventoryItem.CanRemoveEntity()
000123:0x00041c40:	cmpi	ret, false
000123:0x00041c50:	bne	0x041c70
000125:0x00041c58:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000125:0x00041c68:	jump	0x041c80
000129:0x00041c70:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000129:0x00041c80:	release	dragged_item
000129:0x00041c88:	release	player
000129:0x00041c90:	release	menu
000129:0x00041c98:	rts
InventoryQuickbar::OnItemDropReceived()
000136:0x00041d50:	ncall	GetGame()
000136:0x00041d58:	ncalli	CGame.GetPlayer()
000136:0x00041d60:	movetm	player, ret
000137:0x00041d70:	call	GetInstance()
000137:0x00041d78:	movec	manager, ret
000138:0x00041d88:	cmpc	manager, NULL
000138:0x00041d98:	beq	0x041f60
000140:0x00041da0:	call	InventoryManager.GetItem()
000140:0x00041da8:	movem	dragged_item, ret
000141:0x00041db8:	ncalli	Man.GetEntityInQuickBar(col)
000141:0x00041dc0:	movetm	quickbar_item, ret
000143:0x00041dd0:	call	InventoryManager.IsDragging()
000143:0x00041dd8:	cmpi	ret, false
000143:0x00041de8:	bne	0x041e28
000143:0x00041df0:	cmpi	m_dragging_index, INDEX_NOT_FOUND
000143:0x00041e00:	bne	0x041e28
000145:0x00041e08:	release	dragged_item
000145:0x00041e10:	release	quickbar_item
000145:0x00041e18:	release	player
000145:0x00041e20:	rts
000148:0x00041e28:	cmpi	m_dragging_index, INDEX_NOT_FOUND
000148:0x00041e38:	beq	0x041e68
000150:0x00041e40:	move	[0x3cd32c08], m_dragging_index
000150:0x00041e50:	ncalli	Man.GetEntityInQuickBar([0x3cd32c08])
000150:0x00041e58:	movetm	dragged_item, ret
000153:0x00041e68:	cmpcm	dragged_item, NULL
000153:0x00041e78:	beq	0x041f38
000153:0x00041e80:	ncalli	InventoryItem.CanRemoveEntity()
000153:0x00041e88:	cmpi	ret, _i0
000153:0x00041e98:	beq	0x041f38
000155:0x00041ea0:	movem	item, dragged_item
000155:0x00041eb0:	call	Man.SetEntityShortcut(item, col)
000157:0x00041ec0:	cmpcm	quickbar_item, NULL
000157:0x00041ed0:	beq	0x041f38
000157:0x00041ed8:	cmpm	quickbar_item, dragged_item
000157:0x00041ee8:	beq	0x041f38
000157:0x00041ef0:	cmpi	m_dragging_index, INDEX_NOT_FOUND
000157:0x00041f00:	beq	0x041f38
000159:0x00041f08:	movem	item, quickbar_item
000159:0x00041f18:	move	index, m_dragging_index
000159:0x00041f28:	call	Man.SetEntityShortcut(item, index)
000162:0x00041f38:	imove	m_dragging_index, 0xffffffff
000163:0x00041f48:	call	InventoryManager.Drop()
000163:0x00041f50:	release	dragged_item
000163:0x00041f58:	release	quickbar_item
000163:0x00041f60:	release	player
000163:0x00041f68:	rts
InventoryQuickbar::OnItemDrop()
000169:0x00041fb0:	cmpi	m_dragging_index, INDEX_NOT_FOUND
000169:0x00041fc0:	beq	0x042040
000171:0x00041fc8:	ncall	GetGame()
000171:0x00041fd0:	ncalli	CGame.GetPlayer()
000171:0x00041fd8:	movetm	player, ret
000172:0x00041fe8:	move	[0x3cd32c08], m_dragging_index
000172:0x00041ff8:	ncalli	Man.GetEntityInQuickBar([0x3cd32c08])
000172:0x00042000:	movetm	dragged_item, ret
000173:0x00042010:	call	InventoryQuickbar.Remove(dragged_item)
000174:0x00042020:	imove	m_dragging_index, 0xffffffff
000174:0x00042030:	release	player
000174:0x00042038:	release	dragged_item
000174:0x00042040:	rts
InventoryQuickbar::OnItemDrag()
000180:0x00042088:	ncall	GetGame()
000180:0x00042090:	ncalli	CGame.GetPlayer()
000180:0x00042098:	movetm	player, ret
000182:0x000420a8:	ncalli	Man.GetEntityInQuickBar(col)
000182:0x000420b0:	movetm	item, ret
000183:0x000420c0:	cmpcm	item, NULL
000183:0x000420d0:	beq	0x042108
000185:0x000420d8:	move	m_dragging_index, col
000186:0x000420e8:	movefm	[0x3cd17878], m_grid
000186:0x000420f8:	call	InventoryGrid.SetItemColor(item, ITEM_COLOR_DRAG)
000186:0x00042108:	release	player
000186:0x00042110:	release	item
000186:0x00042118:	rts
InventoryQuickbar::GetQuickbarWidth()
000200:0x00042120:	imove	ret, 0x000032
000200:0x00042130:	rts
000200:0x00042138:	rts
InventoryQuickbar::GetQuickbarItemColor()
000205:0x00042180:	move	color, ITEM_COLOR_QUICKBAR_NORMAL
000206:0x00042190:	ncall	GetGame()
000206:0x00042198:	ncalli	CGame.GetPlayer()
000206:0x000421a0:	movetm	player, ret
000207:0x000421b0:	cmpcm	player, NULL
000207:0x000421c0:	beq	0x0421f8
000207:0x000421c8:	ncalli	PlayerBase.GetEntityInHands()
000207:0x000421d0:	cmpmc	ret, item
000207:0x000421e0:	bne	0x0421f8
000209:0x000421e8:	move	color, ITEM_COLOR_QUICKBAR_GOOD
000211:0x000421f8:	move	ret, color
000211:0x00042208:	release	player
000211:0x00042210:	rts
000211:0x00042218:	release	player
000211:0x00042220:	rts
InventoryQuickbar::HasItemQuantity()
000217:0x00042268:	call	GetInstance()
000217:0x00042270:	movec	manager, ret
000218:0x00042280:	cmpc	manager, NULL
000218:0x00042290:	beq	0x042328
000220:0x00042298:	cmpcm	item, NULL
000220:0x000422a8:	beq	0x042328
000222:0x000422b0:	movefm	[0x11d0a2c8], item
000222:0x000422c0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000222:0x000422c8:	cmpi	ret, _i0
000222:0x000422d8:	beq	0x042328
000224:0x000422e0:	movem	item, item
000224:0x000422f0:	call	InventoryManager.HasItemQuantity(item)
000224:0x00042300:	move	has_quantity, ret
000225:0x00042310:	move	ret, has_quantity
000225:0x00042320:	rts
000229:0x00042328:	imove	ret, 0x000000
000229:0x00042338:	rts
000229:0x00042340:	rts
InventoryQuickbar::GetItemQuantityText()
000234:0x00042388:	call	GetInstance()
000234:0x00042390:	movec	manager, ret
000235:0x000423a0:	movem	item, item
000235:0x000423b0:	call	InventoryManager.GetItemQuantityText(item)
000235:0x000423c0:	moves	quantity_text, ret
000236:0x000423d0:	moves	ret, quantity_text
000236:0x000423e0:	rts
000236:0x000423e8:	rts
InventoryQuickbar::GetItemQuantity()
000241:0x00042430:	call	GetInstance()
000241:0x00042438:	movec	manager, ret
000242:0x00042448:	call	InventoryManager.GetItemQuantity(item)
000242:0x00042458:	move	quantity, ret
000243:0x00042468:	move	ret, quantity
000243:0x00042478:	rts
000243:0x00042480:	rts
InventoryView::InventoryView()
//scripts/5_Mission/GUI/Inventory/InventoryView/InventoryView.c
000038:0x00042488:	movem	m_container, container
000039:0x00042498:	new	@c00, Link<EntityAI>
000039:0x000424c0:	movec	m_entity, @c00
000040:0x000424d0:	new	@c00, array<InventoryGrid>
000040:0x000424f0:	movetm	m_cargo_grids, @c00
000041:0x00042500:	new	@c00, map<EntityAI,InventoryGrid>
000041:0x00042520:	movetm	m_attachment_grids, @c00
000042:0x00042530:	new	@c00, array<Cargo>
000042:0x00042550:	movetm	m_cargos, @c00
000043:0x00042560:	new	@c00, map<InventoryItem,vector>
000043:0x00042580:	movetm	m_items, @c00
000044:0x00042590:	new	@c00, Timer
000044:0x000425b8:	movec	m_update_lock_timer, @c00
000045:0x000425c8:	move	m_properties, properties
000045:0x000425d8:	rts
InventoryView::~InventoryView()
000050:0x000425e0:	call	InventoryView.SaveHistory()
000051:0x000425e8:	cmpcm	m_root, NULL
000051:0x000425f8:	beq	0x042618
000051:0x00042600:	movefm	[0x11cf2b58], m_root
000051:0x00042610:	ncalli	Widget.Destroy()
000052:0x00042618:	cmpcm	m_container_icon, NULL
000052:0x00042628:	beq	0x042648
000052:0x00042630:	movefm	[0x11cf2b58], m_container_icon
000052:0x00042640:	ncalli	Widget.Destroy()
000052:0x00042648:	rts
InventoryView::CreateLayout()
000057:0x00042848:	call	GetInstance()
000057:0x00042850:	movec	manager, ret
000066:0x00042860:	ncall	GetGame()
000066:0x00042868:	ncalli	CGame.GetWorkspace()
000066:0x00042870:	movefm	[0x7034bb0], m_container
000066:0x00042880:	call	InventoryContainer.GetContentListWidget()
000066:0x00042888:	movefm	[0x11d18388], ret
000066:0x00042898:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryViewRight.layout', [0x11d18388])
000066:0x000428a0:	movetm	m_root, ret
000067:0x000428b0:	movefm	[0x11cf2b58], m_root
000067:0x000428c0:	ncalli	Widget.FindAnyWidget(_s'Content')
000067:0x000428c8:	movetm	m_content, ret
000068:0x000428d8:	movefm	[0x11cf2b58], m_root
000068:0x000428e8:	ncalli	Widget.FindAnyWidget(_s'AttachmentGrid')
000068:0x000428f0:	movetm	m_attachment_grid, ret
000069:0x00042900:	movefm	[0x11cf2b58], m_root
000069:0x00042910:	ncalli	Widget.FindAnyWidget(_s'Body')
000069:0x00042918:	movetm	m_body, ret
000070:0x00042928:	movefm	[0x11cf2b58], m_root
000070:0x00042938:	ncalli	Widget.FindAnyWidget(_s'ImageFrame')
000070:0x00042940:	movetm	m_image_frame, ret
000071:0x00042950:	movefm	[0x11cf2b58], m_root
000071:0x00042960:	ncalli	Widget.FindAnyWidget(_s'HeaderBar')
000071:0x00042968:	movetm	m_header_bar, ret
000072:0x00042978:	movefm	[0x11cf2b58], m_root
000072:0x00042988:	ncalli	Widget.FindAnyWidget(_s'Header')
000072:0x00042990:	movetm	m_header, ret
000073:0x000429a0:	movefm	[0x11cf2b58], m_root
000073:0x000429b0:	ncalli	Widget.FindAnyWidget(_s'Count')
000073:0x000429b8:	movetm	m_count, ret
000074:0x000429c8:	movefm	[0x11cf2b58], m_root
000074:0x000429d8:	ncalli	Widget.FindAnyWidget(_s'MinimizeWidget')
000074:0x000429e0:	movetm	m_minimize_widget, ret
000075:0x000429f0:	movefm	[0x11cf2b58], m_root
000075:0x00042a00:	ncalli	Widget.FindAnyWidget(_s'MaximizeWidget')
000075:0x00042a08:	movetm	m_maximize_widget, ret
000077:0x00042a18:	cmpcm	m_header_bar, NULL
000077:0x00042a28:	beq	0x042a58
000077:0x00042a30:	movec	[0x11d0f728], this
000077:0x00042a40:	movefm	[0x11cf2b58], m_header_bar
000077:0x00042a50:	ncalli	Widget.SetHandler([0x11d0f728])
000078:0x00042a58:	cmpcm	m_header, NULL
000078:0x00042a68:	beq	0x042a98
000078:0x00042a70:	movec	[0x11d0f728], this
000078:0x00042a80:	movefm	[0x11d09418], m_header
000078:0x00042a90:	ncalli	TextWidget.SetHandler([0x11d0f728])
000079:0x00042a98:	cmpcm	m_minimize_widget, NULL
000079:0x00042aa8:	beq	0x042ad8
000079:0x00042ab0:	movec	[0x11d0f728], this
000079:0x00042ac0:	movefm	[0x11cf2b58], m_minimize_widget
000079:0x00042ad0:	ncalli	Widget.SetHandler([0x11d0f728])
000080:0x00042ad8:	cmpcm	m_maximize_widget, NULL
000080:0x00042ae8:	beq	0x042b18
000080:0x00042af0:	movec	[0x11d0f728], this
000080:0x00042b00:	movefm	[0x11cf2b58], m_maximize_widget
000080:0x00042b10:	ncalli	Widget.SetHandler([0x11d0f728])
000081:0x00042b18:	cmpcm	m_body, NULL
000081:0x00042b28:	beq	0x042b58
000081:0x00042b30:	movec	[0x11d0f728], this
000081:0x00042b40:	movefm	[0x11cf2b58], m_body
000081:0x00042b50:	ncalli	Widget.SetHandler([0x11d0f728])
000083:0x00042b58:	cmpcm	m_content, NULL
000083:0x00042b68:	beq	0x042b88
000083:0x00042b70:	movefm	[0x11cf2b58], m_content
000083:0x00042b80:	icall	Widget.GetScript(m_content_spacer)
000084:0x00042b88:	cmpcm	m_body, NULL
000084:0x00042b98:	beq	0x042bb8
000084:0x00042ba0:	movefm	[0x11cf2b58], m_body
000084:0x00042bb0:	icall	Widget.GetScript(m_body_spacer)
000085:0x00042bb8:	cmpcm	m_attachment_grid, NULL
000085:0x00042bc8:	beq	0x042be8
000085:0x00042bd0:	movefm	[0x11cf2b58], m_attachment_grid
000085:0x00042be0:	icall	Widget.GetScript(m_attachment_spacer)
000087:0x00042be8:	movec	[0x45f9f240], m_entity
000087:0x00042bf8:	call	Link<EntityAI>.IsNull()
000087:0x00042c00:	cmpi	ret, _i0
000087:0x00042c10:	beq	0x042c20
000087:0x00042c18:	rts
000089:0x00042c20:	call	InventoryView.InitIconGrid()
000090:0x00042c28:	call	InventoryView.InitAttachmentGrid(TYPE_PANEL_DEFAULT)
000091:0x00042c38:	movec	[0x45f9f240], m_entity
000091:0x00042c48:	call	Link<EntityAI>.Ptr()
000091:0x00042c50:	ncalli	EntityAI.GetCargo()
000091:0x00042c58:	call	InventoryView.InitCargoGrid(ret, TYPE_PANEL_DEFAULT)
000093:0x00042c68:	movec	[0x45f9f240], m_entity
000093:0x00042c78:	call	Link<EntityAI>.Ptr()
000093:0x00042c80:	call	EntityAI.GetName()
000093:0x00042c88:	moves	name, ret
000094:0x00042c98:	icall	ToUpper(name)
000095:0x00042ca0:	call	InventoryView.SetHeaderText(name)
000097:0x00042cb0:	movefm	[0x11cf2b58], m_minimize_widget
000097:0x00042cc0:	ncalli	Widget.Show(false)
000098:0x00042cc8:	movefm	[0x11cf2b58], m_maximize_widget
000098:0x00042cd8:	ncalli	Widget.Show(false)
000101:0x00042ce0:	imove	m_IsExpandable, 0x000000
000102:0x00042cf0:	movec	[0x45f9f240], m_entity
000102:0x00042d00:	call	Link<EntityAI>.Ptr()
000102:0x00042d08:	ncalli	EntityAI.GetCargo()
000102:0x00042d10:	cmpc	ret, NULL
000102:0x00042d20:	beq	0x042d78
000102:0x00042d28:	movec	[0x45f9f240], m_entity
000102:0x00042d38:	call	Link<EntityAI>.Ptr()
000102:0x00042d40:	ncalli	EntityAI.GetCargo()
000102:0x00042d48:	ncalli	Cargo.GetHeight()
000102:0x00042d50:	cmpi	ret, _i0
000102:0x00042d60:	ble	0x042d78
000104:0x00042d68:	imove	m_IsExpandable, 0x000001
000106:0x00042d78:	movec	[0x45f9f240], m_entity
000106:0x00042d88:	call	Link<EntityAI>.Ptr()
000106:0x00042d90:	ncalli	EntityAI.GetSlotsCount()
000106:0x00042d98:	cmpi	ret, _i0
000106:0x00042da8:	ble	0x042dc0
000108:0x00042db0:	imove	m_IsExpandable, 0x000001
000110:0x00042dc0:	call	InventoryView.UpdateHeight(TYPE_PANEL_DEFAULT)
000112:0x00042dd0:	call	InventoryView.IsHistoryExpanded()
000112:0x00042dd8:	cmpi	ret, _i0
000112:0x00042de8:	bne	0x042e20
000112:0x00042df0:	movefm	[0x11cf2b58], m_body
000112:0x00042e00:	ncalli	Widget.IsVisible()
000112:0x00042e08:	cmpi	ret, _i0
000112:0x00042e18:	beq	0x042e70
000114:0x00042e20:	movefm	[0x11cf2b58], m_minimize_widget
000114:0x00042e30:	ncalli	Widget.Show(true)
000115:0x00042e38:	movefm	[0x11cf2b58], m_maximize_widget
000115:0x00042e48:	ncalli	Widget.Show(false)
000116:0x00042e50:	movefm	[0x11cf2b58], m_body
000116:0x00042e60:	ncalli	Widget.Show(true)
000116:0x00042e68:	jump	0x042eb8
000120:0x00042e70:	movefm	[0x11cf2b58], m_minimize_widget
000120:0x00042e80:	ncalli	Widget.Show(false)
000121:0x00042e88:	movefm	[0x11cf2b58], m_maximize_widget
000121:0x00042e98:	ncalli	Widget.Show(true)
000122:0x00042ea0:	movefm	[0x11cf2b58], m_body
000122:0x00042eb0:	ncalli	Widget.Show(false)
000133:0x00042eb8:	movec	[0x45f9f240], m_entity
000133:0x00042ec8:	call	Link<EntityAI>.Ptr()
000133:0x00042ed0:	call	InventoryView.SetHeaderCountText(ret)
000136:0x00042ee0:	movefm	[0x11cf2b58], m_root
000136:0x00042ef0:	ncalli	Widget.FindAnyWidget(_s'GridBck')
000136:0x00042ef8:	movetm	item_ww, ret
000137:0x00042f08:	cmpcm	item_ww, NULL
000137:0x00042f18:	beq	0x042f28
000139:0x00042f20:	ncalli	Widget.SetColor(_i0)
000143:0x00042f28:	movefm	[0x11cf2b58], m_root
000143:0x00042f38:	ncalli	Widget.FindAnyWidget(_s'LockImage')
000143:0x00042f40:	movetm	lock_image, ret
000163:0x00042f50:	ncalli	ImageWidget.Show(false)
000169:0x00042f58:	movec	[0x45f9f240], m_entity
000169:0x00042f68:	call	Link<EntityAI>.Ptr()
000169:0x00042f70:	movefm	[0x11d0a2c8], ret
000169:0x00042f80:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000169:0x00042f88:	cmpi	ret, _i0
000169:0x00042f98:	beq	0x043010
000171:0x00042fa0:	cmpcm	m_icon_grid, NULL
000171:0x00042fb0:	beq	0x043010
000173:0x00042fb8:	movefm	[0x3cd17878], m_icon_grid
000173:0x00042fc8:	call	InventoryGrid.GetItemBackground(_i0)
000173:0x00042fd8:	movem	item_w, ret
000174:0x00042fe8:	cmpcm	item_w, NULL
000174:0x00042ff8:	beq	0x043008
000176:0x00043000:	ncalli	Widget.ClearFlags(_i524288, _i1)
000176:0x00043008:	release	item_w
000176:0x00043010:	release	item_ww
000176:0x00043018:	release	lock_image
000176:0x00043020:	rts
InventoryView::UpdateItems()
000185:0x000430c8:	movec	[0x45f9f240], m_entity
000185:0x000430d8:	call	Link<EntityAI>.IsNull()
000185:0x000430e0:	cmpi	ret, _i0
000185:0x000430f0:	beq	0x043100
000185:0x000430f8:	rts
000186:0x00043100:	movec	[0x3cd17138], m_update_lock_timer
000186:0x00043110:	call	Timer.IsRunning()
000186:0x00043118:	cmpi	ret, _i0
000186:0x00043128:	beq	0x043138
000186:0x00043130:	rts
000187:0x00043138:	call	GetInstance()
000187:0x00043140:	movec	manager, ret
000189:0x00043150:	call	InventoryView.UpdateAttachmentGrid()
000192:0x00043158:	movefm	[0x3cd2cfb8], m_cargos
000192:0x00043168:	ncalli	array<Cargo>.Count()
000192:0x00043170:	move	c, ret
000193:0x00043180:	imove	i, 0x000000
000193:0x00043190:	jump	0x0431a0
000193:0x00043198:	inc	i
000193:0x000431a0:	cmpi	i, c
000193:0x000431b0:	bge	0x0431d0
000195:0x000431b8:	call	InventoryView.UpdateCargoGrid(i)
000195:0x000431c8:	jump	0x043198
000198:0x000431d0:	call	InventoryView.UpdateIconGrid()
000200:0x000431d8:	cmpcm	m_container_icon, NULL
000200:0x000431e8:	beq	0x043288
000202:0x000431f0:	movefm	[0x11cf2b58], m_container_icon
000202:0x00043200:	ncalli	Widget.FindAnyWidget(_s'Quantity')
000202:0x00043208:	movetm	item_quantity, ret
000203:0x00043218:	cmpcm	item_quantity, NULL
000203:0x00043228:	beq	0x043280
000205:0x00043230:	movec	[0x45f9f240], m_entity
000205:0x00043240:	call	Link<EntityAI>.Ptr()
000205:0x00043248:	movefm	@c01, ret
000205:0x00043258:	movetm	item, @c01
000205:0x00043268:	call	InventoryManager.GetItemQuantityText(item)
000205:0x00043278:	ncalli	TextWidget.SetText(ret)
000205:0x00043280:	release	item_quantity
000209:0x00043288:	call	InventoryView.UpdateHeight(TYPE_PANEL_DEFAULT)
000211:0x00043298:	movec	[0x45f9f240], m_entity
000211:0x000432a8:	call	Link<EntityAI>.Ptr()
000211:0x000432b0:	call	InventoryView.SetHeaderCountText(ret)
000213:0x000432c0:	movefm	[0x3cd18378], m_body_spacer
000213:0x000432d0:	call	AutoHeightSpacer.Update()
000214:0x000432d8:	movefm	[0x3cd18378], m_content_spacer
000214:0x000432e8:	call	AutoHeightSpacer.Update()
000214:0x000432f0:	rts
InventoryView::UpdateHeight()
000219:0x00043558:	call	GetInstance()
000219:0x00043560:	movec	manager, ret
000221:0x00043570:	call	InventoryManager.GetNormalItemSize()
000221:0x00043578:	cfti	cargo_item_height, ret
000222:0x00043588:	call	InventoryManager.GetAttachmentItemSize()
000222:0x00043590:	cfti	icon_height, ret
000223:0x000435a0:	cfti	max_grid_width, MAX_ATTACHMENT_GRID_WIDTH
000224:0x000435b0:	cmpi	panel_type, TYPE_PANEL_HANDS
000224:0x000435c0:	bne	0x043608
000226:0x000435c8:	call	InventoryManager.GetHandsNormalItemSize()
000226:0x000435d0:	cfti	cargo_item_height, ret
000227:0x000435e0:	call	InventoryManager.GetHandsAttachmentItemSize()
000227:0x000435e8:	cfti	icon_height, ret
000228:0x000435f8:	cfti	max_grid_width, MAX_HANDS_ATTACHMENT_GRID_WIDTH
000232:0x00043608:	imove	cargo_height, 0x000000
000233:0x00043618:	imove	attachment_height, 0x000000
000234:0x00043628:	movec	[0x45f9f240], m_entity
000234:0x00043638:	call	Link<EntityAI>.Ptr()
000234:0x00043640:	ncalli	EntityAI.GetCargo()
000234:0x00043648:	cmpc	ret, NULL
000234:0x00043658:	beq	0x043748
000234:0x00043660:	movec	[0x45f9f240], m_entity
000234:0x00043670:	call	Link<EntityAI>.Ptr()
000234:0x00043678:	ncalli	EntityAI.GetCargo()
000234:0x00043680:	ncalli	Cargo.GetHeight()
000234:0x00043688:	cmpi	ret, _i0
000234:0x00043698:	ble	0x043748
000236:0x000436a0:	movec	[0x45f9f240], m_entity
000236:0x000436b0:	call	Link<EntityAI>.Ptr()
000236:0x000436b8:	ncalli	EntityAI.GetCargo()
000236:0x000436c0:	ncalli	Cargo.GetHeight()
000236:0x000436c8:	move	cargo_height, ret
000237:0x000436d8:	citf	@f01, cargo_item_height
000237:0x000436e8:	addf	@f01, @f01, GRID_CARGO_GAP
000237:0x000436f8:	move	@f00, @f01
000237:0x00043708:	citf	@f02, cargo_height
000237:0x00043718:	mulf	@f01, @f02, @f00
000237:0x00043728:	cfti	@m00, @f01
000237:0x00043738:	move	cargo_height, @m00
000239:0x00043748:	movec	[0x45f9f240], m_entity
000239:0x00043758:	call	Link<EntityAI>.Ptr()
000239:0x00043760:	ncalli	EntityAI.AttachmentsCount()
000239:0x00043768:	move	ac, ret
000240:0x00043778:	movec	[0x45f9f240], m_entity
000240:0x00043788:	call	Link<EntityAI>.Ptr()
000240:0x00043790:	ncalli	EntityAI.GetSlotsCount()
000240:0x00043798:	move	sc, ret
000242:0x000437a8:	cmpi	sc, _i0
000242:0x000437b8:	ble	0x0438d8
000242:0x000437c0:	movec	[0x45f9f240], m_entity
000242:0x000437d0:	call	Link<EntityAI>.Ptr()
000242:0x000437d8:	movefm	[0x11d0a2c8], ret
000242:0x000437e8:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000242:0x000437f0:	cmpi	ret, _i0
000242:0x00043800:	bne	0x0438d8
000245:0x00043808:	movefm	[0x11cf2b58], m_attachment_grid
000245:0x00043818:	icall	Widget.GetPos(x, y)
000246:0x00043820:	citf	[0x11d0ee70], cargo_height
000246:0x00043830:	movefm	[0x11cf2b58], m_attachment_grid
000246:0x00043840:	ncalli	Widget.SetPos(x, [0x11d0ee70], _i1)
000247:0x00043850:	move	attachment_height, ac
000248:0x00043860:	cmpi	attachment_height, max_grid_width
000248:0x00043870:	blt	0x0438a8
000250:0x00043878:	divi	@m00, attachment_height, max_grid_width
000250:0x00043888:	move	attachment_height, @m00
000251:0x00043898:	inc	attachment_height
000251:0x000438a0:	jump	0x0438b8
000255:0x000438a8:	imove	attachment_height, 0x000001
000257:0x000438b8:	muli	@m00, attachment_height, icon_height
000257:0x000438c8:	move	attachment_height, @m00
000260:0x000438d8:	addi	height, cargo_height, attachment_height
000261:0x000438e8:	cmpi	cargo_height, _i0
000261:0x000438f8:	beq	0x043948
000261:0x00043900:	cmpi	attachment_height, _i0
000261:0x00043910:	beq	0x043948
000263:0x00043918:	movefm	[0x3cd18378], m_content_spacer
000263:0x00043928:	addi	@m00, height, Gap
000263:0x00043938:	move	height, @m00
000265:0x00043948:	movefm	[0x3cd18378], m_body_spacer
000265:0x00043958:	move	MinHeight, height
000266:0x00043968:	movefm	[0x3cd18378], m_body_spacer
000266:0x00043978:	move	MaxHeight, height
000266:0x00043988:	rts
InventoryView::SetHeaderText()
000271:0x00043990:	cmpcm	m_header, NULL
000271:0x000439a0:	beq	0x0439c0
000271:0x000439a8:	movefm	[0x11d09418], m_header
000271:0x000439b8:	ncalli	TextWidget.SetText(text)
000271:0x000439c0:	rts
InventoryView::SetHeaderCountText()
000276:0x00043c68:	imove	slots_used, 0x000000
000277:0x00043c78:	imove	slots_count, 0x000000
000278:0x00043c88:	ncalli	EntityAI.GetCargo()
000278:0x00043c90:	cmpc	ret, NULL
000278:0x00043ca0:	beq	0x043ed8
000278:0x00043ca8:	ncalli	EntityAI.GetCargo()
000278:0x00043cb0:	ncalli	Cargo.GetHeight()
000278:0x00043cb8:	cmpi	ret, _i0
000278:0x00043cc8:	ble	0x043ed8
000280:0x00043cd0:	ncalli	EntityAI.GetCargo()
000280:0x00043cd8:	ncalli	Cargo.GetWidth()
000280:0x00043ce0:	pushc	ret
000280:0x00043ce8:	ncalli	EntityAI.GetCargo()
000280:0x00043cf0:	movec	@c00, ret
000280:0x00043d00:	popc	ret
000280:0x00043d08:	ncalli	Cargo.GetHeight()
000280:0x00043d10:	muli	@m00, ret, ret
000280:0x00043d20:	move	slots_count, @m00
000282:0x00043d30:	movefm	[0x3cd2cfb8], m_cargos
000282:0x00043d40:	ncalli	array<Cargo>.Count()
000282:0x00043d48:	subi	cargo_index, ret, _i1
000284:0x00043d58:	ncalli	EntityAI.GetCargo()
000284:0x00043d60:	movec	cargo, ret
000285:0x00043d70:	cmpc	cargo, NULL
000285:0x00043d80:	beq	0x043e30
000287:0x00043d88:	ncalli	Cargo.GetItemCount()
000287:0x00043d90:	move	c, ret
000288:0x00043da0:	imove	i, 0x000000
000288:0x00043db0:	jump	0x043dc0
000288:0x00043db8:	inc	i
000288:0x00043dc0:	cmpi	i, c
000288:0x00043dd0:	bge	0x043e30
000290:0x00043dd8:	icall	Cargo.GetItemSize(i, w, h)
000291:0x00043de8:	muli	@m01, w, h
000291:0x00043df8:	move	@m00, @m01
000291:0x00043e08:	addi	@m00, slots_used, @m00
000291:0x00043e18:	move	slots_used, @m00
000291:0x00043e28:	jump	0x043db8
000294:0x00043e30:	cmpcm	m_count, NULL
000294:0x00043e40:	beq	0x043ed0
000294:0x00043e48:	icall	ToString(slots_used)
000294:0x00043e50:	adds	@s03, ret, _s'/'
000294:0x00043e60:	moves	@s01, @s03
000294:0x00043e70:	pushs	ret
000294:0x00043e78:	icall	ToString(slots_count)
000294:0x00043e80:	moves	@s03, ret
000294:0x00043e90:	pops	ret
000294:0x00043e98:	adds	@s01, @s01, @s03
000294:0x00043ea8:	moves	@s00, @s01
000294:0x00043eb8:	movefm	[0x11d09418], m_count
000294:0x00043ec8:	ncalli	TextWidget.SetText(@s00)
000294:0x00043ed0:	jump	0x044068
000296:0x00043ed8:	ncalli	EntityAI.GetSlotsCount()
000296:0x00043ee0:	cmpi	ret, _i0
000296:0x00043ef0:	ble	0x044068
000298:0x00043ef8:	ncalli	EntityAI.AttachmentsCount()
000298:0x00043f00:	move	ac, ret
000299:0x00043f10:	ncalli	EntityAI.GetSlotsCount()
000299:0x00043f18:	move	sc, ret
000300:0x00043f28:	movefm	[0x11d0a2c8], entity
000300:0x00043f38:	ncall	IsInherited([0x11d0a2c8], _T(EN5C_BinocularsBase))
000300:0x00043f40:	move	is_binocular, ret
000303:0x00043f50:	cmpi	is_binocular, false
000303:0x00043f60:	bne	0x043ff0
000305:0x00043f68:	call	EntityAI.IsWeapon()
000305:0x00043f70:	cmpi	ret, _i0
000305:0x00043f80:	beq	0x043fc8
000307:0x00043f88:	movem	weapon, entity
000308:0x00043f98:	ncalli	Weapon.GetMuzzlesCount()
000308:0x00043fa0:	move	@m00, ret
000308:0x00043fb0:	addi	sc, sc, @m00
000308:0x00043fc0:	release	weapon
000310:0x00043fc8:	cmpi	ac, sc
000310:0x00043fd8:	ble	0x043ff0
000310:0x00043fe0:	move	sc, ac
000312:0x00043ff0:	move	slots_count, sc
000313:0x00044000:	move	slots_used, ac
000314:0x00044010:	cmpcm	m_count, NULL
000314:0x00044020:	beq	0x044068
000314:0x00044028:	icall	ToString(slots_used)
000314:0x00044030:	adds	@s01, _s'+', ret
000314:0x00044040:	moves	@s00, @s01
000314:0x00044050:	movefm	[0x11d09418], m_count
000314:0x00044060:	ncalli	TextWidget.SetText(@s00)
000314:0x00044068:	rts
InventoryView::AddProxyCargo()
000320:0x00044070:	movefm	[0x3cd2cfb8], m_cargos
000320:0x00044080:	icall	array<Cargo>.Find(proxyCargo)
000320:0x00044088:	cmpi	ret, INDEX_NOT_FOUND
000320:0x00044098:	bne	0x0440b0
000322:0x000440a0:	call	InventoryView.InitCargoGrid(proxyCargo, TYPE_PANEL_DEFAULT)
000322:0x000440b0:	rts
InventoryView::UpdateLock()
000328:0x000440d8:	movec	obj, this
000328:0x000440e8:	movec	params, NULL
000328:0x000440f8:	movec	[0x3cd17138], m_update_lock_timer
000328:0x00044108:	call	Timer.Run(_f0.500000, obj, _s'UpdateUnlock', params, false)
000328:0x00044120:	rts
InventoryView::UpdateUnlock()
000333:0x00044128:	call	InventoryView.UpdateItems()
000333:0x00044130:	rts
InventoryView::InitAttachmentGrid()
000338:0x00044318:	call	InventoryView.HasProperty(ATTACHMENTS)
000338:0x00044328:	cmpi	ret, _i0
000338:0x00044338:	bne	0x044348
000338:0x00044340:	rts
000340:0x00044348:	call	GetInstance()
000340:0x00044350:	movec	manager, ret
000341:0x00044360:	movec	[0x45f9f240], m_entity
000341:0x00044370:	call	Link<EntityAI>.Ptr()
000341:0x00044378:	ncalli	EntityAI.AttachmentsCount()
000341:0x00044380:	move	ac, ret
000342:0x00044390:	movec	[0x45f9f240], m_entity
000342:0x000443a0:	call	Link<EntityAI>.Ptr()
000342:0x000443a8:	ncalli	EntityAI.GetSlotsCount()
000342:0x000443b0:	move	sc, ret
000344:0x000443c0:	call	InventoryManager.GetAttachmentItemSize()
000344:0x000443c8:	cfti	item_width, ret
000345:0x000443d8:	call	InventoryManager.GetAttachmentItemSize()
000345:0x000443e0:	cfti	item_height, ret
000346:0x000443f0:	cfti	max_grid_width, MAX_ATTACHMENT_GRID_WIDTH
000347:0x00044400:	cmpi	panel_type, TYPE_PANEL_HANDS
000347:0x00044410:	bne	0x044458
000349:0x00044418:	call	InventoryManager.GetHandsAttachmentItemSize()
000349:0x00044420:	cfti	item_width, ret
000350:0x00044430:	call	InventoryManager.GetHandsAttachmentItemSize()
000350:0x00044438:	cfti	item_height, ret
000351:0x00044448:	cfti	max_grid_width, MAX_HANDS_ATTACHMENT_GRID_WIDTH
000354:0x00044458:	movec	[0x45f9f240], m_entity
000354:0x00044468:	call	Link<EntityAI>.Ptr()
000354:0x00044470:	movefm	[0x11d0a2c8], ret
000354:0x00044480:	ncall	IsInherited([0x11d0a2c8], _T(EN5C_BinocularsBase))
000354:0x00044488:	move	is_binocular, ret
000357:0x00044498:	cmpi	is_binocular, false
000357:0x000444a8:	bne	0x044568
000359:0x000444b0:	movec	[0x45f9f240], m_entity
000359:0x000444c0:	call	Link<EntityAI>.Ptr()
000359:0x000444c8:	call	EntityAI.IsWeapon()
000359:0x000444d0:	cmpi	ret, _i0
000359:0x000444e0:	beq	0x044540
000362:0x000444e8:	movec	[0x45f9f240], m_entity
000362:0x000444f8:	call	Link<EntityAI>.Ptr()
000362:0x00044500:	movem	weapon, ret
000363:0x00044510:	ncalli	Weapon.GetMuzzlesCount()
000363:0x00044518:	move	@m00, ret
000363:0x00044528:	addi	sc, sc, @m00
000363:0x00044538:	release	weapon
000366:0x00044540:	cmpi	ac, sc
000366:0x00044550:	ble	0x044568
000366:0x00044558:	move	sc, ac
000369:0x00044568:	cmpi	sc, _i0
000369:0x00044578:	bne	0x044588
000369:0x00044580:	rts
000371:0x00044588:	cmpcm	m_attachment_grid, NULL
000371:0x00044598:	beq	0x0445b8
000371:0x000445a0:	movefm	[0x11cf2b58], m_attachment_grid
000371:0x000445b0:	icall	Widget.GetScript(m_attachment_icon_grid)
000372:0x000445b8:	cmpcm	m_attachment_grid, NULL
000372:0x000445c8:	beq	0x044960
000374:0x000445d0:	imove	i, 0x000000
000374:0x000445e0:	jump	0x0445f0
000374:0x000445e8:	inc	i
000374:0x000445f0:	cmpi	i, ac
000374:0x00044600:	bge	0x044898
000377:0x00044608:	ncall	GetGame()
000377:0x00044610:	ncalli	CGame.GetWorkspace()
000377:0x00044618:	movefm	[0x11d18388], m_attachment_grid
000377:0x00044628:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryIcon.layout', [0x11d18388])
000377:0x00044630:	movetm	attachment_icon, ret
000379:0x00044640:	cmpcm	attachment_icon, NULL
000379:0x00044650:	beq	0x044660
000379:0x00044658:	icall	Widget.GetScript(m_attachment_slot_grid)
000380:0x00044660:	cmpcm	m_attachment_slot_grid, NULL
000380:0x00044670:	beq	0x044888
000382:0x00044678:	movec	[0x45f9f240], m_entity
000382:0x00044688:	call	Link<EntityAI>.Ptr()
000382:0x00044690:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000382:0x00044698:	movetm	entity, ret
000383:0x000446a8:	movefm	@c00, entity
000383:0x000446b8:	movefm	@c01, m_attachment_slot_grid
000383:0x000446c8:	movefm	[0x703fb70], m_attachment_grids
000383:0x000446d8:	icall	map<EntityAI,InventoryGrid>.Set(@c00, @c01)
000385:0x000446e0:	cmpcm	entity, NULL
000385:0x000446f0:	beq	0x044880
000387:0x000446f8:	call	InventoryManager.GetAttachmentItemSize()
000387:0x00044700:	cfti	item_size_width, ret
000387:0x00044710:	push	ret
000387:0x00044718:	call	InventoryManager.GetAttachmentItemSize()
000387:0x00044720:	move	@f00, ret
000387:0x00044730:	pop	ret
000387:0x00044738:	cfti	item_size_height, @f00
000387:0x00044748:	movefm	[0x3cd17878], m_attachment_slot_grid
000387:0x00044758:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000388:0x00044768:	movefm	[0x3cd17878], m_attachment_slot_grid
000388:0x00044778:	call	InventoryGrid.SetGridSize(_i1, _i1)
000389:0x00044788:	movetm	controller, this
000389:0x00044798:	movefm	[0x3cd17878], m_attachment_slot_grid
000389:0x000447a8:	call	InventoryGrid.SetController(controller)
000390:0x000447b8:	movefm	[0x3cd17878], m_attachment_slot_grid
000390:0x000447c8:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000391:0x000447d8:	call	InventoryManager.GetQuantityStackPanelSize()
000391:0x000447e0:	cfti	size, ret
000391:0x000447f0:	movefm	[0x3cd17878], m_attachment_slot_grid
000391:0x00044800:	call	InventoryGrid.SetQuantityPanelSize(size)
000392:0x00044810:	movem	item, entity
000392:0x00044820:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000392:0x00044830:	pushv	ret
000392:0x00044838:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000392:0x00044848:	movev	@v00, ret
000392:0x00044858:	popv	ret
000392:0x00044860:	movefm	[0x3cd17878], m_attachment_slot_grid
000392:0x00044870:	call	InventoryGrid.AddItem(item, ret, @v00)
000392:0x00044880:	release	entity
000392:0x00044888:	release	attachment_icon
000392:0x00044890:	jump	0x0445e8
000397:0x00044898:	cmpi	ac, sc
000397:0x000448a8:	bge	0x044960
000399:0x000448b0:	ncall	GetGame()
000399:0x000448b8:	ncalli	CGame.GetWorkspace()
000399:0x000448c0:	movefm	[0x11d18388], m_attachment_grid
000399:0x000448d0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridItemEmpty.layout', [0x11d18388])
000399:0x000448d8:	movetm	m_empty_attachment_slot, ret
000400:0x000448e8:	call	InventoryManager.GetAttachmentItemSize()
000400:0x000448f0:	push	ret
000400:0x000448f8:	call	InventoryManager.GetAttachmentItemSize()
000400:0x00044900:	move	@f02, ret
000400:0x00044910:	pop	ret
000400:0x00044918:	movefm	[0x11cf2b58], m_empty_attachment_slot
000400:0x00044928:	ncalli	Widget.SetSize(ret, @f02, _i1)
000401:0x00044938:	movec	[0x11d0f728], this
000401:0x00044948:	movefm	[0x11cf2b58], m_empty_attachment_slot
000401:0x00044958:	ncalli	Widget.SetHandler([0x11d0f728])
000401:0x00044960:	rts
InventoryView::InitIconGrid()
000408:0x00044a40:	movefm	[0x11cf2b58], m_image_frame
000408:0x00044a50:	ncalli	Widget.FindAnyWidget(_s'Grid')
000408:0x00044a58:	movetm	imageGridW, ret
000409:0x00044a68:	movefm	[0x11cf2b58], m_image_frame
000409:0x00044a78:	ncalli	Widget.FindAnyWidget(_s'Icon')
000409:0x00044a80:	movetm	imageW, ret
000410:0x00044a90:	call	GetInstance()
000410:0x00044a98:	movec	manager, ret
000412:0x00044aa8:	movec	[0x45f9f240], m_entity
000412:0x00044ab8:	call	Link<EntityAI>.Ptr()
000412:0x00044ac0:	movefm	[0x11d0a2c8], ret
000412:0x00044ad0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000412:0x00044ad8:	cmpi	ret, _i0
000412:0x00044ae8:	bne	0x044af0
000423:0x00044af0:	cmpcm	imageGridW, NULL
000423:0x00044b00:	beq	0x044b10
000423:0x00044b08:	ncalli	Widget.Show(true)
000424:0x00044b10:	cmpcm	imageW, NULL
000424:0x00044b20:	beq	0x044b30
000424:0x00044b28:	ncalli	Widget.Show(false)
000426:0x00044b30:	cmpcm	imageGridW, NULL
000426:0x00044b40:	beq	0x044b50
000426:0x00044b48:	icall	Widget.GetScript(m_icon_grid)
000428:0x00044b50:	cmpcm	m_icon_grid, NULL
000428:0x00044b60:	beq	0x044ce8
000430:0x00044b68:	movetm	controller, this
000430:0x00044b78:	movefm	[0x3cd17878], m_icon_grid
000430:0x00044b88:	call	InventoryGrid.SetController(controller)
000431:0x00044b98:	call	InventoryManager.GetIconItemSize()
000431:0x00044ba0:	cfti	item_size_width, ret
000431:0x00044bb0:	push	ret
000431:0x00044bb8:	call	InventoryManager.GetIconItemSize()
000431:0x00044bc0:	move	@f00, ret
000431:0x00044bd0:	pop	ret
000431:0x00044bd8:	cfti	item_size_height, @f00
000431:0x00044be8:	movefm	[0x3cd17878], m_icon_grid
000431:0x00044bf8:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000432:0x00044c08:	movefm	[0x3cd17878], m_icon_grid
000432:0x00044c18:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000433:0x00044c28:	call	InventoryManager.GetQuantityStackPanelSize()
000433:0x00044c30:	cfti	size, ret
000433:0x00044c40:	movefm	[0x3cd17878], m_icon_grid
000433:0x00044c50:	call	InventoryGrid.SetQuantityPanelSize(size)
000434:0x00044c60:	movec	[0x45f9f240], m_entity
000434:0x00044c70:	call	Link<EntityAI>.Ptr()
000434:0x00044c78:	movem	item, ret
000434:0x00044c88:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000434:0x00044c98:	pushv	ret
000434:0x00044ca0:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000434:0x00044cb0:	movev	@v00, ret
000434:0x00044cc0:	popv	ret
000434:0x00044cc8:	movefm	[0x3cd17878], m_icon_grid
000434:0x00044cd8:	call	InventoryGrid.AddItem(item, ret, @v00)
000434:0x00044ce8:	release	imageGridW
000434:0x00044cf0:	release	imageW
000434:0x00044cf8:	rts
InventoryView::InitCargoGrid()
000440:0x00044e20:	call	InventoryView.HasProperty(CARGOS)
000440:0x00044e30:	cmpi	ret, _i0
000440:0x00044e40:	bne	0x044e50
000440:0x00044e48:	rts
000442:0x00044e50:	cmpc	cargo, NULL
000442:0x00044e60:	beq	0x045130
000444:0x00044e68:	call	GetInstance()
000444:0x00044e70:	movec	manager, ret
000447:0x00044e80:	movefm	[0x3cd2cfb8], m_cargos
000447:0x00044e90:	icall	array<Cargo>.Insert(cargo)
000450:0x00044e98:	cmpcm	m_container, NULL
000450:0x00044ea8:	beq	0x044f20
000450:0x00044eb0:	movefm	[0x7034bb0], m_container
000450:0x00044ec0:	call	InventoryContainer.IsOwnedByPlayer()
000450:0x00044ec8:	cmpi	ret, _i0
000450:0x00044ed8:	beq	0x044f20
000452:0x00044ee0:	ncall	GetGame()
000452:0x00044ee8:	ncalli	CGame.GetWorkspace()
000452:0x00044ef0:	movefm	[0x11d18388], m_content
000452:0x00044f00:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridRight.layout', [0x11d18388])
000452:0x00044f08:	movetm	cargoGridW, ret
000452:0x00044f18:	jump	0x044f58
000456:0x00044f20:	ncall	GetGame()
000456:0x00044f28:	ncalli	CGame.GetWorkspace()
000456:0x00044f30:	movefm	[0x11d18388], m_content
000456:0x00044f40:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGrid.layout', [0x11d18388])
000456:0x00044f48:	movetm	cargoGridW, ret
000459:0x00044f58:	cmpcm	cargoGridW, NULL
000459:0x00044f68:	beq	0x044f78
000459:0x00044f70:	icall	Widget.GetScript(cargo_grid)
000460:0x00044f78:	cmpcm	cargo_grid, NULL
000460:0x00044f88:	beq	0x045120
000462:0x00044f90:	movefm	@c00, cargo_grid
000462:0x00044fa0:	movefm	[0x7035fd8], m_cargo_grids
000462:0x00044fb0:	icall	array<InventoryGrid>.Insert(@c00)
000463:0x00044fb8:	call	InventoryManager.GetNormalItemSize()
000463:0x00044fc0:	cfti	width, ret
000464:0x00044fd0:	cmpi	panel_type, TYPE_PANEL_HANDS
000464:0x00044fe0:	bne	0x045000
000466:0x00044fe8:	call	InventoryManager.GetHandsNormalItemSize()
000466:0x00044ff0:	cfti	width, ret
000468:0x00045000:	call	InventoryGrid.SetGridItemsSize(width, width)
000469:0x00045010:	cfti	gap_size, GRID_CARGO_GAP
000469:0x00045020:	call	InventoryGrid.SetGridGapSize(gap_size)
000470:0x00045030:	ncalli	Cargo.GetWidth()
000470:0x00045038:	ncalli	Cargo.GetHeight()
000470:0x00045040:	call	InventoryGrid.SetGridSize(ret, ret)
000471:0x00045050:	movetm	controller, this
000471:0x00045060:	call	InventoryGrid.SetController(controller)
000472:0x00045070:	ncalli	Cargo.GetWidth()
000472:0x00045078:	ncalli	Cargo.GetHeight()
000472:0x00045080:	muli	@m01, ret, ret
000472:0x00045090:	move	@m00, @m01
000472:0x000450a0:	call	InventoryGrid.GenerateBackgroundTiles(@m00)
000473:0x000450b0:	call	InventoryManager.GetQuantityStackPanelSize()
000473:0x000450b8:	cfti	size, ret
000473:0x000450c8:	call	InventoryGrid.SetQuantityPanelSize(size)
000475:0x000450d8:	movefm	[0x3cd2cfb8], m_cargos
000475:0x000450e8:	ncalli	array<Cargo>.Count()
000475:0x000450f0:	subi	@m01, ret, _i1
000475:0x00045100:	move	@m00, @m01
000475:0x00045110:	call	InventoryView.UpdateCargoGrid(@m00)
000475:0x00045120:	release	cargo_grid
000475:0x00045128:	release	cargoGridW
000475:0x00045130:	rts
InventoryView::UpdateAttachmentGrid()
000482:0x00045550:	call	InventoryView.HasProperty(ATTACHMENTS)
000482:0x00045560:	cmpi	ret, _i0
000482:0x00045570:	bne	0x045580
000482:0x00045578:	rts
000483:0x00045580:	call	GetInstance()
000483:0x00045588:	movec	manager, ret
000487:0x00045598:	movec	[0x45f9f240], m_entity
000487:0x000455a8:	call	Link<EntityAI>.Ptr()
000487:0x000455b0:	ncalli	EntityAI.GetSlotsCount()
000487:0x000455b8:	move	sc, ret
000488:0x000455c8:	movec	[0x45f9f240], m_entity
000488:0x000455d8:	call	Link<EntityAI>.Ptr()
000488:0x000455e0:	ncalli	EntityAI.AttachmentsCount()
000488:0x000455e8:	move	ac, ret
000493:0x000455f8:	new	@c00, array<EntityAI>
000493:0x00045618:	movetm	m_entities, @c00
000494:0x00045628:	ncalli	array<EntityAI>.Clear()
000497:0x00045630:	imove	i, 0x000000
000497:0x00045640:	jump	0x045650
000497:0x00045648:	inc	i
000497:0x00045650:	cmpi	i, ac
000497:0x00045660:	bge	0x045d68
000499:0x00045668:	movec	[0x45f9f240], m_entity
000499:0x00045678:	call	Link<EntityAI>.Ptr()
000499:0x00045680:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000499:0x00045688:	movetm	entity, ret
000500:0x00045698:	movefm	@c00, entity
000500:0x000456a8:	icall	array<EntityAI>.Insert(@c00)
000504:0x000456b0:	movefm	@c00, entity
000504:0x000456c0:	movefm	[0x703fb70], m_attachment_grids
000504:0x000456d0:	icall	map<EntityAI,InventoryGrid>.Contains(@c00)
000504:0x000456d8:	cmpi	ret, false
000504:0x000456e8:	bne	0x045978
000506:0x000456f0:	ncall	GetGame()
000506:0x000456f8:	ncalli	CGame.GetWorkspace()
000506:0x00045700:	movefm	[0x11d18388], m_attachment_grid
000506:0x00045710:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryIcon.layout', [0x11d18388])
000506:0x00045718:	movetm	attachment_icon, ret
000507:0x00045728:	cmpcm	attachment_icon, NULL
000507:0x00045738:	beq	0x045748
000507:0x00045740:	icall	Widget.GetScript(m_attachment_slot_grid)
000508:0x00045748:	cmpcm	m_attachment_slot_grid, NULL
000508:0x00045758:	beq	0x045970
000510:0x00045760:	movec	[0x45f9f240], m_entity
000510:0x00045770:	call	Link<EntityAI>.Ptr()
000510:0x00045778:	ncalli	EntityAI.GetAttachmentFromIndex(i)
000510:0x00045780:	movetm	attachment_entity, ret
000511:0x00045790:	movefm	@c00, attachment_entity
000511:0x000457a0:	movefm	@c01, m_attachment_slot_grid
000511:0x000457b0:	movefm	[0x703fb70], m_attachment_grids
000511:0x000457c0:	icall	map<EntityAI,InventoryGrid>.Set(@c00, @c01)
000513:0x000457c8:	cmpcm	attachment_entity, NULL
000513:0x000457d8:	beq	0x045968
000515:0x000457e0:	call	InventoryManager.GetAttachmentItemSize()
000515:0x000457e8:	cfti	item_size_width, ret
000515:0x000457f8:	push	ret
000515:0x00045800:	call	InventoryManager.GetAttachmentItemSize()
000515:0x00045808:	move	@f00, ret
000515:0x00045818:	pop	ret
000515:0x00045820:	cfti	item_size_height, @f00
000515:0x00045830:	movefm	[0x3cd17878], m_attachment_slot_grid
000515:0x00045840:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000516:0x00045850:	movefm	[0x3cd17878], m_attachment_slot_grid
000516:0x00045860:	call	InventoryGrid.SetGridSize(_i1, _i1)
000517:0x00045870:	movetm	controller, this
000517:0x00045880:	movefm	[0x3cd17878], m_attachment_slot_grid
000517:0x00045890:	call	InventoryGrid.SetController(controller)
000518:0x000458a0:	movefm	[0x3cd17878], m_attachment_slot_grid
000518:0x000458b0:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000519:0x000458c0:	call	InventoryManager.GetQuantityStackPanelSize()
000519:0x000458c8:	cfti	size, ret
000519:0x000458d8:	movefm	[0x3cd17878], m_attachment_slot_grid
000519:0x000458e8:	call	InventoryGrid.SetQuantityPanelSize(size)
000520:0x000458f8:	movem	item, attachment_entity
000520:0x00045908:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000520:0x00045918:	pushv	ret
000520:0x00045920:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000520:0x00045930:	movev	@v00, ret
000520:0x00045940:	popv	ret
000520:0x00045948:	movefm	[0x3cd17878], m_attachment_slot_grid
000520:0x00045958:	call	InventoryGrid.AddItem(item, ret, @v00)
000520:0x00045968:	release	attachment_entity
000520:0x00045970:	jump	0x0459b8
000526:0x00045978:	movefm	@c01, entity
000526:0x00045988:	movefm	[0x703fb70], m_attachment_grids
000526:0x00045998:	icall	map<EntityAI,InventoryGrid>.Get(@c01)
000526:0x000459a0:	call	InventoryGrid.GetRoot()
000526:0x000459a8:	movem	attachment_icon, ret
000530:0x000459b8:	cmpcm	attachment_icon, NULL
000530:0x000459c8:	beq	0x045d60
000532:0x000459d0:	ncalli	Widget.FindAnyWidget(_s'QuantityPanel')
000532:0x000459d8:	movetm	quantity_panel, ret
000533:0x000459e8:	ncalli	Widget.FindAnyWidget(_s'Quantity')
000533:0x000459f0:	movetm	item_quantity, ret
000534:0x00045a00:	ncalli	Widget.FindAnyWidget(_s'QuantityBar')
000534:0x00045a08:	movetm	quantity_progress, ret
000535:0x00045a18:	ncalli	Widget.FindAnyWidget(_s'QuantityStackPanel')
000535:0x00045a20:	movetm	quantity_stack, ret
000536:0x00045a30:	cmpcm	quantity_progress, NULL
000536:0x00045a40:	beq	0x045a50
000536:0x00045a48:	ncalli	ProgressBarWidget.Show(false)
000537:0x00045a50:	cmpcm	quantity_stack, NULL
000537:0x00045a60:	beq	0x045a70
000537:0x00045a68:	ncalli	Widget.Show(false)
000539:0x00045a70:	call	InventoryManager.HasItemQuantity(entity)
000539:0x00045a80:	move	has_quantity, ret
000540:0x00045a90:	cmpi	has_quantity, QUANTITY_HIDDEN
000540:0x00045aa0:	bne	0x045ad0
000542:0x00045aa8:	cmpcm	quantity_panel, NULL
000542:0x00045ab8:	beq	0x045ac8
000542:0x00045ac0:	ncalli	Widget.Show(false)
000542:0x00045ac8:	jump	0x045ca8
000546:0x00045ad0:	cmpcm	quantity_panel, NULL
000546:0x00045ae0:	beq	0x045af0
000546:0x00045ae8:	ncalli	Widget.Show(true)
000547:0x00045af0:	cmpi	has_quantity, QUANTITY_COUNT
000547:0x00045b00:	bne	0x045b48
000547:0x00045b08:	cmpcm	item_quantity, NULL
000547:0x00045b18:	beq	0x045b48
000549:0x00045b20:	call	InventoryManager.GetItemQuantityText(entity)
000549:0x00045b30:	ncalli	TextWidget.SetText(ret)
000550:0x00045b38:	ncalli	Widget.Show(true)
000550:0x00045b40:	jump	0x045ca8
000552:0x00045b48:	cmpi	has_quantity, QUANTITY_PROGRESS
000552:0x00045b58:	bne	0x045ca8
000554:0x00045b60:	cmpcm	quantity_progress, NULL
000554:0x00045b70:	beq	0x045ca8
000556:0x00045b78:	ncalli	ProgressBarWidget.GetMax()
000556:0x00045b80:	move	progress_max, ret
000557:0x00045b90:	icall	EntityAI.ConfigGetInt(_s'stackedMax')
000557:0x00045b98:	move	max, ret
000558:0x00045ba8:	icall	EntityAI.ConfigGetInt(_s'count')
000558:0x00045bb0:	move	count, ret
000559:0x00045bc0:	movem	item, entity
000559:0x00045bd0:	call	InventoryManager.GetItemQuantity(item)
000559:0x00045be0:	move	quantity, ret
000560:0x00045bf0:	cmpi	count, _i0
000560:0x00045c00:	ble	0x045c18
000562:0x00045c08:	move	max, count
000564:0x00045c18:	cmpi	max, _i0
000564:0x00045c28:	ble	0x045ca0
000567:0x00045c30:	citf	@f03, max
000567:0x00045c40:	divf	@f03, quantity, @f03
000567:0x00045c50:	move	@f02, @f03
000567:0x00045c60:	mulf	@f02, @f02, _f100.000000
000567:0x00045c70:	move	@f01, @f02
000567:0x00045c80:	ncall	Round(@f01)
000567:0x00045c88:	move	value, ret
000569:0x00045c98:	ncalli	ProgressBarWidget.SetCurrent(value)
000571:0x00045ca0:	ncalli	ProgressBarWidget.Show(true)
000577:0x00045ca8:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000577:0x00045cb0:	movetm	item_w, ret
000578:0x00045cc0:	cmpcm	item_w, NULL
000578:0x00045cd0:	beq	0x045d38
000580:0x00045cd8:	movetm	grid, this
000580:0x00045ce8:	movem	item, entity
000580:0x00045cf8:	call	InventoryView.GetItemColor(grid, item)
000580:0x00045d08:	move	color, ret
000581:0x00045d18:	cmpi	color, _i0
000581:0x00045d28:	beq	0x045d38
000583:0x00045d30:	ncalli	Widget.SetColor(color)
000583:0x00045d38:	release	quantity_panel
000583:0x00045d40:	release	item_quantity
000583:0x00045d48:	release	quantity_progress
000583:0x00045d50:	release	quantity_stack
000583:0x00045d58:	release	item_w
000583:0x00045d60:	jump	0x045648
000590:0x00045d68:	movefm	[0x703fb70], m_attachment_grids
000590:0x00045d78:	ncalli	map<EntityAI,InventoryGrid>.Count()
000590:0x00045d80:	move	c, ret
000591:0x00045d90:	imove	i, 0x000000
000591:0x00045da0:	jump	0x045db0
000591:0x00045da8:	inc	i
000591:0x00045db0:	cmpi	i, c
000591:0x00045dc0:	bge	0x045ef8
000593:0x00045dc8:	movefm	[0x703fb70], m_attachment_grids
000593:0x00045dd8:	icall	map<EntityAI,InventoryGrid>.GetKey(i)
000593:0x00045de0:	movetm	entity, ret
000594:0x00045df0:	movefm	@c00, entity
000594:0x00045e00:	icall	array<EntityAI>.Find(@c00)
000594:0x00045e08:	cmpi	ret, INDEX_NOT_FOUND
000594:0x00045e18:	bne	0x045ef0
000596:0x00045e20:	movefm	@c01, entity
000596:0x00045e30:	movefm	[0x703fb70], m_attachment_grids
000596:0x00045e40:	icall	map<EntityAI,InventoryGrid>.Get(@c01)
000596:0x00045e48:	movetm	grid, ret
000597:0x00045e58:	cmpcm	grid, NULL
000597:0x00045e68:	beq	0x045ed8
000599:0x00045e70:	call	InventoryGrid.GetRoot()
000599:0x00045e78:	movem	root, ret
000600:0x00045e88:	cmpcm	root, NULL
000600:0x00045e98:	beq	0x045ea8
000602:0x00045ea0:	ncalli	Widget.Destroy()
000604:0x00045ea8:	movefm	@c00, entity
000604:0x00045eb8:	movefm	[0x703fb70], m_attachment_grids
000604:0x00045ec8:	icall	map<EntityAI,InventoryGrid>.Remove(@c00)
000604:0x00045ed0:	release	root
000607:0x00045ed8:	dec	c
000608:0x00045ee0:	dec	i
000608:0x00045ee8:	release	grid
000608:0x00045ef0:	jump	0x045da8
000612:0x00045ef8:	movec	[0x45f9f240], m_entity
000612:0x00045f08:	call	Link<EntityAI>.Ptr()
000612:0x00045f10:	ncalli	EntityAI.AttachmentsCount()
000612:0x00045f18:	move	ac, ret
000613:0x00045f28:	cmpi	ac, sc
000613:0x00045f38:	bne	0x045f88
000615:0x00045f40:	cmpcm	m_empty_attachment_slot, NULL
000615:0x00045f50:	beq	0x045f70
000615:0x00045f58:	movefm	[0x11cf2b58], m_empty_attachment_slot
000615:0x00045f68:	ncalli	Widget.Destroy()
000616:0x00045f70:	movetm	m_empty_attachment_slot, NULL
000616:0x00045f80:	jump	0x046050
000618:0x00045f88:	cmpcm	m_empty_attachment_slot, NULL
000618:0x00045f98:	bne	0x046050
000620:0x00045fa0:	ncall	GetGame()
000620:0x00045fa8:	ncalli	CGame.GetWorkspace()
000620:0x00045fb0:	movefm	[0x11d18388], m_attachment_grid
000620:0x00045fc0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridItemEmpty.layout', [0x11d18388])
000620:0x00045fc8:	movetm	m_empty_attachment_slot, ret
000621:0x00045fd8:	call	InventoryManager.GetAttachmentItemSize()
000621:0x00045fe0:	push	ret
000621:0x00045fe8:	call	InventoryManager.GetAttachmentItemSize()
000621:0x00045ff0:	move	@f02, ret
000621:0x00046000:	pop	ret
000621:0x00046008:	movefm	[0x11cf2b58], m_empty_attachment_slot
000621:0x00046018:	ncalli	Widget.SetSize(ret, @f02, _i1)
000622:0x00046028:	movec	[0x11d0f728], this
000622:0x00046038:	movefm	[0x11cf2b58], m_empty_attachment_slot
000622:0x00046048:	ncalli	Widget.SetHandler([0x11d0f728])
000625:0x00046050:	cmpcm	m_attachment_spacer, NULL
000625:0x00046060:	beq	0x046080
000625:0x00046068:	movefm	[0x3cd18378], m_attachment_spacer
000625:0x00046078:	call	AutoHeightSpacer.Update()
000627:0x00046080:	movefm	[0x3cd18378], m_body_spacer
000627:0x00046090:	call	AutoHeightSpacer.Update()
000628:0x00046098:	movefm	[0x3cd18378], m_content_spacer
000628:0x000460a8:	call	AutoHeightSpacer.Update()
000630:0x000460b0:	movem	container_root, m_root
000632:0x000460c0:	icall	Widget.GetScript(spacer)
000633:0x000460c8:	cmpcm	spacer, NULL
000633:0x000460d8:	beq	0x0460e8
000635:0x000460e0:	call	AutoHeightSpacer.Update()
000635:0x000460e8:	delete	m_entities
000635:0x000460f0:	release	item
000635:0x000460f8:	release	entity
000635:0x00046100:	release	attachment_icon
000635:0x00046108:	release	container_root
000635:0x00046110:	release	spacer
000635:0x00046118:	rts
InventoryView::UpdateIconGrid()
000641:0x00046120:	cmpcm	m_icon_grid, NULL
000641:0x00046130:	beq	0x046168
000643:0x00046138:	movefm	[0x3cd17878], m_icon_grid
000643:0x00046148:	call	InventoryGrid.UpdateQuantityItems()
000644:0x00046150:	movefm	[0x3cd17878], m_icon_grid
000644:0x00046160:	call	InventoryGrid.UpdateTemperatureItems()
000647:0x00046168:	cmpcm	m_container_icon_grid, NULL
000647:0x00046178:	beq	0x0461b0
000649:0x00046180:	movefm	[0x3cd17878], m_container_icon_grid
000649:0x00046190:	call	InventoryGrid.UpdateQuantityItems()
000650:0x00046198:	movefm	[0x3cd17878], m_container_icon_grid
000650:0x000461a8:	call	InventoryGrid.UpdateTemperatureItems()
000650:0x000461b0:	rts
InventoryView::UpdateCargoGrid()
000656:0x000462f8:	call	InventoryView.HasProperty(CARGOS)
000656:0x00046308:	cmpi	ret, _i0
000656:0x00046318:	bne	0x046328
000656:0x00046320:	rts
000658:0x00046328:	movefm	[0x3cd2cfb8], m_cargos
000658:0x00046338:	ncalli	array<Cargo>.Count()
000658:0x00046340:	cmpi	cargo_index, ret
000658:0x00046350:	bge	0x046560
000662:0x00046358:	movefm	[0x3cd2cfb8], m_cargos
000662:0x00046368:	icall	array<Cargo>.Get(cargo_index)
000662:0x00046370:	movec	cargo, ret
000664:0x00046380:	movefm	[0x7035fd8], m_cargo_grids
000664:0x00046390:	icall	array<InventoryGrid>.Get(cargo_index)
000664:0x00046398:	movetm	cargo_grid, ret
000665:0x000463a8:	cmpc	cargo, NULL
000665:0x000463b8:	beq	0x046550
000665:0x000463c0:	cmpcm	cargo_grid, NULL
000665:0x000463d0:	beq	0x046550
000667:0x000463d8:	movefm	[0x3cd18618], m_items
000667:0x000463e8:	ncalli	map<InventoryItem,vector>.Clear()
000668:0x000463f0:	ncalli	Cargo.GetItemCount()
000668:0x000463f8:	move	c, ret
000670:0x00046408:	imove	i, 0x000000
000670:0x00046418:	jump	0x046428
000670:0x00046420:	inc	i
000670:0x00046428:	cmpi	i, c
000670:0x00046438:	bge	0x046530
000672:0x00046440:	ncalli	Cargo.GetItem(i)
000672:0x00046448:	movetm	item, ret
000673:0x00046458:	icall	Cargo.GetItemPos(i, x, y)
000674:0x00046468:	icall	Cargo.GetItemSize(i, w, h)
000675:0x00046478:	ncalli	Cargo.GetWidth()
000675:0x00046480:	muli	@m01, y, ret
000675:0x00046490:	move	@m00, @m01
000675:0x000464a0:	addi	@m00, x, @m00
000675:0x000464b0:	move	index, @m00
000676:0x000464c0:	movefm	@c00, item
000676:0x000464d0:	citf	[0x11d1e520], index
000676:0x000464e0:	citf	[0x11d1e540], w
000676:0x000464f0:	citf	[0x11d1e560], h
000676:0x00046500:	ncall	Vector([0x11d1e520], [0x11d1e540], [0x11d1e560])
000676:0x00046510:	movefm	[0x3cd18618], m_items
000676:0x00046520:	icall	map<InventoryItem,vector>.Set(@c00, ret)
000676:0x00046528:	jump	0x046420
000679:0x00046530:	movem	items, m_items
000679:0x00046540:	call	InventoryGrid.UpdateItems(items, true, true)
000679:0x00046550:	release	item
000679:0x00046558:	release	cargo_grid
000679:0x00046560:	rts
InventoryView::FindItem()
000686:0x000465a8:	movec	[0x45f9f240], m_entity
000686:0x000465b8:	call	Link<EntityAI>.IsNull()
000686:0x000465c0:	cmpi	ret, _i0
000686:0x000465d0:	bne	0x0465f0
000686:0x000465d8:	cmpcm	grid, NULL
000686:0x000465e8:	bne	0x046608
000686:0x000465f0:	movetm	ret, NULL
000686:0x00046600:	rts
000688:0x00046608:	cmpm	grid, m_icon_grid
000688:0x00046618:	bne	0x046650
000690:0x00046620:	movec	[0x45f9f240], m_entity
000690:0x00046630:	call	Link<EntityAI>.Ptr()
000690:0x00046638:	movem	ret, ret
000690:0x00046648:	rts
000693:0x00046650:	cmpm	grid, m_container_icon_grid
000693:0x00046660:	bne	0x046698
000695:0x00046668:	movec	[0x45f9f240], m_entity
000695:0x00046678:	call	Link<EntityAI>.Ptr()
000695:0x00046680:	movem	ret, ret
000695:0x00046690:	rts
000698:0x00046698:	call	InventoryView.FindCargoIndex(grid)
000698:0x000466a8:	move	cargo_index, ret
000700:0x000466b8:	cmpi	cargo_index, INDEX_NOT_FOUND
000700:0x000466c8:	beq	0x046708
000700:0x000466d0:	movefm	[0x3cd2cfb8], m_cargos
000700:0x000466e0:	icall	array<Cargo>.Get(cargo_index)
000700:0x000466e8:	ncalli	Cargo.FindEntityInCargoOn(row, col)
000700:0x000466f0:	movetm	ret, ret
000700:0x00046700:	rts
000702:0x00046708:	movefm	[0x703fb70], m_attachment_grids
000702:0x00046718:	call	map<EntityAI,InventoryGrid>.GetKeyByValue(grid)
000702:0x00046728:	movem	entity, ret
000703:0x00046738:	cmpcm	entity, NULL
000703:0x00046748:	beq	0x046770
000703:0x00046750:	movem	ret, entity
000703:0x00046760:	release	entity
000703:0x00046768:	rts
000703:0x00046770:	release	entity
000703:0x00046778:	rts
InventoryView::FindCargoIndex()
000708:0x000467c0:	imove	cargo_index, 0x000000
000708:0x000467d0:	jump	0x0467e0
000708:0x000467d8:	inc	cargo_index
000708:0x000467e0:	movefm	[0x7035fd8], m_cargo_grids
000708:0x000467f0:	ncalli	array<InventoryGrid>.Count()
000708:0x000467f8:	cmpi	cargo_index, ret
000708:0x00046808:	bge	0x046880
000710:0x00046810:	movefm	[0x7035fd8], m_cargo_grids
000710:0x00046820:	icall	array<InventoryGrid>.Get(cargo_index)
000710:0x00046828:	movetm	cargo_grid, ret
000711:0x00046838:	cmpm	grid, cargo_grid
000711:0x00046848:	bne	0x046870
000713:0x00046850:	move	ret, cargo_index
000713:0x00046860:	release	cargo_grid
000713:0x00046868:	rts
000713:0x00046870:	release	cargo_grid
000713:0x00046878:	jump	0x0467d8
000717:0x00046880:	imove	ret, 0xffffffff
000717:0x00046890:	rts
000717:0x00046898:	rts
InventoryView::MoveItem()
000722:0x00046b68:	movec	[0x45f9f240], m_entity
000722:0x00046b78:	call	Link<EntityAI>.IsNull()
000722:0x00046b80:	cmpi	ret, _i0
000722:0x00046b90:	bne	0x046bb0
000722:0x00046b98:	cmpcm	grid, NULL
000722:0x00046ba8:	bne	0x046bc8
000722:0x00046bb0:	imove	ret, 0x000000
000722:0x00046bc0:	rts
000724:0x00046bc8:	ncall	GetGame()
000724:0x00046bd0:	ncalli	CGame.GetPlayer()
000724:0x00046bd8:	movetm	player, ret
000725:0x00046be8:	call	GetInstance()
000725:0x00046bf0:	movec	manager, ret
000726:0x00046c00:	call	InventoryManager.GetItem()
000726:0x00046c08:	movem	dragged_item, ret
000727:0x00046c18:	call	InventoryView.FindItem(grid, row, col)
000727:0x00046c28:	movem	itemAtPos, ret
000728:0x00046c38:	call	InventoryManager.GetGrid()
000728:0x00046c40:	movem	gridSrc, ret
000732:0x00046c50:	call	InventoryManager.IsDragging()
000732:0x00046c58:	cmpi	ret, false
000732:0x00046c68:	beq	0x046c88
000732:0x00046c70:	cmpcm	dragged_item, NULL
000732:0x00046c80:	bne	0x046cc0
000732:0x00046c88:	imove	ret, 0x000000
000732:0x00046c98:	release	player
000732:0x00046ca0:	release	dragged_item
000732:0x00046ca8:	release	itemAtPos
000732:0x00046cb0:	release	gridSrc
000732:0x00046cb8:	rts
000734:0x00046cc0:	cmpcm	dragged_item, NULL
000734:0x00046cd0:	beq	0x046d58
000734:0x00046cd8:	ncalli	InventoryItem.CanRemoveEntity()
000734:0x00046ce0:	cmpi	ret, false
000734:0x00046cf0:	bne	0x046d58
000736:0x00046cf8:	cmpi	testOnly, _i0
000736:0x00046d08:	beq	0x046d20
000736:0x00046d10:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000737:0x00046d20:	imove	ret, 0x000000
000737:0x00046d30:	release	player
000737:0x00046d38:	release	dragged_item
000737:0x00046d40:	release	itemAtPos
000737:0x00046d48:	release	gridSrc
000737:0x00046d50:	rts
000740:0x00046d58:	cmpm	grid, m_icon_grid
000740:0x00046d68:	beq	0x046d88
000740:0x00046d70:	cmpm	grid, m_container_icon_grid
000740:0x00046d80:	bne	0x0471f8
000743:0x00046d88:	movec	[0x45f9f240], m_entity
000743:0x00046d98:	call	Link<EntityAI>.Ptr()
000743:0x00046da0:	cmpm	dragged_item, ret
000743:0x00046db0:	bne	0x046e18
000745:0x00046db8:	cmpi	testOnly, _i0
000745:0x00046dc8:	beq	0x046de0
000745:0x00046dd0:	call	InventoryManager.SetItemColor(ITEM_COLOR_DRAG)
000746:0x00046de0:	imove	ret, 0x000000
000746:0x00046df0:	release	player
000746:0x00046df8:	release	dragged_item
000746:0x00046e00:	release	itemAtPos
000746:0x00046e08:	release	gridSrc
000746:0x00046e10:	rts
000749:0x00046e18:	movec	[0x45f9f240], m_entity
000749:0x00046e28:	call	Link<EntityAI>.Ptr()
000749:0x00046e30:	movem	entity2, dragged_item
000749:0x00046e40:	call	InventoryManager.GetCombinationFlags(ret, entity2)
000749:0x00046e50:	move	flags, ret
000750:0x00046e60:	cmpi	flags, NONE
000750:0x00046e70:	bne	0x046ee0
000752:0x00046e78:	cmpi	testOnly, _i0
000752:0x00046e88:	beq	0x046ea0
000752:0x00046e90:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000753:0x00046ea0:	imove	ret, 0x000000
000753:0x00046eb0:	release	player
000753:0x00046eb8:	release	dragged_item
000753:0x00046ec0:	release	itemAtPos
000753:0x00046ec8:	release	gridSrc
000753:0x00046ed0:	rts
000753:0x00046ed8:	jump	0x0471f0
000755:0x00046ee0:	cmpi	flags, ADD_AS_ATTACHMENT
000755:0x00046ef0:	beq	0x046f10
000755:0x00046ef8:	cmpi	flags, ADD_AS_CARGO
000755:0x00046f08:	bne	0x0470c0
000757:0x00046f10:	cmpi	testOnly, _i0
000757:0x00046f20:	beq	0x046f40
000757:0x00046f28:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000757:0x00046f38:	jump	0x047080
000760:0x00046f40:	movefm	@c00, grid
000760:0x00046f50:	cmpi	DebugOutput, _i0
000760:0x00046f60:	beq	0x047020
000760:0x00046f68:	movec	[0x45f9f240], m_entity
000760:0x00046f78:	call	Link<EntityAI>.Ptr()
000760:0x00046f80:	call	EntityAI.GetName()
000760:0x00046f88:	adds	@s04, ret, _s' :TakeEntityAsOwned( '
000760:0x00046f98:	moves	@s02, @s04
000760:0x00046fa8:	pushs	ret
000760:0x00046fb0:	call	InventoryItem.GetName()
000760:0x00046fb8:	moves	@s04, ret
000760:0x00046fc8:	pops	ret
000760:0x00046fd0:	adds	@s02, @s02, @s04
000760:0x00046fe0:	moves	@s01, @s02
000760:0x00046ff0:	adds	@s01, @s01, _s' )'
000760:0x00047000:	moves	@s00, @s01
000760:0x00047010:	call	PlayerBase.MessageStatus(@s00)
000762:0x00047020:	cmpcm	gridSrc, NULL
000762:0x00047030:	beq	0x047048
000762:0x00047038:	call	InventoryGrid.RemoveItem(dragged_item)
000764:0x00047048:	movec	[0x45f9f240], m_entity
000764:0x00047058:	call	Link<EntityAI>.Ptr()
000764:0x00047060:	movem	entity2, dragged_item
000764:0x00047070:	call	InventoryManager.TakeAsOwned(ret, entity2)
000766:0x00047080:	imove	ret, 0x000001
000766:0x00047090:	release	player
000766:0x00047098:	release	dragged_item
000766:0x000470a0:	release	itemAtPos
000766:0x000470a8:	release	gridSrc
000766:0x000470b0:	rts
000766:0x000470b8:	jump	0x0471f0
000768:0x000470c0:	cmpi	flags, TAKE_TO_HANDS
000768:0x000470d0:	bne	0x047158
000770:0x000470d8:	cmpi	testOnly, _i0
000770:0x000470e8:	beq	0x047108
000770:0x000470f0:	call	InventoryManager.SetItemColor(ITEM_COLOR_SWAP)
000770:0x00047100:	jump	0x047118
000773:0x00047108:	call	InventoryManager.TakeToHands(dragged_item)
000775:0x00047118:	imove	ret, 0x000001
000775:0x00047128:	release	player
000775:0x00047130:	release	dragged_item
000775:0x00047138:	release	itemAtPos
000775:0x00047140:	release	gridSrc
000775:0x00047148:	rts
000775:0x00047150:	jump	0x0471f0
000779:0x00047158:	cmpi	testOnly, _i0
000779:0x00047168:	beq	0x047188
000779:0x00047170:	call	InventoryManager.SetItemColor(ITEM_COLOR_MULTIPLE)
000779:0x00047180:	jump	0x0471b8
000780:0x00047188:	movem	entity1, itemAtPos
000780:0x00047198:	movem	entity2, dragged_item
000780:0x000471a8:	call	InventoryManager.ShowActionMenuCombine(entity1, entity2, flags)
000781:0x000471b8:	imove	ret, 0x000001
000781:0x000471c8:	release	player
000781:0x000471d0:	release	dragged_item
000781:0x000471d8:	release	itemAtPos
000781:0x000471e0:	release	gridSrc
000781:0x000471e8:	rts
000781:0x000471f0:	jump	0x047a08
000784:0x000471f8:	cmpcm	itemAtPos, NULL
000784:0x00047208:	beq	0x0476e8
000784:0x00047210:	cmpm	dragged_item, itemAtPos
000784:0x00047220:	beq	0x0476e8
000786:0x00047228:	movem	entity1, itemAtPos
000786:0x00047238:	movem	entity2, dragged_item
000786:0x00047248:	call	InventoryManager.GetCombinationFlags(entity1, entity2)
000786:0x00047258:	move	flags, ret
000788:0x00047268:	cmpi	flags, NONE
000788:0x00047278:	bne	0x0472e8
000790:0x00047280:	cmpi	testOnly, _i0
000790:0x00047290:	beq	0x0472a8
000790:0x00047298:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000791:0x000472a8:	imove	ret, 0x000000
000791:0x000472b8:	release	player
000791:0x000472c0:	release	dragged_item
000791:0x000472c8:	release	itemAtPos
000791:0x000472d0:	release	gridSrc
000791:0x000472d8:	rts
000791:0x000472e0:	jump	0x0476e0
000793:0x000472e8:	cmpi	flags, SWAP
000793:0x000472f8:	bne	0x047648
000795:0x00047300:	cmpi	testOnly, _i0
000795:0x00047310:	beq	0x047330
000795:0x00047318:	call	InventoryManager.SetItemColor(ITEM_COLOR_SWAP)
000795:0x00047328:	jump	0x047608
000798:0x00047330:	movefm	@c00, grid
000798:0x00047340:	cmpi	DebugOutput, _i0
000798:0x00047350:	beq	0x0473d8
000798:0x00047358:	call	InventoryItem.GetName()
000798:0x00047360:	adds	@s03, _s'Swap: ', ret
000798:0x00047370:	moves	@s02, @s03
000798:0x00047380:	adds	@s02, @s02, _s' , '
000798:0x00047390:	moves	@s01, @s02
000798:0x000473a0:	call	InventoryItem.GetName()
000798:0x000473a8:	adds	@s01, @s01, ret
000798:0x000473b8:	moves	@s00, @s01
000798:0x000473c8:	call	PlayerBase.MessageStatus(@s00)
000800:0x000473d8:	call	InventoryGrid.HasItem(dragged_item)
000800:0x000473e8:	cmpi	ret, _i0
000800:0x000473f8:	beq	0x047410
000802:0x00047400:	movem	gridSrc, grid
000805:0x00047410:	cmpcm	gridSrc, NULL
000805:0x00047420:	beq	0x047470
000805:0x00047428:	call	InventoryGrid.GetItems()
000805:0x00047430:	movefm	@c00, dragged_item
000805:0x00047440:	icall	map<InventoryItem,vector>.Get(@c00)
000805:0x00047448:	ifv	@f01, ret[0x000000]
000805:0x00047458:	ncall	Round(@f01)
000805:0x00047460:	cfti	index_from, ret
000806:0x00047470:	call	InventoryGrid.GetItems()
000806:0x00047478:	movefm	@c00, itemAtPos
000806:0x00047488:	icall	map<InventoryItem,vector>.Get(@c00)
000806:0x00047490:	ifv	@f01, ret[0x000000]
000806:0x000474a0:	ncall	Round(@f01)
000806:0x000474a8:	cfti	index_to, ret
000808:0x000474b8:	cmpcm	gridSrc, NULL
000808:0x000474c8:	beq	0x0474e0
000808:0x000474d0:	call	InventoryGrid.RemoveItem(dragged_item)
000809:0x000474e0:	call	InventoryGrid.RemoveItem(itemAtPos)
000811:0x000474f0:	cmpcm	gridSrc, NULL
000811:0x00047500:	beq	0x047570
000813:0x00047508:	call	InventoryGrid.GetController()
000813:0x00047510:	call	InventoryGridController.GetItemSize(gridSrc, itemAtPos)
000813:0x00047520:	movev	data, ret
000814:0x00047530:	citf	@f00, index_from
000814:0x00047540:	itv	data[0x000000], @f00
000815:0x00047550:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000815:0x00047560:	call	InventoryGrid.AddItem(itemAtPos, data, ret)
000818:0x00047570:	call	InventoryGrid.GetController()
000818:0x00047578:	call	InventoryGridController.GetItemSize(grid, dragged_item)
000818:0x00047588:	movev	data, ret
000819:0x00047598:	citf	@f00, index_to
000819:0x000475a8:	itv	data[0x000000], @f00
000820:0x000475b8:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000820:0x000475c8:	call	InventoryGrid.AddItem(dragged_item, data, ret)
000822:0x000475d8:	movem	item1, dragged_item
000822:0x000475e8:	movem	item2, itemAtPos
000822:0x000475f8:	call	PlayerBase.SwapEntities(item1, item2)
000824:0x00047608:	imove	ret, 0x000001
000824:0x00047618:	release	player
000824:0x00047620:	release	dragged_item
000824:0x00047628:	release	itemAtPos
000824:0x00047630:	release	gridSrc
000824:0x00047638:	rts
000824:0x00047640:	jump	0x0476e0
000828:0x00047648:	cmpi	testOnly, _i0
000828:0x00047658:	beq	0x047678
000828:0x00047660:	call	InventoryManager.SetItemColor(ITEM_COLOR_MULTIPLE)
000828:0x00047670:	jump	0x0476a8
000829:0x00047678:	movem	entity1, itemAtPos
000829:0x00047688:	movem	entity2, dragged_item
000829:0x00047698:	call	InventoryManager.ShowActionMenuCombine(entity1, entity2, flags)
000830:0x000476a8:	imove	ret, 0x000001
000830:0x000476b8:	release	player
000830:0x000476c0:	release	dragged_item
000830:0x000476c8:	release	itemAtPos
000830:0x000476d0:	release	gridSrc
000830:0x000476d8:	rts
000830:0x000476e0:	jump	0x047a08
000862:0x000476e8:	call	InventoryView.FindCargoIndex(grid)
000862:0x000476f8:	move	cargo_index, ret
000864:0x00047708:	cmpi	cargo_index, INDEX_NOT_FOUND
000864:0x00047718:	beq	0x047a08
000866:0x00047720:	movefm	[0x3cd2cfb8], m_cargos
000866:0x00047730:	icall	array<Cargo>.Get(cargo_index)
000866:0x00047738:	movec	cargo, ret
000869:0x00047748:	movec	[0x45f9f240], m_entity
000869:0x00047758:	call	Link<EntityAI>.Ptr()
000869:0x00047760:	movefm	[0x3cd23970], dragged_item
000869:0x00047770:	ncalli	EntityAI.CanAddEntityInCargoEx([0x3cd23970], row, col)
000869:0x00047780:	cmpi	ret, _i0
000869:0x00047790:	beq	0x047a08
000871:0x00047798:	cmpi	testOnly, _i0
000871:0x000477a8:	beq	0x0477c8
000873:0x000477b0:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000873:0x000477c0:	jump	0x0479d0
000877:0x000477c8:	movefm	@c00, grid
000877:0x000477d8:	cmpi	DebugOutput, _i0
000877:0x000477e8:	beq	0x0478a8
000877:0x000477f0:	movec	[0x45f9f240], m_entity
000877:0x00047800:	call	Link<EntityAI>.Ptr()
000877:0x00047808:	call	EntityAI.GetName()
000877:0x00047810:	adds	@s04, ret, _s' :TakeEntityToCargoAtPos( '
000877:0x00047820:	moves	@s02, @s04
000877:0x00047830:	pushs	ret
000877:0x00047838:	call	InventoryItem.GetName()
000877:0x00047840:	moves	@s04, ret
000877:0x00047850:	pops	ret
000877:0x00047858:	adds	@s02, @s02, @s04
000877:0x00047868:	moves	@s01, @s02
000877:0x00047878:	adds	@s01, @s01, _s' )'
000877:0x00047888:	moves	@s00, @s01
000877:0x00047898:	call	PlayerBase.MessageStatus(@s00)
000879:0x000478a8:	cmpcm	gridSrc, NULL
000879:0x000478b8:	beq	0x047920
000881:0x000478c0:	ncalli	InventoryItem.GetOwner()
000881:0x000478c8:	movec	[0x45f9f240], m_entity
000881:0x000478d8:	call	Link<EntityAI>.Ptr()
000881:0x000478e0:	cmpmc	ret, ret
000881:0x000478f0:	beq	0x047910
000883:0x000478f8:	call	InventoryGrid.RemoveItem(dragged_item)
000883:0x00047908:	jump	0x047920
000887:0x00047910:	call	InventoryGrid.RemoveItem(dragged_item)
000892:0x00047920:	call	InventoryGrid.GetController()
000892:0x00047928:	call	InventoryGridController.GetItemSize(grid, dragged_item)
000892:0x00047938:	movev	data, ret
000893:0x00047948:	call	InventoryGrid.GetIndex(row, col)
000893:0x00047958:	citf	@f01, ret
000893:0x00047968:	itv	data[0x000000], @f01
000894:0x00047978:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000894:0x00047988:	call	InventoryGrid.AddItem(dragged_item, data, ret)
000896:0x00047998:	movec	[0x45f9f240], m_entity
000896:0x000479a8:	call	Link<EntityAI>.Ptr()
000896:0x000479b0:	movem	item, dragged_item
000896:0x000479c0:	call	EntityAI.TakeEntityToCargoAtPos(item, cargo, row, col)
000898:0x000479d0:	imove	ret, 0x000001
000898:0x000479e0:	release	player
000898:0x000479e8:	release	dragged_item
000898:0x000479f0:	release	itemAtPos
000898:0x000479f8:	release	gridSrc
000898:0x00047a00:	rts
000903:0x00047a08:	cmpi	testOnly, _i0
000903:0x00047a18:	beq	0x047a30
000903:0x00047a20:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000904:0x00047a30:	imove	ret, 0x000000
000904:0x00047a40:	release	player
000904:0x00047a48:	release	dragged_item
000904:0x00047a50:	release	itemAtPos
000904:0x00047a58:	release	gridSrc
000904:0x00047a60:	rts
000904:0x00047a68:	release	player
000904:0x00047a70:	release	dragged_item
000904:0x00047a78:	release	itemAtPos
000904:0x00047a80:	release	gridSrc
000904:0x00047a88:	rts
InventoryView::HasProperty()
000909:0x00047a90:	andi	@m01, m_properties, mask
000909:0x00047aa0:	move	@m00, @m01
000909:0x00047ab0:	cmpi	@m00, _i0
000909:0x00047ac0:	beq	0x047ae0
000909:0x00047ac8:	imove	ret, 0x000001
000909:0x00047ad8:	rts
000910:0x00047ae0:	imove	ret, 0x000000
000910:0x00047af0:	rts
000910:0x00047af8:	rts
InventoryView::GetEntity()
000915:0x00047b00:	movec	[0x45f9f240], m_entity
000915:0x00047b10:	call	Link<EntityAI>.Ptr()
000915:0x00047b18:	movem	ret, ret
000915:0x00047b28:	rts
000915:0x00047b30:	rts
InventoryView::OnMouseButtonDown()
000921:0x00047b78:	cmpm	w, m_header_bar
000921:0x00047b88:	beq	0x047bd8
000921:0x00047b90:	cmpm	w, m_header
000921:0x00047ba0:	beq	0x047bd8
000921:0x00047ba8:	cmpm	w, m_minimize_widget
000921:0x00047bb8:	beq	0x047bd8
000921:0x00047bc0:	cmpm	w, m_maximize_widget
000921:0x00047bd0:	bne	0x047d48
000923:0x00047bd8:	cmpcm	m_body, NULL
000923:0x00047be8:	beq	0x047d48
000923:0x00047bf0:	cmpcm	m_body_spacer, NULL
000923:0x00047c00:	beq	0x047d48
000923:0x00047c08:	cmpcm	m_content_spacer, NULL
000923:0x00047c18:	beq	0x047d48
000925:0x00047c20:	movefm	[0x11cf2b58], m_body
000925:0x00047c30:	ncalli	Widget.IsVisible()
000925:0x00047c38:	cmpi	ret, _i0
000925:0x00047c48:	beq	0x047ca0
000927:0x00047c50:	movefm	[0x11cf2b58], m_minimize_widget
000927:0x00047c60:	ncalli	Widget.Show(false)
000928:0x00047c68:	movefm	[0x11cf2b58], m_maximize_widget
000928:0x00047c78:	ncalli	Widget.Show(true)
000929:0x00047c80:	movefm	[0x11cf2b58], m_body
000929:0x00047c90:	ncalli	Widget.Show(false)
000929:0x00047c98:	jump	0x047ce8
000933:0x00047ca0:	movefm	[0x11cf2b58], m_minimize_widget
000933:0x00047cb0:	ncalli	Widget.Show(true)
000934:0x00047cb8:	movefm	[0x11cf2b58], m_maximize_widget
000934:0x00047cc8:	ncalli	Widget.Show(false)
000935:0x00047cd0:	movefm	[0x11cf2b58], m_body
000935:0x00047ce0:	ncalli	Widget.Show(true)
000937:0x00047ce8:	movefm	[0x3cd18378], m_body_spacer
000937:0x00047cf8:	call	AutoHeightSpacer.Update()
000938:0x00047d00:	movefm	[0x3cd18378], m_content_spacer
000938:0x00047d10:	call	AutoHeightSpacer.Update()
000940:0x00047d18:	movem	container_root, m_root
000942:0x00047d28:	icall	Widget.GetScript(spacer)
000943:0x00047d30:	call	AutoHeightSpacer.Update()
000943:0x00047d38:	release	container_root
000943:0x00047d40:	release	spacer
000946:0x00047d48:	imove	ret, 0x000001
000946:0x00047d58:	rts
000946:0x00047d60:	rts
InventoryView::OnItemEnter()
000952:0x00047da8:	movec	[0x3cd17138], m_update_lock_timer
000952:0x00047db8:	call	Timer.IsRunning()
000952:0x00047dc0:	cmpi	ret, _i0
000952:0x00047dd0:	beq	0x047de0
000952:0x00047dd8:	rts
000953:0x00047de0:	call	GetInstance()
000953:0x00047de8:	movec	manager, ret
000954:0x00047df8:	call	InventoryView.FindItem(grid, row, col)
000954:0x00047e08:	movem	item, ret
000955:0x00047e18:	cmpcm	item, NULL
000955:0x00047e28:	beq	0x047e50
000957:0x00047e30:	movem	item, item
000957:0x00047e40:	call	InventoryManager.ShowTooltip(item)
000957:0x00047e50:	release	item
000957:0x00047e58:	rts
InventoryView::OnItemLeave()
000963:0x00047e80:	call	GetInstance()
000963:0x00047e88:	movec	manager, ret
000964:0x00047e98:	call	InventoryManager.HideTooltip()
000964:0x00047ea0:	rts
InventoryView::OnItemDrag()
000969:0x00047ee8:	movec	[0x45f9f240], m_entity
000969:0x00047ef8:	call	Link<EntityAI>.IsNull()
000969:0x00047f00:	cmpi	ret, _i0
000969:0x00047f10:	beq	0x047f20
000969:0x00047f18:	rts
000971:0x00047f20:	call	GetInstance()
000971:0x00047f28:	movec	manager, ret
000972:0x00047f38:	call	InventoryView.FindItem(grid, row, col)
000972:0x00047f48:	movem	item, ret
000974:0x00047f58:	call	InventoryManager.Drag(GRID, item, grid)
000974:0x00047f68:	release	item
000974:0x00047f70:	rts
InventoryView::OnItemDraggingOver()
000979:0x00048038:	call	GetInstance()
000979:0x00048040:	movec	manager, ret
000982:0x00048050:	ncall	GetGame()
000982:0x00048058:	ncalli	CGame.GetUIManager()
000982:0x00048060:	ncalli	UIManager.GetMenu()
000982:0x00048068:	movetm	menu, ret
000983:0x00048078:	cmpcm	menu, NULL
000983:0x00048088:	beq	0x048100
000985:0x00048090:	call	InventoryMenu.HidePanelBorders()
000986:0x00048098:	movefm	@c01, menu
000986:0x000480a8:	cmpm	m_container, m_equipment_container
000986:0x000480b8:	bne	0x0480d0
000988:0x000480c0:	call	InventoryMenu.ShowRightPanelBorder()
000988:0x000480c8:	jump	0x048100
000990:0x000480d0:	movefm	@c01, menu
000990:0x000480e0:	cmpm	m_container, m_ground_container
000990:0x000480f0:	bne	0x048100
000992:0x000480f8:	call	InventoryMenu.ShowLeftPanelBorder()
000997:0x00048100:	movec	[0x45f9f240], m_entity
000997:0x00048110:	call	Link<EntityAI>.Ptr()
000997:0x00048118:	movefm	[0x11d0a2c8], ret
000997:0x00048128:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000997:0x00048130:	cmpi	ret, _i0
000997:0x00048140:	beq	0x048180
000997:0x00048148:	cmpm	grid, m_icon_grid
000997:0x00048158:	bne	0x048180
000999:0x00048160:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
001000:0x00048170:	release	menu
001000:0x00048178:	rts
001003:0x00048180:	ncall	GetGame()
001003:0x00048188:	ncalli	CGame.GetPlayer()
001003:0x00048190:	movetm	player, ret
001004:0x000481a0:	ncalli	PlayerBase.GetEntityInHands()
001004:0x000481a8:	movetm	item_in_hands, ret
001005:0x000481b8:	cmpcm	item_in_hands, NULL
001005:0x000481c8:	bne	0x0482e8
001005:0x000481d0:	movefm	[0x11d0a2c8], m_container
001005:0x000481e0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryContainerHands))
001005:0x000481e8:	cmpi	ret, _i0
001005:0x000481f8:	beq	0x0482e8
001007:0x00048200:	call	InventoryManager.GetItem()
001007:0x00048208:	movem	dragged_item, ret
001008:0x00048218:	call	InventoryManager.IsDragging()
001008:0x00048220:	cmpi	ret, false
001008:0x00048230:	beq	0x048250
001008:0x00048238:	cmpcm	dragged_item, NULL
001008:0x00048248:	bne	0x048278
001008:0x00048250:	release	dragged_item
001008:0x00048258:	release	menu
001008:0x00048260:	release	player
001008:0x00048268:	release	item_in_hands
001008:0x00048270:	rts
001009:0x00048278:	cmpcm	dragged_item, NULL
001009:0x00048288:	beq	0x0482c8
001009:0x00048290:	ncalli	InventoryItem.CanRemoveEntity()
001009:0x00048298:	cmpi	ret, false
001009:0x000482a8:	bne	0x0482c8
001011:0x000482b0:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
001011:0x000482c0:	jump	0x0482d8
001015:0x000482c8:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
001015:0x000482d8:	release	dragged_item
001015:0x000482e0:	jump	0x0482f8
001020:0x000482e8:	call	InventoryView.MoveItem(grid, row, col, true)
001020:0x000482f8:	release	menu
001020:0x00048300:	release	player
001020:0x00048308:	release	item_in_hands
001020:0x00048310:	rts
InventoryView::OnItemDrop()
001026:0x00048338:	call	GetInstance()
001026:0x00048340:	movec	manager, ret
001027:0x00048350:	call	InventoryManager.Drop()
001028:0x00048358:	call	InventoryManager.HideTooltip()
001029:0x00048360:	call	InventoryView.UpdateLock()
001029:0x00048368:	rts
InventoryView::OnItemDropReceived()
001034:0x00048410:	call	GetInstance()
001034:0x00048418:	movec	manager, ret
001037:0x00048428:	cmpc	m_entity, NULL
001037:0x00048438:	beq	0x0484d8
001037:0x00048440:	movec	[0x45f9f240], m_entity
001037:0x00048450:	call	Link<EntityAI>.Ptr()
001037:0x00048458:	cmpcm	ret, NULL
001037:0x00048468:	beq	0x0484d8
001037:0x00048470:	cmpm	grid, m_icon_grid
001037:0x00048480:	bne	0x0484d8
001037:0x00048488:	movec	[0x45f9f240], m_entity
001037:0x00048498:	call	Link<EntityAI>.Ptr()
001037:0x000484a0:	movefm	[0x11d0a2c8], ret
001037:0x000484b0:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
001037:0x000484b8:	cmpi	ret, _i0
001037:0x000484c8:	beq	0x0484d8
001039:0x000484d0:	rts
001042:0x000484d8:	ncall	GetGame()
001042:0x000484e0:	ncalli	CGame.GetPlayer()
001042:0x000484e8:	movetm	player, ret
001043:0x000484f8:	ncalli	PlayerBase.GetEntityInHands()
001043:0x00048500:	movetm	item_in_hands, ret
001044:0x00048510:	icall	Print(m_container)
001045:0x00048518:	movefm	[0x11d0a2c8], m_container
001045:0x00048528:	ncall	IsInherited([0x11d0a2c8], _T(InventoryContainerHands))
001045:0x00048530:	icall	Print(ret)
001046:0x00048538:	cmpcm	item_in_hands, NULL
001046:0x00048548:	bne	0x048688
001046:0x00048550:	movefm	[0x11d0a2c8], m_container
001046:0x00048560:	ncall	IsInherited([0x11d0a2c8], _T(InventoryContainerHands))
001046:0x00048568:	cmpi	ret, _i0
001046:0x00048578:	beq	0x048688
001048:0x00048580:	call	InventoryManager.GetItem()
001048:0x00048588:	movem	dragged_item, ret
001050:0x00048598:	call	InventoryManager.IsDragging()
001050:0x000485a0:	cmpi	ret, false
001050:0x000485b0:	beq	0x0485d0
001050:0x000485b8:	cmpcm	dragged_item, NULL
001050:0x000485c8:	bne	0x0485f0
001050:0x000485d0:	release	dragged_item
001050:0x000485d8:	release	player
001050:0x000485e0:	release	item_in_hands
001050:0x000485e8:	rts
001052:0x000485f0:	movefm	[0x3cd32d50], dragged_item
001052:0x00048600:	ncalli	PlayerBase.CanAddEntityInHands([0x3cd32d50])
001052:0x00048608:	cmpi	ret, _i0
001052:0x00048618:	beq	0x048678
001052:0x00048620:	ncalli	PlayerBase.GetEntityInHands()
001052:0x00048628:	cmpmc	ret, dragged_item
001052:0x00048638:	bne	0x048660
001052:0x00048640:	ncalli	PlayerBase.CanRemoveEntityInHands()
001052:0x00048648:	cmpi	ret, _i0
001052:0x00048658:	beq	0x048678
001054:0x00048660:	call	InventoryManager.TakeToHands(dragged_item)
001055:0x00048670:	call	InventoryManager.Drop()
001055:0x00048678:	release	dragged_item
001055:0x00048680:	jump	0x0486a8
001060:0x00048688:	call	InventoryView.MoveItem(grid, row, col, false)
001061:0x00048698:	call	InventoryManager.Drop()
001062:0x000486a0:	call	InventoryView.UpdateLock()
001064:0x000486a8:	ncall	GetGame()
001064:0x000486b0:	ncalli	CGame.GetUIManager()
001064:0x000486b8:	ncalli	UIManager.GetMenu()
001064:0x000486c0:	movetm	menu, ret
001065:0x000486d0:	cmpcm	menu, NULL
001065:0x000486e0:	beq	0x0486f0
001067:0x000486e8:	call	InventoryMenu.HidePanelBorders()
001067:0x000486f0:	release	player
001067:0x000486f8:	release	item_in_hands
001067:0x00048700:	release	menu
001067:0x00048708:	rts
InventoryView::OnItemRightClick()
001073:0x00048770:	movec	[0x45f9f240], m_entity
001073:0x00048780:	call	Link<EntityAI>.IsNull()
001073:0x00048788:	cmpi	ret, _i0
001073:0x00048798:	bne	0x0487b8
001073:0x000487a0:	cmpcm	grid, NULL
001073:0x000487b0:	bne	0x0487c0
001073:0x000487b8:	rts
001075:0x000487c0:	ncall	GetGame()
001075:0x000487c8:	ncalli	CGame.GetPlayer()
001075:0x000487d0:	movetm	player, ret
001076:0x000487e0:	call	GetInstance()
001076:0x000487e8:	movec	manager, ret
001077:0x000487f8:	call	InventoryView.FindItem(grid, row, col)
001077:0x00048808:	movem	itemAtPos, ret
001079:0x00048818:	cmpcm	itemAtPos, NULL
001079:0x00048828:	beq	0x048840
001081:0x00048830:	call	InventoryManager.ShowActionMenu(itemAtPos)
001081:0x00048840:	release	player
001081:0x00048848:	release	itemAtPos
001081:0x00048850:	rts
InventoryView::OnItemDoubleClick()
001091:0x00048898:	call	InventoryView.FindItem(grid, row, col)
001091:0x000488a8:	movem	itemAtPos, ret
001092:0x000488b8:	cmpcm	m_container, NULL
001092:0x000488c8:	beq	0x048918
001092:0x000488d0:	cmpcm	itemAtPos, NULL
001092:0x000488e0:	beq	0x048918
001092:0x000488e8:	movetm	view, this
001092:0x000488f8:	movefm	[0x7034bb0], m_container
001092:0x00048908:	call	InventoryContainer.OnItemDoubleClick(view, itemAtPos)
001093:0x00048918:	call	GetInstance()
001093:0x00048920:	movec	manager, ret
001094:0x00048930:	call	InventoryManager.HideTooltip()
001094:0x00048938:	release	itemAtPos
001094:0x00048940:	rts
InventoryView::GetItemSize()
001099:0x00048988:	imove	w, 0x000001
001100:0x00048998:	imove	h, 0x000001
001102:0x000489a8:	cmpm	grid, m_container_icon_grid
001102:0x000489b8:	beq	0x0489e8
001104:0x000489c0:	ncall	GetGame()
001104:0x000489c8:	movefm	@c00, item
001104:0x000489d8:	icall	CGame.GetInventoryItemSize(@c00, w, h)
001107:0x000489e8:	citf	[0x11d1e540], w
001107:0x000489f8:	citf	[0x11d1e560], h
001107:0x00048a08:	ncall	Vector(_f0.000000, [0x11d1e540], [0x11d1e560])
001107:0x00048a18:	movev	ret, ret
001107:0x00048a28:	rts
001107:0x00048a30:	rts
InventoryView::GetItemColor()
001112:0x00048b60:	call	GetInstance()
001112:0x00048b68:	movec	manager, ret
001113:0x00048b78:	call	InventoryManager.GetItem()
001113:0x00048b80:	movem	dragged_item, ret
001114:0x00048b90:	ncall	GetGame()
001114:0x00048b98:	ncalli	CGame.GetPlayer()
001114:0x00048ba0:	movetm	player, ret
001116:0x00048bb0:	movefm	[0x11d0a2c8], grid
001116:0x00048bc0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryView))
001116:0x00048bc8:	move	is_view, ret
001117:0x00048bd8:	cmpcm	dragged_item, NULL
001117:0x00048be8:	beq	0x048c18
001117:0x00048bf0:	imove	ret, 0x000000
001117:0x00048c00:	release	dragged_item
001117:0x00048c08:	release	player
001117:0x00048c10:	rts
001119:0x00048c18:	move	color, ITEM_COLOR_TRANSPARENT
001120:0x00048c28:	cmpi	is_view, _i0
001120:0x00048c38:	beq	0x048c50
001122:0x00048c40:	move	color, ITEM_COLOR_GRID
001126:0x00048c50:	movefm	[0x11d0a2c8], item
001126:0x00048c60:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
001126:0x00048c68:	cmpi	ret, _i0
001126:0x00048c78:	beq	0x048cd0
001126:0x00048c80:	ncalli	InventoryItem.GetOwner()
001126:0x00048c88:	cmpm	ret, NULL
001126:0x00048c98:	beq	0x048cd0
001126:0x00048ca0:	ncalli	InventoryItem.GetOwner()
001126:0x00048ca8:	cmpmc	ret, player
001126:0x00048cb8:	beq	0x048cd0
001128:0x00048cc0:	move	color, ITEM_COLOR_NORMAL
001131:0x00048cd0:	movefm	[0x11d0a2c8], item
001131:0x00048ce0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
001131:0x00048ce8:	cmpi	ret, _i0
001131:0x00048cf8:	beq	0x048d88
001133:0x00048d00:	movefm	@c00, item
001133:0x00048d10:	movetm	item_base, @c00
001134:0x00048d20:	call	ItemBase.GetTemperature()
001134:0x00048d28:	move	temperature, ret
001135:0x00048d38:	cmpf	temperature, _f0.000000
001135:0x00048d48:	beq	0x048d80
001137:0x00048d50:	cfti	temperature, temperature
001137:0x00048d60:	call	GetTemperatureColor(temperature)
001137:0x00048d70:	move	color, ret
001137:0x00048d80:	release	item_base
001140:0x00048d88:	move	ret, color
001140:0x00048d98:	release	dragged_item
001140:0x00048da0:	release	player
001140:0x00048da8:	rts
001140:0x00048db0:	release	dragged_item
001140:0x00048db8:	release	player
001140:0x00048dc0:	rts
InventoryView::GetItemQuantityText()
001145:0x00048e08:	call	GetInstance()
001145:0x00048e10:	movec	manager, ret
001146:0x00048e20:	movem	item, item
001146:0x00048e30:	call	InventoryManager.GetItemQuantityText(item)
001146:0x00048e40:	moves	quantity_text, ret
001147:0x00048e50:	moves	ret, quantity_text
001147:0x00048e60:	rts
001147:0x00048e68:	rts
InventoryView::HasItemQuantity()
001152:0x00048eb0:	call	GetInstance()
001152:0x00048eb8:	movec	manager, ret
001153:0x00048ec8:	movem	item, item
001153:0x00048ed8:	call	InventoryManager.HasItemQuantity(item)
001153:0x00048ee8:	move	has_quantity, ret
001154:0x00048ef8:	move	ret, has_quantity
001154:0x00048f08:	rts
001154:0x00048f10:	rts
InventoryView::GetItemQuantity()
001159:0x00048f58:	call	GetInstance()
001159:0x00048f60:	movec	manager, ret
001160:0x00048f70:	call	InventoryManager.GetItemQuantity(item)
001160:0x00048f80:	move	quantity, ret
001161:0x00048f90:	move	ret, quantity
001161:0x00048fa0:	rts
001161:0x00048fa8:	rts
InventoryView::IsHistoryExpanded()
001174:0x00048ff0:	movec	[0x45f9f240], m_entity
001174:0x00049000:	call	Link<EntityAI>.IsNull()
001174:0x00049008:	cmpi	ret, _i0
001174:0x00049018:	beq	0x049038
001174:0x00049020:	imove	ret, 0x000000
001174:0x00049030:	rts
001176:0x00049038:	movec	[0x45f9f240], m_entity
001176:0x00049048:	call	Link<EntityAI>.Ptr()
001176:0x00049050:	ncalli	EntityAI.GetID()
001176:0x00049058:	move	id, ret
001178:0x00049068:	imove	i, 0x000000
001178:0x00049078:	jump	0x049088
001178:0x00049080:	inc	i
001178:0x00049088:	cmpi	i, EXPANDED_HISTORY_SIZE
001178:0x00049098:	bge	0x0490e8
001180:0x000490a0:	ffv	@m00, s_expanded_history[i]
001180:0x000490b0:	cmpi	@m00, id
001180:0x000490c0:	bne	0x0490e0
001182:0x000490c8:	imove	ret, 0x000001
001182:0x000490d8:	rts
001182:0x000490e0:	jump	0x049080
001186:0x000490e8:	imove	ret, 0x000000
001186:0x000490f8:	rts
001186:0x00049100:	rts
InventoryView::ClearHistory()
001191:0x00049128:	imove	i, 0x000000
001191:0x00049138:	jump	0x049148
001191:0x00049140:	inc	i
001191:0x00049148:	cmpi	i, EXPANDED_HISTORY_SIZE
001191:0x00049158:	bge	0x049178
001193:0x00049160:	ftv	s_expanded_history[i], _i-1
001193:0x00049170:	jump	0x049140
001195:0x00049178:	imove	s_expanded_history_index, 0x000000
001195:0x00049188:	rts
InventoryView::SaveHistory()
001200:0x00049190:	movec	[0x45f9f240], m_entity
001200:0x000491a0:	call	Link<EntityAI>.IsNull()
001200:0x000491a8:	cmpi	ret, _i0
001200:0x000491b8:	beq	0x0491c8
001200:0x000491c0:	rts
001202:0x000491c8:	cmpcm	m_body, NULL
001202:0x000491d8:	beq	0x049270
001202:0x000491e0:	cmpcm	m_body_spacer, NULL
001202:0x000491f0:	beq	0x049270
001202:0x000491f8:	cmpcm	m_content_spacer, NULL
001202:0x00049208:	beq	0x049270
001204:0x00049210:	movefm	[0x3cd18378], m_body_spacer
001204:0x00049220:	cmpi	MaxHeight, _i0
001204:0x00049230:	bne	0x049270
001206:0x00049238:	movec	[0x45f9f240], m_entity
001206:0x00049248:	call	Link<EntityAI>.Ptr()
001206:0x00049250:	ncalli	EntityAI.GetID()
001206:0x00049258:	ftv	s_expanded_history[s_expanded_history_index], ret
001207:0x00049268:	inc	s_expanded_history_index
001207:0x00049270:	rts
InventoryView::OnDraggingOver()
001215:0x00049278:	movem	grid, m_icon_grid
001215:0x00049288:	call	InventoryView.OnItemDraggingOver(grid, w, _i0, _i0)
001216:0x00049298:	imove	ret, 0x000001
001216:0x000492a8:	rts
001216:0x000492b0:	rts
InventoryView::OnDropReceived()
001221:0x000492b8:	movem	grid, m_icon_grid
001221:0x000492c8:	call	InventoryView.OnItemDropReceived(grid, w, _i0, _i0)
001222:0x000492d8:	imove	ret, 0x000001
001222:0x000492e8:	rts
001222:0x000492f0:	rts
InventoryViewBase::InventoryViewBase()
//scripts/5_Mission/GUI/Inventory/InventoryView/InventoryViewBase.c
000027:0x000492f8:	movem	m_container, container
000028:0x00049308:	new	@c00, Link<EntityAI>
000028:0x00049330:	movec	m_entity, @c00
000029:0x00049340:	new	@c00, array<InventoryGrid>
000029:0x00049360:	movetm	m_cargo_grids, @c00
000030:0x00049370:	new	@c00, array<Cargo>
000030:0x00049390:	movetm	m_cargos, @c00
000031:0x000493a0:	new	@c00, map<InventoryItem,vector>
000031:0x000493c0:	movetm	m_items, @c00
000032:0x000493d0:	new	@c00, Timer
000032:0x000493f8:	movec	m_update_lock_timer, @c00
000033:0x00049408:	move	m_properties, properties
000033:0x00049418:	rts
InventoryViewBase::UpdateSort()
000050:0x00049420:	movefm	[0x7034bb0], m_container
000050:0x00049430:	call	InventoryContainer.GetContentListWidget()
000050:0x00049438:	cmpcm	ret, NULL
000050:0x00049448:	beq	0x0494c8
000050:0x00049450:	cmpcm	m_root, NULL
000050:0x00049460:	beq	0x0494c8
000052:0x00049468:	movefm	[0x7034bb0], m_container
000052:0x00049478:	call	InventoryContainer.GetContentListWidget()
000052:0x00049480:	movefm	[0x11d0f508], m_root
000052:0x00049490:	ncalli	Widget.RemoveChild([0x11d0f508])
000053:0x00049498:	movefm	[0x7034bb0], m_container
000053:0x000494a8:	call	InventoryContainer.GetContentListWidget()
000053:0x000494b0:	movefm	[0x11d0f498], m_root
000053:0x000494c0:	ncalli	Widget.AddChild([0x11d0f498], _i1)
000056:0x000494c8:	movefm	[0x7034bb0], m_container
000056:0x000494d8:	call	InventoryContainer.GetContentGridWidget()
000056:0x000494e0:	cmpcm	ret, NULL
000056:0x000494f0:	beq	0x049570
000056:0x000494f8:	cmpcm	m_container_icon, NULL
000056:0x00049508:	beq	0x049570
000058:0x00049510:	movefm	[0x7034bb0], m_container
000058:0x00049520:	call	InventoryContainer.GetContentGridWidget()
000058:0x00049528:	movefm	[0x11d0f508], m_container_icon
000058:0x00049538:	ncalli	Widget.RemoveChild([0x11d0f508])
000059:0x00049540:	movefm	[0x7034bb0], m_container
000059:0x00049550:	call	InventoryContainer.GetContentGridWidget()
000059:0x00049558:	movefm	[0x11d0f498], m_container_icon
000059:0x00049568:	ncalli	Widget.AddChild([0x11d0f498], _i1)
000059:0x00049570:	rts
InventoryViewBase::UpdateLock()
000073:0x00049578:	movec	obj, this
000073:0x00049588:	movec	params, NULL
000073:0x00049598:	movec	[0x3cd17138], m_update_lock_timer
000073:0x000495a8:	call	Timer.Run(_f0.500000, obj, _s'UpdateUnlock', params, false)
000073:0x000495c0:	rts
InventoryViewBase::InitCargoGrid()
000091:0x00049628:	call	InventoryViewBase.HasProperty(CARGOS)
000091:0x00049638:	cmpi	ret, _i0
000091:0x00049648:	bne	0x049658
000091:0x00049650:	rts
000093:0x00049658:	cmpc	cargo, NULL
000093:0x00049668:	beq	0x049940
000095:0x00049670:	call	GetInstance()
000095:0x00049678:	movec	manager, ret
000098:0x00049688:	movefm	[0x3cd2cfb8], m_cargos
000098:0x00049698:	icall	array<Cargo>.Insert(cargo)
000101:0x000496a0:	cmpcm	m_container, NULL
000101:0x000496b0:	beq	0x049728
000101:0x000496b8:	movefm	[0x7034bb0], m_container
000101:0x000496c8:	call	InventoryContainer.IsOwnedByPlayer()
000101:0x000496d0:	cmpi	ret, _i0
000101:0x000496e0:	beq	0x049728
000103:0x000496e8:	ncall	GetGame()
000103:0x000496f0:	ncalli	CGame.GetWorkspace()
000103:0x000496f8:	movefm	[0x11d18388], m_content
000103:0x00049708:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridRight.layout', [0x11d18388])
000103:0x00049710:	movetm	cargoGridW, ret
000103:0x00049720:	jump	0x049760
000107:0x00049728:	ncall	GetGame()
000107:0x00049730:	ncalli	CGame.GetWorkspace()
000107:0x00049738:	movefm	[0x11d18388], m_content
000107:0x00049748:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGrid.layout', [0x11d18388])
000107:0x00049750:	movetm	cargoGridW, ret
000110:0x00049760:	cmpcm	cargoGridW, NULL
000110:0x00049770:	beq	0x049780
000110:0x00049778:	icall	Widget.GetScript(cargo_grid)
000111:0x00049780:	cmpcm	cargo_grid, NULL
000111:0x00049790:	beq	0x049930
000113:0x00049798:	movefm	@c00, cargo_grid
000113:0x000497a8:	movefm	[0x7035fd8], m_cargo_grids
000113:0x000497b8:	icall	array<InventoryGrid>.Insert(@c00)
000114:0x000497c0:	call	InventoryManager.GetNormalItemSize()
000114:0x000497c8:	cfti	item_size_width, ret
000114:0x000497d8:	push	ret
000114:0x000497e0:	call	InventoryManager.GetNormalItemSize()
000114:0x000497e8:	move	@f00, ret
000114:0x000497f8:	pop	ret
000114:0x00049800:	cfti	item_size_height, @f00
000114:0x00049810:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000115:0x00049820:	cfti	gap_size, GRID_CARGO_GAP
000115:0x00049830:	call	InventoryGrid.SetGridGapSize(gap_size)
000116:0x00049840:	ncalli	Cargo.GetWidth()
000116:0x00049848:	ncalli	Cargo.GetHeight()
000116:0x00049850:	call	InventoryGrid.SetGridSize(ret, ret)
000117:0x00049860:	movetm	controller, this
000117:0x00049870:	call	InventoryGrid.SetController(controller)
000118:0x00049880:	ncalli	Cargo.GetWidth()
000118:0x00049888:	ncalli	Cargo.GetHeight()
000118:0x00049890:	muli	@m01, ret, ret
000118:0x000498a0:	move	@m00, @m01
000118:0x000498b0:	call	InventoryGrid.GenerateBackgroundTiles(@m00)
000119:0x000498c0:	call	InventoryManager.GetQuantityStackPanelSize()
000119:0x000498c8:	cfti	size, ret
000119:0x000498d8:	call	InventoryGrid.SetQuantityPanelSize(size)
000120:0x000498e8:	movefm	[0x3cd2cfb8], m_cargos
000120:0x000498f8:	ncalli	array<Cargo>.Count()
000120:0x00049900:	subi	@m01, ret, _i1
000120:0x00049910:	move	@m00, @m01
000120:0x00049920:	call	InventoryViewBase.UpdateCargoGrid(@m00)
000120:0x00049930:	release	cargo_grid
000120:0x00049938:	release	cargoGridW
000120:0x00049940:	rts
InventoryViewBase::UpdateIconGrid()
000131:0x00049948:	cmpcm	m_icon_grid, NULL
000131:0x00049958:	beq	0x049990
000133:0x00049960:	movefm	[0x3cd17878], m_icon_grid
000133:0x00049970:	call	InventoryGrid.UpdateQuantityItems()
000134:0x00049978:	movefm	[0x3cd17878], m_icon_grid
000134:0x00049988:	call	InventoryGrid.UpdateTemperatureItems()
000137:0x00049990:	cmpcm	m_container_icon_grid, NULL
000137:0x000499a0:	beq	0x0499d8
000139:0x000499a8:	movefm	[0x3cd17878], m_container_icon_grid
000139:0x000499b8:	call	InventoryGrid.UpdateQuantityItems()
000140:0x000499c0:	movefm	[0x3cd17878], m_container_icon_grid
000140:0x000499d0:	call	InventoryGrid.UpdateTemperatureItems()
000140:0x000499d8:	rts
InventoryViewBase::MoveItem()
000146:0x00049b50:	movec	[0x45f9f240], m_entity
000146:0x00049b60:	call	Link<EntityAI>.IsNull()
000146:0x00049b68:	cmpi	ret, _i0
000146:0x00049b78:	bne	0x049b98
000146:0x00049b80:	cmpcm	grid, NULL
000146:0x00049b90:	bne	0x049bb0
000146:0x00049b98:	imove	ret, 0x000000
000146:0x00049ba8:	rts
000148:0x00049bb0:	ncall	GetGame()
000148:0x00049bb8:	ncalli	CGame.GetPlayer()
000148:0x00049bc0:	movetm	player, ret
000149:0x00049bd0:	call	GetInstance()
000149:0x00049bd8:	movec	manager, ret
000150:0x00049be8:	call	InventoryManager.GetItem()
000150:0x00049bf0:	movem	dragged_item, ret
000151:0x00049c00:	call	InventoryViewBase.FindItem(grid, row, col)
000151:0x00049c10:	movem	itemAtPos, ret
000152:0x00049c20:	call	InventoryManager.GetGrid()
000152:0x00049c28:	movem	gridSrc, ret
000156:0x00049c38:	call	InventoryManager.IsDragging()
000156:0x00049c40:	cmpi	ret, false
000156:0x00049c50:	beq	0x049c70
000156:0x00049c58:	cmpcm	dragged_item, NULL
000156:0x00049c68:	bne	0x049ca8
000156:0x00049c70:	imove	ret, 0x000000
000156:0x00049c80:	release	player
000156:0x00049c88:	release	dragged_item
000156:0x00049c90:	release	itemAtPos
000156:0x00049c98:	release	gridSrc
000156:0x00049ca0:	rts
000158:0x00049ca8:	cmpcm	dragged_item, NULL
000158:0x00049cb8:	beq	0x049d40
000158:0x00049cc0:	ncalli	InventoryItem.CanRemoveEntity()
000158:0x00049cc8:	cmpi	ret, false
000158:0x00049cd8:	bne	0x049d40
000160:0x00049ce0:	cmpi	testOnly, _i0
000160:0x00049cf0:	beq	0x049d08
000160:0x00049cf8:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000161:0x00049d08:	imove	ret, 0x000000
000161:0x00049d18:	release	player
000161:0x00049d20:	release	dragged_item
000161:0x00049d28:	release	itemAtPos
000161:0x00049d30:	release	gridSrc
000161:0x00049d38:	rts
000164:0x00049d40:	cmpm	grid, m_icon_grid
000164:0x00049d50:	beq	0x049d70
000164:0x00049d58:	cmpm	grid, m_container_icon_grid
000164:0x00049d68:	bne	0x04a1e0
000167:0x00049d70:	movec	[0x45f9f240], m_entity
000167:0x00049d80:	call	Link<EntityAI>.Ptr()
000167:0x00049d88:	cmpm	dragged_item, ret
000167:0x00049d98:	bne	0x049e00
000169:0x00049da0:	cmpi	testOnly, _i0
000169:0x00049db0:	beq	0x049dc8
000169:0x00049db8:	call	InventoryManager.SetItemColor(ITEM_COLOR_DRAG)
000170:0x00049dc8:	imove	ret, 0x000000
000170:0x00049dd8:	release	player
000170:0x00049de0:	release	dragged_item
000170:0x00049de8:	release	itemAtPos
000170:0x00049df0:	release	gridSrc
000170:0x00049df8:	rts
000173:0x00049e00:	movec	[0x45f9f240], m_entity
000173:0x00049e10:	call	Link<EntityAI>.Ptr()
000173:0x00049e18:	movem	entity2, dragged_item
000173:0x00049e28:	call	InventoryManager.GetCombinationFlags(ret, entity2)
000173:0x00049e38:	move	flags, ret
000175:0x00049e48:	cmpi	flags, NONE
000175:0x00049e58:	bne	0x049ec8
000177:0x00049e60:	cmpi	testOnly, _i0
000177:0x00049e70:	beq	0x049e88
000177:0x00049e78:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000178:0x00049e88:	imove	ret, 0x000000
000178:0x00049e98:	release	player
000178:0x00049ea0:	release	dragged_item
000178:0x00049ea8:	release	itemAtPos
000178:0x00049eb0:	release	gridSrc
000178:0x00049eb8:	rts
000178:0x00049ec0:	jump	0x04a1d8
000180:0x00049ec8:	cmpi	flags, ADD_AS_ATTACHMENT
000180:0x00049ed8:	beq	0x049ef8
000180:0x00049ee0:	cmpi	flags, ADD_AS_CARGO
000180:0x00049ef0:	bne	0x04a0a8
000182:0x00049ef8:	cmpi	testOnly, _i0
000182:0x00049f08:	beq	0x049f28
000182:0x00049f10:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000182:0x00049f20:	jump	0x04a068
000185:0x00049f28:	movefm	@c00, grid
000185:0x00049f38:	cmpi	DebugOutput, _i0
000185:0x00049f48:	beq	0x04a008
000185:0x00049f50:	movec	[0x45f9f240], m_entity
000185:0x00049f60:	call	Link<EntityAI>.Ptr()
000185:0x00049f68:	call	EntityAI.GetName()
000185:0x00049f70:	adds	@s04, ret, _s' :TakeEntityAsOwned( '
000185:0x00049f80:	moves	@s02, @s04
000185:0x00049f90:	pushs	ret
000185:0x00049f98:	call	InventoryItem.GetName()
000185:0x00049fa0:	moves	@s04, ret
000185:0x00049fb0:	pops	ret
000185:0x00049fb8:	adds	@s02, @s02, @s04
000185:0x00049fc8:	moves	@s01, @s02
000185:0x00049fd8:	adds	@s01, @s01, _s' )'
000185:0x00049fe8:	moves	@s00, @s01
000185:0x00049ff8:	call	PlayerBase.MessageStatus(@s00)
000187:0x0004a008:	cmpcm	gridSrc, NULL
000187:0x0004a018:	beq	0x04a030
000187:0x0004a020:	call	InventoryGrid.RemoveItem(dragged_item)
000188:0x0004a030:	movec	[0x45f9f240], m_entity
000188:0x0004a040:	call	Link<EntityAI>.Ptr()
000188:0x0004a048:	movem	item, dragged_item
000188:0x0004a058:	call	EntityAI.TakeEntityAsOwned(item)
000190:0x0004a068:	imove	ret, 0x000001
000190:0x0004a078:	release	player
000190:0x0004a080:	release	dragged_item
000190:0x0004a088:	release	itemAtPos
000190:0x0004a090:	release	gridSrc
000190:0x0004a098:	rts
000190:0x0004a0a0:	jump	0x04a1d8
000192:0x0004a0a8:	cmpi	flags, TAKE_TO_HANDS
000192:0x0004a0b8:	bne	0x04a140
000194:0x0004a0c0:	cmpi	testOnly, _i0
000194:0x0004a0d0:	beq	0x04a0f0
000194:0x0004a0d8:	call	InventoryManager.SetItemColor(ITEM_COLOR_SWAP)
000194:0x0004a0e8:	jump	0x04a100
000197:0x0004a0f0:	call	InventoryManager.TakeToHands(dragged_item)
000199:0x0004a100:	imove	ret, 0x000001
000199:0x0004a110:	release	player
000199:0x0004a118:	release	dragged_item
000199:0x0004a120:	release	itemAtPos
000199:0x0004a128:	release	gridSrc
000199:0x0004a130:	rts
000199:0x0004a138:	jump	0x04a1d8
000203:0x0004a140:	cmpi	testOnly, _i0
000203:0x0004a150:	beq	0x04a170
000203:0x0004a158:	call	InventoryManager.SetItemColor(ITEM_COLOR_MULTIPLE)
000203:0x0004a168:	jump	0x04a1a0
000204:0x0004a170:	movem	entity1, itemAtPos
000204:0x0004a180:	movem	entity2, dragged_item
000204:0x0004a190:	call	InventoryManager.ShowActionMenuCombine(entity1, entity2, flags)
000205:0x0004a1a0:	imove	ret, 0x000001
000205:0x0004a1b0:	release	player
000205:0x0004a1b8:	release	dragged_item
000205:0x0004a1c0:	release	itemAtPos
000205:0x0004a1c8:	release	gridSrc
000205:0x0004a1d0:	rts
000205:0x0004a1d8:	jump	0x04a9f0
000208:0x0004a1e0:	cmpcm	itemAtPos, NULL
000208:0x0004a1f0:	beq	0x04a6d0
000208:0x0004a1f8:	cmpm	dragged_item, itemAtPos
000208:0x0004a208:	beq	0x04a6d0
000210:0x0004a210:	movem	entity1, itemAtPos
000210:0x0004a220:	movem	entity2, dragged_item
000210:0x0004a230:	call	InventoryManager.GetCombinationFlags(entity1, entity2)
000210:0x0004a240:	move	flags, ret
000212:0x0004a250:	cmpi	flags, NONE
000212:0x0004a260:	bne	0x04a2d0
000214:0x0004a268:	cmpi	testOnly, _i0
000214:0x0004a278:	beq	0x04a290
000214:0x0004a280:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000215:0x0004a290:	imove	ret, 0x000000
000215:0x0004a2a0:	release	player
000215:0x0004a2a8:	release	dragged_item
000215:0x0004a2b0:	release	itemAtPos
000215:0x0004a2b8:	release	gridSrc
000215:0x0004a2c0:	rts
000215:0x0004a2c8:	jump	0x04a6c8
000217:0x0004a2d0:	cmpi	flags, SWAP
000217:0x0004a2e0:	bne	0x04a630
000219:0x0004a2e8:	cmpi	testOnly, _i0
000219:0x0004a2f8:	beq	0x04a318
000219:0x0004a300:	call	InventoryManager.SetItemColor(ITEM_COLOR_SWAP)
000219:0x0004a310:	jump	0x04a5f0
000222:0x0004a318:	movefm	@c00, grid
000222:0x0004a328:	cmpi	DebugOutput, _i0
000222:0x0004a338:	beq	0x04a3c0
000222:0x0004a340:	call	InventoryItem.GetName()
000222:0x0004a348:	adds	@s03, _s'Swap: ', ret
000222:0x0004a358:	moves	@s02, @s03
000222:0x0004a368:	adds	@s02, @s02, _s' , '
000222:0x0004a378:	moves	@s01, @s02
000222:0x0004a388:	call	InventoryItem.GetName()
000222:0x0004a390:	adds	@s01, @s01, ret
000222:0x0004a3a0:	moves	@s00, @s01
000222:0x0004a3b0:	call	PlayerBase.MessageStatus(@s00)
000224:0x0004a3c0:	call	InventoryGrid.HasItem(dragged_item)
000224:0x0004a3d0:	cmpi	ret, _i0
000224:0x0004a3e0:	beq	0x04a3f8
000226:0x0004a3e8:	movem	gridSrc, grid
000229:0x0004a3f8:	cmpcm	gridSrc, NULL
000229:0x0004a408:	beq	0x04a458
000229:0x0004a410:	call	InventoryGrid.GetItems()
000229:0x0004a418:	movefm	@c00, dragged_item
000229:0x0004a428:	icall	map<InventoryItem,vector>.Get(@c00)
000229:0x0004a430:	ifv	@f01, ret[0x000000]
000229:0x0004a440:	ncall	Round(@f01)
000229:0x0004a448:	cfti	index_from, ret
000230:0x0004a458:	call	InventoryGrid.GetItems()
000230:0x0004a460:	movefm	@c00, itemAtPos
000230:0x0004a470:	icall	map<InventoryItem,vector>.Get(@c00)
000230:0x0004a478:	ifv	@f01, ret[0x000000]
000230:0x0004a488:	ncall	Round(@f01)
000230:0x0004a490:	cfti	index_to, ret
000232:0x0004a4a0:	cmpcm	gridSrc, NULL
000232:0x0004a4b0:	beq	0x04a4c8
000232:0x0004a4b8:	call	InventoryGrid.RemoveItem(dragged_item)
000233:0x0004a4c8:	call	InventoryGrid.RemoveItem(itemAtPos)
000235:0x0004a4d8:	cmpcm	gridSrc, NULL
000235:0x0004a4e8:	beq	0x04a558
000237:0x0004a4f0:	call	InventoryGrid.GetController()
000237:0x0004a4f8:	call	InventoryGridController.GetItemSize(gridSrc, itemAtPos)
000237:0x0004a508:	movev	data, ret
000238:0x0004a518:	citf	@f00, index_from
000238:0x0004a528:	itv	data[0x000000], @f00
000239:0x0004a538:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000239:0x0004a548:	call	InventoryGrid.AddItem(itemAtPos, data, ret)
000242:0x0004a558:	call	InventoryGrid.GetController()
000242:0x0004a560:	call	InventoryGridController.GetItemSize(grid, dragged_item)
000242:0x0004a570:	movev	data, ret
000243:0x0004a580:	citf	@f00, index_to
000243:0x0004a590:	itv	data[0x000000], @f00
000244:0x0004a5a0:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000244:0x0004a5b0:	call	InventoryGrid.AddItem(dragged_item, data, ret)
000246:0x0004a5c0:	movem	item1, dragged_item
000246:0x0004a5d0:	movem	item2, itemAtPos
000246:0x0004a5e0:	call	PlayerBase.SwapEntities(item1, item2)
000248:0x0004a5f0:	imove	ret, 0x000001
000248:0x0004a600:	release	player
000248:0x0004a608:	release	dragged_item
000248:0x0004a610:	release	itemAtPos
000248:0x0004a618:	release	gridSrc
000248:0x0004a620:	rts
000248:0x0004a628:	jump	0x04a6c8
000252:0x0004a630:	cmpi	testOnly, _i0
000252:0x0004a640:	beq	0x04a660
000252:0x0004a648:	call	InventoryManager.SetItemColor(ITEM_COLOR_MULTIPLE)
000252:0x0004a658:	jump	0x04a690
000253:0x0004a660:	movem	entity1, itemAtPos
000253:0x0004a670:	movem	entity2, dragged_item
000253:0x0004a680:	call	InventoryManager.ShowActionMenuCombine(entity1, entity2, flags)
000254:0x0004a690:	imove	ret, 0x000001
000254:0x0004a6a0:	release	player
000254:0x0004a6a8:	release	dragged_item
000254:0x0004a6b0:	release	itemAtPos
000254:0x0004a6b8:	release	gridSrc
000254:0x0004a6c0:	rts
000254:0x0004a6c8:	jump	0x04a9f0
000286:0x0004a6d0:	call	InventoryViewBase.FindCargoIndex(grid)
000286:0x0004a6e0:	move	cargo_index, ret
000288:0x0004a6f0:	cmpi	cargo_index, INDEX_NOT_FOUND
000288:0x0004a700:	beq	0x04a9f0
000290:0x0004a708:	movefm	[0x3cd2cfb8], m_cargos
000290:0x0004a718:	icall	array<Cargo>.Get(cargo_index)
000290:0x0004a720:	movec	cargo, ret
000293:0x0004a730:	movec	[0x45f9f240], m_entity
000293:0x0004a740:	call	Link<EntityAI>.Ptr()
000293:0x0004a748:	movefm	[0x3cd23970], dragged_item
000293:0x0004a758:	ncalli	EntityAI.CanAddEntityInCargoEx([0x3cd23970], row, col)
000293:0x0004a768:	cmpi	ret, _i0
000293:0x0004a778:	beq	0x04a9f0
000295:0x0004a780:	cmpi	testOnly, _i0
000295:0x0004a790:	beq	0x04a7b0
000297:0x0004a798:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000297:0x0004a7a8:	jump	0x04a9b8
000301:0x0004a7b0:	movefm	@c00, grid
000301:0x0004a7c0:	cmpi	DebugOutput, _i0
000301:0x0004a7d0:	beq	0x04a890
000301:0x0004a7d8:	movec	[0x45f9f240], m_entity
000301:0x0004a7e8:	call	Link<EntityAI>.Ptr()
000301:0x0004a7f0:	call	EntityAI.GetName()
000301:0x0004a7f8:	adds	@s04, ret, _s' :TakeEntityToCargoAtPos( '
000301:0x0004a808:	moves	@s02, @s04
000301:0x0004a818:	pushs	ret
000301:0x0004a820:	call	InventoryItem.GetName()
000301:0x0004a828:	moves	@s04, ret
000301:0x0004a838:	pops	ret
000301:0x0004a840:	adds	@s02, @s02, @s04
000301:0x0004a850:	moves	@s01, @s02
000301:0x0004a860:	adds	@s01, @s01, _s' )'
000301:0x0004a870:	moves	@s00, @s01
000301:0x0004a880:	call	PlayerBase.MessageStatus(@s00)
000303:0x0004a890:	cmpcm	gridSrc, NULL
000303:0x0004a8a0:	beq	0x04a908
000305:0x0004a8a8:	ncalli	InventoryItem.GetOwner()
000305:0x0004a8b0:	movec	[0x45f9f240], m_entity
000305:0x0004a8c0:	call	Link<EntityAI>.Ptr()
000305:0x0004a8c8:	cmpmc	ret, ret
000305:0x0004a8d8:	beq	0x04a8f8
000307:0x0004a8e0:	call	InventoryGrid.RemoveItem(dragged_item)
000307:0x0004a8f0:	jump	0x04a908
000311:0x0004a8f8:	call	InventoryGrid.RemoveItem(dragged_item)
000316:0x0004a908:	call	InventoryGrid.GetController()
000316:0x0004a910:	call	InventoryGridController.GetItemSize(grid, dragged_item)
000316:0x0004a920:	movev	data, ret
000317:0x0004a930:	call	InventoryGrid.GetIndex(row, col)
000317:0x0004a940:	citf	@f01, ret
000317:0x0004a950:	itv	data[0x000000], @f01
000318:0x0004a960:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000318:0x0004a970:	call	InventoryGrid.AddItem(dragged_item, data, ret)
000320:0x0004a980:	movec	[0x45f9f240], m_entity
000320:0x0004a990:	call	Link<EntityAI>.Ptr()
000320:0x0004a998:	movem	item, dragged_item
000320:0x0004a9a8:	call	EntityAI.TakeEntityToCargoAtPos(item, cargo, row, col)
000322:0x0004a9b8:	imove	ret, 0x000001
000322:0x0004a9c8:	release	player
000322:0x0004a9d0:	release	dragged_item
000322:0x0004a9d8:	release	itemAtPos
000322:0x0004a9e0:	release	gridSrc
000322:0x0004a9e8:	rts
000327:0x0004a9f0:	cmpi	testOnly, _i0
000327:0x0004aa00:	beq	0x04aa18
000327:0x0004aa08:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000328:0x0004aa18:	imove	ret, 0x000000
000328:0x0004aa28:	release	player
000328:0x0004aa30:	release	dragged_item
000328:0x0004aa38:	release	itemAtPos
000328:0x0004aa40:	release	gridSrc
000328:0x0004aa48:	rts
000328:0x0004aa50:	release	player
000328:0x0004aa58:	release	dragged_item
000328:0x0004aa60:	release	itemAtPos
000328:0x0004aa68:	release	gridSrc
000328:0x0004aa70:	rts
InventoryViewBase::HasProperty()
000333:0x0004aa78:	andi	@m01, m_properties, mask
000333:0x0004aa88:	move	@m00, @m01
000333:0x0004aa98:	cmpi	@m00, _i0
000333:0x0004aaa8:	beq	0x04aac8
000333:0x0004aab0:	imove	ret, 0x000001
000333:0x0004aac0:	rts
000334:0x0004aac8:	imove	ret, 0x000000
000334:0x0004aad8:	rts
000334:0x0004aae0:	rts
InventoryViewBase::GetEntity()
000338:0x0004aae8:	movec	[0x45f9f240], m_entity
000338:0x0004aaf8:	call	Link<EntityAI>.Ptr()
000338:0x0004ab00:	movem	ret, ret
000338:0x0004ab10:	rts
000338:0x0004ab18:	rts
InventoryViewBase::UpdateCargoGrid()
000344:0x0004ac60:	call	InventoryViewBase.HasProperty(CARGOS)
000344:0x0004ac70:	cmpi	ret, _i0
000344:0x0004ac80:	bne	0x04ac90
000344:0x0004ac88:	rts
000346:0x0004ac90:	movefm	[0x3cd2cfb8], m_cargos
000346:0x0004aca0:	ncalli	array<Cargo>.Count()
000346:0x0004aca8:	cmpi	cargo_index, ret
000346:0x0004acb8:	bge	0x04aec8
000350:0x0004acc0:	movefm	[0x3cd2cfb8], m_cargos
000350:0x0004acd0:	icall	array<Cargo>.Get(cargo_index)
000350:0x0004acd8:	movec	cargo, ret
000352:0x0004ace8:	movefm	[0x7035fd8], m_cargo_grids
000352:0x0004acf8:	icall	array<InventoryGrid>.Get(cargo_index)
000352:0x0004ad00:	movetm	cargo_grid, ret
000353:0x0004ad10:	cmpc	cargo, NULL
000353:0x0004ad20:	beq	0x04aeb8
000353:0x0004ad28:	cmpcm	cargo_grid, NULL
000353:0x0004ad38:	beq	0x04aeb8
000355:0x0004ad40:	movefm	[0x3cd18618], m_items
000355:0x0004ad50:	ncalli	map<InventoryItem,vector>.Clear()
000356:0x0004ad58:	ncalli	Cargo.GetItemCount()
000356:0x0004ad60:	move	c, ret
000358:0x0004ad70:	imove	i, 0x000000
000358:0x0004ad80:	jump	0x04ad90
000358:0x0004ad88:	inc	i
000358:0x0004ad90:	cmpi	i, c
000358:0x0004ada0:	bge	0x04ae98
000360:0x0004ada8:	ncalli	Cargo.GetItem(i)
000360:0x0004adb0:	movetm	item, ret
000361:0x0004adc0:	icall	Cargo.GetItemPos(i, x, y)
000362:0x0004add0:	icall	Cargo.GetItemSize(i, w, h)
000363:0x0004ade0:	ncalli	Cargo.GetWidth()
000363:0x0004ade8:	muli	@m01, y, ret
000363:0x0004adf8:	move	@m00, @m01
000363:0x0004ae08:	addi	@m00, x, @m00
000363:0x0004ae18:	move	index, @m00
000364:0x0004ae28:	movefm	@c00, item
000364:0x0004ae38:	citf	[0x11d1e520], index
000364:0x0004ae48:	citf	[0x11d1e540], w
000364:0x0004ae58:	citf	[0x11d1e560], h
000364:0x0004ae68:	ncall	Vector([0x11d1e520], [0x11d1e540], [0x11d1e560])
000364:0x0004ae78:	movefm	[0x3cd18618], m_items
000364:0x0004ae88:	icall	map<InventoryItem,vector>.Set(@c00, ret)
000364:0x0004ae90:	jump	0x04ad88
000367:0x0004ae98:	movem	items, m_items
000367:0x0004aea8:	call	InventoryGrid.UpdateItems(items, true, true)
000367:0x0004aeb8:	release	item
000367:0x0004aec0:	release	cargo_grid
000367:0x0004aec8:	rts
InventoryViewBase::OnItemDraggingOver()
000387:0x0004aed0:	call	InventoryViewBase.MoveItem(grid, row, col, true)
000387:0x0004aee0:	rts
InventoryViewBase::OnItemDrop()
000392:0x0004af08:	call	GetInstance()
000392:0x0004af10:	movec	manager, ret
000393:0x0004af20:	call	InventoryManager.Drop()
000394:0x0004af28:	call	InventoryManager.HideTooltip()
000395:0x0004af30:	call	InventoryViewBase.UpdateLock()
000395:0x0004af38:	rts
InventoryViewBase::OnItemDropReceived()
000400:0x0004af60:	call	GetInstance()
000400:0x0004af68:	movec	manager, ret
000401:0x0004af78:	call	InventoryViewBase.MoveItem(grid, row, col, false)
000402:0x0004af88:	call	InventoryManager.Drop()
000403:0x0004af90:	call	InventoryViewBase.UpdateLock()
000403:0x0004af98:	rts
InventoryViewBase::OnItemRightClick()
000408:0x0004b000:	movec	[0x45f9f240], m_entity
000408:0x0004b010:	call	Link<EntityAI>.IsNull()
000408:0x0004b018:	cmpi	ret, _i0
000408:0x0004b028:	bne	0x04b048
000408:0x0004b030:	cmpcm	grid, NULL
000408:0x0004b040:	bne	0x04b050
000408:0x0004b048:	rts
000410:0x0004b050:	ncall	GetGame()
000410:0x0004b058:	ncalli	CGame.GetPlayer()
000410:0x0004b060:	movetm	player, ret
000411:0x0004b070:	call	GetInstance()
000411:0x0004b078:	movec	manager, ret
000412:0x0004b088:	call	InventoryViewBase.FindItem(grid, row, col)
000412:0x0004b098:	movem	itemAtPos, ret
000414:0x0004b0a8:	cmpcm	itemAtPos, NULL
000414:0x0004b0b8:	beq	0x04b0d0
000416:0x0004b0c0:	call	InventoryManager.ShowActionMenu(itemAtPos)
000416:0x0004b0d0:	release	player
000416:0x0004b0d8:	release	itemAtPos
000416:0x0004b0e0:	rts
InventoryViewBase::OnItemDoubleClick()
000426:0x0004b128:	call	InventoryViewBase.FindItem(grid, row, col)
000426:0x0004b138:	movem	itemAtPos, ret
000427:0x0004b148:	cmpcm	m_container, NULL
000427:0x0004b158:	beq	0x04b1a8
000427:0x0004b160:	cmpcm	itemAtPos, NULL
000427:0x0004b170:	beq	0x04b1a8
000427:0x0004b178:	movetm	view, this
000427:0x0004b188:	movefm	[0x7034bb0], m_container
000427:0x0004b198:	call	InventoryContainer.OnItemDoubleClick(view, itemAtPos)
000428:0x0004b1a8:	call	GetInstance()
000428:0x0004b1b0:	movec	manager, ret
000429:0x0004b1c0:	call	InventoryManager.HideTooltip()
000429:0x0004b1c8:	release	itemAtPos
000429:0x0004b1d0:	rts
InventoryViewBase::GetItemColor()
000434:0x0004b298:	call	GetInstance()
000434:0x0004b2a0:	movec	manager, ret
000435:0x0004b2b0:	call	InventoryManager.GetItem()
000435:0x0004b2b8:	movem	dragged_item, ret
000437:0x0004b2c8:	cmpcm	dragged_item, NULL
000437:0x0004b2d8:	beq	0x04b300
000437:0x0004b2e0:	imove	ret, 0x000000
000437:0x0004b2f0:	release	dragged_item
000437:0x0004b2f8:	rts
000438:0x0004b300:	move	color, ITEM_COLOR_NORMAL
000440:0x0004b310:	ncall	GetGame()
000440:0x0004b318:	ncalli	CGame.GetPlayer()
000440:0x0004b320:	movetm	player, ret
000441:0x0004b330:	ncalli	InventoryItem.GetOwner()
000441:0x0004b338:	cmpmc	ret, player
000441:0x0004b348:	beq	0x04b370
000441:0x0004b350:	ncalli	InventoryItem.GetOwner()
000441:0x0004b358:	cmpm	ret, NULL
000441:0x0004b368:	bne	0x04b380
000443:0x0004b370:	move	color, ITEM_COLOR_TRANSPARENT
000445:0x0004b380:	movefm	[0x11d0a2c8], item
000445:0x0004b390:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000445:0x0004b398:	cmpi	ret, _i0
000445:0x0004b3a8:	beq	0x04b438
000447:0x0004b3b0:	movefm	@c00, item
000447:0x0004b3c0:	movetm	item_base, @c00
000448:0x0004b3d0:	call	ItemBase.GetTemperature()
000448:0x0004b3d8:	move	temperature, ret
000449:0x0004b3e8:	cmpf	temperature, _f0.000000
000449:0x0004b3f8:	beq	0x04b430
000451:0x0004b400:	cfti	temperature, temperature
000451:0x0004b410:	call	GetTemperatureColor(temperature)
000451:0x0004b420:	move	color, ret
000451:0x0004b430:	release	item_base
000454:0x0004b438:	move	ret, color
000454:0x0004b448:	release	dragged_item
000454:0x0004b450:	release	player
000454:0x0004b458:	rts
000454:0x0004b460:	release	dragged_item
000454:0x0004b468:	release	player
000454:0x0004b470:	rts
InventoryViewBase::GetItemQuantityText()
000459:0x0004b4b8:	call	GetInstance()
000459:0x0004b4c0:	movec	manager, ret
000460:0x0004b4d0:	movem	item, item
000460:0x0004b4e0:	call	InventoryManager.GetItemQuantityText(item)
000460:0x0004b4f0:	moves	quantity_text, ret
000461:0x0004b500:	moves	ret, quantity_text
000461:0x0004b510:	rts
000461:0x0004b518:	rts
InventoryViewBase::HasItemQuantity()
000466:0x0004b560:	call	GetInstance()
000466:0x0004b568:	movec	manager, ret
000467:0x0004b578:	movem	item, item
000467:0x0004b588:	call	InventoryManager.HasItemQuantity(item)
000467:0x0004b598:	move	has_quantity, ret
000468:0x0004b5a8:	move	ret, has_quantity
000468:0x0004b5b8:	rts
000468:0x0004b5c0:	rts
InventoryViewBase::GetItemQuantity()
000473:0x0004b608:	call	GetInstance()
000473:0x0004b610:	movec	manager, ret
000474:0x0004b620:	call	InventoryManager.GetItemQuantity(item)
000474:0x0004b630:	move	quantity, ret
000475:0x0004b640:	move	ret, quantity
000475:0x0004b650:	rts
000475:0x0004b658:	rts
InventoryViewBase::GetRootWidget()
000480:0x0004b660:	movem	ret, m_root
000480:0x0004b670:	rts
000480:0x0004b678:	rts
InventoryViewBase::GetContainerIcon()
000485:0x0004b680:	movem	ret, m_container_icon
000485:0x0004b690:	rts
000485:0x0004b698:	rts
InventoryViewGrid::InventoryViewGrid()
//scripts/5_Mission/GUI/Inventory/InventoryView/InventoryViewGrid.c
000029:0x0004b6a0:	movem	m_container, container
000030:0x0004b6b0:	new	@c00, Link<EntityAI>
000030:0x0004b6d8:	movec	m_entity, @c00
000031:0x0004b6e8:	new	@c00, array<InventoryGrid>
000031:0x0004b708:	movetm	m_cargo_grids, @c00
000032:0x0004b718:	new	@c00, array<Cargo>
000032:0x0004b738:	movetm	m_cargos, @c00
000033:0x0004b748:	new	@c00, map<InventoryItem,vector>
000033:0x0004b768:	movetm	m_items, @c00
000034:0x0004b778:	new	@c00, Timer
000034:0x0004b7a0:	movec	m_update_lock_timer, @c00
000035:0x0004b7b0:	move	m_properties, properties
000035:0x0004b7c0:	rts
InventoryViewGrid::~InventoryViewGrid()
000040:0x0004b7c8:	call	InventoryViewGrid.SaveHistory()
000041:0x0004b7d0:	cmpcm	m_root, NULL
000041:0x0004b7e0:	beq	0x04b800
000041:0x0004b7e8:	movefm	[0x11cf2b58], m_root
000041:0x0004b7f8:	ncalli	Widget.Destroy()
000042:0x0004b800:	cmpcm	m_container_icon, NULL
000042:0x0004b810:	beq	0x04b830
000042:0x0004b818:	movefm	[0x11cf2b58], m_container_icon
000042:0x0004b828:	ncalli	Widget.Destroy()
000042:0x0004b830:	rts
InventoryViewGrid::CreateLayout()
000047:0x0004b838:	call	InventoryViewGrid.InitIconGrid()
000047:0x0004b840:	rts
InventoryViewGrid::UpdateItems()
000052:0x0004b888:	movec	[0x45f9f240], m_entity
000052:0x0004b898:	call	Link<EntityAI>.IsNull()
000052:0x0004b8a0:	cmpi	ret, _i0
000052:0x0004b8b0:	beq	0x04b8c0
000052:0x0004b8b8:	rts
000053:0x0004b8c0:	movec	[0x3cd17138], m_update_lock_timer
000053:0x0004b8d0:	call	Timer.IsRunning()
000053:0x0004b8d8:	cmpi	ret, _i0
000053:0x0004b8e8:	beq	0x04b8f8
000053:0x0004b8f0:	rts
000055:0x0004b8f8:	call	InventoryViewGrid.UpdateIconGrid()
000057:0x0004b900:	cmpcm	m_container_icon, NULL
000057:0x0004b910:	beq	0x04b9c8
000059:0x0004b918:	call	GetInstance()
000059:0x0004b920:	movec	manager, ret
000060:0x0004b930:	movefm	[0x11cf2b58], m_container_icon
000060:0x0004b940:	ncalli	Widget.FindAnyWidget(_s'Quantity')
000060:0x0004b948:	movetm	item_quantity, ret
000061:0x0004b958:	cmpcm	item_quantity, NULL
000061:0x0004b968:	beq	0x04b9c0
000063:0x0004b970:	movec	[0x45f9f240], m_entity
000063:0x0004b980:	call	Link<EntityAI>.Ptr()
000063:0x0004b988:	movefm	@c01, ret
000063:0x0004b998:	movetm	item, @c01
000063:0x0004b9a8:	call	InventoryManager.GetItemQuantityText(item)
000063:0x0004b9b8:	ncalli	TextWidget.SetText(ret)
000063:0x0004b9c0:	release	item_quantity
000063:0x0004b9c8:	rts
InventoryViewGrid::AddProxyCargo()
000070:0x0004b9d0:	movefm	[0x3cd2cfb8], m_cargos
000070:0x0004b9e0:	icall	array<Cargo>.Find(proxyCargo)
000070:0x0004b9e8:	cmpi	ret, INDEX_NOT_FOUND
000070:0x0004b9f8:	bne	0x04ba10
000072:0x0004ba00:	call	InventoryViewGrid.InitCargoGrid(proxyCargo, TYPE_PANEL_DEFAULT)
000072:0x0004ba10:	rts
InventoryViewGrid::UpdateLock()
000078:0x0004ba18:	movec	obj, this
000078:0x0004ba28:	movec	params, NULL
000078:0x0004ba38:	movec	[0x3cd17138], m_update_lock_timer
000078:0x0004ba48:	call	Timer.Run(_f0.500000, obj, _s'UpdateUnlock', params, false)
000078:0x0004ba60:	rts
InventoryViewGrid::UpdateUnlock()
000083:0x0004ba68:	call	InventoryViewGrid.UpdateItems()
000083:0x0004ba70:	rts
InventoryViewGrid::InitIconGrid()
000088:0x0004bae8:	call	GetInstance()
000088:0x0004baf0:	movec	manager, ret
000091:0x0004bb00:	movefm	[0x7034bb0], m_container
000091:0x0004bb10:	call	InventoryContainer.GetContentGridWidget()
000091:0x0004bb18:	cmpcm	ret, NULL
000091:0x0004bb28:	beq	0x04be00
000094:0x0004bb30:	ncall	GetGame()
000094:0x0004bb38:	ncalli	CGame.GetWorkspace()
000094:0x0004bb40:	movefm	[0x7034bb0], m_container
000094:0x0004bb50:	call	InventoryContainer.GetContentGridWidget()
000094:0x0004bb58:	movefm	[0x11d18388], ret
000094:0x0004bb68:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryIcon.layout', [0x11d18388])
000094:0x0004bb70:	movetm	m_container_icon, ret
000095:0x0004bb80:	cmpcm	m_container_icon, NULL
000095:0x0004bb90:	beq	0x04bbb0
000095:0x0004bb98:	movefm	[0x11cf2b58], m_container_icon
000095:0x0004bba8:	icall	Widget.GetScript(m_container_icon_grid)
000096:0x0004bbb0:	cmpcm	m_container_icon_grid, NULL
000096:0x0004bbc0:	beq	0x04bd68
000099:0x0004bbc8:	call	InventoryManager.GetAttachmentItemSize()
000099:0x0004bbd0:	cfti	item_size_width, ret
000099:0x0004bbe0:	push	ret
000099:0x0004bbe8:	call	InventoryManager.GetAttachmentItemSize()
000099:0x0004bbf0:	move	@f00, ret
000099:0x0004bc00:	pop	ret
000099:0x0004bc08:	cfti	item_size_height, @f00
000099:0x0004bc18:	movefm	[0x3cd17878], m_container_icon_grid
000099:0x0004bc28:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000100:0x0004bc38:	movefm	[0x3cd17878], m_container_icon_grid
000100:0x0004bc48:	call	InventoryGrid.SetGridSize(_i1, _i1)
000101:0x0004bc58:	movetm	controller, this
000101:0x0004bc68:	movefm	[0x3cd17878], m_container_icon_grid
000101:0x0004bc78:	call	InventoryGrid.SetController(controller)
000102:0x0004bc88:	movefm	[0x3cd17878], m_container_icon_grid
000102:0x0004bc98:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000103:0x0004bca8:	call	InventoryManager.GetQuantityStackPanelSize()
000103:0x0004bcb0:	cfti	size, ret
000103:0x0004bcc0:	movefm	[0x3cd17878], m_container_icon_grid
000103:0x0004bcd0:	call	InventoryGrid.SetQuantityPanelSize(size)
000104:0x0004bce0:	movec	[0x45f9f240], m_entity
000104:0x0004bcf0:	call	Link<EntityAI>.Ptr()
000104:0x0004bcf8:	movem	item, ret
000104:0x0004bd08:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000104:0x0004bd18:	pushv	ret
000104:0x0004bd20:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000104:0x0004bd30:	movev	@v00, ret
000104:0x0004bd40:	popv	ret
000104:0x0004bd48:	movefm	[0x3cd17878], m_container_icon_grid
000104:0x0004bd58:	call	InventoryGrid.AddItem(item, ret, @v00)
000106:0x0004bd68:	movefm	[0x11cf2b58], m_container_icon
000106:0x0004bd78:	ncalli	Widget.Show(true)
000107:0x0004bd80:	movefm	[0x11cf2b58], m_container_icon
000107:0x0004bd90:	ncalli	Widget.SetColor(_i0)
000108:0x0004bd98:	movefm	[0x7034bb0], m_container
000108:0x0004bda8:	call	InventoryContainer.GetContentGridWidget()
000108:0x0004bdb0:	movem	contentGrid, ret
000109:0x0004bdc0:	movefm	[0x7034bb0], m_container
000109:0x0004bdd0:	call	InventoryContainer.isContentGrid()
000109:0x0004bdd8:	cmpi	ret, _i0
000109:0x0004bde8:	beq	0x04bdf8
000111:0x0004bdf0:	ncalli	Widget.Show(true)
000111:0x0004bdf8:	release	contentGrid
000111:0x0004be00:	rts
InventoryViewGrid::UpdateIconGrid()
000119:0x0004be08:	cmpcm	m_icon_grid, NULL
000119:0x0004be18:	beq	0x04be50
000121:0x0004be20:	movefm	[0x3cd17878], m_icon_grid
000121:0x0004be30:	call	InventoryGrid.UpdateQuantityItems()
000122:0x0004be38:	movefm	[0x3cd17878], m_icon_grid
000122:0x0004be48:	call	InventoryGrid.UpdateTemperatureItems()
000125:0x0004be50:	cmpcm	m_container_icon_grid, NULL
000125:0x0004be60:	beq	0x04be98
000127:0x0004be68:	movefm	[0x3cd17878], m_container_icon_grid
000127:0x0004be78:	call	InventoryGrid.UpdateQuantityItems()
000128:0x0004be80:	movefm	[0x3cd17878], m_container_icon_grid
000128:0x0004be90:	call	InventoryGrid.UpdateTemperatureItems()
000128:0x0004be98:	rts
InventoryViewGrid::FindCargoIndex()
000134:0x0004bee0:	imove	cargo_index, 0x000000
000134:0x0004bef0:	jump	0x04bf00
000134:0x0004bef8:	inc	cargo_index
000134:0x0004bf00:	movefm	[0x7035fd8], m_cargo_grids
000134:0x0004bf10:	ncalli	array<InventoryGrid>.Count()
000134:0x0004bf18:	cmpi	cargo_index, ret
000134:0x0004bf28:	bge	0x04bfa0
000136:0x0004bf30:	movefm	[0x7035fd8], m_cargo_grids
000136:0x0004bf40:	icall	array<InventoryGrid>.Get(cargo_index)
000136:0x0004bf48:	movetm	cargo_grid, ret
000137:0x0004bf58:	cmpm	grid, cargo_grid
000137:0x0004bf68:	bne	0x04bf90
000139:0x0004bf70:	move	ret, cargo_index
000139:0x0004bf80:	release	cargo_grid
000139:0x0004bf88:	rts
000139:0x0004bf90:	release	cargo_grid
000139:0x0004bf98:	jump	0x04bef8
000143:0x0004bfa0:	imove	ret, 0xffffffff
000143:0x0004bfb0:	rts
000143:0x0004bfb8:	rts
InventoryViewGrid::HasProperty()
000148:0x0004bfc0:	andi	@m01, m_properties, mask
000148:0x0004bfd0:	move	@m00, @m01
000148:0x0004bfe0:	cmpi	@m00, _i0
000148:0x0004bff0:	beq	0x04c010
000148:0x0004bff8:	imove	ret, 0x000001
000148:0x0004c008:	rts
000149:0x0004c010:	imove	ret, 0x000000
000149:0x0004c020:	rts
000149:0x0004c028:	rts
InventoryViewGrid::GetEntity()
000153:0x0004c030:	movec	[0x45f9f240], m_entity
000153:0x0004c040:	call	Link<EntityAI>.Ptr()
000153:0x0004c048:	movem	ret, ret
000153:0x0004c058:	rts
000153:0x0004c060:	rts
InventoryViewGrid::OnMouseButtonDown()
000159:0x0004c0a8:	cmpm	w, m_header
000159:0x0004c0b8:	beq	0x04c0f0
000159:0x0004c0c0:	cmpm	w, m_minimize_widget
000159:0x0004c0d0:	beq	0x04c0f0
000159:0x0004c0d8:	cmpm	w, m_maximize_widget
000159:0x0004c0e8:	bne	0x04c2c0
000161:0x0004c0f0:	cmpcm	m_body, NULL
000161:0x0004c100:	beq	0x04c2c0
000161:0x0004c108:	cmpcm	m_body_spacer, NULL
000161:0x0004c118:	beq	0x04c2c0
000161:0x0004c120:	cmpcm	m_content_spacer, NULL
000161:0x0004c130:	beq	0x04c2c0
000163:0x0004c138:	movefm	[0x3cd18378], m_body_spacer
000163:0x0004c148:	cmpi	MaxHeight, _i0
000163:0x0004c158:	beq	0x04c1d0
000165:0x0004c160:	movefm	[0x3cd18378], m_body_spacer
000165:0x0004c170:	imove	MaxHeight, 0x000000
000166:0x0004c180:	cmpi	m_IsExpandable, _i0
000166:0x0004c190:	beq	0x04c1c8
000168:0x0004c198:	movefm	[0x11cf2b58], m_minimize_widget
000168:0x0004c1a8:	ncalli	Widget.Show(true)
000169:0x0004c1b0:	movefm	[0x11cf2b58], m_maximize_widget
000169:0x0004c1c0:	ncalli	Widget.Show(false)
000169:0x0004c1c8:	jump	0x04c2a8
000174:0x0004c1d0:	call	GetInstance()
000174:0x0004c1d8:	movec	manager, ret
000175:0x0004c1e8:	movefm	[0x3cd18378], m_content_spacer
000175:0x0004c1f8:	move	gap, Gap
000176:0x0004c208:	movefm	[0x3cd18378], m_body_spacer
000176:0x0004c218:	call	InventoryManager.GetAttachmentItemSize()
000176:0x0004c220:	citf	@f01, gap
000176:0x0004c230:	addf	@f00, ret, @f01
000176:0x0004c240:	cfti	@m00, @f00
000176:0x0004c250:	move	MaxHeight, @m00
000177:0x0004c260:	cmpi	m_IsExpandable, _i0
000177:0x0004c270:	beq	0x04c2a8
000179:0x0004c278:	movefm	[0x11cf2b58], m_minimize_widget
000179:0x0004c288:	ncalli	Widget.Show(false)
000180:0x0004c290:	movefm	[0x11cf2b58], m_maximize_widget
000180:0x0004c2a0:	ncalli	Widget.Show(true)
000184:0x0004c2a8:	movefm	[0x3cd18378], m_body_spacer
000184:0x0004c2b8:	call	AutoHeightSpacer.Update()
000187:0x0004c2c0:	imove	ret, 0x000000
000187:0x0004c2d0:	rts
000187:0x0004c2d8:	rts
InventoryViewGrid::OnItemEnter()
000193:0x0004c320:	call	GetInstance()
000193:0x0004c328:	movec	manager, ret
000194:0x0004c338:	call	InventoryViewGrid.FindItem(grid, row, col)
000194:0x0004c348:	movem	item, ret
000195:0x0004c358:	cmpcm	item, NULL
000195:0x0004c368:	beq	0x04c390
000197:0x0004c370:	movem	item, item
000197:0x0004c380:	call	InventoryManager.ShowTooltip(item)
000197:0x0004c390:	release	item
000197:0x0004c398:	rts
InventoryViewGrid::OnItemLeave()
000203:0x0004c3c0:	call	GetInstance()
000203:0x0004c3c8:	movec	manager, ret
000204:0x0004c3d8:	call	InventoryManager.HideTooltip()
000204:0x0004c3e0:	rts
InventoryViewGrid::OnItemDrag()
000209:0x0004c428:	movec	[0x45f9f240], m_entity
000209:0x0004c438:	call	Link<EntityAI>.IsNull()
000209:0x0004c440:	cmpi	ret, _i0
000209:0x0004c450:	beq	0x04c460
000209:0x0004c458:	rts
000211:0x0004c460:	call	GetInstance()
000211:0x0004c468:	movec	manager, ret
000212:0x0004c478:	call	InventoryViewGrid.FindItem(grid, row, col)
000212:0x0004c488:	movem	item, ret
000214:0x0004c498:	call	InventoryManager.Drag(GRID, item, grid)
000214:0x0004c4a8:	release	item
000214:0x0004c4b0:	rts
InventoryViewGrid::OnItemDraggingOver()
000219:0x0004c4b8:	call	InventoryViewGrid.MoveItem(grid, row, col, true)
000219:0x0004c4c8:	rts
InventoryViewGrid::OnItemDrop()
000224:0x0004c4f0:	call	GetInstance()
000224:0x0004c4f8:	movec	manager, ret
000225:0x0004c508:	call	InventoryManager.Drop()
000226:0x0004c510:	call	InventoryManager.HideTooltip()
000227:0x0004c518:	call	InventoryViewGrid.UpdateLock()
000227:0x0004c520:	rts
InventoryViewGrid::OnItemDropReceived()
000232:0x0004c548:	call	GetInstance()
000232:0x0004c550:	movec	manager, ret
000233:0x0004c560:	call	InventoryViewGrid.MoveItem(grid, row, col, false)
000234:0x0004c570:	call	InventoryManager.Drop()
000235:0x0004c578:	call	InventoryViewGrid.UpdateLock()
000235:0x0004c580:	rts
InventoryViewGrid::OnItemRightClick()
000240:0x0004c5e8:	movec	[0x45f9f240], m_entity
000240:0x0004c5f8:	call	Link<EntityAI>.IsNull()
000240:0x0004c600:	cmpi	ret, _i0
000240:0x0004c610:	bne	0x04c630
000240:0x0004c618:	cmpcm	grid, NULL
000240:0x0004c628:	bne	0x04c638
000240:0x0004c630:	rts
000242:0x0004c638:	ncall	GetGame()
000242:0x0004c640:	ncalli	CGame.GetPlayer()
000242:0x0004c648:	movetm	player, ret
000243:0x0004c658:	call	GetInstance()
000243:0x0004c660:	movec	manager, ret
000244:0x0004c670:	call	InventoryViewGrid.FindItem(grid, row, col)
000244:0x0004c680:	movem	itemAtPos, ret
000246:0x0004c690:	cmpcm	itemAtPos, NULL
000246:0x0004c6a0:	beq	0x04c6b8
000248:0x0004c6a8:	call	InventoryManager.ShowActionMenu(itemAtPos)
000248:0x0004c6b8:	release	player
000248:0x0004c6c0:	release	itemAtPos
000248:0x0004c6c8:	rts
InventoryViewGrid::OnItemLeftClick()
000254:0x0004c730:	movec	[0x45f9f240], m_entity
000254:0x0004c740:	call	Link<EntityAI>.IsNull()
000254:0x0004c748:	cmpi	ret, _i0
000254:0x0004c758:	bne	0x04c778
000254:0x0004c760:	cmpcm	grid, NULL
000254:0x0004c770:	bne	0x04c780
000254:0x0004c778:	rts
000255:0x0004c780:	call	InventoryViewGrid.FindItem(grid, row, col)
000255:0x0004c790:	movem	itemAtPos, ret
000257:0x0004c7a0:	cmpcm	itemAtPos, NULL
000257:0x0004c7b0:	beq	0x04c810
000259:0x0004c7b8:	call	GetInstance()
000259:0x0004c7c0:	movec	manager, ret
000260:0x0004c7d0:	call	InventoryManager.HideTooltip()
000261:0x0004c7d8:	movem	container, m_container
000262:0x0004c7e8:	movem	entity, itemAtPos
000262:0x0004c7f8:	call	InventoryContainerEntity.ToggleExpandView(entity)
000262:0x0004c808:	release	container
000262:0x0004c810:	release	itemAtPos
000262:0x0004c818:	rts
InventoryViewGrid::OnItemDoubleClick()
000268:0x0004c860:	call	InventoryViewGrid.FindItem(grid, row, col)
000268:0x0004c870:	movem	itemAtPos, ret
000269:0x0004c880:	cmpcm	m_container, NULL
000269:0x0004c890:	beq	0x04c8e0
000269:0x0004c898:	cmpcm	itemAtPos, NULL
000269:0x0004c8a8:	beq	0x04c8e0
000269:0x0004c8b0:	movetm	view, this
000269:0x0004c8c0:	movefm	[0x7034bb0], m_container
000269:0x0004c8d0:	call	InventoryContainer.OnItemDoubleClick(view, itemAtPos)
000270:0x0004c8e0:	call	GetInstance()
000270:0x0004c8e8:	movec	manager, ret
000271:0x0004c8f8:	call	InventoryManager.HideTooltip()
000271:0x0004c900:	release	itemAtPos
000271:0x0004c908:	rts
InventoryViewGrid::GetItemSize()
000276:0x0004c950:	imove	w, 0x000001
000277:0x0004c960:	imove	h, 0x000001
000279:0x0004c970:	cmpm	grid, m_attachment_grid
000279:0x0004c980:	beq	0x04c9b0
000281:0x0004c988:	ncall	GetGame()
000281:0x0004c990:	movefm	@c00, item
000281:0x0004c9a0:	icall	CGame.GetInventoryItemSize(@c00, w, h)
000284:0x0004c9b0:	citf	[0x11d1e540], w
000284:0x0004c9c0:	citf	[0x11d1e560], h
000284:0x0004c9d0:	ncall	Vector(_f0.000000, [0x11d1e540], [0x11d1e560])
000284:0x0004c9e0:	movev	ret, ret
000284:0x0004c9f0:	rts
000284:0x0004c9f8:	rts
InventoryViewGrid::FindItem()
000289:0x0004ca40:	movec	[0x45f9f240], m_entity
000289:0x0004ca50:	call	Link<EntityAI>.IsNull()
000289:0x0004ca58:	cmpi	ret, _i0
000289:0x0004ca68:	bne	0x04ca88
000289:0x0004ca70:	cmpcm	grid, NULL
000289:0x0004ca80:	bne	0x04caa0
000289:0x0004ca88:	movetm	ret, NULL
000289:0x0004ca98:	rts
000291:0x0004caa0:	cmpm	grid, m_attachment_grid
000291:0x0004cab0:	bne	0x04cb60
000293:0x0004cab8:	call	InventoryGrid.GetIndex(row, col)
000293:0x0004cac8:	move	index, ret
000294:0x0004cad8:	movec	[0x45f9f240], m_entity
000294:0x0004cae8:	call	Link<EntityAI>.Ptr()
000294:0x0004caf0:	ncalli	EntityAI.AttachmentsCount()
000294:0x0004caf8:	cmpi	index, ret
000294:0x0004cb08:	blt	0x04cb28
000294:0x0004cb10:	movetm	ret, NULL
000294:0x0004cb20:	rts
000296:0x0004cb28:	movec	[0x45f9f240], m_entity
000296:0x0004cb38:	call	Link<EntityAI>.Ptr()
000296:0x0004cb40:	ncalli	EntityAI.GetAttachmentFromIndex(index)
000296:0x0004cb48:	movetm	ret, ret
000296:0x0004cb58:	rts
000299:0x0004cb60:	cmpm	grid, m_icon_grid
000299:0x0004cb70:	bne	0x04cba8
000301:0x0004cb78:	movec	[0x45f9f240], m_entity
000301:0x0004cb88:	call	Link<EntityAI>.Ptr()
000301:0x0004cb90:	movem	ret, ret
000301:0x0004cba0:	rts
000304:0x0004cba8:	cmpm	grid, m_container_icon_grid
000304:0x0004cbb8:	bne	0x04cbf0
000306:0x0004cbc0:	movec	[0x45f9f240], m_entity
000306:0x0004cbd0:	call	Link<EntityAI>.Ptr()
000306:0x0004cbd8:	movem	ret, ret
000306:0x0004cbe8:	rts
000309:0x0004cbf0:	call	InventoryViewGrid.FindCargoIndex(grid)
000309:0x0004cc00:	move	cargo_index, ret
000311:0x0004cc10:	cmpi	cargo_index, INDEX_NOT_FOUND
000311:0x0004cc20:	beq	0x04cc60
000311:0x0004cc28:	movefm	[0x3cd2cfb8], m_cargos
000311:0x0004cc38:	icall	array<Cargo>.Get(cargo_index)
000311:0x0004cc40:	ncalli	Cargo.FindEntityInCargoOn(row, col)
000311:0x0004cc48:	movetm	ret, ret
000311:0x0004cc58:	rts
000311:0x0004cc60:	rts
InventoryViewGrid::GetItemColor()
000316:0x0004cd28:	call	GetInstance()
000316:0x0004cd30:	movec	manager, ret
000317:0x0004cd40:	call	InventoryManager.GetItem()
000317:0x0004cd48:	movem	dragged_item, ret
000319:0x0004cd58:	cmpcm	dragged_item, NULL
000319:0x0004cd68:	beq	0x04cd90
000319:0x0004cd70:	imove	ret, 0x000000
000319:0x0004cd80:	release	dragged_item
000319:0x0004cd88:	rts
000321:0x0004cd90:	move	color, ITEM_COLOR_TRANSPARENT
000324:0x0004cda0:	ncall	GetGame()
000324:0x0004cda8:	ncalli	CGame.GetPlayer()
000324:0x0004cdb0:	movetm	player, ret
000326:0x0004cdc0:	movefm	[0x11d0a2c8], item
000326:0x0004cdd0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000326:0x0004cdd8:	cmpi	ret, _i0
000326:0x0004cde8:	beq	0x04ce40
000326:0x0004cdf0:	ncalli	InventoryItem.GetOwner()
000326:0x0004cdf8:	cmpm	ret, NULL
000326:0x0004ce08:	beq	0x04ce40
000326:0x0004ce10:	ncalli	InventoryItem.GetOwner()
000326:0x0004ce18:	cmpmc	ret, player
000326:0x0004ce28:	beq	0x04ce40
000329:0x0004ce30:	move	color, ITEM_COLOR_NORMAL
000332:0x0004ce40:	movefm	[0x11d0a2c8], item
000332:0x0004ce50:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000332:0x0004ce58:	cmpi	ret, _i0
000332:0x0004ce68:	beq	0x04cef8
000334:0x0004ce70:	movefm	@c00, item
000334:0x0004ce80:	movetm	item_base, @c00
000335:0x0004ce90:	call	ItemBase.GetTemperature()
000335:0x0004ce98:	move	temperature, ret
000336:0x0004cea8:	cmpf	temperature, _f0.000000
000336:0x0004ceb8:	beq	0x04cef0
000338:0x0004cec0:	cfti	temperature, temperature
000338:0x0004ced0:	call	GetTemperatureColor(temperature)
000338:0x0004cee0:	move	color, ret
000338:0x0004cef0:	release	item_base
000341:0x0004cef8:	move	ret, color
000341:0x0004cf08:	release	dragged_item
000341:0x0004cf10:	release	player
000341:0x0004cf18:	rts
000341:0x0004cf20:	release	dragged_item
000341:0x0004cf28:	release	player
000341:0x0004cf30:	rts
InventoryViewGrid::GetItemQuantityText()
000346:0x0004cf78:	call	GetInstance()
000346:0x0004cf80:	movec	manager, ret
000347:0x0004cf90:	movem	item, item
000347:0x0004cfa0:	call	InventoryManager.GetItemQuantityText(item)
000347:0x0004cfb0:	moves	quantity_text, ret
000348:0x0004cfc0:	moves	ret, quantity_text
000348:0x0004cfd0:	rts
000348:0x0004cfd8:	rts
InventoryViewGrid::HasItemQuantity()
000353:0x0004d020:	call	GetInstance()
000353:0x0004d028:	movec	manager, ret
000354:0x0004d038:	movem	item, item
000354:0x0004d048:	call	InventoryManager.HasItemQuantity(item)
000354:0x0004d058:	move	has_quantity, ret
000355:0x0004d068:	move	ret, has_quantity
000355:0x0004d078:	rts
000355:0x0004d080:	rts
InventoryViewGrid::GetItemQuantity()
000360:0x0004d0c8:	call	GetInstance()
000360:0x0004d0d0:	movec	manager, ret
000361:0x0004d0e0:	call	InventoryManager.GetItemQuantity(item)
000361:0x0004d0f0:	move	quantity, ret
000362:0x0004d100:	move	ret, quantity
000362:0x0004d110:	rts
000362:0x0004d118:	rts
InventoryViewGrid::IsHistoryExpanded()
000376:0x0004d160:	movec	[0x45f9f240], m_entity
000376:0x0004d170:	call	Link<EntityAI>.IsNull()
000376:0x0004d178:	cmpi	ret, _i0
000376:0x0004d188:	beq	0x04d1a8
000376:0x0004d190:	imove	ret, 0x000000
000376:0x0004d1a0:	rts
000378:0x0004d1a8:	movec	[0x45f9f240], m_entity
000378:0x0004d1b8:	call	Link<EntityAI>.Ptr()
000378:0x0004d1c0:	ncalli	EntityAI.GetID()
000378:0x0004d1c8:	move	id, ret
000380:0x0004d1d8:	imove	i, 0x000000
000380:0x0004d1e8:	jump	0x04d1f8
000380:0x0004d1f0:	inc	i
000380:0x0004d1f8:	cmpi	i, EXPANDED_HISTORY_SIZE
000380:0x0004d208:	bge	0x04d258
000382:0x0004d210:	ffv	@m00, s_expanded_history[i]
000382:0x0004d220:	cmpi	@m00, id
000382:0x0004d230:	bne	0x04d250
000384:0x0004d238:	imove	ret, 0x000001
000384:0x0004d248:	rts
000384:0x0004d250:	jump	0x04d1f0
000388:0x0004d258:	imove	ret, 0x000000
000388:0x0004d268:	rts
000388:0x0004d270:	rts
InventoryViewGrid::ClearHistory()
000393:0x0004d298:	imove	i, 0x000000
000393:0x0004d2a8:	jump	0x04d2b8
000393:0x0004d2b0:	inc	i
000393:0x0004d2b8:	cmpi	i, EXPANDED_HISTORY_SIZE
000393:0x0004d2c8:	bge	0x04d2e8
000395:0x0004d2d0:	ftv	s_expanded_history[i], _i-1
000395:0x0004d2e0:	jump	0x04d2b0
000397:0x0004d2e8:	imove	s_expanded_history_index, 0x000000
000397:0x0004d2f8:	rts
InventoryViewGrid::SaveHistory()
000402:0x0004d300:	movec	[0x45f9f240], m_entity
000402:0x0004d310:	call	Link<EntityAI>.IsNull()
000402:0x0004d318:	cmpi	ret, _i0
000402:0x0004d328:	beq	0x04d338
000402:0x0004d330:	rts
000404:0x0004d338:	cmpcm	m_body, NULL
000404:0x0004d348:	beq	0x04d3e0
000404:0x0004d350:	cmpcm	m_body_spacer, NULL
000404:0x0004d360:	beq	0x04d3e0
000404:0x0004d368:	cmpcm	m_content_spacer, NULL
000404:0x0004d378:	beq	0x04d3e0
000406:0x0004d380:	movefm	[0x3cd18378], m_body_spacer
000406:0x0004d390:	cmpi	MaxHeight, _i0
000406:0x0004d3a0:	bne	0x04d3e0
000408:0x0004d3a8:	movec	[0x45f9f240], m_entity
000408:0x0004d3b8:	call	Link<EntityAI>.Ptr()
000408:0x0004d3c0:	ncalli	EntityAI.GetID()
000408:0x0004d3c8:	ftv	s_expanded_history[s_expanded_history_index], ret
000409:0x0004d3d8:	inc	s_expanded_history_index
000409:0x0004d3e0:	rts
InventoryViewHands::OnMouseButtonDown()
//scripts/5_Mission/GUI/Inventory/InventoryView/InventoryViewHands.c
000010:0x0004d428:	cmpm	w, m_header_bg
000010:0x0004d438:	beq	0x04d488
000010:0x0004d440:	cmpm	w, m_header
000010:0x0004d450:	beq	0x04d488
000010:0x0004d458:	cmpm	w, m_minimize_widget
000010:0x0004d468:	beq	0x04d488
000010:0x0004d470:	cmpm	w, m_maximize_widget
000010:0x0004d480:	bne	0x04d600
000016:0x0004d488:	cmpcm	m_body, NULL
000016:0x0004d498:	beq	0x04d598
000016:0x0004d4a0:	cmpcm	m_body_spacer, NULL
000016:0x0004d4b0:	beq	0x04d598
000016:0x0004d4b8:	cmpcm	m_content_spacer, NULL
000016:0x0004d4c8:	beq	0x04d598
000018:0x0004d4d0:	movefm	[0x11cf2b58], m_body
000018:0x0004d4e0:	ncalli	Widget.IsVisible()
000018:0x0004d4e8:	cmpi	ret, _i0
000018:0x0004d4f8:	beq	0x04d550
000020:0x0004d500:	movefm	[0x11cf2b58], m_minimize_widget
000020:0x0004d510:	ncalli	Widget.Show(false)
000021:0x0004d518:	movefm	[0x11cf2b58], m_maximize_widget
000021:0x0004d528:	ncalli	Widget.Show(true)
000022:0x0004d530:	movefm	[0x11cf2b58], m_body
000022:0x0004d540:	ncalli	Widget.Show(false)
000022:0x0004d548:	jump	0x04d598
000026:0x0004d550:	movefm	[0x11cf2b58], m_minimize_widget
000026:0x0004d560:	ncalli	Widget.Show(true)
000027:0x0004d568:	movefm	[0x11cf2b58], m_maximize_widget
000027:0x0004d578:	ncalli	Widget.Show(false)
000028:0x0004d580:	movefm	[0x11cf2b58], m_body
000028:0x0004d590:	ncalli	Widget.Show(true)
000037:0x0004d598:	movefm	[0x3cd18378], m_body_spacer
000037:0x0004d5a8:	call	AutoHeightSpacer.Update()
000038:0x0004d5b0:	movefm	[0x3cd18378], m_content_spacer
000038:0x0004d5c0:	call	AutoHeightSpacer.Update()
000040:0x0004d5c8:	movem	container_root, m_root
000042:0x0004d5d8:	icall	Widget.GetScript(spacer)
000043:0x0004d5e0:	call	AutoHeightSpacer.Update()
000044:0x0004d5e8:	call	InventoryViewHands.AlignToBottom()
000044:0x0004d5f0:	release	container_root
000044:0x0004d5f8:	release	spacer
000046:0x0004d600:	imove	ret, 0x000001
000046:0x0004d610:	rts
000046:0x0004d618:	rts
InventoryViewHands::CreateLayout()
000051:0x0004d6e0:	movec	[0x45f9f240], m_entity
000051:0x0004d6f0:	call	Link<EntityAI>.IsNull()
000051:0x0004d6f8:	cmpi	ret, _i0
000051:0x0004d708:	beq	0x04d900
000053:0x0004d710:	ncall	GetGame()
000053:0x0004d718:	ncalli	CGame.GetWorkspace()
000053:0x0004d720:	movefm	[0x7034bb0], m_container
000053:0x0004d730:	call	InventoryContainer.GetContentListWidget()
000053:0x0004d738:	movefm	[0x11d18388], ret
000053:0x0004d748:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryViewHandsEmpty.layout', [0x11d18388])
000053:0x0004d750:	movetm	m_root, ret
000054:0x0004d760:	movefm	[0x11cf2b58], m_root
000054:0x0004d770:	ncalli	Widget.FindAnyWidget(_s'Content')
000054:0x0004d778:	movetm	m_content, ret
000055:0x0004d788:	movefm	[0x11cf2b58], m_root
000055:0x0004d798:	ncalli	Widget.FindAnyWidget(_s'Body')
000055:0x0004d7a0:	movetm	m_body, ret
000056:0x0004d7b0:	movefm	[0x11cf2b58], m_root
000056:0x0004d7c0:	ncalli	Widget.FindAnyWidget(_s'ImageFrame')
000056:0x0004d7c8:	movetm	m_image_frame, ret
000057:0x0004d7d8:	movefm	[0x11cf2b58], m_root
000057:0x0004d7e8:	ncalli	Widget.FindAnyWidget(_s'Header')
000057:0x0004d7f0:	movetm	m_header, ret
000058:0x0004d800:	movefm	[0x11cf2b58], m_root
000058:0x0004d810:	ncalli	Widget.FindAnyWidget(_s'HeaderBar')
000058:0x0004d818:	movetm	m_header_bg, ret
000059:0x0004d828:	cmpcm	m_content, NULL
000059:0x0004d838:	beq	0x04d858
000059:0x0004d840:	movefm	[0x11cf2b58], m_content
000059:0x0004d850:	icall	Widget.GetScript(m_content_spacer)
000060:0x0004d858:	cmpcm	m_body, NULL
000060:0x0004d868:	beq	0x04d888
000060:0x0004d870:	movefm	[0x11cf2b58], m_body
000060:0x0004d880:	icall	Widget.GetScript(m_body_spacer)
000062:0x0004d888:	cmpcm	m_header_bg, NULL
000062:0x0004d898:	beq	0x04d8b8
000062:0x0004d8a0:	movefm	[0x11cf2b58], m_header_bg
000062:0x0004d8b0:	ncalli	Widget.SetHandler(this)
000063:0x0004d8b8:	cmpcm	m_header, NULL
000063:0x0004d8c8:	beq	0x04d8e8
000063:0x0004d8d0:	movefm	[0x11d09418], m_header
000063:0x0004d8e0:	ncalli	TextWidget.SetHandler(this)
000064:0x0004d8e8:	call	InventoryViewHands.InitIconGrid()
000065:0x0004d8f0:	rts
000065:0x0004d8f8:	jump	0x04dfa0
000069:0x0004d900:	ncall	GetGame()
000069:0x0004d908:	ncalli	CGame.GetWorkspace()
000069:0x0004d910:	movefm	[0x7034bb0], m_container
000069:0x0004d920:	call	InventoryContainer.GetContentListWidget()
000069:0x0004d928:	movefm	[0x11d18388], ret
000069:0x0004d938:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryViewHands.layout', [0x11d18388])
000069:0x0004d940:	movetm	m_root, ret
000070:0x0004d950:	movefm	[0x11cf2b58], m_root
000070:0x0004d960:	ncalli	Widget.FindAnyWidget(_s'Content')
000070:0x0004d968:	movetm	m_content, ret
000071:0x0004d978:	movefm	[0x11cf2b58], m_root
000071:0x0004d988:	ncalli	Widget.FindAnyWidget(_s'Body')
000071:0x0004d990:	movetm	m_body, ret
000072:0x0004d9a0:	movefm	[0x11cf2b58], m_root
000072:0x0004d9b0:	ncalli	Widget.FindAnyWidget(_s'AttachmentGrid')
000072:0x0004d9b8:	movetm	m_attachment_grid, ret
000073:0x0004d9c8:	movefm	[0x11cf2b58], m_root
000073:0x0004d9d8:	ncalli	Widget.FindAnyWidget(_s'ImageFrame')
000073:0x0004d9e0:	movetm	m_image_frame, ret
000074:0x0004d9f0:	movefm	[0x11cf2b58], m_root
000074:0x0004da00:	ncalli	Widget.FindAnyWidget(_s'Header')
000074:0x0004da08:	movetm	m_header, ret
000075:0x0004da18:	movefm	[0x11cf2b58], m_root
000075:0x0004da28:	ncalli	Widget.FindAnyWidget(_s'HeaderBar')
000075:0x0004da30:	movetm	m_header_bg, ret
000076:0x0004da40:	movefm	[0x11cf2b58], m_root
000076:0x0004da50:	ncalli	Widget.FindAnyWidget(_s'Count')
000076:0x0004da58:	movetm	m_count, ret
000077:0x0004da68:	movefm	[0x11cf2b58], m_root
000077:0x0004da78:	ncalli	Widget.FindAnyWidget(_s'MinimizeWidget')
000077:0x0004da80:	movetm	m_minimize_widget, ret
000078:0x0004da90:	movefm	[0x11cf2b58], m_root
000078:0x0004daa0:	ncalli	Widget.FindAnyWidget(_s'MaximizeWidget')
000078:0x0004daa8:	movetm	m_maximize_widget, ret
000080:0x0004dab8:	call	GetInstance()
000080:0x0004dac0:	movec	manager, ret
000081:0x0004dad0:	cmpcm	m_content, NULL
000081:0x0004dae0:	beq	0x04db00
000081:0x0004dae8:	movefm	[0x11cf2b58], m_content
000081:0x0004daf8:	icall	Widget.GetScript(m_content_spacer)
000082:0x0004db00:	cmpcm	m_body, NULL
000082:0x0004db10:	beq	0x04db30
000082:0x0004db18:	movefm	[0x11cf2b58], m_body
000082:0x0004db28:	icall	Widget.GetScript(m_body_spacer)
000083:0x0004db30:	cmpcm	m_attachment_grid, NULL
000083:0x0004db40:	beq	0x04db60
000083:0x0004db48:	movefm	[0x11cf2b58], m_attachment_grid
000083:0x0004db58:	icall	Widget.GetScript(m_attachment_spacer)
000085:0x0004db60:	call	InventoryViewHands.InitAttachmentGrid(TYPE_PANEL_HANDS)
000086:0x0004db70:	call	InventoryViewHands.InitIconGrid()
000087:0x0004db78:	movec	[0x45f9f240], m_entity
000087:0x0004db88:	call	Link<EntityAI>.Ptr()
000087:0x0004db90:	ncalli	EntityAI.GetCargo()
000087:0x0004db98:	call	InventoryViewHands.InitCargoGrid(ret, TYPE_PANEL_HANDS)
000089:0x0004dba8:	movec	[0x45f9f240], m_entity
000089:0x0004dbb8:	call	Link<EntityAI>.Ptr()
000089:0x0004dbc0:	call	EntityAI.GetName()
000089:0x0004dbc8:	moves	name, ret
000090:0x0004dbd8:	icall	ToUpper(name)
000091:0x0004dbe0:	call	InventoryViewHands.SetHeaderText(name)
000092:0x0004dbf0:	movec	[0x45f9f240], m_entity
000092:0x0004dc00:	call	Link<EntityAI>.Ptr()
000092:0x0004dc08:	call	InventoryViewHands.SetHeaderCountText(ret)
000094:0x0004dc18:	call	InventoryViewHands.UpdateHeight(TYPE_PANEL_HANDS)
000097:0x0004dc28:	movefm	[0x11cf2b58], m_minimize_widget
000097:0x0004dc38:	ncalli	Widget.Show(false)
000098:0x0004dc40:	movefm	[0x11cf2b58], m_maximize_widget
000098:0x0004dc50:	ncalli	Widget.Show(false)
000099:0x0004dc58:	imove	m_IsExpandable, 0x000000
000100:0x0004dc68:	movec	[0x45f9f240], m_entity
000100:0x0004dc78:	call	Link<EntityAI>.Ptr()
000100:0x0004dc80:	ncalli	EntityAI.GetCargo()
000100:0x0004dc88:	cmpc	ret, NULL
000100:0x0004dc98:	beq	0x04dcf8
000100:0x0004dca0:	movec	[0x45f9f240], m_entity
000100:0x0004dcb0:	call	Link<EntityAI>.Ptr()
000100:0x0004dcb8:	ncalli	EntityAI.GetCargo()
000100:0x0004dcc0:	ncalli	Cargo.GetHeight()
000100:0x0004dcc8:	cmpi	ret, _i0
000100:0x0004dcd8:	ble	0x04dcf8
000102:0x0004dce0:	imove	m_IsExpandable, 0x000001
000102:0x0004dcf0:	jump	0x04dd40
000104:0x0004dcf8:	movec	[0x45f9f240], m_entity
000104:0x0004dd08:	call	Link<EntityAI>.Ptr()
000104:0x0004dd10:	ncalli	EntityAI.GetSlotsCount()
000104:0x0004dd18:	cmpi	ret, _i0
000104:0x0004dd28:	ble	0x04dd40
000106:0x0004dd30:	imove	m_IsExpandable, 0x000001
000109:0x0004dd40:	call	InventoryViewHands.IsHistoryExpanded()
000109:0x0004dd48:	cmpi	ret, _i0
000109:0x0004dd58:	beq	0x04ddc8
000109:0x0004dd60:	cmpi	m_IsExpandable, _i0
000109:0x0004dd70:	beq	0x04ddc8
000111:0x0004dd78:	movefm	[0x11cf2b58], m_minimize_widget
000111:0x0004dd88:	ncalli	Widget.Show(false)
000112:0x0004dd90:	movefm	[0x11cf2b58], m_maximize_widget
000112:0x0004dda0:	ncalli	Widget.Show(true)
000113:0x0004dda8:	movefm	[0x11cf2b58], m_body
000113:0x0004ddb8:	ncalli	Widget.Show(false)
000113:0x0004ddc0:	jump	0x04de48
000115:0x0004ddc8:	cmpi	m_IsExpandable, _i0
000115:0x0004ddd8:	beq	0x04de30
000117:0x0004dde0:	movefm	[0x11cf2b58], m_minimize_widget
000117:0x0004ddf0:	ncalli	Widget.Show(true)
000118:0x0004ddf8:	movefm	[0x11cf2b58], m_maximize_widget
000118:0x0004de08:	ncalli	Widget.Show(false)
000119:0x0004de10:	movefm	[0x11cf2b58], m_body
000119:0x0004de20:	ncalli	Widget.Show(true)
000119:0x0004de28:	jump	0x04de48
000123:0x0004de30:	movefm	[0x11cf2b58], m_body
000123:0x0004de40:	ncalli	Widget.Show(false)
000126:0x0004de48:	cmpi	m_IsExpandable, _i0
000126:0x0004de58:	beq	0x04df20
000128:0x0004de60:	cmpcm	m_header_bg, NULL
000128:0x0004de70:	beq	0x04de90
000128:0x0004de78:	movefm	[0x11cf2b58], m_header_bg
000128:0x0004de88:	ncalli	Widget.SetHandler(this)
000129:0x0004de90:	cmpcm	m_header, NULL
000129:0x0004dea0:	beq	0x04dec0
000129:0x0004dea8:	movefm	[0x11d09418], m_header
000129:0x0004deb8:	ncalli	TextWidget.SetHandler(this)
000130:0x0004dec0:	cmpcm	m_minimize_widget, NULL
000130:0x0004ded0:	beq	0x04def0
000130:0x0004ded8:	movefm	[0x11cf2b58], m_minimize_widget
000130:0x0004dee8:	ncalli	Widget.SetHandler(this)
000131:0x0004def0:	cmpcm	m_maximize_widget, NULL
000131:0x0004df00:	beq	0x04df20
000131:0x0004df08:	movefm	[0x11cf2b58], m_maximize_widget
000131:0x0004df18:	ncalli	Widget.SetHandler(this)
000134:0x0004df20:	call	InventoryViewHands.AlignToBottom()
000135:0x0004df28:	movefm	[0x3cd18378], m_body_spacer
000135:0x0004df38:	call	AutoHeightSpacer.Update()
000136:0x0004df40:	movefm	[0x3cd18378], m_content_spacer
000136:0x0004df50:	call	AutoHeightSpacer.Update()
000138:0x0004df58:	movem	container_root, m_root
000140:0x0004df68:	icall	Widget.GetScript(spacer)
000141:0x0004df70:	cmpcm	spacer, NULL
000141:0x0004df80:	beq	0x04df90
000143:0x0004df88:	call	AutoHeightSpacer.Update()
000143:0x0004df90:	release	container_root
000143:0x0004df98:	release	spacer
000143:0x0004dfa0:	rts
InventoryViewHands::UpdateItems()
000150:0x0004e028:	call	InventoryViewHands.AlignToBottom()
000151:0x0004e030:	movec	[0x45f9f240], m_entity
000151:0x0004e040:	call	Link<EntityAI>.IsNull()
000151:0x0004e048:	cmpi	ret, _i0
000151:0x0004e058:	beq	0x04e068
000151:0x0004e060:	rts
000152:0x0004e068:	movec	[0x3cd17138], m_update_lock_timer
000152:0x0004e078:	call	Timer.IsRunning()
000152:0x0004e080:	cmpi	ret, _i0
000152:0x0004e090:	beq	0x04e0a0
000152:0x0004e098:	rts
000154:0x0004e0a0:	call	InventoryViewHands.UpdateAttachmentGrid()
000157:0x0004e0a8:	movefm	[0x3cd2cfb8], m_cargos
000157:0x0004e0b8:	ncalli	array<Cargo>.Count()
000157:0x0004e0c0:	move	c, ret
000158:0x0004e0d0:	imove	i, 0x000000
000158:0x0004e0e0:	jump	0x04e0f0
000158:0x0004e0e8:	inc	i
000158:0x0004e0f0:	cmpi	i, c
000158:0x0004e100:	bge	0x04e120
000160:0x0004e108:	call	InventoryViewHands.UpdateCargoGrid(i)
000160:0x0004e118:	jump	0x04e0e8
000163:0x0004e120:	call	InventoryViewHands.UpdateIconGrid()
000165:0x0004e128:	cmpcm	m_container_icon, NULL
000165:0x0004e138:	beq	0x04e1f0
000167:0x0004e140:	call	GetInstance()
000167:0x0004e148:	movec	manager, ret
000168:0x0004e158:	movefm	[0x11cf2b58], m_container_icon
000168:0x0004e168:	ncalli	Widget.FindAnyWidget(_s'Quantity')
000168:0x0004e170:	movetm	item_quantity, ret
000169:0x0004e180:	cmpcm	item_quantity, NULL
000169:0x0004e190:	beq	0x04e1e8
000171:0x0004e198:	movec	[0x45f9f240], m_entity
000171:0x0004e1a8:	call	Link<EntityAI>.Ptr()
000171:0x0004e1b0:	movefm	@c01, ret
000171:0x0004e1c0:	movetm	item, @c01
000171:0x0004e1d0:	call	InventoryManager.GetItemQuantityText(item)
000171:0x0004e1e0:	ncalli	TextWidget.SetText(ret)
000171:0x0004e1e8:	release	item_quantity
000175:0x0004e1f0:	call	InventoryViewHands.UpdateHeight(TYPE_PANEL_HANDS)
000177:0x0004e200:	movec	[0x45f9f240], m_entity
000177:0x0004e210:	call	Link<EntityAI>.Ptr()
000177:0x0004e218:	call	InventoryViewHands.SetHeaderCountText(ret)
000177:0x0004e228:	rts
InventoryViewHands::InitIconGrid()
000182:0x0004e520:	movefm	[0x11cf2b58], m_image_frame
000182:0x0004e530:	ncalli	Widget.FindAnyWidget(_s'ImageFrame')
000182:0x0004e538:	movetm	imageFrame, ret
000183:0x0004e548:	movefm	[0x11cf2b58], m_image_frame
000183:0x0004e558:	ncalli	Widget.FindAnyWidget(_s'Grid')
000183:0x0004e560:	movetm	imageGridW, ret
000184:0x0004e570:	call	GetInstance()
000184:0x0004e578:	movec	manager, ret
000192:0x0004e588:	movec	[0x45f9f240], m_entity
000192:0x0004e598:	call	Link<EntityAI>.IsNull()
000192:0x0004e5a0:	cmpi	ret, _i0
000192:0x0004e5b0:	beq	0x04e708
000194:0x0004e5b8:	cmpcm	imageGridW, NULL
000194:0x0004e5c8:	beq	0x04e5d8
000194:0x0004e5d0:	ncalli	Widget.Show(true)
000195:0x0004e5d8:	cmpcm	imageGridW, NULL
000195:0x0004e5e8:	beq	0x04e5f8
000195:0x0004e5f0:	icall	Widget.GetScript(m_icon_grid)
000196:0x0004e5f8:	cmpcm	m_icon_grid, NULL
000196:0x0004e608:	beq	0x04e6f0
000198:0x0004e610:	movetm	controller, this
000198:0x0004e620:	movefm	[0x3cd17878], m_icon_grid
000198:0x0004e630:	call	InventoryGrid.SetController(controller)
000199:0x0004e640:	movefm	[0x11cf2b58], m_image_frame
000199:0x0004e650:	icall	Widget.GetScreenSize(image_frame_width, image_frame_height)
000200:0x0004e658:	cfti	item_size_width, image_frame_width
000200:0x0004e668:	cfti	item_size_height, image_frame_height
000200:0x0004e678:	movefm	[0x3cd17878], m_icon_grid
000200:0x0004e688:	call	InventoryGrid.SetGridItemsSize(item_size_width, item_size_height)
000201:0x0004e698:	movefm	[0x3cd17878], m_icon_grid
000201:0x0004e6a8:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000202:0x0004e6b8:	call	InventoryManager.GetQuantityStackPanelSize()
000202:0x0004e6c0:	cfti	size, ret
000202:0x0004e6d0:	movefm	[0x3cd17878], m_icon_grid
000202:0x0004e6e0:	call	InventoryGrid.SetQuantityPanelSize(size)
000204:0x0004e6f0:	release	imageFrame
000204:0x0004e6f8:	release	imageGridW
000204:0x0004e700:	rts
000207:0x0004e708:	movec	[0x45f9f240], m_entity
000207:0x0004e718:	call	Link<EntityAI>.Ptr()
000207:0x0004e720:	movefm	[0x11d0a2c8], ret
000207:0x0004e730:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000207:0x0004e738:	cmpi	ret, _i0
000207:0x0004e748:	bne	0x04e788
000209:0x0004e750:	cmpcm	imageGridW, NULL
000209:0x0004e760:	beq	0x04e770
000209:0x0004e768:	ncalli	Widget.Show(false)
000210:0x0004e770:	release	imageFrame
000210:0x0004e778:	release	imageGridW
000210:0x0004e780:	rts
000213:0x0004e788:	cmpcm	imageGridW, NULL
000213:0x0004e798:	beq	0x04e7a8
000213:0x0004e7a0:	ncalli	Widget.Show(true)
000215:0x0004e7a8:	cmpcm	imageGridW, NULL
000215:0x0004e7b8:	beq	0x04e7c8
000215:0x0004e7c0:	icall	Widget.GetScript(m_icon_grid)
000217:0x0004e7c8:	cmpcm	m_icon_grid, NULL
000217:0x0004e7d8:	beq	0x04e9b8
000219:0x0004e7e0:	movetm	controller, this
000219:0x0004e7f0:	movefm	[0x3cd17878], m_icon_grid
000219:0x0004e800:	call	InventoryGrid.SetController(controller)
000222:0x0004e810:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000222:0x0004e820:	movev	rotation, ret
000225:0x0004e830:	movefm	[0x11cf2b58], m_image_frame
000225:0x0004e840:	icall	Widget.GetScreenSize(image_frame_width, image_frame_height)
000226:0x0004e848:	ncall	GetGame()
000226:0x0004e850:	movec	[0x45f9f240], m_entity
000226:0x0004e860:	call	Link<EntityAI>.Ptr()
000226:0x0004e868:	movefm	@c01, ret
000226:0x0004e878:	icall	CGame.GetInventoryItemSize(@c01, item_w, item_h)
000227:0x0004e888:	icall	Widget.GetSize(icon_width, icon_height)
000228:0x0004e890:	movefm	[0x11cf2b58], m_image_frame
000228:0x0004e8a0:	icall	Widget.GetSize(aw, ah)
000230:0x0004e8a8:	cfti	ww, image_frame_width
000231:0x0004e8b8:	cfti	hh, image_frame_height
000247:0x0004e8c8:	movefm	[0x11cf2b58], m_image_frame
000247:0x0004e8d8:	ncalli	Widget.SetSize(aw, ah, _i1)
000248:0x0004e8e8:	movefm	[0x3cd17878], m_icon_grid
000248:0x0004e8f8:	call	InventoryGrid.SetGridItemsSize(ww, hh)
000249:0x0004e908:	movefm	[0x3cd17878], m_icon_grid
000249:0x0004e918:	call	InventoryGrid.GenerateBackgroundTiles(_i1)
000250:0x0004e928:	call	InventoryManager.GetQuantityStackPanelSize()
000250:0x0004e930:	cfti	size, ret
000250:0x0004e940:	movefm	[0x3cd17878], m_icon_grid
000250:0x0004e950:	call	InventoryGrid.SetQuantityPanelSize(size)
000251:0x0004e960:	movec	[0x45f9f240], m_entity
000251:0x0004e970:	call	Link<EntityAI>.Ptr()
000251:0x0004e978:	movem	item, ret
000251:0x0004e988:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000251:0x0004e998:	movefm	[0x3cd17878], m_icon_grid
000251:0x0004e9a8:	call	InventoryGrid.AddItem(item, ret, rotation)
000251:0x0004e9b8:	release	imageFrame
000251:0x0004e9c0:	release	imageGridW
000251:0x0004e9c8:	rts
InventoryViewHands::AlignToBottom()
000257:0x0004eb80:	ncall	GetGame()
000257:0x0004eb88:	ncalli	CGame.GetUIManager()
000257:0x0004eb90:	ncalli	UIManager.GetMenu()
000257:0x0004eb98:	movetm	menu, ret
000259:0x0004eba8:	cmpcm	menu, NULL
000259:0x0004ebb8:	beq	0x04ec70
000259:0x0004ebc0:	movefm	[0x11d0a2c8], menu
000259:0x0004ebd0:	ncall	IsInherited([0x11d0a2c8], _T(InventoryMenu))
000259:0x0004ebd8:	cmpi	ret, _i0
000259:0x0004ebe8:	beq	0x04ec70
000261:0x0004ebf0:	movem	inv_menu, menu
000262:0x0004ec00:	call	InventoryMenu.GetCenterPanel()
000262:0x0004ec08:	movem	center_panel, ret
000263:0x0004ec18:	cmpcm	center_panel, NULL
000263:0x0004ec28:	beq	0x04ec60
000266:0x0004ec30:	movefm	[0x11cf2b58], m_root
000266:0x0004ec40:	icall	Widget.GetSize(w, h)
000267:0x0004ec48:	icall	Widget.GetSize(cw, ch)
000268:0x0004ec50:	ncalli	Widget.SetSize(cw, h, _i1)
000268:0x0004ec60:	release	inv_menu
000268:0x0004ec68:	release	center_panel
000268:0x0004ec70:	release	menu
000268:0x0004ec78:	rts
InventoryViewHands::OnItemDraggingOver()
000275:0x0004ed20:	call	GetInstance()
000275:0x0004ed28:	movec	manager, ret
000277:0x0004ed38:	ncall	GetGame()
000277:0x0004ed40:	ncalli	CGame.GetUIManager()
000277:0x0004ed48:	ncalli	UIManager.GetMenu()
000277:0x0004ed50:	movetm	menu, ret
000278:0x0004ed60:	cmpcm	menu, NULL
000278:0x0004ed70:	beq	0x04ed88
000280:0x0004ed78:	call	InventoryMenu.HidePanelBorders()
000281:0x0004ed80:	call	InventoryMenu.ShowHandsPanelBorder()
000283:0x0004ed88:	ncall	GetGame()
000283:0x0004ed90:	ncalli	CGame.GetPlayer()
000283:0x0004ed98:	movetm	player, ret
000284:0x0004eda8:	ncalli	PlayerBase.GetEntityInHands()
000284:0x0004edb0:	movetm	item_in_hands, ret
000285:0x0004edc0:	cmpcm	item_in_hands, NULL
000285:0x0004edd0:	bne	0x04ef10
000285:0x0004edd8:	movefm	[0x11d0a2c8], m_container
000285:0x0004ede8:	ncall	IsInherited([0x11d0a2c8], _T(InventoryContainerHands))
000285:0x0004edf0:	cmpi	ret, _i0
000285:0x0004ee00:	beq	0x04ef10
000287:0x0004ee08:	call	InventoryManager.GetItem()
000287:0x0004ee10:	movem	dragged_item, ret
000288:0x0004ee20:	call	InventoryManager.IsDragging()
000288:0x0004ee28:	cmpi	ret, false
000288:0x0004ee38:	beq	0x04ee58
000288:0x0004ee40:	cmpcm	dragged_item, NULL
000288:0x0004ee50:	bne	0x04ee80
000288:0x0004ee58:	release	dragged_item
000288:0x0004ee60:	release	menu
000288:0x0004ee68:	release	player
000288:0x0004ee70:	release	item_in_hands
000288:0x0004ee78:	rts
000289:0x0004ee80:	cmpcm	dragged_item, NULL
000289:0x0004ee90:	beq	0x04eef0
000289:0x0004ee98:	ncalli	PlayerBase.GetEntityInHands()
000289:0x0004eea0:	cmpmc	ret, dragged_item
000289:0x0004eeb0:	bne	0x04eef0
000289:0x0004eeb8:	ncalli	PlayerBase.CanRemoveEntityInHands()
000289:0x0004eec0:	cmpi	ret, _i0
000289:0x0004eed0:	bne	0x04eef0
000291:0x0004eed8:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000291:0x0004eee8:	jump	0x04ef00
000295:0x0004eef0:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000295:0x0004ef00:	release	dragged_item
000295:0x0004ef08:	jump	0x04ef20
000300:0x0004ef10:	call	InventoryViewHands.MoveItem(grid, row, col, true)
000300:0x0004ef20:	release	menu
000300:0x0004ef28:	release	player
000300:0x0004ef30:	release	item_in_hands
000300:0x0004ef38:	rts
EnfReadNote()
//scripts/5_Mission/GUI/InventoryMenu.c
000021:0x0004eff0:	icall	Replace(text, _s'
', _s'<br>')
000023:0x0004f000:	ncall	GetGame()
000023:0x0004f008:	ncalli	CGame.GetUIManager()
000023:0x0004f010:	call	UIManager.FindMenu(MENU_INVENTORY)
000023:0x0004f020:	movem	menu, ret
000024:0x0004f030:	cmpcm	menu, NULL
000024:0x0004f040:	beq	0x04f090
000026:0x0004f048:	ncalli	InventoryMenu.EnterScriptedMenu(MENU_NOTE)
000026:0x0004f050:	movetm	note_menu, ret
000027:0x0004f060:	cmpcm	note_menu, NULL
000027:0x0004f070:	beq	0x04f088
000029:0x0004f078:	call	NoteMenu.InitRead(text)
000029:0x0004f088:	release	note_menu
000029:0x0004f090:	release	menu
000029:0x0004f098:	rts
EnfWriteNote()
000036:0x0004f0e0:	ncall	GetGame()
000036:0x0004f0e8:	ncalli	CGame.GetUIManager()
000036:0x0004f0f0:	call	UIManager.FindMenu(MENU_INVENTORY)
000036:0x0004f100:	movem	menu, ret
000037:0x0004f110:	cmpcm	menu, NULL
000037:0x0004f120:	beq	0x04f190
000039:0x0004f128:	ncalli	InventoryMenu.EnterScriptedMenu(MENU_NOTE)
000039:0x0004f130:	movetm	note_menu, ret
000040:0x0004f140:	cmpcm	note_menu, NULL
000040:0x0004f150:	beq	0x04f188
000042:0x0004f158:	movem	paper, paper
000042:0x0004f168:	movem	pen, pen
000042:0x0004f178:	call	NoteMenu.InitWrite(paper, pen)
000042:0x0004f188:	release	note_menu
000042:0x0004f190:	release	menu
000042:0x0004f198:	rts
InventoryMenu::InventoryMenu()
000091:0x0004f1a0:	imove	m_characterRotationX, 0x000000
000092:0x0004f1b0:	imove	m_characterRotationY, 0x000000
000093:0x0004f1c0:	imove	m_characterScaleDelta, 0x000001
000094:0x0004f1d0:	imove	m_isCharacterRotating, 0x000000
000096:0x0004f1e0:	new	@c00, ContextMenu
000096:0x0004f200:	movetm	m_context_menu, @c00
000097:0x0004f210:	new	@c00, Timer
000097:0x0004f238:	movec	m_refresh_timer, @c00
000098:0x0004f248:	new	@c00, InventoryManager
000098:0x0004f268:	movec	m_drag_manager, @c00
000100:0x0004f278:	new	@c00, array<Object>
000100:0x0004f298:	movetm	m_ground_objects, @c00
000101:0x0004f2a8:	new	@c00, array<InventoryContainerEntity>
000101:0x0004f2c8:	movetm	m_ground_objects_containers, @c00
000101:0x0004f2d8:	rts
InventoryMenu::~InventoryMenu()
000106:0x0004f340:	imove	s_ground_container_list_switch, 0x000000
000107:0x0004f350:	imove	s_equipment_container_list_switch, 0x000000
000108:0x0004f360:	imove	s_target_container_list_switch, 0x000000
000110:0x0004f370:	cmpcm	m_ground_container, NULL
000110:0x0004f380:	beq	0x04f3b0
000112:0x0004f388:	movefm	[0x7035170], m_ground_container
000112:0x0004f398:	call	InventoryContainerVicinity.IsListView()
000112:0x0004f3a0:	move	s_ground_container_list_switch, ret
000115:0x0004f3b0:	cmpcm	m_target_container, NULL
000115:0x0004f3c0:	beq	0x04f3f0
000117:0x0004f3c8:	movefm	[0x7034c10], m_target_container
000117:0x0004f3d8:	call	InventoryContainerEntity.IsListView()
000117:0x0004f3e0:	move	s_target_container_list_switch, ret
000120:0x0004f3f0:	cmpcm	m_equipment_container, NULL
000120:0x0004f400:	beq	0x04f430
000122:0x0004f408:	movefm	[0x7034c10], m_equipment_container
000122:0x0004f418:	call	InventoryContainerEntity.IsListView()
000122:0x0004f420:	move	s_equipment_container_list_switch, ret
000126:0x0004f430:	cmpcm	m_ground_objects_containers, NULL
000126:0x0004f440:	beq	0x04f510
000128:0x0004f448:	movefm	[0x70525b8], m_ground_objects_containers
000128:0x0004f458:	ncalli	array<InventoryContainerEntity>.Count()
000128:0x0004f460:	move	c, ret
000129:0x0004f470:	imove	i, 0x000000
000129:0x0004f480:	jump	0x04f490
000129:0x0004f488:	inc	i
000129:0x0004f490:	cmpi	i, c
000129:0x0004f4a0:	bge	0x04f510
000131:0x0004f4a8:	movefm	[0x70525b8], m_ground_objects_containers
000131:0x0004f4b8:	icall	array<InventoryContainerEntity>.Get(i)
000131:0x0004f4c0:	movetm	container, ret
000132:0x0004f4d0:	cmpcm	container, NULL
000132:0x0004f4e0:	beq	0x04f508
000132:0x0004f4e8:	cmpcm	container, NULL
000132:0x0004f4f8:	beq	0x04f508
000134:0x0004f500:	delete	container
000134:0x0004f508:	jump	0x04f488
000139:0x0004f510:	ncall	GetGame()
000139:0x0004f518:	call	CGame.GetDragQueue()
000139:0x0004f520:	movec	obj, this
000139:0x0004f530:	call	DragQueue.RemoveCalls(obj)
000140:0x0004f540:	delete	m_Player_Statuses
000141:0x0004f548:	delete	m_Player_StatusesBackground
000141:0x0004f550:	release	container
000141:0x0004f558:	rts
InventoryMenu::UseKeyboard()
000153:0x0004f560:	imove	ret, 0x000000
000153:0x0004f570:	rts
000153:0x0004f578:	rts
InventoryMenu::Init()
000158:0x0004f9b0:	cmpcm	layoutRoot, NULL
000158:0x0004f9c0:	beq	0x04f9e0
000158:0x0004f9c8:	movem	ret, layoutRoot
000158:0x0004f9d8:	rts
000160:0x0004f9e0:	ncall	GetGame()
000160:0x0004f9e8:	ncalli	CGame.GetWorkspace()
000160:0x0004f9f0:	movec	[0x11d18388], NULL
000160:0x0004fa00:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory.layout', [0x11d18388])
000160:0x0004fa08:	movetm	layoutRoot, ret
000162:0x0004fa18:	ncalli	DayZGame.GetPlayer()
000162:0x0004fa20:	movetm	player, ret
000165:0x0004fa30:	movem	layoutRoot, layoutRoot
000165:0x0004fa40:	movefm	[0x3cd17630], m_context_menu
000165:0x0004fa50:	call	ContextMenu.Init(layoutRoot)
000168:0x0004fa60:	ncall	GetGame()
000168:0x0004fa68:	ncalli	CGame.GetWorkspace()
000168:0x0004fa70:	movefm	[0x11d18388], layoutRoot
000168:0x0004fa80:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory_tooltip.layout', [0x11d18388])
000168:0x0004fa88:	movetm	m_tooltip_widget, ret
000169:0x0004fa98:	movefm	[0x11cf2b58], m_tooltip_widget
000169:0x0004faa8:	ncalli	Widget.Show(false)
000172:0x0004fab0:	movefm	[0x11cf2b58], layoutRoot
000172:0x0004fac0:	ncalli	Widget.FindAnyWidget(_s'CharacterPanel')
000172:0x0004fac8:	movetm	m_character_panel_area_widget, ret
000174:0x0004fad8:	movefm	[0x11cf2b58], layoutRoot
000174:0x0004fae8:	ncalli	Widget.FindAnyWidget(_s'CharacterPanelWidget')
000174:0x0004faf0:	movetm	m_character_panel_widget, ret
000175:0x0004fb00:	movefm	[0x3cd41d38], player
000175:0x0004fb10:	movefm	[0x3cd18098], m_character_panel_widget
000175:0x0004fb20:	ncalli	PlayerPreviewWidget.SetPlayer([0x3cd41d38])
000177:0x0004fb28:	itv	pivot[0x000000], _f0.000000
000178:0x0004fb38:	itv	pivot[0x000001], _f0.000000
000179:0x0004fb48:	itv	pivot[0x000002], _f0.605000
000180:0x0004fb58:	movefm	[0x3cd18098], m_character_panel_widget
000180:0x0004fb68:	ncalli	PlayerPreviewWidget.SetModelPosition(pivot)
000182:0x0004fb70:	movefm	[0x3cd18098], m_character_panel_widget
000182:0x0004fb80:	ncalli	PlayerPreviewWidget.SetSize(_f1.340000, _f1.340000, _i1)
000183:0x0004fb90:	call	InventoryMenu.UpdateScale()
000184:0x0004fb98:	ncalli	PlayerBase.GetEntityInHands()
000184:0x0004fba0:	movetm	inHands, ret
000184:0x0004fbb0:	call	InventoryMenu.UpdatePlayerPreviewAnim(inHands)
000187:0x0004fbc0:	new	@c00, array<TextWidget>
000187:0x0004fbe0:	movetm	m_Player_Statuses, @c00
000188:0x0004fbf0:	movefm	[0x11cf2b58], layoutRoot
000188:0x0004fc00:	ncalli	Widget.FindAnyWidget(_s'Status0')
000188:0x0004fc08:	movefm	[0x704f790], m_Player_Statuses
000188:0x0004fc18:	icall	array<TextWidget>.Insert(ret)
000189:0x0004fc20:	movefm	[0x11cf2b58], layoutRoot
000189:0x0004fc30:	ncalli	Widget.FindAnyWidget(_s'Status1')
000189:0x0004fc38:	movefm	[0x704f790], m_Player_Statuses
000189:0x0004fc48:	icall	array<TextWidget>.Insert(ret)
000190:0x0004fc50:	movefm	[0x11cf2b58], layoutRoot
000190:0x0004fc60:	ncalli	Widget.FindAnyWidget(_s'Status2')
000190:0x0004fc68:	movefm	[0x704f790], m_Player_Statuses
000190:0x0004fc78:	icall	array<TextWidget>.Insert(ret)
000191:0x0004fc80:	movefm	[0x11cf2b58], layoutRoot
000191:0x0004fc90:	ncalli	Widget.FindAnyWidget(_s'Status3')
000191:0x0004fc98:	movefm	[0x704f790], m_Player_Statuses
000191:0x0004fca8:	icall	array<TextWidget>.Insert(ret)
000192:0x0004fcb0:	movefm	[0x11cf2b58], layoutRoot
000192:0x0004fcc0:	ncalli	Widget.FindAnyWidget(_s'Status4')
000192:0x0004fcc8:	movefm	[0x704f790], m_Player_Statuses
000192:0x0004fcd8:	icall	array<TextWidget>.Insert(ret)
000193:0x0004fce0:	movefm	[0x11cf2b58], layoutRoot
000193:0x0004fcf0:	ncalli	Widget.FindAnyWidget(_s'Status5')
000193:0x0004fcf8:	movefm	[0x704f790], m_Player_Statuses
000193:0x0004fd08:	icall	array<TextWidget>.Insert(ret)
000194:0x0004fd10:	movefm	[0x11cf2b58], layoutRoot
000194:0x0004fd20:	ncalli	Widget.FindAnyWidget(_s'Status6')
000194:0x0004fd28:	movefm	[0x704f790], m_Player_Statuses
000194:0x0004fd38:	icall	array<TextWidget>.Insert(ret)
000195:0x0004fd40:	movefm	[0x11cf2b58], layoutRoot
000195:0x0004fd50:	ncalli	Widget.FindAnyWidget(_s'Status7')
000195:0x0004fd58:	movefm	[0x704f790], m_Player_Statuses
000195:0x0004fd68:	icall	array<TextWidget>.Insert(ret)
000198:0x0004fd70:	new	@c00, array<ImageWidget>
000198:0x0004fd90:	movetm	m_Player_StatusesBackground, @c00
000199:0x0004fda0:	movefm	[0x11cf2b58], layoutRoot
000199:0x0004fdb0:	ncalli	Widget.FindAnyWidget(_s'StatusBackground0')
000199:0x0004fdb8:	movefm	[0x7053b70], m_Player_StatusesBackground
000199:0x0004fdc8:	icall	array<ImageWidget>.Insert(ret)
000200:0x0004fdd0:	movefm	[0x11cf2b58], layoutRoot
000200:0x0004fde0:	ncalli	Widget.FindAnyWidget(_s'StatusBackground1')
000200:0x0004fde8:	movefm	[0x7053b70], m_Player_StatusesBackground
000200:0x0004fdf8:	icall	array<ImageWidget>.Insert(ret)
000201:0x0004fe00:	movefm	[0x11cf2b58], layoutRoot
000201:0x0004fe10:	ncalli	Widget.FindAnyWidget(_s'StatusBackground2')
000201:0x0004fe18:	movefm	[0x7053b70], m_Player_StatusesBackground
000201:0x0004fe28:	icall	array<ImageWidget>.Insert(ret)
000202:0x0004fe30:	movefm	[0x11cf2b58], layoutRoot
000202:0x0004fe40:	ncalli	Widget.FindAnyWidget(_s'StatusBackground3')
000202:0x0004fe48:	movefm	[0x7053b70], m_Player_StatusesBackground
000202:0x0004fe58:	icall	array<ImageWidget>.Insert(ret)
000203:0x0004fe60:	movefm	[0x11cf2b58], layoutRoot
000203:0x0004fe70:	ncalli	Widget.FindAnyWidget(_s'StatusBackground4')
000203:0x0004fe78:	movefm	[0x7053b70], m_Player_StatusesBackground
000203:0x0004fe88:	icall	array<ImageWidget>.Insert(ret)
000204:0x0004fe90:	movefm	[0x11cf2b58], layoutRoot
000204:0x0004fea0:	ncalli	Widget.FindAnyWidget(_s'StatusBackground5')
000204:0x0004fea8:	movefm	[0x7053b70], m_Player_StatusesBackground
000204:0x0004feb8:	icall	array<ImageWidget>.Insert(ret)
000205:0x0004fec0:	movefm	[0x11cf2b58], layoutRoot
000205:0x0004fed0:	ncalli	Widget.FindAnyWidget(_s'StatusBackground6')
000205:0x0004fed8:	movefm	[0x7053b70], m_Player_StatusesBackground
000205:0x0004fee8:	icall	array<ImageWidget>.Insert(ret)
000206:0x0004fef0:	movefm	[0x11cf2b58], layoutRoot
000206:0x0004ff00:	ncalli	Widget.FindAnyWidget(_s'StatusBackground7')
000206:0x0004ff08:	movefm	[0x7053b70], m_Player_StatusesBackground
000206:0x0004ff18:	icall	array<ImageWidget>.Insert(ret)
000209:0x0004ff20:	movefm	[0x11cf2b58], layoutRoot
000209:0x0004ff30:	ncalli	Widget.FindAnyWidget(_s'LeftPanel')
000209:0x0004ff38:	movetm	m_left_panel, ret
000210:0x0004ff48:	movefm	[0x11cf2b58], layoutRoot
000210:0x0004ff58:	ncalli	Widget.FindAnyWidget(_s'RightPanel')
000210:0x0004ff60:	movetm	m_right_panel, ret
000211:0x0004ff70:	movefm	[0x11cf2b58], layoutRoot
000211:0x0004ff80:	ncalli	Widget.FindAnyWidget(_s'CenterPanel')
000211:0x0004ff88:	movetm	m_center_panel, ret
000212:0x0004ff98:	movefm	[0x11cf2b58], m_left_panel
000212:0x0004ffa8:	ncalli	Widget.FindAnyWidget(_s'Content')
000212:0x0004ffb0:	movetm	m_left_panel_content, ret
000213:0x0004ffc0:	movefm	[0x11cf2b58], m_right_panel
000213:0x0004ffd0:	ncalli	Widget.FindAnyWidget(_s'Content')
000213:0x0004ffd8:	movetm	m_right_panel_content, ret
000214:0x0004ffe8:	movefm	[0x11cf2b58], m_center_panel
000214:0x0004fff8:	ncalli	Widget.FindAnyWidget(_s'Content')
000214:0x00050000:	movetm	m_center_panel_content, ret
000216:0x00050010:	movefm	[0x11cf2b58], layoutRoot
000216:0x00050020:	ncalli	Widget.FindAnyWidget(_s'QuickbarGrid')
000216:0x00050028:	movetm	m_quickbar_widget, ret
000218:0x00050038:	movefm	[0x11cf2b58], layoutRoot
000218:0x00050048:	ncalli	Widget.FindAnyWidget(_s'CenterPanelBorder')
000218:0x00050050:	movetm	m_center_panel_border, ret
000219:0x00050060:	movefm	[0x11cf2b58], layoutRoot
000219:0x00050070:	ncalli	Widget.FindAnyWidget(_s'LeftPanelBorder')
000219:0x00050078:	movetm	m_left_panel_border, ret
000220:0x00050088:	movefm	[0x11cf2b58], layoutRoot
000220:0x00050098:	ncalli	Widget.FindAnyWidget(_s'RightPanelBorder')
000220:0x000500a0:	movetm	m_right_panel_border, ret
000221:0x000500b0:	movefm	[0x11cf2b58], layoutRoot
000221:0x000500c0:	ncalli	Widget.FindAnyWidget(_s'VicinityPanel')
000221:0x000500c8:	movetm	m_vicinity_panel, ret
000223:0x000500d8:	movefm	[0x11cf2b58], m_left_panel_content
000223:0x000500e8:	icall	Widget.GetScreenSize(w, h)
000225:0x000500f0:	call	GetInstance()
000225:0x000500f8:	movec	manager, ret
000226:0x00050108:	call	InventoryManager.RecalculateIconSize(w)
000228:0x00050118:	movem	ret, layoutRoot
000228:0x00050128:	release	player
000228:0x00050130:	rts
000228:0x00050138:	release	player
000228:0x00050140:	rts
InventoryMenu::InitContainers()
000233:0x00050248:	imove	w, 64.00000
000234:0x00050258:	imove	h, 64.00000
000235:0x00050268:	ncalli	DayZGame.GetPlayer()
000235:0x00050270:	movetm	player, ret
000237:0x00050280:	cmpc	m_target, NULL
000237:0x00050290:	beq	0x0502f8
000237:0x00050298:	movec	[0x45f9f240], m_target
000237:0x000502a8:	call	Link<EntityAI>.Ptr()
000237:0x000502b0:	cmpm	ret, target
000237:0x000502c0:	beq	0x0502f8
000239:0x000502c8:	delete	m_target
000240:0x000502d0:	movec	m_target, NULL
000242:0x000502e0:	delete	m_target_container
000243:0x000502e8:	movetm	m_target_container, NULL
000246:0x000502f8:	cmpcm	target, NULL
000246:0x00050308:	beq	0x050450
000246:0x00050310:	cmpc	m_target, NULL
000246:0x00050320:	bne	0x050450
000248:0x00050328:	movefm	[0x11d0a2c8], target
000248:0x00050338:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000248:0x00050340:	cmpi	ret, _i0
000248:0x00050350:	bne	0x050418
000248:0x00050358:	movefm	[0x11d0a2c8], target
000248:0x00050368:	ncall	IsInherited([0x11d0a2c8], _T(Building))
000248:0x00050370:	cmpi	ret, _i0
000248:0x00050380:	bne	0x050418
000248:0x00050388:	movefm	[0x11d0a2c8], target
000248:0x00050398:	ncall	IsInherited([0x11d0a2c8], _T(PlayerBase))
000248:0x000503a0:	cmpi	ret, _i0
000248:0x000503b0:	bne	0x050418
000248:0x000503b8:	movefm	[0x11d0a2c8], target
000248:0x000503c8:	ncall	IsInherited([0x11d0a2c8], _T(Car))
000248:0x000503d0:	cmpi	ret, _i0
000248:0x000503e0:	bne	0x050418
000248:0x000503e8:	movefm	[0x11d0a2c8], target
000248:0x000503f8:	ncall	IsInherited([0x11d0a2c8], _T(AnimalBase))
000248:0x00050400:	cmpi	ret, _i0
000248:0x00050410:	beq	0x050450
000250:0x00050418:	new	@c00, Link<EntityAI>
000250:0x00050440:	movec	m_target, @c00
000255:0x00050450:	cmpcm	m_hands_container, NULL
000255:0x00050460:	bne	0x050500
000257:0x00050468:	movem	parent, m_center_panel_content
000257:0x00050478:	new	@c00, InventoryContainerHands
000257:0x000504a0:	movetm	m_hands_container, @c00
000258:0x000504b0:	movefm	[0x70357e0], m_hands_container
000258:0x000504c0:	call	InventoryContainerHands.Init()
000259:0x000504c8:	movefm	[0x70357e0], m_hands_container
000259:0x000504d8:	call	InventoryContainerHands.SetHeaderText(_s'EMPTY HANDS')
000260:0x000504e8:	movefm	[0x70357e0], m_hands_container
000260:0x000504f8:	call	InventoryContainerHands.UpdateItems()
000263:0x00050500:	cmpcm	m_ground_container, NULL
000263:0x00050510:	bne	0x0505b0
000265:0x00050518:	movem	parent, m_left_panel_content
000265:0x00050528:	new	@c00, InventoryContainerVicinity
000265:0x00050550:	movetm	m_ground_container, @c00
000266:0x00050560:	movefm	[0x7035170], m_ground_container
000266:0x00050570:	call	InventoryContainerVicinity.Init()
000267:0x00050578:	movefm	[0x7035170], m_ground_container
000267:0x00050588:	call	InventoryContainerVicinity.SetHeaderText(_s'#container_vicinity')
000268:0x00050598:	movefm	[0x7035170], m_ground_container
000268:0x000505a8:	call	InventoryContainerVicinity.UpdateItems()
000271:0x000505b0:	cmpc	m_target, NULL
000271:0x000505c0:	beq	0x050628
000271:0x000505c8:	movec	[0x45f9f240], m_target
000271:0x000505d8:	call	Link<EntityAI>.IsNull()
000271:0x000505e0:	cmpi	ret, false
000271:0x000505f0:	bne	0x050628
000271:0x000505f8:	cmpcm	m_ground_container, NULL
000271:0x00050608:	beq	0x050628
000273:0x00050610:	delete	m_ground_container
000274:0x00050618:	movetm	m_ground_container, NULL
000277:0x00050628:	cmpcm	m_target_container, NULL
000277:0x00050638:	bne	0x050760
000277:0x00050640:	cmpc	m_target, NULL
000277:0x00050650:	beq	0x050760
000277:0x00050658:	movec	[0x45f9f240], m_target
000277:0x00050668:	call	Link<EntityAI>.Ptr()
000277:0x00050670:	cmpcm	ret, NULL
000277:0x00050680:	beq	0x050760
000279:0x00050688:	movem	parent, m_left_panel_content
000279:0x00050698:	new	@c00, InventoryContainerEntity
000279:0x000506c0:	movetm	m_target_container, @c00
000280:0x000506d0:	movec	[0x45f9f240], m_target
000280:0x000506e0:	call	Link<EntityAI>.Ptr()
000280:0x000506e8:	movefm	[0x7034c10], m_target_container
000280:0x000506f8:	call	InventoryContainerEntity.Init(ret)
000281:0x00050708:	movec	[0x45f9f240], m_target
000281:0x00050718:	call	Link<EntityAI>.Ptr()
000281:0x00050720:	call	EntityAI.GetName()
000281:0x00050728:	movefm	[0x7034c10], m_target_container
000281:0x00050738:	call	InventoryContainerEntity.SetHeaderText(ret)
000282:0x00050748:	movefm	[0x7034c10], m_target_container
000282:0x00050758:	call	InventoryContainerEntity.UpdateItems()
000285:0x00050760:	cmpcm	m_equipment_container, NULL
000285:0x00050770:	bne	0x050838
000287:0x00050778:	movem	parent, m_right_panel_content
000287:0x00050788:	new	@c00, InventoryContainerEntity
000287:0x000507b0:	movetm	m_equipment_container, @c00
000288:0x000507c0:	ncall	GetGame()
000288:0x000507c8:	ncalli	CGame.GetPlayer()
000288:0x000507d0:	movetm	entity, ret
000288:0x000507e0:	movefm	[0x7034c10], m_equipment_container
000288:0x000507f0:	call	InventoryContainerEntity.Init(entity)
000289:0x00050800:	movefm	[0x7034c10], m_equipment_container
000289:0x00050810:	call	InventoryContainerEntity.SetHeaderText(_s'#container_inventory')
000290:0x00050820:	movefm	[0x7034c10], m_equipment_container
000290:0x00050830:	call	InventoryContainerEntity.UpdateItems()
000293:0x00050838:	cmpcm	m_quickbar, NULL
000293:0x00050848:	bne	0x0508c8
000295:0x00050850:	movem	quickbarGridWidget, m_quickbar_widget
000295:0x00050860:	new	@c00, InventoryQuickbar
000295:0x00050888:	movetm	m_quickbar, @c00
000296:0x00050898:	movem	quickbarGridWidget, m_quickbar_widget
000296:0x000508a8:	movefm	[0x7035888], m_quickbar
000296:0x000508b8:	call	InventoryQuickbar.UpdateItems(quickbarGridWidget)
000299:0x000508c8:	call	ClearHistory()
000299:0x000508d0:	release	player
000299:0x000508d8:	rts
InventoryMenu::RefreshPlayerStatus()
000308:0x00050c68:	imove	i, 0x000000
000308:0x00050c78:	jump	0x050c88
000308:0x00050c80:	inc	i
000308:0x00050c88:	cmpi	i, PLAYER_STATUS_COUNT
000308:0x00050c98:	bge	0x050cf8
000310:0x00050ca0:	ctv	ordered_notifiers[i], _s''
000311:0x00050cb0:	movefm	[0x704f790], m_Player_Statuses
000311:0x00050cc0:	icall	array<TextWidget>.Get(i)
000311:0x00050cc8:	ncalli	TextWidget.SetText(_s'')
000312:0x00050cd0:	movefm	[0x7053b70], m_Player_StatusesBackground
000312:0x00050ce0:	icall	array<ImageWidget>.Get(i)
000312:0x00050ce8:	ncalli	ImageWidget.Show(false)
000312:0x00050cf0:	jump	0x050c80
000317:0x00050cf8:	call	GetPlugin(_T(PluginPlayerStatus))
000317:0x00050d08:	movec	module_player_status, ret
000318:0x00050d18:	cmpc	module_player_status, NULL
000318:0x00050d28:	bne	0x050d38
000318:0x00050d30:	rts
000320:0x00050d38:	imove	i, 0x000000
000320:0x00050d48:	jump	0x050d58
000320:0x00050d50:	inc	i
000320:0x00050d58:	movec	[0x45fa7ae8], m_NotifiersLabel
000320:0x00050d68:	call	multiMap<int,string>.Count()
000320:0x00050d70:	cmpi	i, ret
000320:0x00050d80:	bge	0x050e68
000322:0x00050d88:	movec	[0x45fa7bc0], m_NotifiersIndexColor
000322:0x00050d98:	call	multiMap<int,int>.GetByIndex(i)
000322:0x00050da8:	icall	array<int>.Get(_i0)
000322:0x00050db0:	move	index, ret
000323:0x00050dc0:	icall	ToString(index)
000323:0x00050dc8:	movec	[0x45fa7ae8], m_NotifiersLabel
000323:0x00050dd8:	call	multiMap<int,string>.GetKeyByIndex(i)
000323:0x00050de8:	pushs	ret
000323:0x00050df0:	icall	ToString(ret)
000323:0x00050df8:	moves	@s02, ret
000323:0x00050e08:	pops	ret
000323:0x00050e10:	adds	@s02, ret, @s02
000323:0x00050e20:	moves	@s00, @s02
000323:0x00050e30:	call	String(@s00)
000323:0x00050e40:	moves	key, ret
000324:0x00050e50:	ctv	ordered_notifiers[i], key
000324:0x00050e60:	jump	0x050d50
000327:0x00050e68:	icall	Sort(ordered_notifiers, PLAYER_STATUS_COUNT)
000329:0x00050e70:	imove	i, 0x000000
000329:0x00050e80:	jump	0x050e90
000329:0x00050e88:	inc	i
000329:0x00050e90:	cmpi	i, PLAYER_STATUS_COUNT
000329:0x00050ea0:	bge	0x050f20
000331:0x00050ea8:	cfv	@s01, ordered_notifiers[i]
000331:0x00050eb8:	moves	index_key, @s01
000332:0x00050ec8:	ncall	Length(index_key)
000332:0x00050ed0:	subi	length, ret, _i1
000333:0x00050ee0:	cmpi	length, _i0
000333:0x00050ef0:	ble	0x050f18
000335:0x00050ef8:	icall	Substring(index_key, _i1, length)
000335:0x00050f08:	ctv	ordered_notifiers[i], ret
000335:0x00050f18:	jump	0x050e88
000344:0x00050f20:	imove	status_text_widget_index, 0x000000
000345:0x00050f30:	imove	i, 0x000000
000345:0x00050f40:	jump	0x050f50
000345:0x00050f48:	inc	i
000345:0x00050f50:	cmpi	i, PLAYER_STATUS_COUNT
000345:0x00050f60:	bge	0x0510d0
000347:0x00050f68:	cfv	@s00, ordered_notifiers[i]
000347:0x00050f78:	ncall	ToInt(@s00)
000347:0x00050f80:	move	modifier_key, ret
000349:0x00050f90:	cmpi	modifier_key, _i0
000349:0x00050fa0:	beq	0x0510c8
000351:0x00050fa8:	movec	[0x45fa7ae8], m_NotifiersLabel
000351:0x00050fb8:	call	multiMap<int,string>.Get(modifier_key)
000351:0x00050fc8:	icall	array<string>.Get(_i0)
000351:0x00050fd0:	moves	label, ret
000352:0x00050fe0:	movec	[0x45fa7bc0], m_NotifiersIndexColor
000352:0x00050ff0:	call	multiMap<int,int>.Get(modifier_key)
000352:0x00051000:	icall	array<int>.Get(_i1)
000352:0x00051008:	move	color, ret
000353:0x00051018:	cmps	label, _s''
000353:0x00051028:	beq	0x0510c8
000353:0x00051030:	cmpi	color, _i0
000353:0x00051040:	beq	0x0510c8
000355:0x00051048:	movefm	[0x704f790], m_Player_Statuses
000355:0x00051058:	icall	array<TextWidget>.Get(status_text_widget_index)
000355:0x00051060:	movetm	player_status_widget, ret
000356:0x00051070:	movefm	[0x7053b70], m_Player_StatusesBackground
000356:0x00051080:	icall	array<ImageWidget>.Get(status_text_widget_index)
000356:0x00051088:	movetm	player_status_widget_background, ret
000357:0x00051098:	ncalli	TextWidget.SetText(label)
000358:0x000510a0:	ncalli	ImageWidget.SetColor(color)
000359:0x000510a8:	ncalli	ImageWidget.Show(true)
000360:0x000510b0:	inc	status_text_widget_index
000360:0x000510b8:	release	player_status_widget
000360:0x000510c0:	release	player_status_widget_background
000360:0x000510c8:	jump	0x050f48
000360:0x000510d0:	rts
InventoryMenu::Blur()
000369:0x00051168:	ncall	GetGame()
000369:0x00051170:	ncalli	CGame.GetWorld()
000369:0x00051178:	ncalli	World.GetMaterial(_s'graphics/materials/postprocess/gauss')
000369:0x00051180:	movea	matColors, ret
000370:0x00051190:	cmpc	matColors, _i0
000370:0x000511a0:	beq	0x0511b8
000371:0x000511a8:	icall	SetParam(matColors, _s'Intensity', intensity)
000371:0x000511b8:	rts
InventoryMenu::OnShow()
000377:0x00051240:	call	UIScriptedMenu.OnShow()
000378:0x00051248:	call	SetBlurInventory(_f1.000000)
000380:0x00051258:	ncalli	DayZGame.GetPlayer()
000380:0x00051260:	movetm	player, ret
000381:0x00051270:	movec	obj, this
000381:0x00051280:	movec	params, NULL
000381:0x00051290:	movec	[0x3cd17138], m_refresh_timer
000381:0x000512a0:	call	Timer.Run(_f0.500000, obj, _s'PerformRefreshInventory', params, true)
000384:0x000512b8:	ncall	GetGame()
000384:0x000512c0:	ncalli	CGame.GetMission()
000384:0x000512c8:	movec	mission, ret
000385:0x000512d8:	cmpc	mission, NULL
000385:0x000512e8:	beq	0x051340
000387:0x000512f0:	call	Mission.GetHud()
000387:0x000512f8:	movec	hud, ret
000388:0x00051308:	cmpc	hud, NULL
000388:0x00051318:	beq	0x051340
000390:0x00051320:	call	IngameHud.HideQuickbar(true, true)
000391:0x00051330:	call	IngameHud.SetLeftStatsVisibility(false)
000394:0x00051340:	call	InventoryMenu.RefreshQuickbar()
000395:0x00051348:	call	InventoryMenu.ShowQuickbar()
000397:0x00051350:	call	InventoryMenu.PerformRefreshInventory()
000398:0x00051358:	call	InventoryMenu.Refresh()
000398:0x00051360:	release	player
000398:0x00051368:	rts
InventoryMenu::OnHide()
000403:0x000513d0:	call	UIScriptedMenu.OnHide()
000405:0x000513d8:	call	SetBlurInventory(_f0.000000)
000407:0x000513e8:	movec	[0x3cd17138], m_refresh_timer
000407:0x000513f8:	call	Timer.Stop()
000408:0x00051400:	call	InventoryMenu.HidePanelBorders()
000410:0x00051408:	call	GetInstance()
000410:0x00051410:	movec	manager, ret
000411:0x00051420:	cmpc	manager, NULL
000411:0x00051430:	beq	0x051440
000413:0x00051438:	call	InventoryManager.HideTooltip()
000416:0x00051440:	ncall	GetGame()
000416:0x00051448:	ncalli	CGame.GetMission()
000416:0x00051450:	movec	mission, ret
000417:0x00051460:	cmpc	mission, NULL
000417:0x00051470:	beq	0x0514d8
000419:0x00051478:	call	Mission.GetHud()
000419:0x00051480:	movec	hud, ret
000420:0x00051490:	cmpc	hud, NULL
000420:0x000514a0:	beq	0x0514d8
000422:0x000514a8:	call	IngameHud.SetLeftStatsVisibility(true)
000423:0x000514b8:	cmpi	m_quickbar_state, _i0
000423:0x000514c8:	beq	0x0514d8
000425:0x000514d0:	call	IngameHud.ShowQuickbar()
000429:0x000514d8:	call	InventoryMenu.HideQuickbar()
000429:0x000514e0:	rts
InventoryMenu::OnClick()
000434:0x000514e8:	call	UIScriptedMenu.OnClick(w, x, y, button)
000436:0x000514f8:	imove	ret, 0x000000
000436:0x00051508:	rts
000436:0x00051510:	rts
InventoryMenu::OnMouseButtonDown()
000441:0x00051518:	call	UIScriptedMenu.OnMouseButtonDown(w, x, y, button)
000443:0x00051528:	cmpm	w, m_character_panel_area_widget
000443:0x00051538:	bne	0x051578
000445:0x00051540:	ncall	GetGame()
000445:0x00051548:	call	CGame.GetDragQueue()
000445:0x00051550:	movec	obj, this
000445:0x00051560:	call	DragQueue.Call(obj, _s'UpdateRotation', _c0)
000446:0x00051570:	icall	GetMousePos(m_characterRotationX, m_characterRotationY)
000448:0x00051578:	imove	ret, 0x000000
000448:0x00051588:	rts
000448:0x00051590:	rts
InventoryMenu::OnMouseButtonUp()
000453:0x00051598:	call	UIScriptedMenu.OnMouseButtonUp(w, x, y, button)
000455:0x000515a8:	imove	m_isCharacterRotating, 0x000000
000457:0x000515b8:	imove	ret, 0x000000
000457:0x000515c8:	rts
000457:0x000515d0:	rts
InventoryMenu::OnMouseWheel()
000462:0x000515d8:	call	UIScriptedMenu.OnMouseWheel(w, x, y, wheel)
000464:0x000515e8:	cmpm	w, m_character_panel_area_widget
000464:0x000515f8:	bne	0x051640
000466:0x00051600:	ncall	GetGame()
000466:0x00051608:	call	CGame.GetDragQueue()
000466:0x00051610:	movec	obj, this
000466:0x00051620:	call	DragQueue.Call(obj, _s'UpdateScale', _c0)
000467:0x00051630:	move	m_characterScaleDelta, wheel
000469:0x00051640:	imove	ret, 0x000000
000469:0x00051650:	rts
000469:0x00051658:	rts
InventoryMenu::OnDoubleClick()
000474:0x00051748:	call	UIScriptedMenu.OnDoubleClick(w, x, y, button)
000476:0x00051758:	cmpcm	w, NULL
000476:0x00051768:	beq	0x051a30
000476:0x00051770:	ncalli	Widget.GetTypeID()
000476:0x00051778:	cmpc	ret, ItemPreviewWidgetTypeID
000476:0x00051788:	bne	0x051a30
000476:0x00051790:	cmpi	button, _i0
000476:0x000517a0:	bne	0x051a30
000478:0x000517a8:	ncall	GetGame()
000478:0x000517b0:	ncalli	CGame.GetPlayer()
000478:0x000517b8:	movetm	player, ret
000479:0x000517c8:	movem	ipw, w
000480:0x000517d8:	ncalli	ItemPreviewWidget.GetItem()
000480:0x000517e0:	movetm	item, ret
000481:0x000517f0:	ncalli	Man.GetEntityInHands()
000481:0x000517f8:	movetm	item_in_hands, ret
000483:0x00051808:	cmpcm	item, NULL
000483:0x00051818:	beq	0x051900
000483:0x00051820:	call	EntityAI.IsInventoryItem()
000483:0x00051828:	cmpi	ret, _i0
000483:0x00051838:	beq	0x051900
000483:0x00051840:	ncalli	EntityAI.GetOwnerPlayer()
000483:0x00051848:	cmpmc	ret, player
000483:0x00051858:	bne	0x051900
000483:0x00051860:	cmpm	item_in_hands, item
000483:0x00051870:	beq	0x051900
000485:0x00051878:	call	Man.MoveItemFromHandsToInventory(item_in_hands)
000486:0x00051888:	ncall	GetGame()
000486:0x00051890:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000486:0x000518a0:	movefm	obj, player
000486:0x000518b0:	new	@c00, Param1<EntityAI>
000486:0x000518d8:	movec	params, @c00
000486:0x000518e8:	call	CallQueue.Call(obj, _s'TakeEntityToHands', params)
000486:0x000518f8:	jump	0x051a10
000488:0x00051900:	cmpcm	item, NULL
000488:0x00051910:	beq	0x0519d8
000488:0x00051918:	call	Man.CanTakeEntityAsOwned(item)
000488:0x00051928:	cmpi	ret, _i0
000488:0x00051938:	beq	0x0519d8
000488:0x00051940:	ncalli	EntityAI.GetOwnerPlayer()
000488:0x00051948:	cmpmc	ret, player
000488:0x00051958:	beq	0x0519d8
000490:0x00051960:	ncall	GetGame()
000490:0x00051968:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000490:0x00051978:	movefm	obj, player
000490:0x00051988:	new	@c00, Param1<EntityAI>
000490:0x000519b0:	movec	params, @c00
000490:0x000519c0:	call	CallQueue.Call(obj, _s'TakeEntityAsOwned', params)
000490:0x000519d0:	jump	0x051a10
000492:0x000519d8:	cmpcm	item, NULL
000492:0x000519e8:	beq	0x051a10
000492:0x000519f0:	call	EntityAI.IsInventoryItem()
000492:0x000519f8:	cmpi	ret, _i0
000492:0x00051a08:	beq	0x051a10
000492:0x00051a10:	release	player
000492:0x00051a18:	release	ipw
000492:0x00051a20:	release	item
000492:0x00051a28:	release	item_in_hands
000492:0x00051a30:	rts
InventoryMenu::UpdateRotation()
000501:0x00051a68:	movev	o, m_characterOrientation
000502:0x00051a78:	ifv	@f01, o[0x000001]
000502:0x00051a88:	citf	@f03, m_characterRotationX
000502:0x00051a98:	citf	@f04, mouse_x
000502:0x00051aa8:	subf	@f03, @f03, @f04
000502:0x00051ab8:	move	@f02, @f03
000502:0x00051ac8:	subf	@f01, @f01, @f02
000502:0x00051ad8:	itv	o[0x000001], @f01
000503:0x00051ae8:	movefm	[0x3cd18098], m_character_panel_widget
000503:0x00051af8:	ncalli	PlayerPreviewWidget.SetModelOrientation(o)
000505:0x00051b00:	cmpi	is_dragging, _i0
000505:0x00051b10:	bne	0x051b28
000507:0x00051b18:	movev	m_characterOrientation, o
000507:0x00051b28:	rts
InventoryMenu::OnPerformAction()
000513:0x00051b30:	call	PlayerBase.PerformAction(action)
000513:0x00051b40:	rts
InventoryMenu::UpdateScale()
000521:0x00051bc8:	movefm	[0x3cd18098], m_character_panel_widget
000521:0x00051bd8:	icall	PlayerPreviewWidget.GetSize(w, h)
000522:0x00051be0:	citf	@f01, m_characterScaleDelta
000522:0x00051bf0:	divf	@f01, @f01, _f25.000000
000522:0x00051c00:	move	@f00, @f01
000522:0x00051c10:	addf	@f00, w, @f00
000522:0x00051c20:	move	w, @f00
000523:0x00051c30:	citf	@f01, m_characterScaleDelta
000523:0x00051c40:	divf	@f01, @f01, _f25.000000
000523:0x00051c50:	move	@f00, @f01
000523:0x00051c60:	addf	@f00, h, @f00
000523:0x00051c70:	move	h, @f00
000524:0x00051c80:	cmpf	w, _f0.620000
000524:0x00051c90:	ble	0x051cd0
000524:0x00051c98:	cmpf	w, _f3.000000
000524:0x00051ca8:	bge	0x051cd0
000526:0x00051cb0:	movefm	[0x3cd18098], m_character_panel_widget
000526:0x00051cc0:	ncalli	PlayerPreviewWidget.SetSize(w, h, _i1)
000526:0x00051cd0:	rts
InventoryMenu::UpdatePlayerPreviewAnim()
000532:0x00051db8:	cmpcm	m_character_panel_widget, NULL
000532:0x00051dc8:	beq	0x051de8
000532:0x00051dd0:	cmpm	m_itemInHands, inHands
000532:0x00051de0:	bne	0x051df0
000532:0x00051de8:	rts
000533:0x00051df0:	movem	m_itemInHands, inHands
000535:0x00051e00:	movefm	[0x3cd41c98], inHands
000535:0x00051e10:	movefm	[0x3cd18098], m_character_panel_widget
000535:0x00051e20:	ncalli	PlayerPreviewWidget.SetItemInHands([0x3cd41c98])
000537:0x00051e28:	cmpcm	inHands, NULL
000537:0x00051e38:	bne	0x051e60
000539:0x00051e40:	movefm	[0x3cd18098], m_character_panel_widget
000539:0x00051e50:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleUnarmed0')
000539:0x00051e58:	jump	0x052050
000541:0x00051e60:	call	EntityAI.IsKindOf(_s'Pistol')
000541:0x00051e70:	cmpi	ret, _i0
000541:0x00051e80:	beq	0x051ea8
000543:0x00051e88:	movefm	[0x3cd18098], m_character_panel_widget
000543:0x00051e98:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idlePistol0')
000543:0x00051ea0:	jump	0x052050
000545:0x00051ea8:	call	EntityAI.IsKindOf(_s'Rifle')
000545:0x00051eb8:	cmpi	ret, _i0
000545:0x00051ec8:	beq	0x051ef0
000547:0x00051ed0:	movefm	[0x3cd18098], m_character_panel_widget
000547:0x00051ee0:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idlerifleLong0')
000547:0x00051ee8:	jump	0x052050
000549:0x00051ef0:	call	EntityAI.IsKindOf(_s'KnifeBase')
000549:0x00051f00:	cmpi	ret, _i0
000549:0x00051f10:	beq	0x051f38
000551:0x00051f18:	movefm	[0x3cd18098], m_character_panel_widget
000551:0x00051f28:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleKnife0')
000551:0x00051f30:	jump	0x052050
000553:0x00051f38:	call	EntityAI.IsKindOf(_s'BaseballBat')
000553:0x00051f48:	cmpi	ret, _i0
000553:0x00051f58:	beq	0x051f80
000555:0x00051f60:	movefm	[0x3cd18098], m_character_panel_widget
000555:0x00051f70:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleBat0')
000555:0x00051f78:	jump	0x052050
000557:0x00051f80:	call	EntityAI.IsKindOf(_s'Chainsaw')
000557:0x00051f90:	cmpi	ret, _i0
000557:0x00051fa0:	beq	0x051fc8
000559:0x00051fa8:	movefm	[0x3cd18098], m_character_panel_widget
000559:0x00051fb8:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleChainsaw0')
000559:0x00051fc0:	jump	0x052050
000561:0x00051fc8:	call	EntityAI.IsKindOf(_s'MeleeItemBase')
000561:0x00051fd8:	cmpi	ret, _i0
000561:0x00051fe8:	beq	0x052010
000563:0x00051ff0:	movefm	[0x3cd18098], m_character_panel_widget
000563:0x00052000:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleHatchet0')
000563:0x00052008:	jump	0x052050
000567:0x00052010:	movec	[0x3cd41c98], NULL
000567:0x00052020:	movefm	[0x3cd18098], m_character_panel_widget
000567:0x00052030:	ncalli	PlayerPreviewWidget.SetItemInHands([0x3cd41c98])
000568:0x00052038:	movefm	[0x3cd18098], m_character_panel_widget
000568:0x00052048:	ncalli	PlayerPreviewWidget.SwitchMove(_s'menu_idleUnarmed0')
000568:0x00052050:	rts
InventoryMenu::OnFocusLost()
000575:0x00052058:	call	UIScriptedMenu.OnFocusLost(w, x, y)
000577:0x00052068:	imove	m_isCharacterRotating, 0x000000
000579:0x00052078:	imove	ret, 0x000000
000579:0x00052088:	rts
000579:0x00052090:	rts
InventoryMenu::OnMouseEnter()
000584:0x00052098:	call	UIScriptedMenu.OnMouseEnter(w, x, y)
000584:0x000520a8:	rts
InventoryMenu::OnMouseLeave()
000589:0x000520b0:	call	UIScriptedMenu.OnMouseLeave(w, enterW, x, y)
000591:0x000520c0:	imove	ret, 0x000000
000591:0x000520d0:	rts
000591:0x000520d8:	rts
InventoryMenu::OnSelect()
000596:0x000520e0:	call	UIScriptedMenu.OnSelect(w, x, y)
000598:0x000520f0:	imove	ret, 0x000000
000598:0x00052100:	rts
000598:0x00052108:	rts
InventoryMenu::Refresh()
000603:0x00052130:	ncalli	DayZGame.GetPlayer()
000603:0x00052138:	movetm	player, ret
000604:0x00052148:	cmpc	m_target, NULL
000604:0x00052158:	beq	0x052220
000604:0x00052160:	movec	[0x45f9f240], m_target
000604:0x00052170:	call	Link<EntityAI>.IsNull()
000604:0x00052178:	cmpi	ret, false
000604:0x00052188:	bne	0x052220
000604:0x00052190:	ncall	GetGame()
000604:0x00052198:	movec	[0x45f9f240], m_target
000604:0x000521a8:	call	Link<EntityAI>.Ptr()
000604:0x000521b0:	movefm	[0x3cd2c828], ret
000604:0x000521c0:	movefm	[0x3cd2c848], player
000604:0x000521d0:	ncalli	CGame.IsObjectAccesible([0x3cd2c828], [0x3cd2c848])
000604:0x000521d8:	cmpi	ret, false
000604:0x000521e8:	bne	0x052220
000606:0x000521f0:	movetm	target, NULL
000606:0x00052200:	call	InventoryMenu.InitContainers(target)
000607:0x00052210:	release	player
000607:0x00052218:	rts
000610:0x00052220:	ncalli	Man.GetEntityInHands()
000610:0x00052228:	movetm	inHands, ret
000610:0x00052238:	call	InventoryMenu.UpdatePlayerPreviewAnim(inHands)
000610:0x00052248:	release	player
000610:0x00052250:	rts
InventoryMenu::RefreshQuickbar()
000615:0x00052258:	cmpcm	m_quickbar, NULL
000615:0x00052268:	beq	0x0522a0
000617:0x00052270:	movem	quickbarGridWidget, m_quickbar_widget
000617:0x00052280:	movefm	[0x7035888], m_quickbar
000617:0x00052290:	call	InventoryQuickbar.UpdateItems(quickbarGridWidget)
000617:0x000522a0:	rts
InventoryMenu::ShowQuickbar()
000623:0x000522a8:	cmpcm	m_quickbar_widget, NULL
000623:0x000522b8:	beq	0x0522d8
000625:0x000522c0:	movefm	[0x11cf2b58], m_quickbar_widget
000625:0x000522d0:	ncalli	Widget.Show(true)
000625:0x000522d8:	rts
InventoryMenu::HideQuickbar()
000631:0x000522e0:	cmpcm	m_quickbar_widget, NULL
000631:0x000522f0:	beq	0x052310
000633:0x000522f8:	movefm	[0x11cf2b58], m_quickbar_widget
000633:0x00052308:	ncalli	Widget.Show(false)
000633:0x00052310:	rts
InventoryMenu::HidePanelBorders()
000639:0x00052338:	cmpcm	m_center_panel_border, NULL
000639:0x00052348:	beq	0x0523b0
000642:0x00052350:	movefm	[0x11cf2b58], m_left_panel_border
000642:0x00052360:	ncalli	Widget.SetColor(_i16777215)
000643:0x00052368:	movefm	[0x11cf2b58], m_right_panel_border
000643:0x00052378:	ncalli	Widget.SetColor(_i16777215)
000644:0x00052380:	movefm	[0x11cf2b58], m_center_panel_content
000644:0x00052390:	ncalli	Widget.SetColor(_i16777215)
000645:0x00052398:	movefm	[0x11cf2b58], m_center_panel
000645:0x000523a8:	ncalli	Widget.SetColor(_i16777215)
000645:0x000523b0:	rts
InventoryMenu::ShowHandsPanelBorder()
000651:0x000523d8:	cmpcm	m_center_panel, NULL
000651:0x000523e8:	beq	0x052408
000653:0x000523f0:	movefm	[0x11cf2b58], m_center_panel
000653:0x00052400:	ncalli	Widget.SetColor(_i1073741823)
000653:0x00052408:	rts
InventoryMenu::ShowRightPanelBorder()
000659:0x00052410:	cmpcm	m_right_panel_border, NULL
000659:0x00052420:	beq	0x052440
000661:0x00052428:	movefm	[0x11cf2b58], m_right_panel_border
000661:0x00052438:	ncalli	Widget.SetColor(_i1073741823)
000661:0x00052440:	rts
InventoryMenu::ShowLeftPanelBorder()
000667:0x00052448:	cmpcm	m_left_panel_border, NULL
000667:0x00052458:	beq	0x052478
000669:0x00052460:	movefm	[0x11cf2b58], m_left_panel_border
000669:0x00052470:	ncalli	Widget.SetColor(_i1073741823)
000669:0x00052478:	rts
InventoryMenu::PerformRefreshInventory()
000675:0x00052778:	ncall	GetGame()
000675:0x00052780:	ncalli	CGame.GetPlayer()
000675:0x00052788:	movetm	player, ret
000676:0x00052798:	cmpcm	player, NULL
000676:0x000527a8:	bne	0x0527c0
000678:0x000527b0:	release	player
000678:0x000527b8:	rts
000681:0x000527c0:	ncalli	Man.CanOpenInventory()
000681:0x000527c8:	cmpi	ret, false
000681:0x000527d8:	bne	0x052830
000683:0x000527e0:	ncall	GetGame()
000683:0x000527e8:	ncalli	CGame.GetUIManager()
000683:0x000527f0:	ncalli	UIManager.GetMenu()
000683:0x000527f8:	call	UIScriptedMenu.UnlockControls()
000684:0x00052800:	ncall	GetGame()
000684:0x00052808:	ncalli	CGame.GetUIManager()
000684:0x00052810:	call	UIManager.HideMenu(MENU_INVENTORY)
000685:0x00052820:	release	player
000685:0x00052828:	rts
000688:0x00052830:	cmpcm	m_target_container, NULL
000688:0x00052840:	beq	0x0529d8
000690:0x00052848:	imove	reset_condition, 0x000000
000692:0x00052858:	cmpc	m_target, NULL
000692:0x00052868:	beq	0x052980
000692:0x00052870:	movec	[0x45f9f240], m_target
000692:0x00052880:	call	Link<EntityAI>.IsNull()
000692:0x00052888:	cmpi	ret, false
000692:0x00052898:	bne	0x052980
000694:0x000528a0:	ncall	GetGame()
000694:0x000528a8:	movec	[0x45f9f240], m_target
000694:0x000528b8:	call	Link<EntityAI>.Ptr()
000694:0x000528c0:	movefm	[0x3cd2c828], ret
000694:0x000528d0:	movefm	[0x3cd2c848], player
000694:0x000528e0:	ncalli	CGame.IsObjectAccesible([0x3cd2c828], [0x3cd2c848])
000694:0x000528e8:	cmpi	ret, _i0
000694:0x000528f8:	beq	0x052970
000694:0x00052900:	ncall	GetGame()
000694:0x00052908:	ncalli	CGame.GetPlayer()
000694:0x00052910:	movetm	player, ret
000694:0x00052920:	movec	[0x45f9f240], m_target
000694:0x00052930:	call	Link<EntityAI>.Ptr()
000694:0x00052938:	movem	obj, ret
000694:0x00052948:	call	CanShowItemInInventory(player, obj)
000694:0x00052958:	cmpi	ret, _i0
000694:0x00052968:	bne	0x052980
000696:0x00052970:	imove	reset_condition, 0x000001
000700:0x00052980:	cmpi	reset_condition, _i0
000700:0x00052990:	beq	0x0529c0
000702:0x00052998:	movetm	target, NULL
000702:0x000529a8:	call	InventoryMenu.InitContainers(target)
000702:0x000529b8:	jump	0x0529d8
000706:0x000529c0:	movefm	[0x7034c10], m_target_container
000706:0x000529d0:	call	InventoryContainerEntity.UpdateItems()
000710:0x000529d8:	cmpcm	m_hands_container, NULL
000710:0x000529e8:	beq	0x052a08
000710:0x000529f0:	movefm	[0x70357e0], m_hands_container
000710:0x00052a00:	call	InventoryContainerHands.UpdateItems()
000711:0x00052a08:	cmpcm	m_ground_container, NULL
000711:0x00052a18:	beq	0x052a38
000711:0x00052a20:	movefm	[0x7035170], m_ground_container
000711:0x00052a30:	call	InventoryContainerVicinity.UpdateItems()
000712:0x00052a38:	cmpcm	m_equipment_container, NULL
000712:0x00052a48:	beq	0x052a68
000712:0x00052a50:	movefm	[0x7034c10], m_equipment_container
000712:0x00052a60:	call	InventoryContainerEntity.UpdateItems()
000722:0x00052a68:	ncalli	Man.GetPosition()
000722:0x00052a70:	movev	pos, ret
000723:0x00052a80:	ncalli	Man.GetDirection()
000723:0x00052a88:	movev	dir, ret
000724:0x00052a98:	new	@c00, array<Object>
000724:0x00052ab8:	movetm	objects, @c00
000725:0x00052ac8:	new	@c00, array<Cargo>
000725:0x00052ae8:	movetm	proxyCargos, @c00
000726:0x00052af8:	ncall	GetGame()
000726:0x00052b00:	scalev	@v02, dir, _f0.750000
000726:0x00052b10:	movev	@v01, @v02
000726:0x00052b20:	addv	@v01, pos, @v01
000726:0x00052b30:	movev	@v00, @v01
000726:0x00052b40:	movec	[0x3cd2cef8], NULL
000726:0x00052b50:	movefm	[0x3cd2cf68], objects
000726:0x00052b60:	movefm	[0x3cd2cfd8], proxyCargos
000726:0x00052b70:	ncalli	CGame.GetObjectsAtPosition(@v00, _f1.000000, [0x3cd2cef8], [0x3cd2cf68], [0x3cd2cfd8])
000729:0x00052b80:	movefm	[0x3cd2cf48], m_ground_objects
000729:0x00052b90:	ncalli	array<Object>.Count()
000729:0x00052b98:	move	c, ret
000730:0x00052ba8:	imove	i, 0x000000
000730:0x00052bb8:	jump	0x052bc8
000730:0x00052bc0:	inc	i
000730:0x00052bc8:	cmpi	i, c
000730:0x00052bd8:	bge	0x052d28
000732:0x00052be0:	movefm	[0x3cd2cf48], m_ground_objects
000732:0x00052bf0:	icall	array<Object>.Get(i)
000732:0x00052bf8:	movetm	obj, ret
000733:0x00052c08:	movefm	@c00, obj
000733:0x00052c18:	icall	array<Object>.Find(@c00)
000733:0x00052c20:	move	find_index, ret
000734:0x00052c30:	cmpi	find_index, _i-1
000734:0x00052c40:	bne	0x052ce8
000736:0x00052c48:	movefm	[0x70525b8], m_ground_objects_containers
000736:0x00052c58:	icall	array<InventoryContainerEntity>.Get(i)
000736:0x00052c60:	movetm	container, ret
000737:0x00052c70:	cmpcm	container, NULL
000737:0x00052c80:	beq	0x052ca0
000739:0x00052c88:	delete	container
000740:0x00052c90:	movetm	container, NULL
000743:0x00052ca0:	movefm	[0x3cd2cf48], m_ground_objects
000743:0x00052cb0:	ncalli	array<Object>.Remove(i)
000744:0x00052cb8:	movefm	[0x70525b8], m_ground_objects_containers
000744:0x00052cc8:	ncalli	array<InventoryContainerEntity>.Remove(i)
000745:0x00052cd0:	dec	c
000746:0x00052cd8:	dec	i
000746:0x00052ce0:	jump	0x052d20
000750:0x00052ce8:	movefm	[0x70525b8], m_ground_objects_containers
000750:0x00052cf8:	icall	array<InventoryContainerEntity>.Get(i)
000750:0x00052d00:	movetm	container, ret
000751:0x00052d10:	call	InventoryContainerEntity.UpdateItems()
000752:0x00052d18:	ncalli	array<Object>.Remove(find_index)
000752:0x00052d20:	jump	0x052bc0
000757:0x00052d28:	ncalli	array<Object>.Count()
000757:0x00052d30:	move	c, ret
000758:0x00052d40:	imove	i, 0x000000
000758:0x00052d50:	jump	0x052d60
000758:0x00052d58:	inc	i
000758:0x00052d60:	cmpi	i, c
000758:0x00052d70:	bge	0x052fa8
000760:0x00052d78:	icall	array<Object>.Get(i)
000760:0x00052d80:	movetm	obj, ret
000761:0x00052d90:	movem	player, player
000761:0x00052da0:	call	CanShowItemInInventory(player, obj)
000761:0x00052db0:	cmpi	ret, _i0
000761:0x00052dc0:	beq	0x052fa0
000763:0x00052dc8:	movefm	[0x11d0a2c8], obj
000763:0x00052dd8:	ncall	IsInherited([0x11d0a2c8], _T(PlayerBase))
000763:0x00052de0:	cmpi	ret, _i0
000763:0x00052df0:	bne	0x052e28
000763:0x00052df8:	movefm	[0x11d0a2c8], obj
000763:0x00052e08:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000763:0x00052e10:	cmpi	ret, _i0
000763:0x00052e20:	beq	0x052fa0
000765:0x00052e28:	movefm	@c00, obj
000765:0x00052e38:	movefm	[0x3cd2cf48], m_ground_objects
000765:0x00052e48:	icall	array<Object>.Find(@c00)
000765:0x00052e50:	move	container_index, ret
000766:0x00052e60:	cmpi	container_index, _i0
000766:0x00052e70:	bge	0x052fa0
000768:0x00052e78:	imove	show_viewgrid, 0x000001
000769:0x00052e88:	movefm	[0x11d0a2c8], obj
000769:0x00052e98:	ncall	IsInherited([0x11d0a2c8], _T(ZombieBase))
000769:0x00052ea0:	cmpi	ret, _i0
000769:0x00052eb0:	beq	0x052ec8
000771:0x00052eb8:	imove	show_viewgrid, 0x000000
000774:0x00052ec8:	movem	parent, m_left_panel_content
000774:0x00052ed8:	new	@c00, InventoryContainerEntity
000774:0x00052f00:	movetm	container, @c00
000775:0x00052f10:	movem	entity, obj
000775:0x00052f20:	call	InventoryContainerEntity.Init(entity)
000776:0x00052f30:	call	Object.GetName()
000776:0x00052f38:	call	InventoryContainerEntity.SetHeaderText(ret)
000777:0x00052f48:	call	InventoryContainerEntity.UpdateItems()
000779:0x00052f50:	movefm	@c00, obj
000779:0x00052f60:	movefm	[0x3cd2cf48], m_ground_objects
000779:0x00052f70:	icall	array<Object>.Insert(@c00)
000780:0x00052f78:	movefm	@c00, container
000780:0x00052f88:	movefm	[0x70525b8], m_ground_objects_containers
000780:0x00052f98:	icall	array<InventoryContainerEntity>.Insert(@c00)
000780:0x00052fa0:	jump	0x052d58
000786:0x00052fa8:	call	InventoryMenu.RefreshQuickbar()
000787:0x00052fb0:	call	InventoryMenu.RefreshPlayerStatus()
000789:0x00052fb8:	ncall	GetWidgetUnderCursor()
000789:0x00052fc0:	movetm	widget_under_cursor, ret
000790:0x00052fd0:	cmpcm	widget_under_cursor, NULL
000790:0x00052fe0:	bne	0x053000
000792:0x00052fe8:	movec	[0x7035788], m_drag_manager
000792:0x00052ff8:	call	InventoryManager.HideTooltip()
000792:0x00053000:	delete	objects
000792:0x00053008:	delete	proxyCargos
000792:0x00053010:	release	player
000792:0x00053018:	release	obj
000792:0x00053020:	release	container
000792:0x00053028:	release	widget_under_cursor
000792:0x00053030:	rts
InventoryMenu::GetContextMenu()
000798:0x00053038:	movem	ret, m_context_menu
000798:0x00053048:	rts
000798:0x00053050:	rts
InventoryMenu::GetCenterPanel()
000803:0x00053058:	movem	ret, m_center_panel
000803:0x00053068:	rts
000803:0x00053070:	rts
InventoryMenu::OnDraggingOver()
000809:0x000530f8:	call	UIScriptedMenu.OnDraggingOver(w, x, y, reciever)
000811:0x00053108:	call	GetInstance()
000811:0x00053110:	movec	manager, ret
000812:0x00053120:	call	InventoryManager.GetItem()
000812:0x00053128:	movem	dragged_item, ret
000813:0x00053138:	ncall	GetGame()
000813:0x00053140:	ncalli	CGame.GetPlayer()
000813:0x00053148:	movetm	player, ret
000814:0x00053158:	call	InventoryMenu.HidePanelBorders()
000816:0x00053160:	cmpcm	dragged_item, NULL
000816:0x00053170:	beq	0x0531f8
000816:0x00053178:	ncalli	PlayerBase.GetEntityInHands()
000816:0x00053180:	cmpmc	ret, dragged_item
000816:0x00053190:	bne	0x0531f8
000816:0x00053198:	ncalli	PlayerBase.CanRemoveEntityInHands()
000816:0x000531a0:	cmpi	ret, _i0
000816:0x000531b0:	bne	0x0531f8
000818:0x000531b8:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000819:0x000531c8:	imove	ret, 0x000001
000819:0x000531d8:	release	dragged_item
000819:0x000531e0:	release	player
000819:0x000531e8:	rts
000819:0x000531f0:	jump	0x053560
000821:0x000531f8:	cmpm	reciever, m_character_panel_area_widget
000821:0x00053208:	bne	0x053298
000821:0x00053210:	cmpcm	dragged_item, NULL
000821:0x00053220:	beq	0x053298
000823:0x00053228:	movem	item, dragged_item
000823:0x00053238:	call	PlayerBase.CanTakeEntityAsOwned(item)
000823:0x00053248:	cmpi	ret, _i0
000823:0x00053258:	beq	0x053278
000825:0x00053260:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000825:0x00053270:	jump	0x053288
000829:0x00053278:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000831:0x00053288:	call	InventoryMenu.ShowRightPanelBorder()
000831:0x00053290:	jump	0x053560
000833:0x00053298:	movefm	[0x11cf2b58], m_left_panel
000833:0x000532a8:	ncalli	Widget.GetChildren()
000833:0x000532b0:	cmpcm	reciever, ret
000833:0x000532c0:	bne	0x053300
000833:0x000532c8:	cmpcm	dragged_item, NULL
000833:0x000532d8:	beq	0x053300
000835:0x000532e0:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000836:0x000532f0:	call	InventoryMenu.ShowLeftPanelBorder()
000836:0x000532f8:	jump	0x053560
000838:0x00053300:	cmpm	reciever, m_left_panel_border
000838:0x00053310:	bne	0x053350
000838:0x00053318:	cmpcm	dragged_item, NULL
000838:0x00053328:	beq	0x053350
000840:0x00053330:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000841:0x00053340:	call	InventoryMenu.ShowLeftPanelBorder()
000841:0x00053348:	jump	0x053560
000843:0x00053350:	cmpm	reciever, m_vicinity_panel
000843:0x00053360:	bne	0x0533a0
000843:0x00053368:	cmpcm	dragged_item, NULL
000843:0x00053378:	beq	0x0533a0
000845:0x00053380:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000846:0x00053390:	call	InventoryMenu.ShowLeftPanelBorder()
000846:0x00053398:	jump	0x053560
000848:0x000533a0:	movefm	[0x11cf2b58], m_right_panel
000848:0x000533b0:	ncalli	Widget.GetChildren()
000848:0x000533b8:	cmpcm	reciever, ret
000848:0x000533c8:	bne	0x053458
000848:0x000533d0:	cmpcm	dragged_item, NULL
000848:0x000533e0:	beq	0x053458
000850:0x000533e8:	movem	item, dragged_item
000850:0x000533f8:	call	PlayerBase.CanTakeEntityAsOwned(item)
000850:0x00053408:	cmpi	ret, _i0
000850:0x00053418:	beq	0x053438
000852:0x00053420:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000852:0x00053430:	jump	0x053448
000856:0x00053438:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000858:0x00053448:	call	InventoryMenu.ShowRightPanelBorder()
000858:0x00053450:	jump	0x053560
000860:0x00053458:	cmpm	reciever, m_right_panel_border
000860:0x00053468:	bne	0x0534f8
000860:0x00053470:	cmpcm	dragged_item, NULL
000860:0x00053480:	beq	0x0534f8
000862:0x00053488:	movem	item, dragged_item
000862:0x00053498:	call	PlayerBase.CanTakeEntityAsOwned(item)
000862:0x000534a8:	cmpi	ret, _i0
000862:0x000534b8:	beq	0x0534d8
000864:0x000534c0:	call	InventoryManager.SetItemColor(ITEM_COLOR_GOOD)
000864:0x000534d0:	jump	0x0534e8
000868:0x000534d8:	call	InventoryManager.SetItemColor(ITEM_COLOR_WRONG)
000870:0x000534e8:	call	InventoryMenu.ShowRightPanelBorder()
000870:0x000534f0:	jump	0x053560
000875:0x000534f8:	ncalli	Widget.GetName()
000875:0x00053500:	cmps	ret, _s'HeaderBgHands'
000875:0x00053510:	bne	0x053550
000877:0x00053518:	call	InventoryMenu.ShowHandsPanelBorder()
000878:0x00053520:	imove	ret, 0x000000
000878:0x00053530:	release	dragged_item
000878:0x00053538:	release	player
000878:0x00053540:	rts
000878:0x00053548:	jump	0x053560
000882:0x00053550:	call	InventoryManager.SetItemColor(ITEM_COLOR_DRAG)
000886:0x00053560:	imove	ret, 0x000001
000886:0x00053570:	release	dragged_item
000886:0x00053578:	release	player
000886:0x00053580:	rts
000886:0x00053588:	release	dragged_item
000886:0x00053590:	release	player
000886:0x00053598:	rts
InventoryMenu::OnDropReceived()
000891:0x00053600:	call	UIScriptedMenu.OnDropReceived(w, x, y, reciever)
000893:0x00053610:	call	GetInstance()
000893:0x00053618:	movec	manager, ret
000894:0x00053628:	call	InventoryManager.GetItem()
000894:0x00053630:	movem	dragged_item, ret
000895:0x00053640:	ncall	GetGame()
000895:0x00053648:	ncalli	CGame.GetPlayer()
000895:0x00053650:	movetm	player, ret
000897:0x00053660:	cmpcm	dragged_item, NULL
000897:0x00053670:	beq	0x053a00
000897:0x00053678:	ncalli	PlayerBase.GetEntityInHands()
000897:0x00053680:	cmpmc	ret, dragged_item
000897:0x00053690:	bne	0x0536b8
000897:0x00053698:	ncalli	PlayerBase.CanRemoveEntityInHands()
000897:0x000536a0:	cmpi	ret, _i0
000897:0x000536b0:	beq	0x053a00
000901:0x000536b8:	cmpm	reciever, m_character_panel_area_widget
000901:0x000536c8:	beq	0x053700
000901:0x000536d0:	movefm	[0x11cf2b58], m_right_panel
000901:0x000536e0:	ncalli	Widget.GetChildren()
000901:0x000536e8:	cmpcm	reciever, ret
000901:0x000536f8:	bne	0x053750
000901:0x00053700:	ncalli	InventoryItem.GetOwnerPlayer()
000901:0x00053708:	cmpmc	ret, player
000901:0x00053718:	bne	0x053750
000903:0x00053720:	call	InventoryMenu.HidePanelBorders()
000904:0x00053728:	imove	ret, 0x000001
000904:0x00053738:	release	dragged_item
000904:0x00053740:	release	player
000904:0x00053748:	rts
000907:0x00053750:	cmpm	reciever, m_character_panel_area_widget
000907:0x00053760:	bne	0x0537e0
000907:0x00053768:	cmpcm	dragged_item, NULL
000907:0x00053778:	beq	0x0537e0
000909:0x00053780:	movem	item, dragged_item
000909:0x00053790:	call	PlayerBase.CanTakeEntityAsOwned(item)
000909:0x000537a0:	cmpi	ret, _i0
000909:0x000537b0:	beq	0x0537d8
000911:0x000537b8:	movem	item, dragged_item
000911:0x000537c8:	call	PlayerBase.TakeEntityAsOwned(item)
000911:0x000537d8:	jump	0x053a00
000914:0x000537e0:	movefm	[0x11cf2b58], m_left_panel
000914:0x000537f0:	ncalli	Widget.GetChildren()
000914:0x000537f8:	cmpcm	reciever, ret
000914:0x00053808:	bne	0x053840
000914:0x00053810:	cmpcm	dragged_item, NULL
000914:0x00053820:	beq	0x053840
000916:0x00053828:	call	InventoryManager.DropItem(dragged_item)
000916:0x00053838:	jump	0x053a00
000918:0x00053840:	cmpm	reciever, m_left_panel_border
000918:0x00053850:	bne	0x053888
000918:0x00053858:	cmpcm	dragged_item, NULL
000918:0x00053868:	beq	0x053888
000920:0x00053870:	call	InventoryManager.DropItem(dragged_item)
000920:0x00053880:	jump	0x053a00
000922:0x00053888:	cmpm	reciever, m_vicinity_panel
000922:0x00053898:	bne	0x0538d0
000922:0x000538a0:	cmpcm	dragged_item, NULL
000922:0x000538b0:	beq	0x0538d0
000924:0x000538b8:	call	InventoryManager.DropItem(dragged_item)
000924:0x000538c8:	jump	0x053a00
000926:0x000538d0:	movefm	[0x11cf2b58], m_right_panel
000926:0x000538e0:	ncalli	Widget.GetChildren()
000926:0x000538e8:	cmpcm	reciever, ret
000926:0x000538f8:	bne	0x053978
000926:0x00053900:	cmpcm	dragged_item, NULL
000926:0x00053910:	beq	0x053978
000928:0x00053918:	movem	item, dragged_item
000928:0x00053928:	call	PlayerBase.CanTakeEntityAsOwned(item)
000928:0x00053938:	cmpi	ret, _i0
000928:0x00053948:	beq	0x053970
000930:0x00053950:	movem	item, dragged_item
000930:0x00053960:	call	PlayerBase.TakeEntityAsOwned(item)
000930:0x00053970:	jump	0x053a00
000933:0x00053978:	cmpm	reciever, m_right_panel_border
000933:0x00053988:	bne	0x053a00
000933:0x00053990:	cmpcm	dragged_item, NULL
000933:0x000539a0:	beq	0x053a00
000935:0x000539a8:	movem	item, dragged_item
000935:0x000539b8:	call	PlayerBase.CanTakeEntityAsOwned(item)
000935:0x000539c8:	cmpi	ret, _i0
000935:0x000539d8:	beq	0x053a00
000937:0x000539e0:	movem	item, dragged_item
000937:0x000539f0:	call	PlayerBase.TakeEntityAsOwned(item)
000942:0x00053a00:	call	InventoryMenu.HidePanelBorders()
000944:0x00053a08:	call	InventoryManager.Drop()
000945:0x00053a10:	imove	ret, 0x000001
000945:0x00053a20:	release	dragged_item
000945:0x00053a28:	release	player
000945:0x00053a30:	rts
000945:0x00053a38:	release	dragged_item
000945:0x00053a40:	release	player
000945:0x00053a48:	rts
InventoryMenu::OnDrag()
000951:0x00053a50:	call	UIScriptedMenu.OnDrag(w, x, y)
000953:0x00053a60:	imove	ret, 0x000000
000953:0x00053a70:	rts
000953:0x00053a78:	rts
InventoryMenu::OnDragging()
000958:0x00053a80:	call	UIScriptedMenu.OnDragging(w, x, y, reciever)
000960:0x00053a90:	imove	ret, 0x000000
000960:0x00053aa0:	rts
000960:0x00053aa8:	rts
InventoryMenu::OnDrop()
000965:0x00053ab0:	call	UIScriptedMenu.OnDrop(w, x, y, reciever)
000967:0x00053ac0:	imove	ret, 0x000000
000967:0x00053ad0:	rts
000967:0x00053ad8:	rts
LoadingMenu::Init()
//scripts/5_Mission/GUI/LoadingMenu.c
000013:0x00053b80:	ncall	GetGame()
000013:0x00053b88:	ncalli	CGame.GetWorkspace()
000013:0x00053b90:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/loading.layout', _c0)
000013:0x00053b98:	movetm	layoutRoot, ret
000015:0x00053ba8:	ncalli	Widget.FindAnyWidget(_s'TextWidget')
000015:0x00053bb0:	movetm	m_label, ret
000016:0x00053bc0:	ncalli	Widget.FindAnyWidget(_s'ProgressBarWidget')
000016:0x00053bc8:	movetm	m_progressBar, ret
000017:0x00053bd8:	ncalli	Widget.FindAnyWidget(_s'ImageBackground')
000017:0x00053be0:	movetm	m_image, ret
000019:0x00053bf0:	call	GetRandomLoadingBackground()
000019:0x00053bf8:	movefm	[0x11d095f8], m_image
000019:0x00053c08:	ncalli	ImageWidget.LoadImageFile(_i0, ret, _i0)
000021:0x00053c18:	movem	ret, layoutRoot
000021:0x00053c28:	release	layoutRoot
000021:0x00053c30:	rts
000021:0x00053c38:	release	layoutRoot
000021:0x00053c40:	rts
Param1<UIMenuPanel>::Param1()
//scripts/1_CoreExt/param.c
000030:0x00053d28:	movem	param1, p1
000030:0x00053d38:	rts
MainMenu::MainMenu()
//scripts/5_Mission/GUI/MainMenu.c
000007:0x00053d40:	new	@c00, WidgetFadeTimer
000007:0x00053d60:	movec	m_fade_timer, @c00
000008:0x00053d70:	new	@c00, Timer
000008:0x00053d98:	movec	m_statisticsUpdateTimer, @c00
000009:0x00053da8:	imove	m_statisticsLoadedSuccessfully, 0x000000
000010:0x00053db8:	call	DayZGame.GetMissionState()
000010:0x00053dc0:	cmpi	ret, MISSION_STATE_FINNISH
000010:0x00053dd0:	bne	0x053e88
000012:0x00053dd8:	ncall	GetGame()
000012:0x00053de0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000012:0x00053df0:	pushc	ret
000012:0x00053df8:	ncall	GetGame()
000012:0x00053e00:	movec	@c01, ret
000012:0x00053e10:	popc	ret
000012:0x00053e18:	ncalli	CGame.GetUIManager()
000012:0x00053e20:	movec	obj, ret
000012:0x00053e30:	movetm	p1, this
000012:0x00053e40:	new	@c00, Param1<UIMenuPanel>
000012:0x00053e68:	movec	params, @c00
000012:0x00053e78:	call	CallQueue.Call(obj, _s'EnterServerBrowser', params)
000012:0x00053e88:	rts
MainMenu::~MainMenu()
000018:0x00053e90:	ncall	GetGame()
000018:0x00053e98:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000018:0x00053ea8:	movec	obj, this
000018:0x00053eb8:	call	CallQueue.RemoveCalls(obj)
000018:0x00053ec8:	rts
MainMenu::Init()
000023:0x00053fd0:	ncall	GetGame()
000023:0x00053fd8:	ncalli	CGame.GetWorkspace()
000023:0x00053fe0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_mainmenu.layout', _c0)
000023:0x00053fe8:	movetm	layoutRoot, ret
000027:0x00053ff8:	icall	DayZGame.GetVersion(version)
000028:0x00054000:	icall	DayZGame.GetPlayerName(player_name)
000030:0x00054008:	movefm	[0x11cf2b58], layoutRoot
000030:0x00054018:	ncalli	Widget.FindAnyWidget(_s'VersionTextWidget')
000030:0x00054020:	movetm	version_widget, ret
000031:0x00054030:	adds	@s01, _s'#main_menu_version ', version
000031:0x00054040:	moves	@s00, @s01
000031:0x00054050:	ncalli	TextWidget.SetText(@s00)
000033:0x00054058:	movefm	[0x11cf2b58], layoutRoot
000033:0x00054068:	ncalli	Widget.FindAnyWidget(_s'NameEditBoxWidget')
000033:0x00054070:	movetm	name_widget, ret
000034:0x00054080:	ncalli	EditBoxWidget.SetText(player_name)
000036:0x00054088:	movefm	[0x11cf2b58], layoutRoot
000036:0x00054098:	ncalli	Widget.FindAnyWidget(_s'StatisticsTextListboxWidget')
000036:0x000540a0:	movetm	m_statisticsTextListBox, ret
000038:0x000540b0:	new	@c00, PlayerNameHandler
000038:0x000540d0:	movetm	m_player_name_handler, @c00
000039:0x000540e0:	movefm	[0x11d0f728], m_player_name_handler
000039:0x000540f0:	ncalli	EditBoxWidget.SetHandler([0x11d0f728])
000041:0x000540f8:	ncalli	DayZGame.GetMission()
000041:0x00054100:	movec	mission, ret
000042:0x00054110:	call	MissionMainMenu.GetIntroScene()
000042:0x00054118:	movem	m_scene, ret
000046:0x00054128:	movem	ret, layoutRoot
000046:0x00054138:	release	version_widget
000046:0x00054140:	release	name_widget
000046:0x00054148:	rts
000046:0x00054150:	release	version_widget
000046:0x00054158:	release	name_widget
000046:0x00054160:	rts
MainMenu::Cleanup()
000051:0x00054168:	movetm	m_scene, NULL
000051:0x00054178:	rts
MainMenu::OnShow()
000056:0x00054180:	movetm	parent, this
000056:0x00054190:	call	DayZGame.EarlyAccessDialog(parent)
000058:0x000541a0:	cmpi	m_statisticsLoadedSuccessfully, _i0
000058:0x000541b0:	bne	0x0541f0
000058:0x000541b8:	movec	[0x3cd17138], m_statisticsUpdateTimer
000058:0x000541c8:	call	Timer.IsRunning()
000058:0x000541d0:	cmpi	ret, false
000058:0x000541e0:	bne	0x0541f0
000058:0x000541e8:	call	MainMenu.UpdateStats()
000058:0x000541f0:	rts
MainMenu::OnClick()
000067:0x00054238:	call	UIScriptedMenu.OnClick(w, x, y, button)
000069:0x00054248:	ncalli	Widget.GetUserID()
000069:0x00054250:	imove	@m00, 0x000032
000069:0x00054260:	cmpi	@m00, ret
000069:0x00054270:	bne	0x0542e8
000072:0x00054278:	cmpcm	m_scene, NULL
000072:0x00054288:	beq	0x0542c8
000073:0x00054290:	movefm	[0x7034fc8], m_scene
000073:0x000542a0:	call	DayZIntroScene.NextCharacterID()
000073:0x000542a8:	movefm	[0x7034fc8], m_scene
000073:0x000542b8:	call	DayZIntroScene.ChangeCharacter(ret)
000074:0x000542c8:	imove	ret, 0x000001
000074:0x000542d8:	rts
000074:0x000542e0:	jump	0x054310
000074:0x000542e8:	imove	@m00, 0x000033
000074:0x000542f8:	cmpi	@m00, ret
000074:0x00054308:	bne	0x054380
000076:0x00054310:	cmpcm	m_scene, NULL
000076:0x00054320:	beq	0x054360
000077:0x00054328:	movefm	[0x7034fc8], m_scene
000077:0x00054338:	call	DayZIntroScene.PrevCharacterID()
000077:0x00054340:	movefm	[0x7034fc8], m_scene
000077:0x00054350:	call	DayZIntroScene.ChangeCharacter(ret)
000078:0x00054360:	imove	ret, 0x000001
000078:0x00054370:	rts
000078:0x00054378:	jump	0x0543a8
000078:0x00054380:	imove	@m00, 0x00008e
000078:0x00054390:	cmpi	@m00, ret
000078:0x000543a0:	bne	0x054400
000080:0x000543a8:	ncall	GetGame()
000080:0x000543b0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000080:0x000543c0:	movec	obj, this
000080:0x000543d0:	call	CallQueue.Call(obj, _s'ConnectLastSession', _c0)
000081:0x000543e0:	imove	ret, 0x000001
000081:0x000543f0:	rts
000081:0x000543f8:	jump	0x054428
000081:0x00054400:	imove	@m00, 0x00008f
000081:0x00054410:	cmpi	@m00, ret
000081:0x00054420:	bne	0x054468
000084:0x00054428:	cmpcm	m_scene, NULL
000084:0x00054438:	beq	0x054448
000086:0x00054440:	ncalli	MainMenu.EnterScriptedMenu(MENU_CHARACTER)
000089:0x00054448:	imove	ret, 0x000001
000089:0x00054458:	rts
000089:0x00054460:	jump	0x054490
000089:0x00054468:	imove	@m00, 0x000069
000089:0x00054478:	cmpi	@m00, ret
000089:0x00054488:	bne	0x0544d8
000092:0x00054490:	ncalli	DayZGame.GetUIManager()
000092:0x00054498:	movec	[0x3cd3f438], this
000092:0x000544a8:	ncalli	UIManager.EnterServerBrowser([0x3cd3f438])
000093:0x000544b0:	imove	ret, 0x000001
000093:0x000544c0:	rts
000094:0x000544c8:	jump	0x0545c8
000094:0x000544d0:	jump	0x054500
000094:0x000544d8:	imove	@m00, 0x000066
000094:0x000544e8:	cmpi	@m00, ret
000094:0x000544f8:	bne	0x054528
000097:0x00054500:	ncalli	MainMenu.EnterScriptedMenu(MENU_OPTIONS)
000098:0x00054508:	imove	ret, 0x000001
000098:0x00054518:	rts
000098:0x00054520:	jump	0x054550
000098:0x00054528:	imove	@m00, 0x00006a
000098:0x00054538:	cmpi	@m00, ret
000098:0x00054548:	bne	0x0545c8
000101:0x00054550:	ncall	GetGame()
000101:0x00054558:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000101:0x00054568:	movec	obj, g_Game
000101:0x00054578:	new	@c00, Param1<int>
000101:0x000545a0:	movec	params, @c00
000101:0x000545b0:	call	CallQueue.Call(obj, _s'RequestExit', params)
000102:0x000545c0:	jump	0x0545c8
000105:0x000545c8:	imove	ret, 0x000000
000105:0x000545d8:	rts
000105:0x000545e0:	rts
MainMenu::OnMouseButtonDown()
000110:0x000545e8:	call	UIScriptedMenu.OnMouseButtonDown(w, x, y, button)
000112:0x000545f8:	ncalli	Widget.GetName()
000112:0x00054600:	cmps	ret, _s'CharacterRotationFrame'
000112:0x00054610:	bne	0x054660
000114:0x00054618:	cmpcm	m_scene, NULL
000114:0x00054628:	beq	0x054648
000114:0x00054630:	movefm	[0x7034fc8], m_scene
000114:0x00054640:	call	DayZIntroScene.CharacterRotationStart()
000115:0x00054648:	imove	ret, 0x000001
000115:0x00054658:	rts
000118:0x00054660:	imove	ret, 0x000000
000118:0x00054670:	rts
000118:0x00054678:	rts
MainMenu::OnMouseButtonUp()
000123:0x00054680:	call	UIScriptedMenu.OnMouseButtonUp(w, x, y, button)
000125:0x00054690:	cmpcm	m_scene, NULL
000125:0x000546a0:	beq	0x0546c0
000125:0x000546a8:	movefm	[0x7034fc8], m_scene
000125:0x000546b8:	call	DayZIntroScene.CharacterRotationStop()
000126:0x000546c0:	imove	ret, 0x000001
000126:0x000546d0:	rts
000126:0x000546d8:	rts
MainMenu::ConnectLastSession()
000136:0x000546e0:	cmpcm	m_scene, NULL
000136:0x000546f0:	beq	0x054748
000136:0x000546f8:	movec	[0x3cd2b268], this
000136:0x00054708:	movefm	[0x7034fc8], m_scene
000136:0x00054718:	move	[0x3cd2b288], m_currentCharacterID
000136:0x00054728:	ncalli	DayZGame.ConnectLastSession([0x3cd2b268], [0x3cd2b288])
000136:0x00054730:	cmpi	ret, _i0
000136:0x00054740:	bne	0x054768
000138:0x00054748:	ncalli	DayZGame.GetUIManager()
000138:0x00054750:	movec	[0x3cd3f438], this
000138:0x00054760:	ncalli	UIManager.EnterServerBrowser([0x3cd3f438])
000138:0x00054768:	rts
MainMenu::UpdateStats()
000144:0x00054930:	movefm	[0x11d0a1c0], m_statisticsTextListBox
000144:0x00054940:	ncalli	TextListboxWidget.ClearItems()
000147:0x00054948:	cmpcm	m_scene, NULL
000147:0x00054958:	beq	0x054b58
000147:0x00054960:	movefm	[0x7034fc8], m_scene
000147:0x00054970:	cmpcm	m_demoUnit, NULL
000147:0x00054980:	beq	0x054b58
000149:0x00054988:	moves	lvalue, _s''
000150:0x00054998:	moves	lname, _s''
000152:0x000549a8:	moves	lname, _s'Play time'
000153:0x000549b8:	movefm	[0x7034fc8], m_scene
000153:0x000549c8:	movefm	[0x45f48920], m_demoUnit
000153:0x000549d8:	icall	PlayerBase.StatGetAsTime(_s'playtime', lvalue)
000154:0x000549e0:	movefm	[0x11d0a1c0], m_statisticsTextListBox
000154:0x000549f0:	ncalli	TextListboxWidget.AddItem(lname, NULL, _i0, _i-1)
000154:0x00054a00:	move	line_index, ret
000155:0x00054a10:	movefm	[0x11d0a1c0], m_statisticsTextListBox
000155:0x00054a20:	ncalli	TextListboxWidget.SetItem(line_index, lvalue, NULL, _i1)
000157:0x00054a30:	moves	debug_string, _s''
000158:0x00054a40:	movefm	[0x7034fc8], m_scene
000158:0x00054a50:	movefm	[0x45f48920], m_demoUnit
000158:0x00054a60:	ncalli	PlayerBase.StatGet(_s'playtime')
000158:0x00054a68:	move	fvalue, ret
000159:0x00054a78:	icall	ToString(fvalue)
000159:0x00054a80:	adds	@s00, _s'playtime: ', ret
000159:0x00054a90:	moves	debug_string, @s00
000162:0x00054aa0:	moves	lname, _s'Distance traveled'
000163:0x00054ab0:	movefm	[0x7034fc8], m_scene
000163:0x00054ac0:	movefm	[0x45f48920], m_demoUnit
000163:0x00054ad0:	icall	PlayerBase.StatGetCounter(_s'dist', lvalue)
000164:0x00054ad8:	movefm	[0x11d0a1c0], m_statisticsTextListBox
000164:0x00054ae8:	ncalli	TextListboxWidget.AddItem(lname, NULL, _i0, _i-1)
000164:0x00054af8:	move	line_index, ret
000165:0x00054b08:	movefm	[0x11d0a1c0], m_statisticsTextListBox
000165:0x00054b18:	ncalli	TextListboxWidget.SetItem(line_index, lvalue, NULL, _i1)
000167:0x00054b28:	adds	@s00, _s'dist: ', lvalue
000167:0x00054b38:	moves	debug_string, @s00
000170:0x00054b48:	imove	m_statisticsLoadedSuccessfully, 0x000001
000170:0x00054b58:	rts
MainMenu2::MainMenu2()
//scripts/5_Mission/GUI/MainMenu2.c
000014:0x00054b60:	new	@c00, WidgetFadeTimer
000014:0x00054b80:	movec	m_fade_timer, @c00
000015:0x00054b90:	new	@c00, Timer
000015:0x00054bb8:	movec	m_statisticsUpdateTimer, @c00
000016:0x00054bc8:	imove	m_statisticsLoadedSuccessfully, 0x000000
000016:0x00054bd8:	rts
MainMenu2::~MainMenu2()
000021:0x00054be0:	ncall	GetGame()
000021:0x00054be8:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000021:0x00054bf8:	movec	obj, this
000021:0x00054c08:	call	CallQueue.RemoveCalls(obj)
000021:0x00054c18:	rts
MainMenu2::Init()
000026:0x00054d40:	ncall	GetGame()
000026:0x00054d48:	ncalli	CGame.GetWorkspace()
000026:0x00054d50:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_MainMenu2.layout', _c0)
000026:0x00054d58:	movetm	layoutRoot, ret
000030:0x00054d68:	icall	DayZGame.GetVersion(version)
000031:0x00054d70:	icall	DayZGame.GetPlayerName(player_name)
000033:0x00054d78:	movefm	[0x11cf2b58], layoutRoot
000033:0x00054d88:	ncalli	Widget.FindAnyWidget(_s'VersionText')
000033:0x00054d90:	movetm	version_widget, ret
000034:0x00054da0:	adds	@s01, _s'#main_menu_version ', version
000034:0x00054db0:	moves	@s00, @s01
000034:0x00054dc0:	ncalli	TextWidget.SetText(@s00)
000036:0x00054dc8:	movefm	[0x11cf2b58], layoutRoot
000036:0x00054dd8:	ncalli	Widget.FindAnyWidget(_s'CharacterNameText')
000036:0x00054de0:	movetm	name_widget, ret
000037:0x00054df0:	ncalli	EditBoxWidget.SetText(player_name)
000039:0x00054df8:	movefm	[0x11cf2b58], layoutRoot
000039:0x00054e08:	ncalli	Widget.FindAnyWidget(_s'GlobalStatisticsTextListboxWidget')
000039:0x00054e10:	movetm	m_GlobalStatsTextListBox, ret
000041:0x00054e20:	new	@c00, PlayerNameHandler
000041:0x00054e40:	movetm	m_player_name_handler, @c00
000042:0x00054e50:	movefm	[0x11d0f728], m_player_name_handler
000042:0x00054e60:	ncalli	EditBoxWidget.SetHandler([0x11d0f728])
000044:0x00054e68:	ncalli	DayZGame.GetMission()
000044:0x00054e70:	movec	mission, ret
000045:0x00054e80:	call	MissionMainMenu.GetIntroScene()
000045:0x00054e88:	movem	m_scene, ret
000049:0x00054e98:	movem	ret, layoutRoot
000049:0x00054ea8:	release	version_widget
000049:0x00054eb0:	release	name_widget
000049:0x00054eb8:	rts
000049:0x00054ec0:	release	version_widget
000049:0x00054ec8:	release	name_widget
000049:0x00054ed0:	rts
MainMenu2::OnShow()
000054:0x00054ed8:	movetm	parent, this
000054:0x00054ee8:	call	DayZGame.EarlyAccessDialog(parent)
000056:0x00054ef8:	cmpi	m_statisticsLoadedSuccessfully, _i0
000056:0x00054f08:	bne	0x054f48
000056:0x00054f10:	movec	[0x3cd17138], m_statisticsUpdateTimer
000056:0x00054f20:	call	Timer.IsRunning()
000056:0x00054f28:	cmpi	ret, false
000056:0x00054f38:	bne	0x054f48
000056:0x00054f40:	call	MainMenu2.UpdateStats()
000056:0x00054f48:	rts
MainMenu2::OnClick()
000065:0x00054f50:	call	UIScriptedMenu.OnClick(w, x, y, button)
000067:0x00054f60:	ncalli	Widget.GetUserID()
000067:0x00054f68:	imove	@m00, 0x000032
000067:0x00054f78:	cmpi	@m00, ret
000067:0x00054f88:	bne	0x054fe8
000070:0x00054f90:	movefm	[0x7034fc8], m_scene
000070:0x00054fa0:	call	DayZIntroScene.NextCharacterID()
000070:0x00054fa8:	movefm	[0x7034fc8], m_scene
000070:0x00054fb8:	call	DayZIntroScene.ChangeCharacter(ret)
000071:0x00054fc8:	imove	ret, 0x000001
000071:0x00054fd8:	rts
000071:0x00054fe0:	jump	0x055010
000071:0x00054fe8:	imove	@m00, 0x000033
000071:0x00054ff8:	cmpi	@m00, ret
000071:0x00055008:	bne	0x055068
000073:0x00055010:	movefm	[0x7034fc8], m_scene
000073:0x00055020:	call	DayZIntroScene.PrevCharacterID()
000073:0x00055028:	movefm	[0x7034fc8], m_scene
000073:0x00055038:	call	DayZIntroScene.ChangeCharacter(ret)
000074:0x00055048:	imove	ret, 0x000001
000074:0x00055058:	rts
000074:0x00055060:	jump	0x055090
000074:0x00055068:	imove	@m00, 0x00008e
000074:0x00055078:	cmpi	@m00, ret
000074:0x00055088:	bne	0x0550e8
000076:0x00055090:	ncall	GetGame()
000076:0x00055098:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000076:0x000550a8:	movec	obj, this
000076:0x000550b8:	call	CallQueue.Call(obj, _s'ConnectLastSession', _c0)
000077:0x000550c8:	imove	ret, 0x000001
000077:0x000550d8:	rts
000077:0x000550e0:	jump	0x055110
000077:0x000550e8:	imove	@m00, 0x00008f
000077:0x000550f8:	cmpi	@m00, ret
000077:0x00055108:	bne	0x055150
000080:0x00055110:	cmpcm	m_scene, NULL
000080:0x00055120:	beq	0x055130
000082:0x00055128:	ncalli	MainMenu2.EnterScriptedMenu(MENU_CHARACTER)
000084:0x00055130:	imove	ret, 0x000001
000084:0x00055140:	rts
000084:0x00055148:	jump	0x055178
000084:0x00055150:	imove	@m00, 0x000069
000084:0x00055160:	cmpi	@m00, ret
000084:0x00055170:	bne	0x0551c0
000087:0x00055178:	ncalli	DayZGame.GetUIManager()
000087:0x00055180:	movec	[0x3cd3f438], this
000087:0x00055190:	ncalli	UIManager.EnterServerBrowser([0x3cd3f438])
000088:0x00055198:	imove	ret, 0x000001
000088:0x000551a8:	rts
000089:0x000551b0:	jump	0x0552b0
000089:0x000551b8:	jump	0x0551e8
000089:0x000551c0:	imove	@m00, 0x000066
000089:0x000551d0:	cmpi	@m00, ret
000089:0x000551e0:	bne	0x055210
000092:0x000551e8:	ncalli	MainMenu2.EnterScriptedMenu(MENU_OPTIONS)
000093:0x000551f0:	imove	ret, 0x000001
000093:0x00055200:	rts
000093:0x00055208:	jump	0x055238
000093:0x00055210:	imove	@m00, 0x00006a
000093:0x00055220:	cmpi	@m00, ret
000093:0x00055230:	bne	0x0552b0
000096:0x00055238:	ncall	GetGame()
000096:0x00055240:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000096:0x00055250:	movec	obj, g_Game
000096:0x00055260:	new	@c00, Param1<int>
000096:0x00055288:	movec	params, @c00
000096:0x00055298:	call	CallQueue.Call(obj, _s'RequestExit', params)
000097:0x000552a8:	jump	0x0552b0
000100:0x000552b0:	imove	ret, 0x000000
000100:0x000552c0:	rts
000100:0x000552c8:	rts
MainMenu2::OnMouseButtonDown()
000105:0x000552d0:	call	UIScriptedMenu.OnMouseButtonDown(w, x, y, button)
000107:0x000552e0:	ncalli	Widget.GetName()
000107:0x000552e8:	cmps	ret, _s'CharacterRotationFrame'
000107:0x000552f8:	bne	0x055348
000109:0x00055300:	cmpcm	m_scene, NULL
000109:0x00055310:	beq	0x055330
000109:0x00055318:	movefm	[0x7034fc8], m_scene
000109:0x00055328:	call	DayZIntroScene.CharacterRotationStart()
000110:0x00055330:	imove	ret, 0x000001
000110:0x00055340:	rts
000113:0x00055348:	imove	ret, 0x000000
000113:0x00055358:	rts
000113:0x00055360:	rts
MainMenu2::OnMouseButtonUp()
000118:0x00055368:	call	UIScriptedMenu.OnMouseButtonUp(w, x, y, button)
000120:0x00055378:	cmpcm	m_scene, NULL
000120:0x00055388:	beq	0x0553a8
000120:0x00055390:	movefm	[0x7034fc8], m_scene
000120:0x000553a0:	call	DayZIntroScene.CharacterRotationStop()
000121:0x000553a8:	imove	ret, 0x000001
000121:0x000553b8:	rts
000121:0x000553c0:	rts
MainMenu2::ConnectLastSession()
000131:0x000553c8:	movec	[0x3cd2b268], this
000131:0x000553d8:	ncalli	DayZGame.ConnectLastSession([0x3cd2b268], _i-1)
000131:0x000553e0:	cmpi	ret, _i0
000131:0x000553f0:	bne	0x055418
000133:0x000553f8:	ncalli	DayZGame.GetUIManager()
000133:0x00055400:	movec	[0x3cd3f438], this
000133:0x00055410:	ncalli	UIManager.EnterServerBrowser([0x3cd3f438])
000133:0x00055418:	rts
MainMenu2::UpdateStats()
000139:0x000554c0:	movefm	[0x11d0a1c0], m_GlobalStatsTextListBox
000139:0x000554d0:	ncalli	TextListboxWidget.ClearItems()
000142:0x000554d8:	cmpcm	m_scene, NULL
000142:0x000554e8:	beq	0x0556e8
000142:0x000554f0:	movefm	[0x7034fc8], m_scene
000142:0x00055500:	cmpcm	m_demoUnit, NULL
000142:0x00055510:	beq	0x0556e8
000144:0x00055518:	moves	lvalue, _s''
000145:0x00055528:	moves	lname, _s''
000147:0x00055538:	moves	lname, _s'Play time'
000148:0x00055548:	movefm	[0x7034fc8], m_scene
000148:0x00055558:	movefm	[0x45f48920], m_demoUnit
000148:0x00055568:	icall	PlayerBase.StatGetAsTime(_s'playtime', lvalue)
000149:0x00055570:	movefm	[0x11d0a1c0], m_GlobalStatsTextListBox
000149:0x00055580:	ncalli	TextListboxWidget.AddItem(lname, NULL, _i0, _i-1)
000149:0x00055590:	move	line_index, ret
000150:0x000555a0:	movefm	[0x11d0a1c0], m_GlobalStatsTextListBox
000150:0x000555b0:	ncalli	TextListboxWidget.SetItem(line_index, lvalue, NULL, _i1)
000152:0x000555c0:	moves	debug_string, _s''
000153:0x000555d0:	movefm	[0x7034fc8], m_scene
000153:0x000555e0:	movefm	[0x45f48920], m_demoUnit
000153:0x000555f0:	ncalli	PlayerBase.StatGet(_s'playtime')
000153:0x000555f8:	move	fvalue, ret
000154:0x00055608:	icall	ToString(fvalue)
000154:0x00055610:	adds	@s00, _s'playtime: ', ret
000154:0x00055620:	moves	debug_string, @s00
000157:0x00055630:	moves	lname, _s'Distance traveled'
000158:0x00055640:	movefm	[0x7034fc8], m_scene
000158:0x00055650:	movefm	[0x45f48920], m_demoUnit
000158:0x00055660:	icall	PlayerBase.StatGetCounter(_s'dist', lvalue)
000159:0x00055668:	movefm	[0x11d0a1c0], m_GlobalStatsTextListBox
000159:0x00055678:	ncalli	TextListboxWidget.AddItem(lname, NULL, _i0, _i-1)
000159:0x00055688:	move	line_index, ret
000160:0x00055698:	movefm	[0x11d0a1c0], m_GlobalStatsTextListBox
000160:0x000556a8:	ncalli	TextListboxWidget.SetItem(line_index, lvalue, NULL, _i1)
000162:0x000556b8:	adds	@s00, _s'dist: ', lvalue
000162:0x000556c8:	moves	debug_string, @s00
000165:0x000556d8:	imove	m_statisticsLoadedSuccessfully, 0x000001
000165:0x000556e8:	rts
MapMenu::Init()
//scripts/5_Mission/GUI/MapMenu.c
000005:0x00055710:	ncall	GetGame()
000005:0x00055718:	ncalli	CGame.GetWorkspace()
000005:0x00055720:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_map.layout', _c0)
000005:0x00055728:	movetm	layoutRoot, ret
000007:0x00055738:	movem	ret, layoutRoot
000007:0x00055748:	rts
000007:0x00055750:	rts
MapMenu::OnClick()
000012:0x00055758:	call	UIScriptedMenu.OnClick(w, x, y, button)
000014:0x00055768:	ncalli	Widget.GetUserID()
000014:0x00055770:	imove	@m00, 0x000002
000014:0x00055780:	cmpi	@m00, ret
000014:0x00055790:	bne	0x0557b8
000017:0x00055798:	ncalli	MapMenu.Close()
000018:0x000557a0:	imove	ret, 0x000001
000018:0x000557b0:	rts
000021:0x000557b8:	imove	ret, 0x000000
000021:0x000557c8:	rts
000021:0x000557d0:	rts
NoteMenu::InitRead()
//scripts/5_Mission/GUI/NoteMenu.c
000018:0x00055818:	cmpcm	m_edit, NULL
000018:0x00055828:	beq	0x055848
000020:0x00055830:	movefm	[0x11d0a218], m_edit
000020:0x00055840:	ncalli	MultilineEditBoxWidget.Show(false)
000023:0x00055848:	cmpcm	m_html, NULL
000023:0x00055858:	beq	0x0558d0
000025:0x00055860:	movefm	[0x11d096f0], m_html
000025:0x00055870:	ncalli	HtmlWidget.Show(true)
000026:0x00055878:	adds	@s02, _s'<html><body><p>', text
000026:0x00055888:	moves	@s01, @s02
000026:0x00055898:	adds	@s01, @s01, _s'</p></body></html>'
000026:0x000558a8:	moves	@s00, @s01
000026:0x000558b8:	movefm	[0x11d096f0], m_html
000026:0x000558c8:	ncalli	HtmlWidget.SetText(@s00)
000026:0x000558d0:	rts
NoteMenu::InitWrite()
000032:0x000558f8:	cmpcm	m_edit, NULL
000032:0x00055908:	beq	0x0559c0
000035:0x00055910:	movefm	[0x11d0a218], m_edit
000035:0x00055920:	ncalli	MultilineEditBoxWidget.Show(true)
000036:0x00055928:	movefm	[0x11d0a218], m_edit
000036:0x00055938:	ncalli	MultilineEditBoxWidget.SetText(_s'')
000038:0x00055940:	delete	m_paper
000039:0x00055948:	delete	m_pen
000040:0x00055950:	new	@c00, Link<EntityAI>
000040:0x00055978:	movec	m_paper, @c00
000041:0x00055988:	new	@c00, Link<EntityAI>
000041:0x000559b0:	movec	m_pen, @c00
000044:0x000559c0:	cmpcm	m_html, NULL
000044:0x000559d0:	beq	0x0559f0
000046:0x000559d8:	movefm	[0x11d096f0], m_html
000046:0x000559e8:	ncalli	HtmlWidget.Show(false)
000046:0x000559f0:	rts
NoteMenu::Init()
000052:0x00055a38:	ncall	GetGame()
000052:0x00055a40:	ncalli	CGame.GetWorkspace()
000052:0x00055a48:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory_note.layout', _c0)
000052:0x00055a50:	movetm	layoutRoot, ret
000053:0x00055a60:	movefm	[0x11cf2b58], layoutRoot
000053:0x00055a70:	ncalli	Widget.FindAnyWidget(_s'EditWidget')
000053:0x00055a78:	movetm	m_edit, ret
000054:0x00055a88:	movefm	[0x11cf2b58], layoutRoot
000054:0x00055a98:	ncalli	Widget.FindAnyWidget(_s'HtmlWidget')
000054:0x00055aa0:	movetm	m_html, ret
000056:0x00055ab0:	movem	ret, layoutRoot
000056:0x00055ac0:	rts
000056:0x00055ac8:	rts
NoteMenu::OnClick()
000061:0x00055b10:	call	UIScriptedMenu.OnClick(w, x, y, button)
000063:0x00055b20:	ncalli	Widget.GetUserID()
000063:0x00055b28:	imove	@m00, 0x000002
000063:0x00055b38:	cmpi	@m00, ret
000063:0x00055b48:	bne	0x055b78
000066:0x00055b50:	ncalli	NoteMenu.Close()
000067:0x00055b58:	imove	ret, 0x000001
000067:0x00055b68:	rts
000067:0x00055b70:	jump	0x055ba0
000067:0x00055b78:	imove	@m00, 0x000001
000067:0x00055b88:	cmpi	@m00, ret
000067:0x00055b98:	bne	0x055cf8
000069:0x00055ba0:	cmpc	m_paper, NULL
000069:0x00055bb0:	beq	0x055cd8
000069:0x00055bb8:	movec	[0x45f9f240], m_paper
000069:0x00055bc8:	call	Link<EntityAI>.IsNull()
000069:0x00055bd0:	cmpi	ret, false
000069:0x00055be0:	bne	0x055cd8
000069:0x00055be8:	cmpc	m_pen, NULL
000069:0x00055bf8:	beq	0x055cd8
000069:0x00055c00:	movec	[0x45f9f240], m_pen
000069:0x00055c10:	call	Link<EntityAI>.IsNull()
000069:0x00055c18:	cmpi	ret, false
000069:0x00055c28:	bne	0x055cd8
000071:0x00055c30:	movec	[0x45f9f240], m_pen
000071:0x00055c40:	call	Link<EntityAI>.Ptr()
000071:0x00055c48:	new	@c01, Param2<string,EntityAI>
000071:0x00055c70:	movec	params, @c01
000072:0x00055c80:	movefm	[0x11d0a218], m_edit
000072:0x00055c90:	icall	MultilineEditBoxWidget.GetText(param1)
000073:0x00055c98:	movec	[0x45f9f240], m_paper
000073:0x00055ca8:	call	Link<EntityAI>.Ptr()
000073:0x00055cb0:	movec	param, params
000073:0x00055cc0:	call	EntityAI.RPCSingleParam(RPC_WRITE_NOTE, param, _c0)
000073:0x00055cd0:	delete	params
000075:0x00055cd8:	ncalli	NoteMenu.Close()
000076:0x00055ce0:	imove	ret, 0x000001
000076:0x00055cf0:	rts
000079:0x00055cf8:	imove	ret, 0x000000
000079:0x00055d08:	rts
000079:0x00055d10:	rts
OptionsMenu::OptionsMenu()
//scripts/5_Mission/GUI/OptionsMenu.c
000013:0x00055d18:	imove	m_selected_tab, 0x000000
000015:0x00055d28:	new	@c00, array<int>
000015:0x00055d48:	movetm	m_action_indices, @c00
000016:0x00055d58:	new	@c00, array<int>
000016:0x00055d78:	movetm	m_keys, @c00
000017:0x00055d88:	new	@c00, array<OptionsAccessUI>
000017:0x00055da8:	movetm	m_optionsUI, @c00
000017:0x00055db8:	rts
OptionsMenu::~OptionsMenu()
000022:0x00055e30:	movec	[0x3cd16a28], m_Options
000022:0x00055e40:	ncalli	GameOptions.Revert()
000023:0x00055e48:	ncall	GetGame()
000023:0x00055e50:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000023:0x00055e60:	movec	obj, this
000023:0x00055e70:	call	CallQueue.RemoveCalls(obj)
000025:0x00055e80:	imove	i, 0x000000
000025:0x00055e90:	jump	0x055ea0
000025:0x00055e98:	inc	i
000025:0x00055ea0:	movefm	[0x7035cf8], m_optionsUI
000025:0x00055eb0:	ncalli	array<OptionsAccessUI>.Count()
000025:0x00055eb8:	cmpi	i, ret
000025:0x00055ec8:	bge	0x055f10
000027:0x00055ed0:	movefm	[0x7035cf8], m_optionsUI
000027:0x00055ee0:	icall	array<OptionsAccessUI>.Get(i)
000027:0x00055ee8:	movetm	optionUI, ret
000028:0x00055ef8:	delete	optionUI
000028:0x00055f00:	release	optionUI
000028:0x00055f08:	jump	0x055e98
000030:0x00055f10:	ncall	GetGame()
000030:0x00055f18:	ncalli	CGame.EndOptionsVideo()
000030:0x00055f20:	rts
OptionsMenu::Init()
000035:0x00056288:	ncall	GetGame()
000035:0x00056290:	ncalli	CGame.GetWorkspace()
000035:0x00056298:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_options.layout', _c0)
000035:0x000562a0:	movetm	layoutRoot, ret
000037:0x000562b0:	ncall	GetGame()
000037:0x000562b8:	ncalli	CGame.BeginOptionsVideo()
000039:0x000562c0:	movefm	[0x11cf2b58], layoutRoot
000039:0x000562d0:	ncalli	Widget.FindAnyWidget(_s'GamePanelWidget')
000039:0x000562d8:	ctv	m_tabs[TAB_GAME], ret
000040:0x000562e8:	movefm	[0x11cf2b58], layoutRoot
000040:0x000562f8:	ncalli	Widget.FindAnyWidget(_s'SoundPanelWidget')
000040:0x00056300:	ctv	m_tabs[TAB_SOUND], ret
000041:0x00056310:	movefm	[0x11cf2b58], layoutRoot
000041:0x00056320:	ncalli	Widget.FindAnyWidget(_s'VideoPanelWidget')
000041:0x00056328:	ctv	m_tabs[TAB_VIDEO], ret
000042:0x00056338:	movefm	[0x11cf2b58], layoutRoot
000042:0x00056348:	ncalli	Widget.FindAnyWidget(_s'ControlsPanelWidget')
000042:0x00056350:	ctv	m_tabs[TAB_CONTROLS], ret
000044:0x00056360:	movefm	[0x11cf2b58], layoutRoot
000044:0x00056370:	ncalli	Widget.FindAnyWidget(_s'GameButtonWidget')
000044:0x00056378:	ctv	m_tab_buttons[TAB_GAME], ret
000045:0x00056388:	movefm	[0x11cf2b58], layoutRoot
000045:0x00056398:	ncalli	Widget.FindAnyWidget(_s'SoundButtonWidget')
000045:0x000563a0:	ctv	m_tab_buttons[TAB_SOUND], ret
000046:0x000563b0:	movefm	[0x11cf2b58], layoutRoot
000046:0x000563c0:	ncalli	Widget.FindAnyWidget(_s'VideoButtonWidget')
000046:0x000563c8:	ctv	m_tab_buttons[TAB_VIDEO], ret
000047:0x000563d8:	movefm	[0x11cf2b58], layoutRoot
000047:0x000563e8:	ncalli	Widget.FindAnyWidget(_s'ControlsButtonWidget')
000047:0x000563f0:	ctv	m_tab_buttons[TAB_CONTROLS], ret
000060:0x00056400:	movefm	[0x11cf2b58], layoutRoot
000060:0x00056410:	ncalli	Widget.FindAnyWidget(_s'ActionGroupsComboBoxWidget')
000060:0x00056418:	movetm	m_action_groups, ret
000061:0x00056428:	movefm	[0x11d09bb0], m_action_groups
000061:0x00056438:	ncalli	XComboBoxWidget.ClearAll()
000063:0x00056440:	movefm	[0x11cf2b58], layoutRoot
000063:0x00056450:	ncalli	Widget.FindAnyWidget(_s'ActionsListboxWidget')
000063:0x00056458:	movetm	m_actions, ret
000064:0x00056468:	movefm	[0x11d0a1c0], m_actions
000064:0x00056478:	ncalli	TextListboxWidget.ClearItems()
000066:0x00056480:	movefm	[0x11cf2b58], layoutRoot
000066:0x00056490:	ncalli	Widget.FindAnyWidget(_s'DevicesListboxWidget')
000066:0x00056498:	movetm	m_devices, ret
000067:0x000564a8:	movefm	[0x11d0a1c0], m_devices
000067:0x000564b8:	ncalli	TextListboxWidget.ClearItems()
000069:0x000564c0:	movefm	[0x11cf2b58], layoutRoot
000069:0x000564d0:	ncalli	Widget.FindAnyWidget(_s'PresetsBtn')
000069:0x000564d8:	movetm	m_presets_button, ret
000070:0x000564e8:	movefm	[0x11cf2b58], layoutRoot
000070:0x000564f8:	ncalli	Widget.FindAnyWidget(_s'AssignBtn')
000070:0x00056500:	movetm	m_assign_button, ret
000072:0x00056510:	movefm	[0x11cf2b58], layoutRoot
000072:0x00056520:	ncalli	Widget.FindAnyWidget(_s'EnableDeviceBtn')
000072:0x00056528:	movetm	m_device_button, ret
000073:0x00056538:	movefm	[0x11cf2b58], layoutRoot
000073:0x00056548:	ncalli	Widget.FindAnyWidget(_s'CustomSchemeCheckBoxWidget')
000073:0x00056550:	movetm	m_device_custom_scheme, ret
000075:0x00056560:	movefm	[0x11cf2b58], layoutRoot
000075:0x00056570:	ncalli	Widget.FindAnyWidget(_s'TestBtn')
000075:0x00056578:	movetm	m_test_button, ret
000076:0x00056588:	movefm	[0x11cf2b58], layoutRoot
000076:0x00056598:	ncalli	Widget.FindAnyWidget(_s'QualitySetBtn')
000076:0x000565a0:	movetm	m_quality_set_button, ret
000077:0x000565b0:	movefm	[0x11cf2b58], layoutRoot
000077:0x000565c0:	ncalli	Widget.FindAnyWidget(_s'DefaultVideoBtn')
000077:0x000565c8:	movetm	m_default_video_button, ret
000079:0x000565d8:	movefm	[0x11cf2b58], layoutRoot
000079:0x000565e8:	ncalli	Widget.FindAnyWidget(_s'SystemCMCheckBox')
000079:0x000565f0:	movetm	m_system_cm_check, ret
000080:0x00056600:	movefm	[0x11cf2b58], layoutRoot
000080:0x00056610:	ncalli	Widget.FindAnyWidget(_s'GlobalCMCheckBox')
000080:0x00056618:	movetm	m_global_cm_check, ret
000081:0x00056628:	movefm	[0x11cf2b58], layoutRoot
000081:0x00056638:	ncalli	Widget.FindAnyWidget(_s'DirectCMCheckBox')
000081:0x00056640:	movetm	m_direct_cm_check, ret
000082:0x00056650:	movefm	[0x11cf2b58], layoutRoot
000082:0x00056660:	ncalli	Widget.FindAnyWidget(_s'VehicleCMCheckBox')
000082:0x00056668:	movetm	m_vehicle_cm_check, ret
000083:0x00056678:	movefm	[0x11cf2b58], layoutRoot
000083:0x00056688:	ncalli	Widget.FindAnyWidget(_s'RadioCMCheckBox')
000083:0x00056690:	movetm	m_radio_cm_check, ret
000085:0x000566a0:	imove	i, 0x000000
000086:0x000566b0:	ncalli	DayZGame.GetInput()
000086:0x000566b8:	ncalli	Input.GetActionGroupsCount()
000086:0x000566c0:	move	c, ret
000089:0x000566d0:	imove	i, 0x000000
000089:0x000566e0:	jump	0x0566f0
000089:0x000566e8:	inc	i
000089:0x000566f0:	cmpi	i, c
000089:0x00056700:	bge	0x056738
000091:0x00056708:	ncalli	DayZGame.GetInput()
000091:0x00056710:	icall	Input.GetActionGroupName(i, name)
000092:0x00056718:	movefm	[0x11d09bb0], m_action_groups
000092:0x00056728:	ncalli	XComboBoxWidget.AddItem(name)
000092:0x00056730:	jump	0x0566e8
000094:0x00056738:	call	OptionsMenu.SelectActionGroup(_i0)
000095:0x00056748:	move	tab_id, m_selected_tab
000095:0x00056758:	call	OptionsMenu.SelectTab(tab_id)
000097:0x00056768:	call	OptionsMenu.InitOptions()
000098:0x00056770:	call	OptionsMenu.UpdateDevices()
000099:0x00056778:	call	OptionsMenu.UpdateChatMessages()
000100:0x00056780:	movem	ret, layoutRoot
000100:0x00056790:	rts
000100:0x00056798:	rts
OptionsMenu::InitOptions()
000111:0x00056820:	movefm	[0x7035cf8], m_optionsUI
000111:0x00056830:	ncalli	array<OptionsAccessUI>.Count()
000111:0x00056838:	move	c, ret
000112:0x00056848:	imove	i, 0x000000
000112:0x00056858:	jump	0x056868
000112:0x00056860:	inc	i
000112:0x00056868:	cmpi	i, c
000112:0x00056878:	bge	0x0568b8
000114:0x00056880:	movefm	[0x7035cf8], m_optionsUI
000114:0x00056890:	icall	array<OptionsAccessUI>.Get(i)
000114:0x00056898:	movetm	optionUI, ret
000115:0x000568a8:	delete	optionUI
000115:0x000568b0:	jump	0x056860
000117:0x000568b8:	movefm	[0x7035cf8], m_optionsUI
000117:0x000568c8:	ncalli	array<OptionsAccessUI>.Clear()
000119:0x000568d0:	cmpc	m_Options, NULL
000119:0x000568e0:	beq	0x0568f0
000121:0x000568e8:	delete	m_Options
000124:0x000568f0:	new	@c00, GameOptions
000124:0x00056910:	movec	m_Options, @c00
000126:0x00056920:	movec	[0x3cd16a28], m_Options
000126:0x00056930:	ncalli	GameOptions.GetOptionsCount()
000126:0x00056938:	move	c, ret
000127:0x00056948:	imove	i, 0x000000
000127:0x00056958:	jump	0x056968
000127:0x00056960:	inc	i
000127:0x00056968:	cmpi	i, c
000127:0x00056978:	bge	0x056e68
000129:0x00056980:	movetm	optionUI, NULL
000130:0x00056990:	movec	[0x3cd16a28], m_Options
000130:0x000569a0:	ncalli	GameOptions.GetOption(i)
000130:0x000569a8:	movec	optionAccess, ret
000132:0x000569b8:	ncalli	OptionsAccess.GetControlType()
000132:0x000569c0:	imove	@m00, 0x000000
000132:0x000569d0:	cmpi	@m00, ret
000132:0x000569e0:	bne	0x056a28
000135:0x000569e8:	new	@c00, SliderOptionsAccessUI
000135:0x00056a08:	movetm	optionUI, @c00
000136:0x00056a18:	jump	0x056af0
000136:0x00056a20:	jump	0x056a50
000136:0x00056a28:	imove	@m00, 0x000001
000136:0x00056a38:	cmpi	@m00, ret
000136:0x00056a48:	bne	0x056a90
000138:0x00056a50:	new	@c00, ButtonOptionsAccessUI
000138:0x00056a70:	movetm	optionUI, @c00
000139:0x00056a80:	jump	0x056af0
000139:0x00056a88:	jump	0x056ab8
000139:0x00056a90:	imove	@m00, 0x000002
000139:0x00056aa0:	cmpi	@m00, ret
000139:0x00056ab0:	bne	0x056af0
000141:0x00056ab8:	new	@c00, ComboBoxOptionsAccessUI
000141:0x00056ad8:	movetm	optionUI, @c00
000142:0x00056ae8:	jump	0x056af0
000145:0x00056af0:	ncalli	OptionsAccess.GetAccessType()
000145:0x00056af8:	imove	@m00, 0x000031
000145:0x00056b08:	cmpi	@m00, ret
000145:0x00056b18:	bne	0x056b40
000148:0x00056b20:	movem	m_language_option, optionUI
000149:0x00056b30:	jump	0x056dc0
000149:0x00056b38:	jump	0x056b68
000149:0x00056b40:	imove	@m00, 0x000015
000149:0x00056b50:	cmpi	@m00, ret
000149:0x00056b60:	bne	0x056b88
000151:0x00056b68:	movem	m_rend_res_option, optionUI
000152:0x00056b78:	jump	0x056dc0
000152:0x00056b80:	jump	0x056bb0
000152:0x00056b88:	imove	@m00, 0x00000c
000152:0x00056b98:	cmpi	@m00, ret
000152:0x00056ba8:	bne	0x056bd0
000154:0x00056bb0:	movem	m_overall_quality_option, optionUI
000155:0x00056bc0:	jump	0x056dc0
000155:0x00056bc8:	jump	0x056bf8
000155:0x00056bd0:	imove	@m00, 0x000039
000155:0x00056be0:	cmpi	@m00, ret
000155:0x00056bf0:	bne	0x056c18
000157:0x00056bf8:	movec	m_default_video_access, optionAccess
000158:0x00056c08:	jump	0x056dc0
000158:0x00056c10:	jump	0x056c40
000158:0x00056c18:	imove	@m00, 0x000005
000158:0x00056c28:	cmpi	@m00, ret
000158:0x00056c38:	bne	0x056c60
000160:0x00056c40:	movem	m_anitialiasing_option, optionUI
000161:0x00056c50:	jump	0x056dc0
000161:0x00056c58:	jump	0x056c88
000161:0x00056c60:	imove	@m00, 0x00000b
000161:0x00056c70:	cmpi	@m00, ret
000161:0x00056c80:	bne	0x056ca8
000163:0x00056c88:	movem	m_postprocess_quality_option, optionUI
000164:0x00056c98:	jump	0x056dc0
000164:0x00056ca0:	jump	0x056cd0
000164:0x00056ca8:	imove	@m00, 0x00000d
000164:0x00056cb8:	cmpi	@m00, ret
000164:0x00056cc8:	bne	0x056cf0
000166:0x00056cd0:	movem	m_atoc_option, optionUI
000167:0x00056ce0:	jump	0x056dc0
000167:0x00056ce8:	jump	0x056d18
000167:0x00056cf0:	imove	@m00, 0x00000e
000167:0x00056d00:	cmpi	@m00, ret
000167:0x00056d10:	bne	0x056d38
000169:0x00056d18:	movem	m_ao_option, optionUI
000170:0x00056d28:	jump	0x056dc0
000170:0x00056d30:	jump	0x056d60
000170:0x00056d38:	imove	@m00, 0x00000f
000170:0x00056d48:	cmpi	@m00, ret
000170:0x00056d58:	bne	0x056d80
000172:0x00056d60:	movem	m_bloom_option, optionUI
000173:0x00056d70:	jump	0x056dc0
000173:0x00056d78:	jump	0x056da8
000173:0x00056d80:	imove	@m00, 0x000010
000173:0x00056d90:	cmpi	@m00, ret
000173:0x00056da0:	bne	0x056dc0
000175:0x00056da8:	movem	m_rot_blur_option, optionUI
000176:0x00056db8:	jump	0x056dc0
000179:0x00056dc0:	cmpcm	optionUI, NULL
000179:0x00056dd0:	beq	0x056e60
000181:0x00056dd8:	ncalli	OptionsAccess.GetAccessType()
000181:0x00056de0:	addi	@m01, WIDGET_USER_ID_OFFSET, ret
000181:0x00056df0:	move	@m00, @m01
000181:0x00056e00:	movefm	[0x11cf2b58], layoutRoot
000181:0x00056e10:	ncalli	Widget.FindAnyWidgetById(@m00)
000181:0x00056e18:	movetm	ctrl, ret
000181:0x00056e28:	call	OptionsAccessUI.Attach(optionAccess, ctrl)
000182:0x00056e38:	movefm	@c00, optionUI
000182:0x00056e48:	movefm	[0x7035cf8], m_optionsUI
000182:0x00056e58:	icall	array<OptionsAccessUI>.Insert(@c00)
000182:0x00056e60:	jump	0x056960
000186:0x00056e68:	call	OptionsMenu.CheckOptionsDependency()
000186:0x00056e70:	release	optionUI
000186:0x00056e78:	rts
OptionsMenu::OnClick()
000191:0x00057010:	call	UIScriptedMenu.OnClick(w, x, y, button)
000197:0x00057020:	ncalli	Widget.GetUserID()
000197:0x00057028:	imove	@m00, 0x000001
000197:0x00057038:	cmpi	@m00, ret
000197:0x00057048:	bne	0x057118
000200:0x00057050:	movec	[0x3cd16a28], m_Options
000200:0x00057060:	ncalli	GameOptions.NeedRestart()
000200:0x00057068:	cmpi	ret, _i0
000200:0x00057078:	beq	0x0570b8
000202:0x00057080:	ncalli	DayZGame.GetUIManager()
000202:0x00057088:	movec	[0x3cd3f758], this
000202:0x00057098:	ncalli	UIManager.ShowDialog(_s'#main_menu_configure', _s'#menu_restart_needed', _i0, DBT_YESNO, DBB_YES, DMT_QUESTION, [0x3cd3f758])
000202:0x000570b0:	jump	0x0570f0
000206:0x000570b8:	ncall	GetGame()
000206:0x000570c0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000206:0x000570d0:	movec	obj, this
000206:0x000570e0:	call	CallQueue.Call(obj, _s'ApplyFn', _c0)
000208:0x000570f0:	imove	ret, 0x000001
000208:0x00057100:	release	item
000208:0x00057108:	rts
000208:0x00057110:	jump	0x057140
000208:0x00057118:	imove	@m00, 0x000002
000208:0x00057128:	cmpi	@m00, ret
000208:0x00057138:	bne	0x057168
000211:0x00057140:	ncalli	OptionsMenu.Close()
000212:0x00057148:	imove	ret, 0x000001
000212:0x00057158:	release	item
000212:0x00057160:	rts
000215:0x00057168:	cmpm	w, m_device_button
000215:0x00057178:	bne	0x057238
000217:0x00057180:	movefm	[0x11d0a1c0], m_devices
000217:0x00057190:	ncalli	TextListboxWidget.GetSelectedRow()
000217:0x00057198:	move	selected, ret
000218:0x000571a8:	cmpi	selected, _i-1
000218:0x000571b8:	ble	0x057210
000220:0x000571c0:	ncalli	DayZGame.GetInput()
000220:0x000571c8:	ncalli	Input.IsDeviceEnabled(selected)
000220:0x000571d0:	cmpi	ret, _i0
000220:0x000571e0:	beq	0x057200
000222:0x000571e8:	ncalli	DayZGame.GetInput()
000222:0x000571f0:	ncalli	Input.SetDeviceEnabled(selected, false)
000222:0x000571f8:	jump	0x057210
000226:0x00057200:	ncalli	DayZGame.GetInput()
000226:0x00057208:	ncalli	Input.SetDeviceEnabled(selected, true)
000230:0x00057210:	call	OptionsMenu.UpdateDevices()
000231:0x00057218:	imove	ret, 0x000001
000231:0x00057228:	release	item
000231:0x00057230:	rts
000234:0x00057238:	cmpm	w, m_device_custom_scheme
000234:0x00057248:	bne	0x0572c8
000236:0x00057250:	ncalli	DayZGame.GetInput()
000236:0x00057258:	ncalli	Input.IsCustomSchemeEnabled()
000236:0x00057260:	cmpi	ret, _i0
000236:0x00057270:	beq	0x057290
000238:0x00057278:	ncalli	DayZGame.GetInput()
000238:0x00057280:	ncalli	Input.SetCustomSchemeEnabled(false)
000238:0x00057288:	jump	0x0572a0
000242:0x00057290:	ncalli	DayZGame.GetInput()
000242:0x00057298:	ncalli	Input.SetCustomSchemeEnabled(true)
000245:0x000572a0:	call	OptionsMenu.UpdateDevices()
000246:0x000572a8:	imove	ret, 0x000001
000246:0x000572b8:	release	item
000246:0x000572c0:	rts
000249:0x000572c8:	cmpm	w, m_action_groups
000249:0x000572d8:	bne	0x057328
000251:0x000572e0:	movefm	[0x11d09bb0], m_action_groups
000251:0x000572f0:	ncalli	XComboBoxWidget.GetCurrentItem()
000251:0x000572f8:	call	OptionsMenu.SelectActionGroup(ret)
000252:0x00057308:	imove	ret, 0x000001
000252:0x00057318:	release	item
000252:0x00057320:	rts
000255:0x00057328:	cmpm	w, m_test_button
000255:0x00057338:	bne	0x057398
000257:0x00057340:	ncall	GetGame()
000257:0x00057348:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000257:0x00057358:	movec	obj, this
000257:0x00057368:	call	CallQueue.Call(obj, _s'TestFn', _c0)
000258:0x00057378:	imove	ret, 0x000001
000258:0x00057388:	release	item
000258:0x00057390:	rts
000261:0x00057398:	cmpm	w, m_quality_set_button
000261:0x000573a8:	bne	0x057408
000263:0x000573b0:	ncall	GetGame()
000263:0x000573b8:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000263:0x000573c8:	movec	obj, this
000263:0x000573d8:	call	CallQueue.Call(obj, _s'OverallQualityChanged', _c0)
000264:0x000573e8:	imove	ret, 0x000001
000264:0x000573f8:	release	item
000264:0x00057400:	rts
000267:0x00057408:	cmpm	w, m_default_video_button
000267:0x00057418:	bne	0x057478
000269:0x00057420:	ncall	GetGame()
000269:0x00057428:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000269:0x00057438:	movec	obj, this
000269:0x00057448:	call	CallQueue.Call(obj, _s'DefaultVideoSettings', _c0)
000270:0x00057458:	imove	ret, 0x000001
000270:0x00057468:	release	item
000270:0x00057470:	rts
000273:0x00057478:	movefm	[0x45f4de20], m_anitialiasing_option
000273:0x00057488:	call	ComboBoxOptionsAccessUI.GetWidget()
000273:0x00057490:	cmpm	w, ret
000273:0x000574a0:	bne	0x0574b0
000275:0x000574a8:	call	OptionsMenu.CheckOptionsDependency()
000278:0x000574b0:	movefm	[0x45f4de20], m_postprocess_quality_option
000278:0x000574c0:	call	ComboBoxOptionsAccessUI.GetWidget()
000278:0x000574c8:	cmpm	w, ret
000278:0x000574d8:	bne	0x0574e8
000280:0x000574e0:	call	OptionsMenu.CheckOptionsDependency()
000283:0x000574e8:	cmpm	w, m_presets_button
000283:0x000574f8:	bne	0x057508
000285:0x00057500:	ncalli	OptionsMenu.EnterScriptedMenu(MENU_CONTROLS_PRESET)
000288:0x00057508:	cmpm	w, m_assign_button
000288:0x00057518:	bne	0x0575f8
000290:0x00057520:	movefm	[0x11d0a1c0], m_actions
000290:0x00057530:	ncalli	TextListboxWidget.GetSelectedRow()
000290:0x00057538:	move	selected, ret
000291:0x00057548:	cmpi	selected, _i-1
000291:0x00057558:	ble	0x0575f8
000293:0x00057560:	movefm	[0x11d0bd68], m_action_indices
000293:0x00057570:	icall	array<int>.Get(selected)
000293:0x00057578:	move	index, ret
000295:0x00057588:	ncalli	OptionsMenu.EnterScriptedMenu(MENU_ASSIGNMENT)
000295:0x00057590:	movetm	assignmentsMenu, ret
000296:0x000575a0:	cmpcm	assignmentsMenu, NULL
000296:0x000575b0:	beq	0x0575c8
000298:0x000575b8:	call	AssignmentMenu.InitAssignment(index)
000301:0x000575c8:	imove	ret, 0x000001
000301:0x000575d8:	release	assignmentsMenu
000301:0x000575e0:	release	item
000301:0x000575e8:	rts
000301:0x000575f0:	release	assignmentsMenu
000305:0x000575f8:	imove	i, 0x000000
000305:0x00057608:	jump	0x057618
000305:0x00057610:	inc	i
000305:0x00057618:	cmpi	i, TABS_COUNT
000305:0x00057628:	bge	0x057690
000307:0x00057630:	cfv	@c01, m_tab_buttons[i]
000307:0x00057640:	cmpcm	w, @c01
000307:0x00057650:	bne	0x057688
000309:0x00057658:	call	OptionsMenu.SelectTab(i)
000310:0x00057668:	imove	ret, 0x000001
000310:0x00057678:	release	item
000310:0x00057680:	rts
000310:0x00057688:	jump	0x057610
000314:0x00057690:	imove	ret, 0x000000
000314:0x000576a0:	release	item
000314:0x000576a8:	rts
000314:0x000576b0:	release	item
000314:0x000576b8:	rts
OptionsMenu::OnController()
000319:0x000576c0:	call	UIScriptedMenu.OnController(w, control, value)
000321:0x000576d0:	cmpi	control, CID_TABLEFT
000321:0x000576e0:	bne	0x057708
000321:0x000576e8:	cmpi	value, _i0
000321:0x000576f8:	beq	0x057708
000323:0x00057700:	call	OptionsMenu.SelectPreviousTab()
000326:0x00057708:	cmpi	control, CID_TABRIGHT
000326:0x00057718:	bne	0x057740
000326:0x00057720:	cmpi	value, _i0
000326:0x00057730:	beq	0x057740
000328:0x00057738:	call	OptionsMenu.SelectNextTab()
000328:0x00057740:	rts
OptionsMenu::OnChange()
000334:0x00057748:	call	UIScriptedMenu.OnChange(w, x, y, finished)
000336:0x00057758:	cmpm	w, m_system_cm_check
000336:0x00057768:	bne	0x0577a0
000338:0x00057770:	movefm	[0x11d0a020], m_system_cm_check
000338:0x00057780:	ncalli	CheckBoxWidget.IsChecked()
000338:0x00057788:	move	m_system_cm, ret
000338:0x00057798:	jump	0x0578b8
000340:0x000577a0:	cmpm	w, m_global_cm_check
000340:0x000577b0:	bne	0x0577e8
000342:0x000577b8:	movefm	[0x11d0a020], m_global_cm_check
000342:0x000577c8:	ncalli	CheckBoxWidget.IsChecked()
000342:0x000577d0:	move	m_global_cm, ret
000342:0x000577e0:	jump	0x0578b8
000344:0x000577e8:	cmpm	w, m_direct_cm_check
000344:0x000577f8:	bne	0x057830
000346:0x00057800:	movefm	[0x11d0a020], m_direct_cm_check
000346:0x00057810:	ncalli	CheckBoxWidget.IsChecked()
000346:0x00057818:	move	m_direct_cm, ret
000346:0x00057828:	jump	0x0578b8
000348:0x00057830:	cmpm	w, m_vehicle_cm_check
000348:0x00057840:	bne	0x057878
000350:0x00057848:	movefm	[0x11d0a020], m_vehicle_cm_check
000350:0x00057858:	ncalli	CheckBoxWidget.IsChecked()
000350:0x00057860:	move	m_vehicle_cm, ret
000350:0x00057870:	jump	0x0578b8
000352:0x00057878:	cmpm	w, m_radio_cm_check
000352:0x00057888:	bne	0x0578b8
000354:0x00057890:	movefm	[0x11d0a020], m_radio_cm_check
000354:0x000578a0:	ncalli	CheckBoxWidget.IsChecked()
000354:0x000578a8:	move	m_radio_cm, ret
000356:0x000578b8:	imove	ret, 0x000000
000356:0x000578c8:	rts
000356:0x000578d0:	rts
OptionsMenu::OnDoubleClick()
000361:0x00057978:	call	UIScriptedMenu.OnDoubleClick(w, x, y, button)
000365:0x00057988:	cmpm	w, m_actions
000365:0x00057998:	bne	0x057a70
000367:0x000579a0:	movefm	[0x11d0a1c0], m_actions
000367:0x000579b0:	ncalli	TextListboxWidget.GetSelectedRow()
000367:0x000579b8:	move	selected, ret
000368:0x000579c8:	cmpi	selected, _i-1
000368:0x000579d8:	ble	0x057a70
000370:0x000579e0:	movefm	[0x11d0bd68], m_action_indices
000370:0x000579f0:	icall	array<int>.Get(selected)
000370:0x000579f8:	move	item, ret
000372:0x00057a08:	ncalli	OptionsMenu.EnterScriptedMenu(MENU_ASSIGNMENT)
000372:0x00057a10:	movetm	assignmentsMenu, ret
000373:0x00057a20:	cmpcm	assignmentsMenu, NULL
000373:0x00057a30:	beq	0x057a48
000375:0x00057a38:	call	AssignmentMenu.InitAssignment(item)
000378:0x00057a48:	imove	ret, 0x000001
000378:0x00057a58:	release	assignmentsMenu
000378:0x00057a60:	rts
000378:0x00057a68:	release	assignmentsMenu
000382:0x00057a70:	cmpm	w, m_devices
000382:0x00057a80:	bne	0x057b80
000384:0x00057a88:	movefm	[0x11d0a1c0], m_devices
000384:0x00057a98:	ncalli	TextListboxWidget.GetSelectedRow()
000384:0x00057aa0:	move	selected, ret
000385:0x00057ab0:	cmpi	selected, _i-1
000385:0x00057ac0:	ble	0x057b68
000387:0x00057ac8:	ncalli	DayZGame.GetInput()
000387:0x00057ad0:	ncalli	Input.IsCustomSchemeEnabled()
000387:0x00057ad8:	move	[0x11d0e960], ret
000387:0x00057ae8:	movefm	[0x11d09c98], m_device_button
000387:0x00057af8:	ncalli	ButtonWidget.Enable([0x11d0e960])
000389:0x00057b00:	ncalli	DayZGame.GetInput()
000389:0x00057b08:	ncalli	Input.IsDeviceEnabled(selected)
000389:0x00057b10:	cmpi	ret, _i0
000389:0x00057b20:	beq	0x057b48
000391:0x00057b28:	movefm	[0x11d09c98], m_device_button
000391:0x00057b38:	ncalli	ButtonWidget.SetText(_s'#menu_disable')
000391:0x00057b40:	jump	0x057b60
000395:0x00057b48:	movefm	[0x11d09c98], m_device_button
000395:0x00057b58:	ncalli	ButtonWidget.SetText(_s'#menu_enable')
000395:0x00057b60:	jump	0x057b80
000400:0x00057b68:	movefm	[0x11d09c98], m_device_button
000400:0x00057b78:	ncalli	ButtonWidget.Show(false)
000400:0x00057b80:	rts
OptionsMenu::OnModalResult()
000407:0x00057ba8:	call	UIScriptedMenu.OnModalResult(w, x, y, code, result)
000409:0x00057bc0:	ncall	GetGame()
000409:0x00057bc8:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000409:0x00057bd8:	movec	obj, this
000409:0x00057be8:	call	CallQueue.Call(obj, _s'ApplyFn', _c0)
000411:0x00057bf8:	cmpi	result, DBB_YES
000411:0x00057c08:	bne	0x057c48
000413:0x00057c10:	ncall	GetGame()
000413:0x00057c18:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000413:0x00057c28:	movec	obj, this
000413:0x00057c38:	call	CallQueue.Call(obj, _s'RestartFn', _c0)
000413:0x00057c48:	rts
OptionsMenu::OnShow()
000419:0x00057c50:	call	UIScriptedMenu.OnShow()
000420:0x00057c58:	movefm	[0x11d09bb0], m_action_groups
000420:0x00057c68:	ncalli	XComboBoxWidget.GetCurrentItem()
000420:0x00057c70:	call	OptionsMenu.SelectActionGroup(ret)
000420:0x00057c80:	rts
OptionsMenu::SelectPreviousTab()
000425:0x00057cd0:	move	currTab, m_selected_tab
000426:0x00057ce0:	subi	@m01, currTab, _i1
000426:0x00057cf0:	move	@m00, @m01
000426:0x00057d00:	modi	@m00, @m00, TABS_COUNT
000426:0x00057d10:	move	currTab, @m00
000427:0x00057d20:	cmpi	currTab, _i0
000427:0x00057d30:	bge	0x057d58
000429:0x00057d38:	imove	@m00, 0x000003
000429:0x00057d48:	move	currTab, @m00
000432:0x00057d58:	cmpi	currTab, m_selected_tab
000432:0x00057d68:	beq	0x057e30
000434:0x00057d70:	cfv	@c00, m_tab_buttons[currTab]
000434:0x00057d80:	cmpm	@c00, NULL
000434:0x00057d90:	beq	0x057db0
000436:0x00057d98:	call	OptionsMenu.SelectTab(currTab)
000437:0x00057da8:	rts
000440:0x00057db0:	subi	@m01, currTab, _i1
000440:0x00057dc0:	move	@m00, @m01
000440:0x00057dd0:	modi	@m00, @m00, TABS_COUNT
000440:0x00057de0:	move	currTab, @m00
000441:0x00057df0:	cmpi	currTab, _i0
000441:0x00057e00:	bge	0x057e28
000443:0x00057e08:	imove	@m00, 0x000003
000443:0x00057e18:	move	currTab, @m00
000443:0x00057e28:	jump	0x057d58
000443:0x00057e30:	rts
OptionsMenu::SelectNextTab()
000450:0x00057e58:	move	currTab, m_selected_tab
000451:0x00057e68:	addi	@m01, currTab, _i1
000451:0x00057e78:	move	@m00, @m01
000451:0x00057e88:	modi	@m00, @m00, TABS_COUNT
000451:0x00057e98:	move	currTab, @m00
000453:0x00057ea8:	cmpi	currTab, m_selected_tab
000453:0x00057eb8:	beq	0x057f48
000455:0x00057ec0:	cfv	@c00, m_tab_buttons[currTab]
000455:0x00057ed0:	cmpm	@c00, NULL
000455:0x00057ee0:	beq	0x057f00
000457:0x00057ee8:	call	OptionsMenu.SelectTab(currTab)
000458:0x00057ef8:	rts
000461:0x00057f00:	addi	@m01, currTab, _i1
000461:0x00057f10:	move	@m00, @m01
000461:0x00057f20:	modi	@m00, @m00, TABS_COUNT
000461:0x00057f30:	move	currTab, @m00
000461:0x00057f40:	jump	0x057ea8
000461:0x00057f48:	rts
OptionsMenu::SelectTab()
000467:0x00057fd8:	imove	i, 0x000000
000468:0x00057fe8:	imove	i, 0x000000
000468:0x00057ff8:	jump	0x058008
000468:0x00058000:	inc	i
000468:0x00058008:	cmpi	i, TABS_COUNT
000468:0x00058018:	bge	0x0580b0
000470:0x00058020:	cfv	@c01, m_tabs[i]
000470:0x00058030:	movetm	tab, @c01
000471:0x00058040:	cmpcm	tab, NULL
000471:0x00058050:	beq	0x0580a0
000472:0x00058058:	cmpi	i, tab_id
000472:0x00058068:	bne	0x058088
000472:0x00058070:	imove	@m00, 0x000001
000472:0x00058080:	jump	0x058098
000472:0x00058088:	imove	@m00, 0x000000
000472:0x00058098:	ncalli	Widget.Show(@m00)
000472:0x000580a0:	release	tab
000472:0x000580a8:	jump	0x058000
000475:0x000580b0:	imove	i, 0x000000
000475:0x000580c0:	jump	0x0580d0
000475:0x000580c8:	inc	i
000475:0x000580d0:	cmpi	i, TABS_COUNT
000475:0x000580e0:	bge	0x058178
000477:0x000580e8:	cfv	@c01, m_tab_buttons[i]
000477:0x000580f8:	movetm	button, @c01
000478:0x00058108:	cmpcm	button, NULL
000478:0x00058118:	beq	0x058168
000479:0x00058120:	cmpi	i, tab_id
000479:0x00058130:	bne	0x058150
000479:0x00058138:	imove	@m00, 0x000001
000479:0x00058148:	jump	0x058160
000479:0x00058150:	imove	@m00, 0x000000
000479:0x00058160:	ncalli	ButtonWidget.SetState(@m00)
000479:0x00058168:	release	button
000479:0x00058170:	jump	0x0580c8
000482:0x00058178:	move	m_selected_tab, tab_id
000482:0x00058188:	rts
OptionsMenu::SelectActionGroup()
000487:0x00058210:	movefm	[0x11d0a1c0], m_actions
000487:0x00058220:	ncalli	TextListboxWidget.ClearItems()
000488:0x00058228:	ncalli	DayZGame.GetInput()
000488:0x00058230:	movefm	[0x3cd43140], m_action_indices
000488:0x00058240:	ncalli	Input.GetActionGroupItems(group_index, [0x3cd43140])
000491:0x00058248:	imove	i, 0x000000
000491:0x00058258:	jump	0x058268
000491:0x00058260:	inc	i
000491:0x00058268:	movefm	[0x11d0bd68], m_action_indices
000491:0x00058278:	ncalli	array<int>.Count()
000491:0x00058280:	cmpi	i, ret
000491:0x00058290:	bge	0x058338
000493:0x00058298:	movefm	[0x11d0bd68], m_action_indices
000493:0x000582a8:	icall	array<int>.Get(i)
000493:0x000582b0:	move	action_index, ret
000494:0x000582c0:	ncalli	DayZGame.GetInput()
000494:0x000582c8:	icall	Input.GetActionDesc(action_index, desc)
000495:0x000582d0:	movefm	[0x11d0a1c0], m_actions
000495:0x000582e0:	ncalli	TextListboxWidget.AddItem(desc, NULL, _i0, _i-1)
000495:0x000582f0:	move	row, ret
000496:0x00058300:	call	OptionsMenu.GetActionKeysString(action_index)
000496:0x00058310:	movefm	[0x11d0a1c0], m_actions
000496:0x00058320:	ncalli	TextListboxWidget.SetItem(row, ret, NULL, _i1)
000496:0x00058330:	jump	0x058260
000496:0x00058338:	rts
OptionsMenu::GetActionKeysString()
000505:0x00058440:	moves	output, _s''
000506:0x00058450:	ncalli	DayZGame.GetInput()
000506:0x00058458:	movefm	[0x3cd43240], m_keys
000506:0x00058468:	ncalli	Input.GetActionKeys(action_index, [0x3cd43240])
000508:0x00058470:	imove	i, 0x000000
000508:0x00058480:	jump	0x058490
000508:0x00058488:	inc	i
000508:0x00058490:	movefm	[0x11d0bd68], m_keys
000508:0x000584a0:	ncalli	array<int>.Count()
000508:0x000584a8:	cmpi	i, ret
000508:0x000584b8:	bge	0x0585f8
000510:0x000584c0:	movefm	[0x11d0bd68], m_keys
000510:0x000584d0:	icall	array<int>.Get(i)
000510:0x000584d8:	move	key, ret
000511:0x000584e8:	ncalli	DayZGame.GetInput()
000511:0x000584f0:	icall	Input.GetActionKeyName(key, name)
000512:0x000584f8:	cmpi	i, _i0
000512:0x00058508:	ble	0x058530
000514:0x00058510:	moves	@s00, _s','
000514:0x00058520:	adds	output, output, @s00
000517:0x00058530:	moves	@s00, _s'''
000517:0x00058540:	adds	output, output, @s00
000518:0x00058550:	moves	@s00, name
000518:0x00058560:	adds	output, output, @s00
000519:0x00058570:	moves	@s00, _s'''
000519:0x00058580:	adds	output, output, @s00
000521:0x00058590:	ncalli	DayZGame.GetInput()
000521:0x00058598:	call	Input.CheckKeyCollision(action_index, key)
000521:0x000585a8:	move	conflictAction, ret
000522:0x000585b8:	cmpi	conflictAction, _i-1
000522:0x000585c8:	beq	0x0585f0
000524:0x000585d0:	moves	@s00, _s'!'
000524:0x000585e0:	adds	output, output, @s00
000524:0x000585f0:	jump	0x058488
000528:0x000585f8:	moves	ret, output
000528:0x00058608:	rts
000528:0x00058610:	rts
OptionsMenu::UpdateChatMessages()
000533:0x00058618:	call	GetProfileValueBool(SYSTEM_CHAT_MSG, true)
000533:0x00058628:	move	m_system_cm, ret
000534:0x00058638:	move	[0x11d18148], m_system_cm
000534:0x00058648:	movefm	[0x11d0a020], m_system_cm_check
000534:0x00058658:	ncalli	CheckBoxWidget.SetChecked([0x11d18148])
000536:0x00058660:	call	GetProfileValueBool(GLOBAL_CHAT_MSG, true)
000536:0x00058670:	move	m_global_cm, ret
000537:0x00058680:	move	[0x11d18148], m_global_cm
000537:0x00058690:	movefm	[0x11d0a020], m_global_cm_check
000537:0x000586a0:	ncalli	CheckBoxWidget.SetChecked([0x11d18148])
000539:0x000586a8:	call	GetProfileValueBool(DIRECT_CHAT_MSG, true)
000539:0x000586b8:	move	m_direct_cm, ret
000540:0x000586c8:	move	[0x11d18148], m_direct_cm
000540:0x000586d8:	movefm	[0x11d0a020], m_direct_cm_check
000540:0x000586e8:	ncalli	CheckBoxWidget.SetChecked([0x11d18148])
000542:0x000586f0:	call	GetProfileValueBool(VEHICLE_CHAT_MSG, true)
000542:0x00058700:	move	m_vehicle_cm, ret
000543:0x00058710:	move	[0x11d18148], m_vehicle_cm
000543:0x00058720:	movefm	[0x11d0a020], m_vehicle_cm_check
000543:0x00058730:	ncalli	CheckBoxWidget.SetChecked([0x11d18148])
000545:0x00058738:	call	GetProfileValueBool(RADIO_CHAT_MSG, true)
000545:0x00058748:	move	m_radio_cm, ret
000546:0x00058758:	move	[0x11d18148], m_radio_cm
000546:0x00058768:	movefm	[0x11d0a020], m_radio_cm_check
000546:0x00058778:	ncalli	CheckBoxWidget.SetChecked([0x11d18148])
000546:0x00058780:	rts
OptionsMenu::UpdateDevices()
000554:0x000588b8:	movefm	[0x11d0a1c0], m_devices
000554:0x000588c8:	ncalli	TextListboxWidget.GetSelectedRow()
000554:0x000588d0:	move	lastSelection, ret
000557:0x000588e0:	movefm	[0x11d0a1c0], m_devices
000557:0x000588f0:	ncalli	TextListboxWidget.ClearItems()
000559:0x000588f8:	ncalli	DayZGame.GetInput()
000559:0x00058900:	ncalli	Input.GetDevicesCount()
000559:0x00058908:	move	c, ret
000560:0x00058918:	imove	i, 0x000000
000560:0x00058928:	jump	0x058938
000560:0x00058930:	inc	i
000560:0x00058938:	cmpi	i, c
000560:0x00058948:	bge	0x058a08
000562:0x00058950:	ncalli	DayZGame.GetInput()
000562:0x00058958:	icall	Input.GetDeviceName(i, name)
000563:0x00058960:	movefm	[0x11d0a1c0], m_devices
000563:0x00058970:	ncalli	TextListboxWidget.AddItem(name, NULL, _i0, _i-1)
000564:0x00058980:	ncalli	DayZGame.GetInput()
000564:0x00058988:	ncalli	Input.IsDeviceEnabled(i)
000564:0x00058990:	move	enabled, ret
000566:0x000589a0:	cmpi	enabled, _i0
000566:0x000589b0:	beq	0x0589e0
000568:0x000589b8:	movefm	[0x11d0a1c0], m_devices
000568:0x000589c8:	ncalli	TextListboxWidget.SetItem(i, _s'#menu_enabled', NULL, _i1)
000568:0x000589d8:	jump	0x058a00
000572:0x000589e0:	movefm	[0x11d0a1c0], m_devices
000572:0x000589f0:	ncalli	TextListboxWidget.SetItem(i, _s'#menu_disabled', NULL, _i1)
000572:0x00058a00:	jump	0x058930
000576:0x00058a08:	cmpi	c, _i0
000576:0x00058a18:	beq	0x058b20
000578:0x00058a20:	cmpi	lastSelection, _i0
000578:0x00058a30:	blt	0x058a70
000578:0x00058a38:	cmpi	lastSelection, c
000578:0x00058a48:	bge	0x058a70
000580:0x00058a50:	movefm	[0x11d0a1c0], m_devices
000580:0x00058a60:	ncalli	TextListboxWidget.SelectRow(lastSelection)
000580:0x00058a68:	jump	0x058a88
000584:0x00058a70:	movefm	[0x11d0a1c0], m_devices
000584:0x00058a80:	ncalli	TextListboxWidget.SelectRow(_i0)
000587:0x00058a88:	movefm	[0x11d09c98], m_device_button
000587:0x00058a98:	ncalli	ButtonWidget.Enable(true)
000589:0x00058aa0:	ncalli	DayZGame.GetInput()
000589:0x00058aa8:	movefm	[0x11d0a1c0], m_devices
000589:0x00058ab8:	ncalli	TextListboxWidget.GetSelectedRow()
000589:0x00058ac0:	ncalli	Input.IsDeviceEnabled(ret)
000589:0x00058ac8:	cmpi	ret, _i0
000589:0x00058ad8:	beq	0x058b00
000591:0x00058ae0:	movefm	[0x11d09c98], m_device_button
000591:0x00058af0:	ncalli	ButtonWidget.SetText(_s'#menu_disable')
000591:0x00058af8:	jump	0x058b18
000595:0x00058b00:	movefm	[0x11d09c98], m_device_button
000595:0x00058b10:	ncalli	ButtonWidget.SetText(_s'#menu_enable')
000595:0x00058b18:	jump	0x058b38
000600:0x00058b20:	movefm	[0x11d09c98], m_device_button
000600:0x00058b30:	ncalli	ButtonWidget.Enable(false)
000603:0x00058b38:	ncalli	DayZGame.GetInput()
000603:0x00058b40:	ncalli	Input.IsCustomSchemeEnabled()
000603:0x00058b48:	move	IsCustomSchemeEnabled, ret
000605:0x00058b58:	ncalli	DayZGame.GetInput()
000605:0x00058b60:	ncalli	Input.IsCustomSchemeEnabled()
000605:0x00058b68:	cmpi	ret, _i0
000605:0x00058b78:	beq	0x058bb8
000607:0x00058b80:	movefm	[0x11d0a020], m_device_custom_scheme
000607:0x00058b90:	ncalli	CheckBoxWidget.SetChecked(false)
000608:0x00058b98:	movefm	[0x11d09c98], m_device_button
000608:0x00058ba8:	ncalli	ButtonWidget.Show(true)
000608:0x00058bb0:	jump	0x058be8
000612:0x00058bb8:	movefm	[0x11d0a020], m_device_custom_scheme
000612:0x00058bc8:	ncalli	CheckBoxWidget.SetChecked(true)
000613:0x00058bd0:	movefm	[0x11d09c98], m_device_button
000613:0x00058be0:	ncalli	ButtonWidget.Show(false)
000613:0x00058be8:	rts
OptionsMenu::TestFn()
000621:0x00058bf0:	movec	[0x3cd16a28], m_Options
000621:0x00058c00:	ncalli	GameOptions.Test()
000624:0x00058c08:	movefm	[0x45f4bcc8], m_rend_res_option
000624:0x00058c18:	call	OptionsAccessUI.Init()
000625:0x00058c20:	movefm	[0x45f4bcc8], m_rend_res_option
000625:0x00058c30:	call	OptionsAccessUI.Update()
000625:0x00058c38:	rts
OptionsMenu::ApplyFn()
000630:0x00058c80:	move	value, m_system_cm
000630:0x00058c90:	call	SetProfileValueBool(SYSTEM_CHAT_MSG, value)
000631:0x00058ca0:	move	value, m_global_cm
000631:0x00058cb0:	call	SetProfileValueBool(GLOBAL_CHAT_MSG, value)
000632:0x00058cc0:	move	value, m_direct_cm
000632:0x00058cd0:	call	SetProfileValueBool(DIRECT_CHAT_MSG, value)
000633:0x00058ce0:	move	value, m_vehicle_cm
000633:0x00058cf0:	call	SetProfileValueBool(VEHICLE_CHAT_MSG, value)
000634:0x00058d00:	move	value, m_radio_cm
000634:0x00058d10:	call	SetProfileValueBool(RADIO_CHAT_MSG, value)
000637:0x00058d20:	ncall	GetGame()
000637:0x00058d28:	icall	CGame.GetProfileString(_s'usenewui', value)
000639:0x00058d30:	ncall	GetGame()
000639:0x00058d38:	ncalli	CGame.SaveProfile()
000640:0x00058d40:	movec	[0x3cd16a28], m_Options
000640:0x00058d50:	ncalli	GameOptions.Apply()
000641:0x00058d58:	ncalli	OptionsMenu.Close()
000641:0x00058d60:	rts
OptionsMenu::RestartFn()
000646:0x00058d68:	ncalli	DayZGame.RequestRestart(IDC_MAIN_QUIT)
000646:0x00058d70:	rts
OptionsMenu::OverallQualityChanged()
000651:0x00058d78:	movefm	[0x45f4bcc8], m_overall_quality_option
000651:0x00058d88:	call	OptionsAccessUI.GetOptionAccess()
000651:0x00058d90:	ncalli	OptionsAccess.Test()
000652:0x00058d98:	movefm	[0x45f4bcc8], m_overall_quality_option
000652:0x00058da8:	call	OptionsAccessUI.GetOptionAccess()
000652:0x00058db0:	ncalli	OptionsAccess.Apply()
000653:0x00058db8:	call	OptionsMenu.InitOptions()
000653:0x00058dc0:	rts
OptionsMenu::DefaultVideoSettings()
000658:0x00058dc8:	cmpc	m_default_video_access, NULL
000658:0x00058dd8:	beq	0x058e00
000660:0x00058de0:	movec	[0x3cd17a40], m_default_video_access
000660:0x00058df0:	ncalli	SwitchOptionsAccess.Switch()
000661:0x00058df8:	call	OptionsMenu.InitOptions()
000661:0x00058e00:	rts
OptionsMenu::CheckOptionsDependency()
000670:0x00058e88:	movefm	[0x45f4de20], m_anitialiasing_option
000670:0x00058e98:	call	ComboBoxOptionsAccessUI.GetOptionAccess()
000670:0x00058ea0:	movec	listAccess, ret
000671:0x00058eb0:	ncalli	ListOptionsAccess.GetIndex()
000671:0x00058eb8:	cmpi	ret, _i0
000671:0x00058ec8:	bne	0x058ef8
000673:0x00058ed0:	movefm	[0x45f4bcc8], m_atoc_option
000673:0x00058ee0:	call	OptionsAccessUI.GetWidget()
000673:0x00058ee8:	ncalli	Widget.SetFlags(_i131072, _i1)
000673:0x00058ef0:	jump	0x058f18
000677:0x00058ef8:	movefm	[0x45f4bcc8], m_atoc_option
000677:0x00058f08:	call	OptionsAccessUI.GetWidget()
000677:0x00058f10:	ncalli	Widget.ClearFlags(_i131072, _i1)
000682:0x00058f18:	movefm	[0x45f4de20], m_postprocess_quality_option
000682:0x00058f28:	call	ComboBoxOptionsAccessUI.GetOptionAccess()
000682:0x00058f30:	movec	listAccess, ret
000683:0x00058f40:	ncalli	ListOptionsAccess.GetIndex()
000683:0x00058f48:	cmpi	ret, _i0
000683:0x00058f58:	bne	0x058fa8
000685:0x00058f60:	movefm	[0x45f4bcc8], m_bloom_option
000685:0x00058f70:	call	OptionsAccessUI.GetWidget()
000685:0x00058f78:	ncalli	Widget.SetFlags(_i131072, _i1)
000686:0x00058f80:	movefm	[0x45f4bcc8], m_rot_blur_option
000686:0x00058f90:	call	OptionsAccessUI.GetWidget()
000686:0x00058f98:	ncalli	Widget.SetFlags(_i131072, _i1)
000686:0x00058fa0:	jump	0x058fe8
000690:0x00058fa8:	movefm	[0x45f4bcc8], m_bloom_option
000690:0x00058fb8:	call	OptionsAccessUI.GetWidget()
000690:0x00058fc0:	ncalli	Widget.ClearFlags(_i131072, _i1)
000691:0x00058fc8:	movefm	[0x45f4bcc8], m_rot_blur_option
000691:0x00058fd8:	call	OptionsAccessUI.GetWidget()
000691:0x00058fe0:	ncalli	Widget.ClearFlags(_i131072, _i1)
000694:0x00058fe8:	ncalli	ListOptionsAccess.GetIndex()
000694:0x00058ff0:	cmpi	ret, _i2
000694:0x00059000:	bge	0x059030
000696:0x00059008:	movefm	[0x45f4bcc8], m_ao_option
000696:0x00059018:	call	OptionsAccessUI.GetWidget()
000696:0x00059020:	ncalli	Widget.SetFlags(_i131072, _i1)
000696:0x00059028:	jump	0x059050
000700:0x00059030:	movefm	[0x45f4bcc8], m_ao_option
000700:0x00059040:	call	OptionsAccessUI.GetWidget()
000700:0x00059048:	ncalli	Widget.ClearFlags(_i131072, _i1)
000700:0x00059050:	rts
PresetsMenu::Init()
//scripts/5_Mission/GUI/PresetsMenu.c
000013:0x000590f8:	ncall	GetGame()
000013:0x00059100:	ncalli	CGame.GetWorkspace()
000013:0x00059108:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_options_controls_preset.layout', _c0)
000013:0x00059110:	movetm	layoutRoot, ret
000015:0x00059120:	movefm	[0x11cf2b58], layoutRoot
000015:0x00059130:	ncalli	Widget.FindAnyWidget(_s'PresetListboxWidget')
000015:0x00059138:	movetm	m_schemes_list, ret
000017:0x00059148:	ncall	GetGame()
000017:0x00059150:	ncalli	CGame.GetInput()
000017:0x00059158:	ncalli	Input.GetProfilesCount()
000017:0x00059160:	move	c, ret
000018:0x00059170:	imove	i, 0x000000
000018:0x00059180:	jump	0x059190
000018:0x00059188:	inc	i
000018:0x00059190:	cmpi	i, c
000018:0x000591a0:	bge	0x0591e8
000021:0x000591a8:	ncall	GetGame()
000021:0x000591b0:	ncalli	CGame.GetInput()
000021:0x000591b8:	icall	Input.GetProfileName(i, tmp)
000022:0x000591c0:	movefm	[0x11d0a1c0], m_schemes_list
000022:0x000591d0:	ncalli	TextListboxWidget.AddItem(tmp, NULL, _i0, _i-1)
000022:0x000591e0:	jump	0x059188
000025:0x000591e8:	ncall	GetGame()
000025:0x000591f0:	ncalli	CGame.GetInput()
000025:0x000591f8:	ncalli	Input.GetCurrentProfile()
000025:0x00059200:	move	i, ret
000026:0x00059210:	cmpi	i, _i0
000026:0x00059220:	blt	0x059258
000026:0x00059228:	cmpi	i, c
000026:0x00059238:	bge	0x059258
000028:0x00059240:	movefm	[0x11d0a1c0], m_schemes_list
000028:0x00059250:	ncalli	TextListboxWidget.SelectRow(i)
000030:0x00059258:	movem	ret, layoutRoot
000030:0x00059268:	rts
000030:0x00059270:	rts
PresetsMenu::OnClick()
000035:0x000592d8:	call	UIScriptedMenu.OnClick(w, x, y, button)
000037:0x000592e8:	ncalli	Widget.GetUserID()
000037:0x000592f0:	imove	@m00, 0x000002
000037:0x00059300:	cmpi	@m00, ret
000037:0x00059310:	bne	0x059340
000040:0x00059318:	ncalli	PresetsMenu.Close()
000041:0x00059320:	imove	ret, 0x000001
000041:0x00059330:	rts
000041:0x00059338:	jump	0x059368
000041:0x00059340:	imove	@m00, 0x000001
000041:0x00059350:	cmpi	@m00, ret
000041:0x00059360:	bne	0x0594a8
000044:0x00059368:	movefm	[0x11d0a1c0], m_schemes_list
000044:0x00059378:	ncalli	TextListboxWidget.GetSelectedRow()
000044:0x00059380:	move	index, ret
000045:0x00059390:	cmpi	index, _i-1
000045:0x000593a0:	beq	0x059490
000047:0x000593a8:	ncall	GetGame()
000047:0x000593b0:	ncalli	CGame.GetInput()
000047:0x000593b8:	ncalli	Input.SetProfile(index)
000049:0x000593c0:	new	@c00, array<int>
000049:0x000593e0:	movetm	keys, @c00
000051:0x000593f0:	imove	i, 0x000000
000051:0x00059400:	jump	0x059410
000051:0x00059408:	inc	i
000051:0x00059410:	cmpi	i, UAN
000051:0x00059420:	bge	0x059480
000053:0x00059428:	ncall	GetGame()
000053:0x00059430:	ncalli	CGame.GetInput()
000053:0x00059438:	movefm	[0x3cd43bc0], keys
000053:0x00059448:	ncalli	Input.GetCurrentProfileActionKeys(i, [0x3cd43bc0])
000054:0x00059450:	ncall	GetGame()
000054:0x00059458:	ncalli	CGame.GetInput()
000054:0x00059460:	movefm	[0x3cd43328], keys
000054:0x00059470:	ncalli	Input.SetActionKeys(i, [0x3cd43328])
000054:0x00059478:	jump	0x059408
000057:0x00059480:	ncalli	PresetsMenu.Close()
000057:0x00059488:	delete	keys
000059:0x00059490:	imove	ret, 0x000001
000059:0x000594a0:	rts
000062:0x000594a8:	imove	ret, 0x000000
000062:0x000594b8:	rts
000062:0x000594c0:	rts
UIPopupScriptConfigs::UIPopupScriptConfigs()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptConfigs.c
000016:0x00059568:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pc_ok')
000016:0x00059570:	movetm	m_BtnOk, ret
000017:0x00059580:	ncalli	Widget.FindAnyWidget(_s'ConfigHierarchy')
000017:0x00059588:	movetm	m_ConfigHierarchyTextListbox, ret
000018:0x00059598:	ncalli	Widget.FindAnyWidget(_s'ConfigVariables')
000018:0x000595a0:	movetm	m_ConfigVariablesTextListbox, ret
000019:0x000595b0:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pc_copy')
000019:0x000595b8:	movetm	m_BtnCopyToClipboard, ret
000020:0x000595c8:	ncalli	Widget.FindAnyWidget(_s'ObjectConfigFilter')
000020:0x000595d0:	movetm	m_ObjectConfigFilter, ret
000020:0x000595e0:	rts
UIPopupScriptConfigs::ChangeConfigFilter()
000025:0x000595e8:	movefm	[0x11d09a20], m_ObjectConfigFilter
000025:0x000595f8:	icall	EditBoxWidget.GetText()
000025:0x00059600:	cmps	ret, _s''
000025:0x00059610:	bne	0x059628
000027:0x00059618:	call	UIPopupScriptConfigs.ClearHierarchy()
000027:0x00059620:	jump	0x059650
000031:0x00059628:	movefm	[0x11d09a20], m_ObjectConfigFilter
000031:0x00059638:	icall	EditBoxWidget.GetText()
000031:0x00059640:	call	UIPopupScriptConfigs.FindInHierarchy(ret)
000031:0x00059650:	rts
UIPopupScriptConfigs::OnOpen()
000037:0x00059678:	call	GetPlugin(_T(PluginConfigViewer))
000037:0x00059688:	movec	m_ModuleConfigViewer, ret
000038:0x00059698:	call	UIPopupScriptConfigs.ClearHierarchy()
000038:0x000596a0:	rts
UIPopupScriptConfigs::AddItemToClipboard()
000043:0x00059720:	ncalli	TextListboxWidget.GetSelectedRow()
000043:0x00059728:	move	selected_row_index, ret
000044:0x00059738:	cmpi	selected_row_index, _i-1
000044:0x00059748:	beq	0x059778
000046:0x00059750:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
000046:0x00059758:	moves	item_name, ret
000047:0x00059768:	ncall	GetGame()
000047:0x00059770:	ncalli	CGame.CopyToClipboard(item_name)
000047:0x00059778:	rts
UIPopupScriptConfigs::RenderVariables()
000054:0x00059860:	cmpi	row, _i-1
000054:0x00059870:	ble	0x059998
000054:0x00059878:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000054:0x00059888:	ncalli	TextListboxWidget.GetNumItems()
000054:0x00059890:	cmpi	row, ret
000054:0x000598a0:	bge	0x059998
000056:0x000598a8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000056:0x000598b8:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
000057:0x000598c8:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
000057:0x000598d8:	ncalli	TextListboxWidget.ClearItems()
000059:0x000598e0:	moves	path, param4
000060:0x000598f0:	movec	[0x45f54110], m_ModuleConfigViewer
000060:0x00059900:	call	PluginConfigViewer.GetConfigVariables(path)
000060:0x00059910:	movem	variables, ret
000061:0x00059920:	imove	i, 0x000000
000061:0x00059930:	jump	0x059940
000061:0x00059938:	inc	i
000061:0x00059940:	ncalli	array<string>.Count()
000061:0x00059948:	cmpi	i, ret
000061:0x00059958:	bge	0x059990
000063:0x00059960:	icall	array<string>.Get(i)
000063:0x00059968:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
000063:0x00059978:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000063:0x00059988:	jump	0x059938
000063:0x00059990:	delete	variables
000063:0x00059998:	rts
UIPopupScriptConfigs::ExpandHierarchy()
000070:0x00059b88:	cmpi	row, _i-1
000070:0x00059b98:	bgt	0x059bd8
000070:0x00059ba0:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000070:0x00059bb0:	ncalli	TextListboxWidget.GetNumItems()
000070:0x00059bb8:	cmpi	row, ret
000070:0x00059bc8:	blt	0x059bd8
000072:0x00059bd0:	rts
000079:0x00059bd8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000079:0x00059be8:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
000081:0x00059bf8:	moves	config_path, param4
000082:0x00059c08:	move	deep, param5
000084:0x00059c18:	moves	offset, _s''
000085:0x00059c28:	imove	i, 0x000000
000085:0x00059c38:	jump	0x059c48
000085:0x00059c40:	inc	i
000085:0x00059c48:	cmpi	i, deep
000085:0x00059c58:	bge	0x059c88
000087:0x00059c60:	adds	@s00, offset, _s'  '
000087:0x00059c70:	moves	offset, @s00
000087:0x00059c80:	jump	0x059c40
000091:0x00059c88:	movec	[0x45f54110], m_ModuleConfigViewer
000091:0x00059c98:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
000091:0x00059ca8:	movem	variables, ret
000092:0x00059cb8:	ncalli	array<string>.Count()
000092:0x00059cc0:	move	childrens_count, ret
000093:0x00059cd0:	adds	@s02, offset, _s'- '
000093:0x00059ce0:	moves	@s01, @s02
000093:0x00059cf0:	adds	@s01, @s01, param2
000093:0x00059d00:	moves	@s00, @s01
000093:0x00059d10:	moves	p2, param2
000093:0x00059d20:	new	@c00, Param5<bool,string,int,string,int>
000093:0x00059d50:	movec	[0x11d1a428], @c00
000093:0x00059d60:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000093:0x00059d70:	ncalli	TextListboxWidget.SetItem(row, @s00, [0x11d1a428], _i0)
000095:0x00059d80:	adds	@s00, offset, _s'  '
000095:0x00059d90:	moves	offset, @s00
000098:0x00059da0:	inc	deep
000099:0x00059da8:	imove	childrens_count, 0x000000
000100:0x00059db8:	ncalli	array<string>.Count()
000100:0x00059dc0:	subi	@m00, ret, _i1
000100:0x00059dd0:	move	i, @m00
000100:0x00059de0:	jump	0x059df0
000100:0x00059de8:	dec	i
000100:0x00059df0:	cmpi	i, _i0
000100:0x00059e00:	blt	0x059f40
000102:0x00059e08:	adds	@s02, config_path, _s' '
000102:0x00059e18:	moves	@s01, @s02
000102:0x00059e28:	icall	array<string>.Get(i)
000102:0x00059e30:	adds	@s01, @s01, ret
000102:0x00059e40:	moves	@s02, @s01
000102:0x00059e50:	icall	Trim(@s02)
000102:0x00059e58:	moves	new_config_path, ret
000103:0x00059e68:	adds	@s02, offset, _s'+ '
000103:0x00059e78:	moves	@s01, @s02
000103:0x00059e88:	icall	array<string>.Get(i)
000103:0x00059e90:	adds	@s01, @s01, ret
000103:0x00059ea0:	moves	@s00, @s01
000103:0x00059eb0:	icall	array<string>.Get(i)
000103:0x00059eb8:	new	@c00, Param5<bool,string,int,string,int>
000103:0x00059ee8:	movec	[0x11d1a368], @c00
000103:0x00059ef8:	addi	@m01, row, _i1
000103:0x00059f08:	move	@m00, @m01
000103:0x00059f18:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000103:0x00059f28:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, @m00)
000103:0x00059f38:	jump	0x059de8
000103:0x00059f40:	delete	variables
000103:0x00059f48:	rts
UIPopupScriptConfigs::CollapseHierarchy()
000110:0x0005a110:	cmpi	row, _i-1
000110:0x0005a120:	bgt	0x05a160
000110:0x0005a128:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000110:0x0005a138:	ncalli	TextListboxWidget.GetNumItems()
000110:0x0005a140:	cmpi	row, ret
000110:0x0005a150:	blt	0x05a160
000112:0x0005a158:	rts
000117:0x0005a160:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000117:0x0005a170:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
000118:0x0005a180:	addi	@m01, row, _i1
000118:0x0005a190:	move	@m00, @m01
000118:0x0005a1a0:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000118:0x0005a1b0:	icall	TextListboxWidget.GetItemData(@m00, _i0, config_params_next)
000120:0x0005a1c0:	move	deep, param5
000121:0x0005a1d0:	move	deep_next, param5
000122:0x0005a1e0:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000122:0x0005a1f0:	ncalli	TextListboxWidget.GetNumItems()
000122:0x0005a1f8:	move	max_count, ret
000123:0x0005a208:	imove	remove_lines_count, 0x000000
000125:0x0005a218:	addi	i, row, _i1
000125:0x0005a228:	jump	0x05a238
000125:0x0005a230:	inc	i
000125:0x0005a238:	cmpi	i, max_count
000125:0x0005a248:	bge	0x05a2c0
000127:0x0005a250:	cmpi	deep, deep_next
000127:0x0005a260:	bge	0x05a2b8
000127:0x0005a268:	cmpi	i, max_count
000127:0x0005a278:	bgt	0x05a2b8
000129:0x0005a280:	inc	remove_lines_count
000130:0x0005a288:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000130:0x0005a298:	icall	TextListboxWidget.GetItemData(i, _i0, config_params_next)
000131:0x0005a2a8:	move	deep_next, param5
000131:0x0005a2b8:	jump	0x05a230
000137:0x0005a2c0:	imove	i, 0x000001
000137:0x0005a2d0:	jump	0x05a2e0
000137:0x0005a2d8:	inc	i
000137:0x0005a2e0:	cmpi	i, remove_lines_count
000137:0x0005a2f0:	bge	0x05a340
000139:0x0005a2f8:	addi	x, row, _i1
000140:0x0005a308:	cmpi	x, max_count
000140:0x0005a318:	bge	0x05a338
000142:0x0005a320:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000142:0x0005a330:	ncalli	TextListboxWidget.RemoveRow(x)
000142:0x0005a338:	jump	0x05a2d8
000146:0x0005a340:	moves	offset, _s''
000147:0x0005a350:	imove	i, 0x000000
000147:0x0005a360:	jump	0x05a370
000147:0x0005a368:	inc	i
000147:0x0005a370:	cmpi	i, deep
000147:0x0005a380:	bge	0x05a3b0
000149:0x0005a388:	adds	@s00, offset, _s'  '
000149:0x0005a398:	moves	offset, @s00
000149:0x0005a3a8:	jump	0x05a368
000151:0x0005a3b0:	adds	@s02, offset, _s'+ '
000151:0x0005a3c0:	moves	@s01, @s02
000151:0x0005a3d0:	adds	@s01, @s01, param2
000151:0x0005a3e0:	moves	@s00, @s01
000151:0x0005a3f0:	moves	p2, param2
000151:0x0005a400:	moves	p4, param4
000151:0x0005a410:	new	@c00, Param5<bool,string,int,string,int>
000151:0x0005a440:	movec	[0x11d1a428], @c00
000151:0x0005a450:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000151:0x0005a460:	ncalli	TextListboxWidget.SetItem(row, @s00, [0x11d1a428], _i0)
000151:0x0005a470:	rts
UIPopupScriptConfigs::ClearHierarchy()
000160:0x0005a578:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000160:0x0005a588:	ncalli	TextListboxWidget.ClearItems()
000161:0x0005a590:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
000161:0x0005a5a0:	ncalli	TextListboxWidget.ClearItems()
000163:0x0005a5a8:	new	@c00, array<string>
000163:0x0005a5c8:	movetm	base_classes, @c00
000164:0x0005a5d8:	call	GetBaseConfigClasses(base_classes)
000166:0x0005a5e8:	moves	config_path, _s'configfile'
000167:0x0005a5f8:	movec	[0x45f54110], m_ModuleConfigViewer
000167:0x0005a608:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
000167:0x0005a618:	movem	variables, ret
000168:0x0005a628:	imove	i, 0x000000
000168:0x0005a638:	jump	0x05a648
000168:0x0005a640:	inc	i
000168:0x0005a648:	ncalli	array<string>.Count()
000168:0x0005a650:	cmpi	i, ret
000168:0x0005a660:	bge	0x05a7c8
000170:0x0005a668:	icall	array<string>.Get(i)
000170:0x0005a670:	moves	variable, ret
000172:0x0005a680:	imove	j, 0x000000
000172:0x0005a690:	jump	0x05a6a0
000172:0x0005a698:	inc	j
000172:0x0005a6a0:	ncalli	array<string>.Count()
000172:0x0005a6a8:	cmpi	j, ret
000172:0x0005a6b8:	bge	0x05a7c0
000174:0x0005a6c0:	icall	array<string>.Get(j)
000174:0x0005a6c8:	cmps	variable, ret
000174:0x0005a6d8:	bne	0x05a7b8
000176:0x0005a6e0:	adds	@s02, config_path, _s' '
000176:0x0005a6f0:	moves	@s01, @s02
000176:0x0005a700:	adds	@s01, @s01, variable
000176:0x0005a710:	moves	@s02, @s01
000176:0x0005a720:	icall	Trim(@s02)
000176:0x0005a728:	moves	new_config_path, ret
000177:0x0005a738:	adds	@s01, _s'+ ', variable
000177:0x0005a748:	moves	@s00, @s01
000177:0x0005a758:	new	@c00, Param5<bool,string,int,string,int>
000177:0x0005a788:	movec	[0x11d1a368], @c00
000177:0x0005a798:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000177:0x0005a7a8:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
000177:0x0005a7b8:	jump	0x05a698
000177:0x0005a7c0:	jump	0x05a640
000177:0x0005a7c8:	delete	base_classes
000177:0x0005a7d0:	delete	variables
000177:0x0005a7d8:	rts
UIPopupScriptConfigs::FindInHierarchy()
000185:0x0005aa20:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000185:0x0005aa30:	ncalli	TextListboxWidget.ClearItems()
000186:0x0005aa38:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
000186:0x0005aa48:	ncalli	TextListboxWidget.ClearItems()
000188:0x0005aa50:	icall	ToLower(class_name)
000189:0x0005aa58:	moves	config_base_path, _s'configfile'
000191:0x0005aa68:	new	@c00, array<string>
000191:0x0005aa88:	movetm	base_classes, @c00
000192:0x0005aa98:	call	GetBaseConfigClasses(base_classes)
000194:0x0005aaa8:	moves	filter_lower, class_name
000195:0x0005aab8:	icall	ToLower(filter_lower)
000197:0x0005aac0:	new	@c00, array<string>
000197:0x0005aae0:	movetm	filters, @c00
000198:0x0005aaf0:	moves	value, filter_lower
000198:0x0005ab00:	call	Split(value, _s' ', filters)
000198:0x0005ab10:	moves	filter_lower, value
000200:0x0005ab20:	imove	i, 0x000000
000200:0x0005ab30:	jump	0x05ab40
000200:0x0005ab38:	inc	i
000200:0x0005ab40:	ncalli	array<string>.Count()
000200:0x0005ab48:	cmpi	i, ret
000200:0x0005ab58:	bge	0x05adc8
000202:0x0005ab60:	adds	@s01, config_base_path, _s' '
000202:0x0005ab70:	moves	@s00, @s01
000202:0x0005ab80:	icall	array<string>.Get(i)
000202:0x0005ab88:	adds	config_path, @s00, ret
000203:0x0005ab98:	movec	[0x45f54110], m_ModuleConfigViewer
000203:0x0005aba8:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
000203:0x0005abb8:	movem	variables, ret
000205:0x0005abc8:	imove	j, 0x000000
000205:0x0005abd8:	jump	0x05abe8
000205:0x0005abe0:	inc	j
000205:0x0005abe8:	ncalli	array<string>.Count()
000205:0x0005abf0:	cmpi	j, ret
000205:0x0005ac00:	bge	0x05adb8
000207:0x0005ac08:	icall	array<string>.Get(j)
000207:0x0005ac10:	moves	variable, ret
000208:0x0005ac20:	moves	variable_lower, variable
000209:0x0005ac30:	icall	ToLower(variable_lower)
000211:0x0005ac38:	imove	k, 0x000000
000211:0x0005ac48:	jump	0x05ac58
000211:0x0005ac50:	inc	k
000211:0x0005ac58:	ncalli	array<string>.Count()
000211:0x0005ac60:	cmpi	k, ret
000211:0x0005ac70:	bge	0x05adb0
000213:0x0005ac78:	moves	value, variable_lower
000213:0x0005ac88:	icall	array<string>.Get(k)
000213:0x0005ac90:	call	Contains(value, ret)
000213:0x0005aca0:	moves	variable_lower, value
000213:0x0005acb0:	cmpi	ret, _i0
000213:0x0005acc0:	beq	0x05ada8
000215:0x0005acc8:	adds	@s02, config_path, _s' '
000215:0x0005acd8:	moves	@s01, @s02
000215:0x0005ace8:	adds	@s01, @s01, variable
000215:0x0005acf8:	moves	@s02, @s01
000215:0x0005ad08:	icall	Trim(@s02)
000215:0x0005ad10:	moves	new_config_path, ret
000216:0x0005ad20:	adds	@s01, _s'+ ', variable
000216:0x0005ad30:	moves	@s00, @s01
000216:0x0005ad40:	new	@c00, Param5<bool,string,int,string,int>
000216:0x0005ad70:	movec	[0x11d1a368], @c00
000216:0x0005ad80:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000216:0x0005ad90:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
000217:0x0005ada0:	jump	0x05adb0
000217:0x0005ada8:	jump	0x05ac50
000217:0x0005adb0:	jump	0x05abe0
000217:0x0005adb8:	delete	variables
000217:0x0005adc0:	jump	0x05ab38
000217:0x0005adc8:	delete	base_classes
000217:0x0005add0:	delete	filters
000217:0x0005add8:	rts
UIPopupScriptConfigs::OnChange()
000226:0x0005ade0:	call	UIPopupScript.OnChange(w, x, y, finished)
000228:0x0005adf0:	cmpm	w, m_ObjectConfigFilter
000228:0x0005ae00:	bne	0x05ae10
000230:0x0005ae08:	call	UIPopupScriptConfigs.ChangeConfigFilter()
000233:0x0005ae10:	imove	ret, 0x000000
000233:0x0005ae20:	rts
000233:0x0005ae28:	rts
UIPopupScriptConfigs::OnClick()
000238:0x0005aea8:	call	UIPopupScript.OnClick(w, x, y, button)
000240:0x0005aeb8:	cmpm	w, m_BtnOk
000240:0x0005aec8:	bne	0x05aef8
000242:0x0005aed0:	call	UIPopupScriptConfigs.PopupBack()
000243:0x0005aed8:	imove	ret, 0x000001
000243:0x0005aee8:	rts
000243:0x0005aef0:	jump	0x05b0a0
000245:0x0005aef8:	cmpm	w, m_BtnCancel
000245:0x0005af08:	bne	0x05af38
000247:0x0005af10:	call	UIPopupScriptConfigs.PopupBack()
000248:0x0005af18:	imove	ret, 0x000001
000248:0x0005af28:	rts
000248:0x0005af30:	jump	0x05b0a0
000250:0x0005af38:	cmpm	w, m_BtnCopyToClipboard
000250:0x0005af48:	bne	0x05af90
000252:0x0005af50:	movem	text_listbox_widget, m_ConfigVariablesTextListbox
000252:0x0005af60:	call	UIPopupScriptConfigs.AddItemToClipboard(text_listbox_widget)
000253:0x0005af70:	imove	ret, 0x000001
000253:0x0005af80:	rts
000253:0x0005af88:	jump	0x05b0a0
000255:0x0005af90:	cmpm	w, m_ConfigHierarchyTextListbox
000255:0x0005afa0:	bne	0x05b0a0
000257:0x0005afa8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000257:0x0005afb8:	ncalli	TextListboxWidget.GetSelectedRow()
000257:0x0005afc0:	move	objects_row_index, ret
000259:0x0005afd0:	cmpi	objects_row_index, _i-1
000259:0x0005afe0:	ble	0x05b088
000259:0x0005afe8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000259:0x0005aff8:	ncalli	TextListboxWidget.GetNumItems()
000259:0x0005b000:	cmpi	objects_row_index, ret
000259:0x0005b010:	bge	0x05b088
000262:0x0005b018:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000262:0x0005b028:	icall	TextListboxWidget.GetItemData(objects_row_index, _i0, config_params)
000264:0x0005b038:	cmpi	param1, false
000264:0x0005b048:	bne	0x05b068
000266:0x0005b050:	call	UIPopupScriptConfigs.ExpandHierarchy(objects_row_index)
000266:0x0005b060:	jump	0x05b078
000270:0x0005b068:	call	UIPopupScriptConfigs.CollapseHierarchy(objects_row_index)
000272:0x0005b078:	call	UIPopupScriptConfigs.RenderVariables(objects_row_index)
000275:0x0005b088:	imove	ret, 0x000001
000275:0x0005b098:	rts
000278:0x0005b0a0:	imove	ret, 0x000000
000278:0x0005b0b0:	rts
000278:0x0005b0b8:	rts
UIPopupScriptEditorSettings::UIPopupScriptEditorSettings()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptEditorSettings.c
000016:0x0005b160:	call	GetPlugin(_T(PluginSceneManager))
000016:0x0005b170:	movec	m_ModuleSceneManager, ret
000018:0x0005b180:	ncalli	Widget.FindAnyWidget(_s'cbx_ppp_est_flag_selection')
000018:0x0005b188:	movetm	m_WgtTglSeleHighlight, ret
000019:0x0005b198:	ncalli	Widget.FindAnyWidget(_s'cbx_ppp_est_flag_load_player_pos')
000019:0x0005b1a0:	movetm	m_WgtTglSavePlayerPos, ret
000020:0x0005b1b0:	ncalli	Widget.FindAnyWidget(_s'ebx_ppp_est_rotation_delta_value')
000020:0x0005b1b8:	movetm	m_EdxRotationDelta, ret
000022:0x0005b1c8:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_est_cancel')
000022:0x0005b1d0:	movetm	m_BtnCancel, ret
000022:0x0005b1e0:	rts
UIPopupScriptEditorSettings::OnOpen()
000030:0x0005b1e8:	movec	[0x45f497b8], m_ModuleSceneManager
000030:0x0005b1f8:	call	PluginSceneManager.GetDrawSelection()
000030:0x0005b200:	movefm	[0x11d0a020], m_WgtTglSeleHighlight
000030:0x0005b210:	ncalli	CheckBoxWidget.SetChecked(ret)
000031:0x0005b218:	movec	[0x45f497b8], m_ModuleSceneManager
000031:0x0005b228:	call	PluginSceneManager.GetLoadPlayerPos()
000031:0x0005b230:	movefm	[0x11d0a020], m_WgtTglSavePlayerPos
000031:0x0005b240:	ncalli	CheckBoxWidget.SetChecked(ret)
000032:0x0005b248:	movec	[0x45f497b8], m_ModuleSceneManager
000032:0x0005b258:	call	PluginSceneManager.GetRotationAngle()
000032:0x0005b260:	icall	ToString(ret)
000032:0x0005b268:	movefm	[0x11d09a20], m_EdxRotationDelta
000032:0x0005b278:	ncalli	EditBoxWidget.SetText(ret)
000032:0x0005b280:	rts
UIPopupScriptEditorSettings::OnClick()
000040:0x0005b288:	call	UIPopupScript.OnClick(w, x, y, button)
000042:0x0005b298:	cmpm	w, m_WgtTglSeleHighlight
000042:0x0005b2a8:	bne	0x05b2f0
000044:0x0005b2b0:	movefm	[0x11d0a020], m_WgtTglSeleHighlight
000044:0x0005b2c0:	ncalli	CheckBoxWidget.IsChecked()
000044:0x0005b2c8:	movec	[0x45f497b8], m_ModuleSceneManager
000044:0x0005b2d8:	call	PluginSceneManager.SetDrawSelection(ret)
000044:0x0005b2e8:	jump	0x05b380
000046:0x0005b2f0:	cmpm	w, m_WgtTglSavePlayerPos
000046:0x0005b300:	bne	0x05b348
000048:0x0005b308:	movefm	[0x11d0a020], m_WgtTglSavePlayerPos
000048:0x0005b318:	ncalli	CheckBoxWidget.IsChecked()
000048:0x0005b320:	movec	[0x45f497b8], m_ModuleSceneManager
000048:0x0005b330:	call	PluginSceneManager.SetLoadPlayerPos(ret)
000048:0x0005b340:	jump	0x05b380
000050:0x0005b348:	cmpm	w, m_BtnCancel
000050:0x0005b358:	bne	0x05b380
000052:0x0005b360:	call	UIPopupScriptEditorSettings.PopupBack()
000054:0x0005b368:	imove	ret, 0x000001
000054:0x0005b378:	rts
000057:0x0005b380:	imove	ret, 0x000000
000057:0x0005b390:	rts
000057:0x0005b398:	rts
UIPopupScriptEditorSettings::OnChange()
000065:0x0005b3c0:	cmpm	w, m_EdxRotationDelta
000065:0x0005b3d0:	bne	0x05b458
000067:0x0005b3d8:	movefm	[0x11d09a20], m_EdxRotationDelta
000067:0x0005b3e8:	icall	EditBoxWidget.GetText()
000067:0x0005b3f0:	ncall	ToInt(ret)
000067:0x0005b3f8:	move	angle, ret
000069:0x0005b408:	cmpi	angle, _i0
000069:0x0005b418:	ble	0x05b440
000071:0x0005b420:	movec	[0x45f497b8], m_ModuleSceneManager
000071:0x0005b430:	call	PluginSceneManager.SetRotationAngle(angle)
000074:0x0005b440:	imove	ret, 0x000001
000074:0x0005b450:	rts
000077:0x0005b458:	imove	ret, 0x000000
000077:0x0005b468:	rts
000077:0x0005b470:	rts
UIPopupScriptInitScript::UIPopupScriptInitScript()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptInitScript.c
000019:0x0005b4f8:	call	GetPlugin(_T(PluginSceneManager))
000019:0x0005b508:	movec	m_ModuleSceneManager, ret
000021:0x0005b518:	ncalli	Widget.FindAnyWidget(_s'pnl_ppp_is_init_script_value')
000021:0x0005b520:	movetm	m_MedxInitScript, ret
000023:0x0005b530:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_is_run')
000023:0x0005b538:	movetm	m_BtnRun, ret
000024:0x0005b548:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_is_save')
000024:0x0005b550:	movetm	m_BtnSave, ret
000025:0x0005b560:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_is_cancel')
000025:0x0005b568:	movetm	m_BtnCancel, ret
000025:0x0005b578:	rts
Param2<int,SceneObject>::Param2()
//scripts/1_CoreExt/param.c
000048:0x0005b6a8:	move	param1, p1
000049:0x0005b6b8:	movec	param2, p2
000049:0x0005b6c8:	rts
UIPopupScriptInitScript::OnOpen()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptInitScript.c
000033:0x0005b768:	movefm	[0x11d0a218], m_MedxInitScript
000033:0x0005b778:	ncalli	MultilineEditBoxWidget.SetText(_s'')
000035:0x0005b780:	cmpc	param, NULL
000035:0x0005b790:	beq	0x05b848
000037:0x0005b798:	movec	param_scene_object, param
000038:0x0005b7a8:	move	index, param1
000039:0x0005b7b8:	movec	scene_object, param2
000041:0x0005b7c8:	cmpi	index, _i-1
000041:0x0005b7d8:	ble	0x05b848
000041:0x0005b7e0:	cmpc	scene_object, NULL
000041:0x0005b7f0:	beq	0x05b848
000043:0x0005b7f8:	move	m_SceneObjectIndex, index
000044:0x0005b808:	movec	m_SceneObject, scene_object
000045:0x0005b818:	movec	[0x45f51ee0], m_SceneObject
000045:0x0005b828:	call	SceneObject.GetInitScript()
000045:0x0005b830:	movefm	[0x11d0a218], m_MedxInitScript
000045:0x0005b840:	ncalli	MultilineEditBoxWidget.SetText(ret)
000045:0x0005b848:	rts
UIPopupScriptInitScript::OnClick()
000055:0x0005b8f0:	call	UIPopupScript.OnClick(w, x, y, button)
000057:0x0005b900:	cmpm	w, m_BtnRun
000057:0x0005b910:	bne	0x05b990
000059:0x0005b918:	cmpc	m_SceneObject, NULL
000059:0x0005b928:	beq	0x05b988
000062:0x0005b930:	movefm	[0x11d0a218], m_MedxInitScript
000062:0x0005b940:	icall	MultilineEditBoxWidget.GetText(text_run)
000063:0x0005b948:	move	index, m_SceneObjectIndex
000063:0x0005b958:	movec	scene_object, m_SceneObject
000063:0x0005b968:	movec	[0x45f497b8], m_ModuleSceneManager
000063:0x0005b978:	call	PluginSceneManager.ExecuteEnforceScript(index, scene_object, text_run)
000063:0x0005b988:	jump	0x05ba58
000066:0x0005b990:	cmpm	w, m_BtnSave
000066:0x0005b9a0:	bne	0x05ba20
000068:0x0005b9a8:	cmpc	m_SceneObject, NULL
000068:0x0005b9b8:	beq	0x05b9f8
000071:0x0005b9c0:	movefm	[0x11d0a218], m_MedxInitScript
000071:0x0005b9d0:	icall	MultilineEditBoxWidget.GetText(text_script)
000072:0x0005b9d8:	movec	[0x45f51ee0], m_SceneObject
000072:0x0005b9e8:	call	SceneObject.SetInitScript(text_script)
000075:0x0005b9f8:	call	UIPopupScriptInitScript.PopupBack()
000077:0x0005ba00:	imove	ret, 0x000001
000077:0x0005ba10:	rts
000077:0x0005ba18:	jump	0x05ba58
000079:0x0005ba20:	cmpm	w, m_BtnCancel
000079:0x0005ba30:	bne	0x05ba58
000081:0x0005ba38:	call	UIPopupScriptInitScript.PopupBack()
000083:0x0005ba40:	imove	ret, 0x000001
000083:0x0005ba50:	rts
000086:0x0005ba58:	imove	ret, 0x000000
000086:0x0005ba68:	rts
000086:0x0005ba70:	rts
UIPopupScriptNotify::UIPopupScriptNotify()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptNotify.c
000011:0x0005bab8:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_notify_ok')
000011:0x0005bac0:	movetm	m_BtnOk, ret
000012:0x0005bad0:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_notify_label')
000012:0x0005bad8:	movetm	m_TxtLabel, ret
000012:0x0005bae8:	rts
UIPopupScriptNotify::OnClick()
000020:0x0005baf0:	call	UIPopupScript.OnClick(w, x, y, button)
000022:0x0005bb00:	cmpm	w, m_BtnOk
000022:0x0005bb10:	bne	0x05bb38
000024:0x0005bb18:	call	UIPopupScriptNotify.PopupBack()
000026:0x0005bb20:	imove	ret, 0x000001
000026:0x0005bb30:	rts
000029:0x0005bb38:	imove	ret, 0x000000
000029:0x0005bb48:	rts
000029:0x0005bb50:	rts
UIPopupScriptNotify::SetLabelText()
000037:0x0005bb58:	movefm	[0x11d09418], m_TxtLabel
000037:0x0005bb68:	ncalli	TextWidget.SetText(text)
000037:0x0005bb70:	rts
UIPopupScriptPositionManager::UIPopupScriptPositionManager()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptPositionManager.c
000017:0x0005bce8:	call	GetPlugin(_T(PluginConfigDebugProfileFixed))
000017:0x0005bcf8:	movec	m_ConfigDebugProfileFixed, ret
000018:0x0005bd08:	ncalli	Widget.FindAnyWidget(_s'tls_ppp_pm_positions_list')
000018:0x0005bd10:	movetm	m_LstPositionList, ret
000019:0x0005bd20:	ncalli	Widget.FindAnyWidget(_s'pnl_ppp_pm_selected_x_value')
000019:0x0005bd28:	movetm	m_TxtSelectedX, ret
000020:0x0005bd38:	ncalli	Widget.FindAnyWidget(_s'pnl_ppp_pm_selected_y_value')
000020:0x0005bd40:	movetm	m_TxtSelectedY, ret
000021:0x0005bd50:	ncalli	Widget.FindAnyWidget(_s'pnl_ppp_pm_current_x_value')
000021:0x0005bd58:	movetm	m_TxtCurrentX, ret
000022:0x0005bd68:	ncalli	Widget.FindAnyWidget(_s'pnl_ppp_pm_current_y_value')
000022:0x0005bd70:	movetm	m_TxtCurrentY, ret
000023:0x0005bd80:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pm_teleport')
000023:0x0005bd88:	movetm	m_TeleportButton, ret
000024:0x0005bd98:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pm_cancel')
000024:0x0005bda0:	movetm	m_CancelButton, ret
000026:0x0005bdb0:	new	@c00, array<string>
000026:0x0005bdd0:	movetm	positions_array, @c00
000027:0x0005bde0:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000027:0x0005bdf0:	call	PluginConfigDebugProfileFixed.GetAllPositionsNames(positions_array)
000029:0x0005be00:	imove	i, 0x000000
000029:0x0005be10:	jump	0x05be20
000029:0x0005be18:	inc	i
000029:0x0005be20:	ncalli	array<string>.Count()
000029:0x0005be28:	cmpi	i, ret
000029:0x0005be38:	bge	0x05bed0
000031:0x0005be40:	icall	array<string>.Get(i)
000031:0x0005be48:	pushs	ret
000031:0x0005be50:	icall	array<string>.Get(i)
000031:0x0005be58:	moves	@s02, ret
000031:0x0005be68:	pops	ret
000031:0x0005be70:	new	@c00, Param3<string,bool,bool>
000031:0x0005be98:	movec	[0x11d1a368], @c00
000031:0x0005bea8:	movefm	[0x11d0a1c0], m_LstPositionList
000031:0x0005beb8:	ncalli	TextListboxWidget.AddItem(ret, [0x11d1a368], _i0, _i-1)
000031:0x0005bec8:	jump	0x05be18
000034:0x0005bed0:	delete	positions_array
000034:0x0005bed8:	release	positions_array
000034:0x0005bee0:	rts
UIPopupScriptPositionManager::OnOpen()
000042:0x0005bf18:	call	GetInstance()
000042:0x0005bf20:	call	PluginSceneManager.GetSelectedSceneObject()
000042:0x0005bf28:	call	SceneObject.GetPosition()
000042:0x0005bf30:	movev	player_pos, ret
000044:0x0005bf40:	ifv	@f00, player_pos[0x000000]
000044:0x0005bf50:	icall	ToString(@f00)
000044:0x0005bf58:	movefm	[0x11d09a20], m_TxtCurrentX
000044:0x0005bf68:	ncalli	EditBoxWidget.SetText(ret)
000045:0x0005bf70:	ifv	@f00, player_pos[0x000002]
000045:0x0005bf80:	icall	ToString(@f00)
000045:0x0005bf88:	movefm	[0x11d09a20], m_TxtCurrentY
000045:0x0005bf98:	ncalli	EditBoxWidget.SetText(ret)
000045:0x0005bfa0:	rts
UIPopupScriptPositionManager::OnClick()
000053:0x0005c038:	cmpm	w, m_TeleportButton
000053:0x0005c048:	bne	0x05c108
000055:0x0005c050:	movefm	[0x11d09a20], m_TxtSelectedX
000055:0x0005c060:	icall	EditBoxWidget.GetText()
000055:0x0005c068:	ncall	ToFloat(ret)
000055:0x0005c070:	move	pos_x, ret
000056:0x0005c080:	movefm	[0x11d09a20], m_TxtSelectedY
000056:0x0005c090:	icall	EditBoxWidget.GetText()
000056:0x0005c098:	ncall	ToFloat(ret)
000056:0x0005c0a0:	move	pos_z, ret
000058:0x0005c0b0:	call	GetInstance()
000058:0x0005c0b8:	call	PluginSceneManager.SelectedObjectSetPosX(pos_x)
000059:0x0005c0c8:	call	GetInstance()
000059:0x0005c0d0:	call	PluginSceneManager.SelectedObjectSetPosZ(pos_z)
000060:0x0005c0e0:	call	UIPopupScriptPositionManager.PopupBack()
000061:0x0005c0e8:	imove	ret, 0x000001
000061:0x0005c0f8:	rts
000061:0x0005c100:	jump	0x05c140
000063:0x0005c108:	cmpm	w, m_CancelButton
000063:0x0005c118:	bne	0x05c140
000065:0x0005c120:	call	UIPopupScriptPositionManager.PopupBack()
000066:0x0005c128:	imove	ret, 0x000001
000066:0x0005c138:	rts
000066:0x0005c140:	rts
UIPopupScriptPositionManager::OnItemSelected()
000072:0x0005c178:	call	UIPopupScriptPositionManager.GetCurrentPositionName()
000072:0x0005c180:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000072:0x0005c190:	call	PluginConfigDebugProfileFixed.GetPositionByName(ret)
000072:0x0005c1a0:	movev	position, ret
000073:0x0005c1b0:	ifv	@f00, position[0x000000]
000073:0x0005c1c0:	icall	ToString(@f00)
000073:0x0005c1c8:	movefm	[0x11d09a20], m_TxtSelectedX
000073:0x0005c1d8:	ncalli	EditBoxWidget.SetText(ret)
000074:0x0005c1e0:	ifv	@f00, position[0x000002]
000074:0x0005c1f0:	icall	ToString(@f00)
000074:0x0005c1f8:	movefm	[0x11d09a20], m_TxtSelectedY
000074:0x0005c208:	ncalli	EditBoxWidget.SetText(ret)
000074:0x0005c210:	rts
UIPopupScriptPositionManager::GetCurrentPositionName()
000079:0x0005c268:	movefm	[0x11d0a1c0], m_LstPositionList
000079:0x0005c278:	ncalli	TextListboxWidget.GetSelectedRow()
000079:0x0005c280:	cmpi	ret, _i-1
000079:0x0005c290:	beq	0x05c2f0
000081:0x0005c298:	movefm	[0x11d0a1c0], m_LstPositionList
000081:0x0005c2a8:	ncalli	TextListboxWidget.GetSelectedRow()
000081:0x0005c2b0:	movefm	[0x11d0a1c0], m_LstPositionList
000081:0x0005c2c0:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000081:0x0005c2c8:	moves	position_name, ret
000082:0x0005c2d8:	moves	ret, position_name
000082:0x0005c2e8:	rts
000084:0x0005c2f0:	moves	ret, _s''
000084:0x0005c300:	rts
000084:0x0005c308:	rts
UIPopupScriptPresetNew::UIPopupScriptPresetNew()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptPresetNew.c
000011:0x0005c350:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pn_ok')
000011:0x0005c358:	movetm	m_BtnOk, ret
000012:0x0005c368:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pn_cancel')
000012:0x0005c370:	movetm	m_BtnCancel, ret
000012:0x0005c380:	rts
UIPopupScriptPresetNew::OnClick()
000020:0x0005c438:	call	UIPopupScript.OnClick(w, x, y, button)
000022:0x0005c448:	cmpm	w, m_BtnOk
000022:0x0005c458:	bne	0x05c538
000024:0x0005c460:	movefm	[0x11cf2b58], m_WgtRoot
000024:0x0005c470:	ncalli	Widget.FindAnyWidget(_s'fld_ppp_pn_new_name')
000024:0x0005c478:	movetm	wgt_text, ret
000025:0x0005c488:	call	GetPlugin(_T(PluginConfigDebugProfile))
000025:0x0005c498:	movec	m_ConfigDebugProfile, ret
000026:0x0005c4a8:	icall	EditBoxWidget.GetText()
000026:0x0005c4b0:	call	PluginConfigDebugProfile.PresetAdd(ret)
000028:0x0005c4c0:	ncall	GetGame()
000028:0x0005c4c8:	ncalli	CGame.GetUIManager()
000028:0x0005c4d0:	ncalli	UIManager.GetMenu()
000028:0x0005c4d8:	movetm	menu, ret
000029:0x0005c4e8:	call	SceneEditorMenu.RefreshLists()
000030:0x0005c4f0:	call	UIPopupScriptPresetNew.PopupBack()
000032:0x0005c4f8:	imove	ret, 0x000001
000032:0x0005c508:	release	wgt_text
000032:0x0005c510:	release	menu
000032:0x0005c518:	rts
000032:0x0005c520:	release	wgt_text
000032:0x0005c528:	release	menu
000032:0x0005c530:	jump	0x05c570
000034:0x0005c538:	cmpm	w, m_BtnCancel
000034:0x0005c548:	bne	0x05c570
000036:0x0005c550:	call	UIPopupScriptPresetNew.PopupBack()
000038:0x0005c558:	imove	ret, 0x000001
000038:0x0005c568:	rts
000041:0x0005c570:	imove	ret, 0x000000
000041:0x0005c580:	rts
000041:0x0005c588:	rts
UIPopupScriptPresetRename::UIPopupScriptPresetRename()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptPresetRename.c
000012:0x0005c5f0:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pr_ok')
000012:0x0005c5f8:	movetm	m_BtnOk, ret
000013:0x0005c608:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_pr_cancel')
000013:0x0005c610:	movetm	m_BtnCancel, ret
000014:0x0005c620:	ncalli	Widget.FindAnyWidget(_s'fld_ppp_pr_new_name')
000014:0x0005c628:	movetm	m_Editbox, ret
000014:0x0005c638:	rts
UIPopupScriptPresetRename::OnOpen()
000019:0x0005c660:	ncall	GetGame()
000019:0x0005c668:	ncalli	CGame.GetUIManager()
000019:0x0005c670:	ncalli	UIManager.GetMenu()
000019:0x0005c678:	movetm	menu, ret
000020:0x0005c688:	call	SceneEditorMenu.GetCurrentPresetName()
000020:0x0005c690:	movefm	[0x11d09a20], m_Editbox
000020:0x0005c6a0:	ncalli	EditBoxWidget.SetText(ret)
000020:0x0005c6a8:	release	menu
000020:0x0005c6b0:	rts
UIPopupScriptPresetRename::OnClick()
000028:0x0005c6f8:	call	UIPopupScript.OnClick(w, x, y, button)
000030:0x0005c708:	cmpm	w, m_BtnOk
000030:0x0005c718:	bne	0x05c7d8
000032:0x0005c720:	movefm	[0x11cf2b58], m_WgtRoot
000032:0x0005c730:	ncalli	Widget.FindAnyWidget(_s'fld_ppp_pr_new_name')
000032:0x0005c738:	movetm	wgt_text, ret
000033:0x0005c748:	ncall	GetGame()
000033:0x0005c750:	ncalli	CGame.GetUIManager()
000033:0x0005c758:	ncalli	UIManager.GetMenu()
000033:0x0005c760:	movetm	menu, ret
000034:0x0005c770:	icall	EditBoxWidget.GetText()
000034:0x0005c778:	call	SceneEditorMenu.RenamePreset(ret)
000035:0x0005c788:	call	SceneEditorMenu.RefreshLists()
000037:0x0005c790:	call	UIPopupScriptPresetRename.PopupBack()
000039:0x0005c798:	imove	ret, 0x000001
000039:0x0005c7a8:	release	wgt_text
000039:0x0005c7b0:	release	menu
000039:0x0005c7b8:	rts
000039:0x0005c7c0:	release	wgt_text
000039:0x0005c7c8:	release	menu
000039:0x0005c7d0:	jump	0x05c810
000041:0x0005c7d8:	cmpm	w, m_BtnCancel
000041:0x0005c7e8:	bne	0x05c810
000043:0x0005c7f0:	call	UIPopupScriptPresetRename.PopupBack()
000044:0x0005c7f8:	imove	ret, 0x000001
000044:0x0005c808:	rts
000047:0x0005c810:	imove	ret, 0x000000
000047:0x0005c820:	rts
000047:0x0005c828:	rts
UIPopupScriptSceneDelete::UIPopupScriptSceneDelete()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSceneDelete.c
000012:0x0005c870:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_dlt_yes')
000012:0x0005c878:	movetm	m_BtnYes, ret
000013:0x0005c888:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_dlt_no')
000013:0x0005c890:	movetm	m_BtnNo, ret
000013:0x0005c8a0:	rts
UIPopupScriptSceneDelete::OnClick()
000021:0x0005c8f0:	call	UIPopupScript.OnClick(w, x, y, button)
000023:0x0005c900:	cmpm	w, m_BtnYes
000023:0x0005c910:	bne	0x05c980
000025:0x0005c918:	call	GetPlugin(_T(PluginSceneManager))
000025:0x0005c928:	movec	editor, ret
000027:0x0005c938:	moves	scene_name, m_DeleteScene
000027:0x0005c948:	call	PluginSceneManager.SceneDelete(scene_name)
000029:0x0005c958:	call	UIPopupScriptSceneDelete.PopupBack()
000031:0x0005c960:	imove	ret, 0x000001
000031:0x0005c970:	rts
000031:0x0005c978:	jump	0x05c9c8
000033:0x0005c980:	cmpm	w, m_BtnNo
000033:0x0005c990:	bne	0x05c9c8
000035:0x0005c998:	moves	m_DeleteScene, STRING_EMPTY
000036:0x0005c9a8:	call	UIPopupScriptSceneDelete.PopupBack()
000037:0x0005c9b0:	imove	ret, 0x000001
000037:0x0005c9c0:	rts
000040:0x0005c9c8:	imove	ret, 0x000000
000040:0x0005c9d8:	rts
000040:0x0005c9e0:	rts
UIPopupScriptSceneDelete::SetDeleteName()
000045:0x0005c9e8:	moves	m_DeleteScene, scene_name
000045:0x0005c9f8:	rts
UIPopupScriptSceneManager::UIPopupScriptSceneManager()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSceneManager.c
000058:0x0005ccc0:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_cancel')
000058:0x0005ccc8:	movetm	m_BtnCancel, ret
000059:0x0005ccd8:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_mission_new')
000059:0x0005cce0:	movetm	m_BtnSceneNew, ret
000060:0x0005ccf0:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_mission_load')
000060:0x0005ccf8:	movetm	m_BtnSceneLoad, ret
000061:0x0005cd08:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_mission_rename')
000061:0x0005cd10:	movetm	m_BtnSceneRename, ret
000062:0x0005cd20:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_mission_delete')
000062:0x0005cd28:	movetm	m_BtnSceneDelete, ret
000063:0x0005cd38:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sm_mission_duplicate')
000063:0x0005cd40:	movetm	m_BtnSceneDuplicate, ret
000065:0x0005cd50:	ncalli	Widget.FindAnyWidget(_s'tls_ppp_sm_scene_list')
000065:0x0005cd58:	movetm	m_LstListScenes, ret
000067:0x0005cd68:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_st_save')
000067:0x0005cd70:	movetm	m_BtnSave, ret
000069:0x0005cd80:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_w_time_value')
000069:0x0005cd88:	movetm	m_TxtWeatherTime, ret
000070:0x0005cd98:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_w_air_temp_value')
000070:0x0005cda0:	movetm	m_TxtAirTemperature, ret
000072:0x0005cdb0:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_start_time')
000072:0x0005cdb8:	movetm	m_SldStartTime, ret
000073:0x0005cdc8:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_start_time_value')
000073:0x0005cdd0:	movetm	m_TxtStartTimeValue, ret
000075:0x0005cde0:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_start_day')
000075:0x0005cde8:	movetm	m_SldStartDay, ret
000076:0x0005cdf8:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_start_day_value')
000076:0x0005ce00:	movetm	m_TxtStartDayValue, ret
000078:0x0005ce10:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_overcast')
000078:0x0005ce18:	movetm	m_SldOvercast, ret
000079:0x0005ce28:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_overcast_value')
000079:0x0005ce30:	movetm	m_TxtOvercastValue, ret
000081:0x0005ce40:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_rain')
000081:0x0005ce48:	movetm	m_SldRain, ret
000082:0x0005ce58:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_rain_value')
000082:0x0005ce60:	movetm	m_TxtRainValue, ret
000084:0x0005ce70:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_fog')
000084:0x0005ce78:	movetm	m_SldFog, ret
000085:0x0005ce88:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_fog_value')
000085:0x0005ce90:	movetm	m_TxtFogValue, ret
000087:0x0005cea0:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_wind_force')
000087:0x0005cea8:	movetm	m_SldWindForce, ret
000088:0x0005ceb8:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_wind_force_value')
000088:0x0005cec0:	movetm	m_TxtWindForceValue, ret
000088:0x0005ced0:	rts
UIPopupScriptSceneManager::OnClick()
000096:0x0005d028:	call	UIPopupScript.OnClick(w, x, y, button)
000101:0x0005d038:	cmpm	w, m_BtnCancel
000101:0x0005d048:	bne	0x05d180
000103:0x0005d050:	ncall	GetGame()
000103:0x0005d058:	ncalli	CGame.GetWorld()
000103:0x0005d060:	move	[0x3cd35e68], m_OrigYear
000103:0x0005d070:	move	[0x3cd35e88], m_OrigMonth
000103:0x0005d080:	move	[0x3cd35ea8], m_OrigDay
000103:0x0005d090:	move	[0x3cd35ec8], m_OrigHour
000103:0x0005d0a0:	move	[0x3cd35ee8], m_OrigMinute
000103:0x0005d0b0:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000104:0x0005d0c0:	ncall	GetGame()
000104:0x0005d0c8:	move	[0x3cd2f230], m_OrigOvercast
000104:0x0005d0d8:	ncalli	CGame.SetOvercast([0x3cd2f230], _f0.000000, _f1000.000000)
000105:0x0005d0e8:	ncall	GetGame()
000105:0x0005d0f0:	move	[0x3cd2f4c8], m_OrigRain
000105:0x0005d100:	ncalli	CGame.SetRain([0x3cd2f4c8], _f0.000000, _f1000.000000)
000106:0x0005d110:	ncall	GetGame()
000106:0x0005d118:	move	[0x3cd2f350], m_OrigFog
000106:0x0005d128:	ncalli	CGame.SetFog([0x3cd2f350], _f0.000000, _f1000.000000)
000107:0x0005d138:	ncall	GetGame()
000107:0x0005d140:	move	[0x3cd2f6c8], m_OrigWindForce
000107:0x0005d150:	ncalli	CGame.SetWindForce([0x3cd2f6c8])
000109:0x0005d158:	call	UIPopupScriptSceneManager.PopupBack()
000111:0x0005d160:	imove	ret, 0x000001
000111:0x0005d170:	rts
000111:0x0005d178:	jump	0x05d788
000113:0x0005d180:	cmpm	w, m_BtnSceneNew
000113:0x0005d190:	bne	0x05d1d8
000115:0x0005d198:	movec	param, NULL
000115:0x0005d1a8:	call	UIPopupScriptSceneManager.PopupOpen(POPUP_ID_SCENE_NEW, param)
000117:0x0005d1b8:	imove	ret, 0x000001
000117:0x0005d1c8:	rts
000117:0x0005d1d0:	jump	0x05d788
000119:0x0005d1d8:	cmpm	w, m_BtnSceneLoad
000119:0x0005d1e8:	bne	0x05d2b8
000121:0x0005d1f0:	movefm	[0x11d0a1c0], m_LstListScenes
000121:0x0005d200:	ncalli	TextListboxWidget.GetSelectedRow()
000121:0x0005d208:	cmpi	ret, _i-1
000121:0x0005d218:	beq	0x05d2b0
000123:0x0005d220:	movefm	[0x11d0a1c0], m_LstListScenes
000123:0x0005d230:	ncalli	TextListboxWidget.GetSelectedRow()
000123:0x0005d238:	movefm	[0x11d0a1c0], m_LstListScenes
000123:0x0005d248:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000123:0x0005d250:	moves	scene_name, ret
000124:0x0005d260:	call	GetPlugin(_T(PluginSceneManager))
000124:0x0005d270:	movec	editor, ret
000126:0x0005d280:	call	PluginSceneManager.SceneLoad(scene_name)
000127:0x0005d290:	call	UIPopupScriptSceneManager.PopupBack()
000129:0x0005d298:	imove	ret, 0x000001
000129:0x0005d2a8:	rts
000129:0x0005d2b0:	jump	0x05d788
000132:0x0005d2b8:	cmpm	w, m_BtnSceneRename
000132:0x0005d2c8:	bne	0x05d370
000134:0x0005d2d0:	movefm	[0x11d0a1c0], m_LstListScenes
000134:0x0005d2e0:	ncalli	TextListboxWidget.GetSelectedRow()
000134:0x0005d2e8:	movefm	[0x11d0a1c0], m_LstListScenes
000134:0x0005d2f8:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000134:0x0005d300:	moves	scene_name, ret
000136:0x0005d310:	movec	param, NULL
000136:0x0005d320:	call	UIPopupScriptSceneManager.PopupOpen(POPUP_ID_SCENE_RENAME, param)
000136:0x0005d330:	movec	popup_rename, ret
000137:0x0005d340:	call	UIPopupScriptSceneRename.SetRenameName(scene_name)
000139:0x0005d350:	imove	ret, 0x000001
000139:0x0005d360:	rts
000139:0x0005d368:	jump	0x05d788
000141:0x0005d370:	cmpm	w, m_BtnSceneDuplicate
000141:0x0005d380:	bne	0x05d450
000143:0x0005d388:	movefm	[0x11d0a1c0], m_LstListScenes
000143:0x0005d398:	ncalli	TextListboxWidget.GetSelectedRow()
000143:0x0005d3a0:	cmpi	ret, _i-1
000143:0x0005d3b0:	beq	0x05d448
000145:0x0005d3b8:	movefm	[0x11d0a1c0], m_LstListScenes
000145:0x0005d3c8:	ncalli	TextListboxWidget.GetSelectedRow()
000145:0x0005d3d0:	movefm	[0x11d0a1c0], m_LstListScenes
000145:0x0005d3e0:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000145:0x0005d3e8:	moves	scene_name, ret
000146:0x0005d3f8:	call	GetPlugin(_T(PluginSceneManager))
000146:0x0005d408:	movec	editor, ret
000148:0x0005d418:	call	PluginSceneManager.SceneDuplicate(scene_name)
000149:0x0005d428:	call	UIPopupScriptSceneManager.UpdateSceneList()
000151:0x0005d430:	imove	ret, 0x000001
000151:0x0005d440:	rts
000151:0x0005d448:	jump	0x05d788
000154:0x0005d450:	cmpm	w, m_BtnSceneDelete
000154:0x0005d460:	bne	0x05d5e0
000156:0x0005d468:	movefm	[0x11d0a1c0], m_LstListScenes
000156:0x0005d478:	ncalli	TextListboxWidget.GetSelectedRow()
000156:0x0005d480:	cmpi	ret, _i-1
000156:0x0005d490:	beq	0x05d5d8
000158:0x0005d498:	movefm	[0x11d0a1c0], m_LstListScenes
000158:0x0005d4a8:	ncalli	TextListboxWidget.GetSelectedRow()
000158:0x0005d4b0:	movefm	[0x11d0a1c0], m_LstListScenes
000158:0x0005d4c0:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000158:0x0005d4c8:	moves	scene_name, ret
000159:0x0005d4d8:	call	GetPlugin(_T(PluginSceneManager))
000159:0x0005d4e8:	movec	editor, ret
000161:0x0005d4f8:	call	PluginSceneManager.SceneDelete(scene_name)
000163:0x0005d508:	call	PluginSceneManager.SceneCanDelete(scene_name)
000163:0x0005d518:	cmpi	ret, _i0
000163:0x0005d528:	beq	0x05d578
000165:0x0005d530:	movec	param, NULL
000165:0x0005d540:	call	UIPopupScriptSceneManager.PopupOpen(POPUP_ID_SCENE_DELETE, param)
000165:0x0005d550:	movec	popup_delete, ret
000166:0x0005d560:	call	UIPopupScriptSceneDelete.SetDeleteName(scene_name)
000166:0x0005d570:	jump	0x05d5b8
000170:0x0005d578:	movec	param, NULL
000170:0x0005d588:	call	UIPopupScriptSceneManager.PopupOpen(POPUP_ID_NOTIFY, param)
000170:0x0005d598:	movec	popup_notify, ret
000171:0x0005d5a8:	call	UIPopupScriptNotify.SetLabelText(_s'You cant delete current loaded scene!')
000174:0x0005d5b8:	call	UIPopupScriptSceneManager.UpdateSceneList()
000175:0x0005d5c0:	imove	ret, 0x000001
000175:0x0005d5d0:	rts
000175:0x0005d5d8:	jump	0x05d788
000178:0x0005d5e0:	cmpm	w, m_BtnSave
000178:0x0005d5f0:	bne	0x05d788
000180:0x0005d5f8:	move	m_OrigYear, m_CurrYear
000181:0x0005d608:	move	m_OrigMonth, m_CurrMonth
000182:0x0005d618:	move	m_OrigDay, m_CurrDay
000183:0x0005d628:	move	m_OrigHour, m_CurrHour
000184:0x0005d638:	move	m_OrigMinute, m_CurrMinute
000185:0x0005d648:	move	m_OrigOvercast, m_CurrOvercast
000186:0x0005d658:	move	m_OrigRain, m_CurrRain
000187:0x0005d668:	move	m_OrigFog, m_CurrFog
000188:0x0005d678:	move	m_OrigWindForce, m_CurrWindForce
000190:0x0005d688:	call	GetPlugin(_T(PluginSceneManager))
000190:0x0005d698:	movec	editor, ret
000191:0x0005d6a8:	move	overcast, m_CurrOvercast
000191:0x0005d6b8:	move	rain, m_CurrRain
000191:0x0005d6c8:	move	fog, m_CurrFog
000191:0x0005d6d8:	move	wind_force, m_CurrWindForce
000191:0x0005d6e8:	call	PluginSceneManager.SetWeather(overcast, rain, fog, wind_force)
000192:0x0005d6f8:	move	year, m_CurrYear
000192:0x0005d708:	move	month, m_CurrMonth
000192:0x0005d718:	move	day, m_CurrDay
000192:0x0005d728:	move	hour, m_CurrHour
000192:0x0005d738:	move	minute, m_CurrMinute
000192:0x0005d748:	call	PluginSceneManager.SetDate(year, month, day, hour, minute)
000193:0x0005d760:	call	PluginSceneManager.SceneSave()
000195:0x0005d768:	call	UIPopupScriptSceneManager.PopupBack()
000197:0x0005d770:	imove	ret, 0x000001
000197:0x0005d780:	rts
000200:0x0005d788:	imove	ret, 0x000000
000200:0x0005d798:	rts
000200:0x0005d7a0:	rts
UIPopupScriptSceneManager::OnChange()
000205:0x0005daa0:	cmpm	w, m_SldStartTime
000205:0x0005dab0:	bne	0x05dc00
000207:0x0005dab8:	movefm	[0x11d09b60], m_SldStartTime
000207:0x0005dac8:	ncalli	SliderWidget.GetCurrent()
000207:0x0005dad0:	mulf	slider_value_start_time, ret, _f0.010000
000208:0x0005dae0:	mulf	start_time_f, slider_value_start_time, _f1439.000000
000209:0x0005daf0:	cfti	start_time, start_time_f
000210:0x0005db00:	divi	@m00, start_time, _i60
000210:0x0005db10:	move	m_CurrHour, @m00
000211:0x0005db20:	modi	@m00, start_time, _i60
000211:0x0005db30:	move	m_CurrMinute, @m00
000213:0x0005db40:	move	hour, m_CurrHour
000213:0x0005db50:	move	minute, m_CurrMinute
000213:0x0005db60:	call	UIPopupScriptSceneManager.UpdateSliderStartTime(hour, minute)
000215:0x0005db70:	ncall	GetGame()
000215:0x0005db78:	ncalli	CGame.GetWorld()
000215:0x0005db80:	move	[0x3cd35e68], m_CurrYear
000215:0x0005db90:	move	[0x3cd35e88], m_CurrMonth
000215:0x0005dba0:	move	[0x3cd35ea8], m_CurrDay
000215:0x0005dbb0:	move	[0x3cd35ec8], m_CurrHour
000215:0x0005dbc0:	move	[0x3cd35ee8], m_CurrMinute
000215:0x0005dbd0:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000217:0x0005dbe0:	imove	ret, 0x000001
000217:0x0005dbf0:	rts
000217:0x0005dbf8:	jump	0x05e078
000219:0x0005dc00:	cmpm	w, m_SldStartDay
000219:0x0005dc10:	bne	0x05de08
000221:0x0005dc18:	movefm	[0x11d09b60], m_SldStartDay
000221:0x0005dc28:	ncalli	SliderWidget.GetCurrent()
000221:0x0005dc30:	move	slider_value_start_day, ret
000222:0x0005dc40:	mulf	@f01, slider_value_start_day, _f3.640000
000222:0x0005dc50:	move	@f00, @f01
000222:0x0005dc60:	addf	start_day_f, @f00, _f1.000000
000223:0x0005dc70:	cfti	start_day, start_day_f
000225:0x0005dc80:	imove	i, 0x000000
000225:0x0005dc90:	jump	0x05dca0
000225:0x0005dc98:	inc	i
000225:0x0005dca0:	cmpi	i, _i12
000225:0x0005dcb0:	bge	0x05dd48
000227:0x0005dcb8:	ffv	days, m_DaysInMonth[i]
000228:0x0005dcc8:	cmpi	start_day, days
000228:0x0005dcd8:	bgt	0x05dd20
000230:0x0005dce0:	addi	@m00, i, _i1
000230:0x0005dcf0:	move	m_CurrMonth, @m00
000231:0x0005dd00:	move	m_CurrDay, start_day
000232:0x0005dd10:	jump	0x05dd48
000232:0x0005dd18:	jump	0x05dd40
000236:0x0005dd20:	move	@m00, days
000236:0x0005dd30:	subi	start_day, start_day, @m00
000236:0x0005dd40:	jump	0x05dc98
000240:0x0005dd48:	move	month, m_CurrMonth
000240:0x0005dd58:	move	day, m_CurrDay
000240:0x0005dd68:	call	UIPopupScriptSceneManager.UpdateSliderStartDay(month, day)
000242:0x0005dd78:	ncall	GetGame()
000242:0x0005dd80:	ncalli	CGame.GetWorld()
000242:0x0005dd88:	move	[0x3cd35e68], m_CurrYear
000242:0x0005dd98:	move	[0x3cd35e88], m_CurrMonth
000242:0x0005dda8:	move	[0x3cd35ea8], m_CurrDay
000242:0x0005ddb8:	move	[0x3cd35ec8], m_CurrHour
000242:0x0005ddc8:	move	[0x3cd35ee8], m_CurrMinute
000242:0x0005ddd8:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000244:0x0005dde8:	imove	ret, 0x000001
000244:0x0005ddf8:	rts
000244:0x0005de00:	jump	0x05e078
000246:0x0005de08:	cmpm	w, m_SldOvercast
000246:0x0005de18:	bne	0x05dea8
000248:0x0005de20:	call	UIPopupScriptSceneManager.UpdateSliderOvercast()
000250:0x0005de28:	movefm	[0x11d09b60], m_SldOvercast
000250:0x0005de38:	ncalli	SliderWidget.GetCurrent()
000250:0x0005de40:	mulf	@f01, ret, _f0.010000
000250:0x0005de50:	move	m_CurrOvercast, @f01
000251:0x0005de60:	ncall	GetGame()
000251:0x0005de68:	move	[0x3cd2f230], m_CurrOvercast
000251:0x0005de78:	ncalli	CGame.SetOvercast([0x3cd2f230], _f0.000000, _f1000.000000)
000253:0x0005de88:	imove	ret, 0x000001
000253:0x0005de98:	rts
000253:0x0005dea0:	jump	0x05e078
000255:0x0005dea8:	cmpm	w, m_SldRain
000255:0x0005deb8:	bne	0x05df48
000257:0x0005dec0:	call	UIPopupScriptSceneManager.UpdateSliderRain()
000259:0x0005dec8:	movefm	[0x11d09b60], m_SldRain
000259:0x0005ded8:	ncalli	SliderWidget.GetCurrent()
000259:0x0005dee0:	mulf	@f01, ret, _f0.010000
000259:0x0005def0:	move	m_CurrRain, @f01
000260:0x0005df00:	ncall	GetGame()
000260:0x0005df08:	move	[0x3cd2f4c8], m_CurrRain
000260:0x0005df18:	ncalli	CGame.SetRain([0x3cd2f4c8], _f0.000000, _f1000.000000)
000262:0x0005df28:	imove	ret, 0x000001
000262:0x0005df38:	rts
000262:0x0005df40:	jump	0x05e078
000264:0x0005df48:	cmpm	w, m_SldFog
000264:0x0005df58:	bne	0x05dfe8
000266:0x0005df60:	call	UIPopupScriptSceneManager.UpdateSliderFog()
000268:0x0005df68:	movefm	[0x11d09b60], m_SldFog
000268:0x0005df78:	ncalli	SliderWidget.GetCurrent()
000268:0x0005df80:	mulf	@f01, ret, _f0.010000
000268:0x0005df90:	move	m_CurrFog, @f01
000269:0x0005dfa0:	ncall	GetGame()
000269:0x0005dfa8:	move	[0x3cd2f350], m_CurrFog
000269:0x0005dfb8:	ncalli	CGame.SetFog([0x3cd2f350], _f0.000000, _f1000.000000)
000271:0x0005dfc8:	imove	ret, 0x000001
000271:0x0005dfd8:	rts
000271:0x0005dfe0:	jump	0x05e078
000273:0x0005dfe8:	cmpm	w, m_SldWindForce
000273:0x0005dff8:	bne	0x05e078
000275:0x0005e000:	call	UIPopupScriptSceneManager.UpdateSliderWindForce()
000277:0x0005e008:	movefm	[0x11d09b60], m_SldWindForce
000277:0x0005e018:	ncalli	SliderWidget.GetCurrent()
000277:0x0005e020:	mulf	@f01, ret, _f0.010000
000277:0x0005e030:	move	m_CurrWindForce, @f01
000278:0x0005e040:	ncall	GetGame()
000278:0x0005e048:	move	[0x3cd2f6c8], m_CurrWindForce
000278:0x0005e058:	ncalli	CGame.SetWindForce([0x3cd2f6c8])
000280:0x0005e060:	imove	ret, 0x000001
000280:0x0005e070:	rts
000283:0x0005e078:	imove	ret, 0x000000
000283:0x0005e088:	rts
000283:0x0005e090:	rts
UIPopupScriptSceneManager::UpdateSceneList()
000291:0x0005e1a0:	movefm	[0x11d0a1c0], m_LstListScenes
000291:0x0005e1b0:	ncalli	TextListboxWidget.ClearItems()
000293:0x0005e1b8:	call	GetPlugin(_T(PluginSceneManager))
000293:0x0005e1c8:	movec	editor, ret
000295:0x0005e1d8:	call	PluginSceneManager.GetSceneList()
000295:0x0005e1e0:	movem	scene_list, ret
000296:0x0005e1f0:	call	PluginSceneManager.SceneGetName()
000296:0x0005e1f8:	moves	loaded_scene_name, ret
000298:0x0005e208:	imove	i, 0x000000
000298:0x0005e218:	jump	0x05e228
000298:0x0005e220:	inc	i
000298:0x0005e228:	ncalli	array<string>.Count()
000298:0x0005e230:	cmpi	i, ret
000298:0x0005e240:	bge	0x05e2b8
000300:0x0005e248:	icall	array<string>.Get(i)
000300:0x0005e250:	moves	scene_name, ret
000302:0x0005e260:	movefm	[0x11d0a1c0], m_LstListScenes
000302:0x0005e270:	ncalli	TextListboxWidget.AddItem(scene_name, NULL, _i0, _i-1)
000304:0x0005e280:	cmps	scene_name, loaded_scene_name
000304:0x0005e290:	bne	0x05e2b0
000306:0x0005e298:	movefm	[0x11d0a1c0], m_LstListScenes
000306:0x0005e2a8:	ncalli	TextListboxWidget.SelectRow(i)
000306:0x0005e2b0:	jump	0x05e220
000306:0x0005e2b8:	release	scene_list
000306:0x0005e2c0:	rts
UIPopupScriptSceneManager::OnOpen()
000318:0x0005e308:	call	UIPopupScriptSceneManager.UpdateSceneList()
000319:0x0005e310:	ncall	GetGame()
000319:0x0005e318:	ncalli	CGame.GetWorld()
000319:0x0005e320:	icall	World.GetDate(m_OrigYear, m_OrigMonth, m_OrigDay, m_OrigHour, m_OrigMinute)
000320:0x0005e330:	ncall	GetGame()
000320:0x0005e338:	ncalli	CGame.GetOvercast()
000320:0x0005e340:	move	m_OrigOvercast, ret
000321:0x0005e350:	ncall	GetGame()
000321:0x0005e358:	ncalli	CGame.GetRain()
000321:0x0005e360:	move	m_OrigRain, ret
000322:0x0005e370:	ncall	GetGame()
000322:0x0005e378:	ncalli	CGame.GetFog()
000322:0x0005e380:	move	m_OrigFog, ret
000323:0x0005e390:	ncall	GetGame()
000323:0x0005e398:	ncalli	CGame.GetWindForce()
000323:0x0005e3a0:	move	m_OrigWindForce, ret
000325:0x0005e3b0:	move	m_CurrYear, m_OrigYear
000326:0x0005e3c0:	move	m_CurrMonth, m_OrigMonth
000327:0x0005e3d0:	move	m_CurrDay, m_OrigDay
000328:0x0005e3e0:	move	m_CurrHour, m_OrigHour
000329:0x0005e3f0:	move	m_CurrMinute, m_OrigMinute
000330:0x0005e400:	move	m_CurrOvercast, m_OrigOvercast
000331:0x0005e410:	move	m_CurrRain, m_OrigRain
000332:0x0005e420:	move	m_CurrFog, m_OrigFog
000333:0x0005e430:	move	m_CurrWindForce, m_OrigWindForce
000335:0x0005e440:	icall	Print(_s'Year')
000336:0x0005e448:	icall	Print(m_CurrYear)
000338:0x0005e450:	delete	m_TimerUpdate
000339:0x0005e458:	movec	obj, this
000339:0x0005e468:	new	@c00, TimerUpdate
000339:0x0005e490:	movec	m_TimerUpdate, @c00
000341:0x0005e4a0:	call	UIPopupScriptSceneManager.ResetSliders()
000341:0x0005e4a8:	rts
UIPopupScriptSceneManager::OnClose()
000349:0x0005e4b0:	movec	[0x3cd16738], m_TimerUpdate
000349:0x0005e4c0:	call	TimerUpdate.Stop()
000350:0x0005e4c8:	delete	m_TimerUpdate
000350:0x0005e4d0:	rts
UIPopupScriptSceneManager::OnUpdate()
000358:0x0005e4d8:	ncall	GetGame()
000358:0x0005e4e0:	ncalli	CGame.GetWeatherTime()
000358:0x0005e4e8:	icall	ToString(ret)
000358:0x0005e4f0:	movefm	[0x11d09418], m_TxtWeatherTime
000358:0x0005e500:	ncalli	TextWidget.SetText(ret)
000359:0x0005e508:	ncall	GetGame()
000359:0x0005e510:	ncalli	CGame.GetAirTemperature()
000359:0x0005e518:	icall	ToString(ret)
000359:0x0005e520:	movefm	[0x11d09418], m_TxtAirTemperature
000359:0x0005e530:	ncalli	TextWidget.SetText(ret)
000359:0x0005e538:	rts
UIPopupScriptSceneManager::ResetSliders()
000368:0x0005e690:	ncall	GetGame()
000368:0x0005e698:	ncalli	CGame.GetWorld()
000368:0x0005e6a0:	icall	World.GetDate(year, month, day, hour, minute)
000369:0x0005e6b0:	citf	@f03, hour
000369:0x0005e6c0:	mulf	@f03, @f03, _f60.000000
000369:0x0005e6d0:	move	@f02, @f03
000369:0x0005e6e0:	citf	@f03, minute
000369:0x0005e6f0:	addf	@f02, @f02, @f03
000369:0x0005e700:	move	@f01, @f02
000369:0x0005e710:	divf	@f01, @f01, _f14.390000
000369:0x0005e720:	move	@f00, @f01
000369:0x0005e730:	movefm	[0x11d09b60], m_SldStartTime
000369:0x0005e740:	ncalli	SliderWidget.SetCurrent(@f00)
000370:0x0005e748:	call	UIPopupScriptSceneManager.UpdateSliderStartTime(hour, minute)
000372:0x0005e758:	citf	start_day, day
000373:0x0005e768:	move	month_tmp, month
000374:0x0005e778:	cmpi	month_tmp, _i1
000374:0x0005e788:	ble	0x05e7d0
000376:0x0005e790:	dec	month_tmp
000377:0x0005e798:	ffv	@m00, m_DaysInMonth[month]
000377:0x0005e7a8:	citf	@f00, @m00
000377:0x0005e7b8:	addf	start_day, start_day, @f00
000377:0x0005e7c8:	jump	0x05e778
000379:0x0005e7d0:	divf	@f01, start_day, _f3.640000
000379:0x0005e7e0:	move	@f00, @f01
000379:0x0005e7f0:	movefm	[0x11d09b60], m_SldStartDay
000379:0x0005e800:	ncalli	SliderWidget.SetCurrent(@f00)
000380:0x0005e808:	call	UIPopupScriptSceneManager.UpdateSliderStartDay(month, day)
000382:0x0005e818:	ncall	GetGame()
000382:0x0005e820:	ncalli	CGame.GetOvercast()
000382:0x0005e828:	mulf	@f02, ret, _f100.000000
000382:0x0005e838:	move	@f00, @f02
000382:0x0005e848:	movefm	[0x11d09b60], m_SldOvercast
000382:0x0005e858:	ncalli	SliderWidget.SetCurrent(@f00)
000383:0x0005e860:	call	UIPopupScriptSceneManager.UpdateSliderOvercast()
000385:0x0005e868:	ncall	GetGame()
000385:0x0005e870:	ncalli	CGame.GetRain()
000385:0x0005e878:	mulf	@f02, ret, _f100.000000
000385:0x0005e888:	move	@f00, @f02
000385:0x0005e898:	movefm	[0x11d09b60], m_SldRain
000385:0x0005e8a8:	ncalli	SliderWidget.SetCurrent(@f00)
000386:0x0005e8b0:	call	UIPopupScriptSceneManager.UpdateSliderRain()
000388:0x0005e8b8:	ncall	GetGame()
000388:0x0005e8c0:	ncalli	CGame.GetFog()
000388:0x0005e8c8:	mulf	@f02, ret, _f100.000000
000388:0x0005e8d8:	move	@f00, @f02
000388:0x0005e8e8:	movefm	[0x11d09b60], m_SldFog
000388:0x0005e8f8:	ncalli	SliderWidget.SetCurrent(@f00)
000389:0x0005e900:	call	UIPopupScriptSceneManager.UpdateSliderFog()
000391:0x0005e908:	ncall	GetGame()
000391:0x0005e910:	ncalli	CGame.GetWindForce()
000391:0x0005e918:	mulf	@f02, ret, _f100.000000
000391:0x0005e928:	move	@f00, @f02
000391:0x0005e938:	movefm	[0x11d09b60], m_SldWindForce
000391:0x0005e948:	ncalli	SliderWidget.SetCurrent(@f00)
000392:0x0005e950:	call	UIPopupScriptSceneManager.UpdateSliderWindForce()
000392:0x0005e958:	rts
UIPopupScriptSceneManager::UpdateSliderStartTime()
000397:0x0005e9d0:	move	value, hour
000397:0x0005e9e0:	call	ToStringLen(value, _i2)
000397:0x0005e9f0:	move	hour, value
000397:0x0005ea00:	adds	@s02, ret, _s':'
000397:0x0005ea10:	moves	@s00, @s02
000397:0x0005ea20:	move	value, minute
000397:0x0005ea30:	pushs	ret
000397:0x0005ea38:	call	ToStringLen(value, _i2)
000397:0x0005ea48:	moves	@s02, ret
000397:0x0005ea58:	pops	ret
000397:0x0005ea60:	move	minute, value
000397:0x0005ea70:	adds	label_text, @s00, @s02
000398:0x0005ea80:	movefm	[0x11d09418], m_TxtStartTimeValue
000398:0x0005ea90:	ncalli	TextWidget.SetText(label_text)
000398:0x0005ea98:	rts
UIPopupScriptSceneManager::UpdateSliderStartDay()
000403:0x0005eb00:	icall	ToString(day)
000403:0x0005eb08:	adds	@s04, ret, _s'.'
000403:0x0005eb18:	moves	@s02, @s04
000403:0x0005eb28:	pushs	ret
000403:0x0005eb30:	icall	ToString(month)
000403:0x0005eb38:	moves	@s04, ret
000403:0x0005eb48:	pops	ret
000403:0x0005eb50:	adds	@s02, @s02, @s04
000403:0x0005eb60:	moves	@s01, @s02
000403:0x0005eb70:	adds	@s01, @s01, _s'. '
000403:0x0005eb80:	moves	@s00, @s01
000403:0x0005eb90:	pushs	ret
000403:0x0005eb98:	icall	ToString(m_CurrYear)
000403:0x0005eba0:	moves	@s01, ret
000403:0x0005ebb0:	pops	ret
000403:0x0005ebb8:	adds	label_text, @s00, @s01
000404:0x0005ebc8:	movefm	[0x11d09418], m_TxtStartDayValue
000404:0x0005ebd8:	ncalli	TextWidget.SetText(label_text)
000404:0x0005ebe0:	rts
UIPopupScriptSceneManager::UpdateSliderOvercast()
000409:0x0005ec08:	movefm	[0x11d09b60], m_SldOvercast
000409:0x0005ec18:	ncalli	SliderWidget.GetCurrent()
000409:0x0005ec20:	icall	ToString(ret)
000409:0x0005ec28:	adds	label_text, ret, _s'%'
000410:0x0005ec38:	movefm	[0x11d09418], m_TxtOvercastValue
000410:0x0005ec48:	ncalli	TextWidget.SetText(label_text)
000410:0x0005ec50:	rts
UIPopupScriptSceneManager::UpdateSliderRain()
000415:0x0005ec78:	movefm	[0x11d09b60], m_SldRain
000415:0x0005ec88:	ncalli	SliderWidget.GetCurrent()
000415:0x0005ec90:	icall	ToString(ret)
000415:0x0005ec98:	adds	label_text, ret, _s'%'
000416:0x0005eca8:	movefm	[0x11d09418], m_TxtRainValue
000416:0x0005ecb8:	ncalli	TextWidget.SetText(label_text)
000416:0x0005ecc0:	rts
UIPopupScriptSceneManager::UpdateSliderFog()
000421:0x0005ece8:	movefm	[0x11d09b60], m_SldFog
000421:0x0005ecf8:	ncalli	SliderWidget.GetCurrent()
000421:0x0005ed00:	icall	ToString(ret)
000421:0x0005ed08:	adds	label_text, ret, _s'%'
000422:0x0005ed18:	movefm	[0x11d09418], m_TxtFogValue
000422:0x0005ed28:	ncalli	TextWidget.SetText(label_text)
000422:0x0005ed30:	rts
UIPopupScriptSceneManager::UpdateSliderWindForce()
000427:0x0005ed58:	movefm	[0x11d09b60], m_SldWindForce
000427:0x0005ed68:	ncalli	SliderWidget.GetCurrent()
000427:0x0005ed70:	icall	ToString(ret)
000427:0x0005ed78:	adds	label_text, ret, _s'%'
000428:0x0005ed88:	movefm	[0x11d09418], m_TxtWindForceValue
000428:0x0005ed98:	ncalli	TextWidget.SetText(label_text)
000428:0x0005eda0:	rts
UIPopupScriptSceneNew::UIPopupScriptSceneNew()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSceneNew.c
000011:0x0005ede8:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_ok')
000011:0x0005edf0:	movetm	m_BtnOk, ret
000012:0x0005ee00:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_cancel')
000012:0x0005ee08:	movetm	m_BtnCancel, ret
000012:0x0005ee18:	rts
UIPopupScriptSceneNew::OnClick()
000020:0x0005eec0:	call	UIPopupScript.OnClick(w, x, y, button)
000022:0x0005eed0:	cmpm	w, m_BtnOk
000022:0x0005eee0:	bne	0x05ef98
000024:0x0005eee8:	movefm	[0x11cf2b58], m_WgtRoot
000024:0x0005eef8:	ncalli	Widget.FindAnyWidget(_s'fld_ppp_sn_new_name')
000024:0x0005ef00:	movetm	wgt_text, ret
000026:0x0005ef10:	call	GetPlugin(_T(PluginSceneManager))
000026:0x0005ef20:	movec	editor, ret
000028:0x0005ef30:	call	Log(_s'OnClick -> SceneLoad', _i0)
000030:0x0005ef40:	icall	EditBoxWidget.GetText()
000030:0x0005ef48:	call	PluginSceneManager.SceneLoad(ret)
000031:0x0005ef58:	call	PluginSceneManager.SceneSave()
000033:0x0005ef60:	call	UIPopupScriptSceneNew.PopupBack()
000035:0x0005ef68:	imove	ret, 0x000001
000035:0x0005ef78:	release	wgt_text
000035:0x0005ef80:	rts
000035:0x0005ef88:	release	wgt_text
000035:0x0005ef90:	jump	0x05efd0
000037:0x0005ef98:	cmpm	w, m_BtnCancel
000037:0x0005efa8:	bne	0x05efd0
000039:0x0005efb0:	call	UIPopupScriptSceneNew.PopupBack()
000041:0x0005efb8:	imove	ret, 0x000001
000041:0x0005efc8:	rts
000044:0x0005efd0:	imove	ret, 0x000000
000044:0x0005efe0:	rts
000044:0x0005efe8:	rts
UIPopupScriptSceneRename::UIPopupScriptSceneRename()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSceneRename.c
000012:0x0005f030:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_rnm_ok')
000012:0x0005f038:	movetm	m_BtnOk, ret
000013:0x0005f048:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sn_rnm_cancel')
000013:0x0005f050:	movetm	m_BtnCancel, ret
000013:0x0005f060:	rts
UIPopupScriptSceneRename::OnClick()
000021:0x0005f0c8:	call	UIPopupScript.OnClick(w, x, y, button)
000023:0x0005f0d8:	cmpm	w, m_BtnOk
000023:0x0005f0e8:	bne	0x05f1a8
000025:0x0005f0f0:	movefm	[0x11cf2b58], m_WgtRoot
000025:0x0005f100:	ncalli	Widget.FindAnyWidget(_s'fld_ppp_sn_rnm_new_name')
000025:0x0005f108:	movetm	wgt_text, ret
000027:0x0005f118:	call	GetPlugin(_T(PluginSceneManager))
000027:0x0005f128:	movec	editor, ret
000029:0x0005f138:	moves	scene_name, m_RenameName
000029:0x0005f148:	icall	EditBoxWidget.GetText()
000029:0x0005f150:	call	PluginSceneManager.SceneRename(scene_name, ret)
000030:0x0005f160:	moves	m_RenameName, STRING_EMPTY
000032:0x0005f170:	call	UIPopupScriptSceneRename.PopupBack()
000034:0x0005f178:	imove	ret, 0x000001
000034:0x0005f188:	release	wgt_text
000034:0x0005f190:	rts
000034:0x0005f198:	release	wgt_text
000034:0x0005f1a0:	jump	0x05f1e0
000036:0x0005f1a8:	cmpm	w, m_BtnCancel
000036:0x0005f1b8:	bne	0x05f1e0
000038:0x0005f1c0:	call	UIPopupScriptSceneRename.PopupBack()
000040:0x0005f1c8:	imove	ret, 0x000001
000040:0x0005f1d8:	rts
000043:0x0005f1e0:	imove	ret, 0x000000
000043:0x0005f1f0:	rts
000043:0x0005f1f8:	rts
UIPopupScriptSceneRename::SetRenameName()
000051:0x0005f200:	moves	m_RenameName, rename_name
000051:0x0005f210:	rts
UIPopupScriptSceneSettings::UIPopupScriptSceneSettings()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSceneSettings.c
000051:0x0005f238:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_st_save')
000051:0x0005f240:	movetm	m_BtnSave, ret
000052:0x0005f250:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_st_cancel')
000052:0x0005f258:	movetm	m_BtnCancel, ret
000054:0x0005f268:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_w_time_value')
000054:0x0005f270:	movetm	m_TxtWeatherTime, ret
000055:0x0005f280:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_w_air_temp_value')
000055:0x0005f288:	movetm	m_TxtAirTemperature, ret
000057:0x0005f298:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_start_time')
000057:0x0005f2a0:	movetm	m_SldStartTime, ret
000058:0x0005f2b0:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_start_time_value')
000058:0x0005f2b8:	movetm	m_TxtStartTimeValue, ret
000060:0x0005f2c8:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_start_day')
000060:0x0005f2d0:	movetm	m_SldStartDay, ret
000061:0x0005f2e0:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_start_day_value')
000061:0x0005f2e8:	movetm	m_TxtStartDayValue, ret
000063:0x0005f2f8:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_overcast')
000063:0x0005f300:	movetm	m_SldOvercast, ret
000064:0x0005f310:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_overcast_value')
000064:0x0005f318:	movetm	m_TxtOvercastValue, ret
000066:0x0005f328:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_rain')
000066:0x0005f330:	movetm	m_SldRain, ret
000067:0x0005f340:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_rain_value')
000067:0x0005f348:	movetm	m_TxtRainValue, ret
000069:0x0005f358:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_fog')
000069:0x0005f360:	movetm	m_SldFog, ret
000070:0x0005f370:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_fog_value')
000070:0x0005f378:	movetm	m_TxtFogValue, ret
000072:0x0005f388:	ncalli	Widget.FindAnyWidget(_s'sld_ppp_st_wind_force')
000072:0x0005f390:	movetm	m_SldWindForce, ret
000073:0x0005f3a0:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_st_wind_force_value')
000073:0x0005f3a8:	movetm	m_TxtWindForceValue, ret
000073:0x0005f3b8:	rts
UIPopupScriptSceneSettings::OnClick()
000081:0x0005f3e0:	call	UIPopupScript.OnClick(w, x, y, button)
000083:0x0005f3f0:	cmpm	w, m_BtnSave
000083:0x0005f400:	bne	0x05f598
000085:0x0005f408:	move	m_OrigYear, m_CurrYear
000086:0x0005f418:	move	m_OrigMonth, m_CurrMonth
000087:0x0005f428:	move	m_OrigDay, m_CurrDay
000088:0x0005f438:	move	m_OrigHour, m_CurrHour
000089:0x0005f448:	move	m_OrigMinute, m_CurrMinute
000090:0x0005f458:	move	m_OrigOvercast, m_CurrOvercast
000091:0x0005f468:	move	m_OrigRain, m_CurrRain
000092:0x0005f478:	move	m_OrigFog, m_CurrFog
000093:0x0005f488:	move	m_OrigWindForce, m_CurrWindForce
000095:0x0005f498:	call	GetPlugin(_T(PluginSceneManager))
000095:0x0005f4a8:	movec	editor, ret
000096:0x0005f4b8:	move	overcast, m_CurrOvercast
000096:0x0005f4c8:	move	rain, m_CurrRain
000096:0x0005f4d8:	move	fog, m_CurrFog
000096:0x0005f4e8:	move	wind_force, m_CurrWindForce
000096:0x0005f4f8:	call	PluginSceneManager.SetWeather(overcast, rain, fog, wind_force)
000097:0x0005f508:	move	year, m_CurrYear
000097:0x0005f518:	move	month, m_CurrMonth
000097:0x0005f528:	move	day, m_CurrDay
000097:0x0005f538:	move	hour, m_CurrHour
000097:0x0005f548:	move	minute, m_CurrMinute
000097:0x0005f558:	call	PluginSceneManager.SetDate(year, month, day, hour, minute)
000099:0x0005f570:	call	UIPopupScriptSceneSettings.PopupBack()
000101:0x0005f578:	imove	ret, 0x000001
000101:0x0005f588:	rts
000101:0x0005f590:	jump	0x05f5d0
000103:0x0005f598:	cmpm	w, m_BtnCancel
000103:0x0005f5a8:	bne	0x05f5d0
000106:0x0005f5b0:	call	UIPopupScriptSceneSettings.PopupBack()
000108:0x0005f5b8:	imove	ret, 0x000001
000108:0x0005f5c8:	rts
000111:0x0005f5d0:	imove	ret, 0x000000
000111:0x0005f5e0:	rts
000111:0x0005f5e8:	rts
UIPopupScriptSceneSettings::OnChange()
000117:0x0005f6f0:	cmpm	w, m_SldStartTime
000117:0x0005f700:	bne	0x05f850
000119:0x0005f708:	movefm	[0x11d09b60], m_SldStartTime
000119:0x0005f718:	ncalli	SliderWidget.GetCurrent()
000119:0x0005f720:	mulf	slider_value_start_time, ret, _f0.010000
000120:0x0005f730:	mulf	start_time_f, slider_value_start_time, _f1439.000000
000121:0x0005f740:	cfti	start_time, start_time_f
000122:0x0005f750:	divi	@m00, start_time, _i60
000122:0x0005f760:	move	m_CurrHour, @m00
000123:0x0005f770:	modi	@m00, start_time, _i60
000123:0x0005f780:	move	m_CurrMinute, @m00
000125:0x0005f790:	move	hour, m_CurrHour
000125:0x0005f7a0:	move	minute, m_CurrMinute
000125:0x0005f7b0:	call	UIPopupScriptSceneSettings.UpdateSliderStartTime(hour, minute)
000127:0x0005f7c0:	ncall	GetGame()
000127:0x0005f7c8:	ncalli	CGame.GetWorld()
000127:0x0005f7d0:	move	[0x3cd35e68], m_CurrYear
000127:0x0005f7e0:	move	[0x3cd35e88], m_CurrMonth
000127:0x0005f7f0:	move	[0x3cd35ea8], m_CurrDay
000127:0x0005f800:	move	[0x3cd35ec8], m_CurrHour
000127:0x0005f810:	move	[0x3cd35ee8], m_CurrMinute
000127:0x0005f820:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000129:0x0005f830:	imove	ret, 0x000001
000129:0x0005f840:	rts
000129:0x0005f848:	jump	0x05fcc8
000131:0x0005f850:	cmpm	w, m_SldStartDay
000131:0x0005f860:	bne	0x05fa58
000133:0x0005f868:	movefm	[0x11d09b60], m_SldStartDay
000133:0x0005f878:	ncalli	SliderWidget.GetCurrent()
000133:0x0005f880:	move	slider_value_start_day, ret
000134:0x0005f890:	mulf	@f01, slider_value_start_day, _f3.640000
000134:0x0005f8a0:	move	@f00, @f01
000134:0x0005f8b0:	addf	start_day_f, @f00, _f1.000000
000135:0x0005f8c0:	cfti	start_day, start_day_f
000137:0x0005f8d0:	imove	i, 0x000000
000137:0x0005f8e0:	jump	0x05f8f0
000137:0x0005f8e8:	inc	i
000137:0x0005f8f0:	cmpi	i, _i12
000137:0x0005f900:	bge	0x05f998
000139:0x0005f908:	ffv	days, m_DaysInMonth[i]
000140:0x0005f918:	cmpi	start_day, days
000140:0x0005f928:	bgt	0x05f970
000142:0x0005f930:	addi	@m00, i, _i1
000142:0x0005f940:	move	m_CurrMonth, @m00
000143:0x0005f950:	move	m_CurrDay, start_day
000144:0x0005f960:	jump	0x05f998
000144:0x0005f968:	jump	0x05f990
000148:0x0005f970:	move	@m00, days
000148:0x0005f980:	subi	start_day, start_day, @m00
000148:0x0005f990:	jump	0x05f8e8
000152:0x0005f998:	move	month, m_CurrMonth
000152:0x0005f9a8:	move	day, m_CurrDay
000152:0x0005f9b8:	call	UIPopupScriptSceneSettings.UpdateSliderStartDay(month, day)
000154:0x0005f9c8:	ncall	GetGame()
000154:0x0005f9d0:	ncalli	CGame.GetWorld()
000154:0x0005f9d8:	move	[0x3cd35e68], m_CurrYear
000154:0x0005f9e8:	move	[0x3cd35e88], m_CurrMonth
000154:0x0005f9f8:	move	[0x3cd35ea8], m_CurrDay
000154:0x0005fa08:	move	[0x3cd35ec8], m_CurrHour
000154:0x0005fa18:	move	[0x3cd35ee8], m_CurrMinute
000154:0x0005fa28:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000156:0x0005fa38:	imove	ret, 0x000001
000156:0x0005fa48:	rts
000156:0x0005fa50:	jump	0x05fcc8
000158:0x0005fa58:	cmpm	w, m_SldOvercast
000158:0x0005fa68:	bne	0x05faf8
000160:0x0005fa70:	call	UIPopupScriptSceneSettings.UpdateSliderOvercast()
000162:0x0005fa78:	movefm	[0x11d09b60], m_SldOvercast
000162:0x0005fa88:	ncalli	SliderWidget.GetCurrent()
000162:0x0005fa90:	mulf	@f01, ret, _f0.010000
000162:0x0005faa0:	move	m_CurrOvercast, @f01
000163:0x0005fab0:	ncall	GetGame()
000163:0x0005fab8:	move	[0x3cd2f230], m_CurrOvercast
000163:0x0005fac8:	ncalli	CGame.SetOvercast([0x3cd2f230], _f0.000000, _f1000.000000)
000165:0x0005fad8:	imove	ret, 0x000001
000165:0x0005fae8:	rts
000165:0x0005faf0:	jump	0x05fcc8
000167:0x0005faf8:	cmpm	w, m_SldRain
000167:0x0005fb08:	bne	0x05fb98
000169:0x0005fb10:	call	UIPopupScriptSceneSettings.UpdateSliderRain()
000171:0x0005fb18:	movefm	[0x11d09b60], m_SldRain
000171:0x0005fb28:	ncalli	SliderWidget.GetCurrent()
000171:0x0005fb30:	mulf	@f01, ret, _f0.010000
000171:0x0005fb40:	move	m_CurrRain, @f01
000172:0x0005fb50:	ncall	GetGame()
000172:0x0005fb58:	move	[0x3cd2f4c8], m_CurrRain
000172:0x0005fb68:	ncalli	CGame.SetRain([0x3cd2f4c8], _f0.000000, _f1000.000000)
000174:0x0005fb78:	imove	ret, 0x000001
000174:0x0005fb88:	rts
000174:0x0005fb90:	jump	0x05fcc8
000176:0x0005fb98:	cmpm	w, m_SldFog
000176:0x0005fba8:	bne	0x05fc38
000178:0x0005fbb0:	call	UIPopupScriptSceneSettings.UpdateSliderFog()
000180:0x0005fbb8:	movefm	[0x11d09b60], m_SldFog
000180:0x0005fbc8:	ncalli	SliderWidget.GetCurrent()
000180:0x0005fbd0:	mulf	@f01, ret, _f0.010000
000180:0x0005fbe0:	move	m_CurrFog, @f01
000181:0x0005fbf0:	ncall	GetGame()
000181:0x0005fbf8:	move	[0x3cd2f350], m_CurrFog
000181:0x0005fc08:	ncalli	CGame.SetFog([0x3cd2f350], _f0.000000, _f1000.000000)
000183:0x0005fc18:	imove	ret, 0x000001
000183:0x0005fc28:	rts
000183:0x0005fc30:	jump	0x05fcc8
000185:0x0005fc38:	cmpm	w, m_SldWindForce
000185:0x0005fc48:	bne	0x05fcc8
000187:0x0005fc50:	call	UIPopupScriptSceneSettings.UpdateSliderWindForce()
000189:0x0005fc58:	movefm	[0x11d09b60], m_SldWindForce
000189:0x0005fc68:	ncalli	SliderWidget.GetCurrent()
000189:0x0005fc70:	mulf	@f01, ret, _f0.010000
000189:0x0005fc80:	move	m_CurrWindForce, @f01
000190:0x0005fc90:	ncall	GetGame()
000190:0x0005fc98:	move	[0x3cd2f6c8], m_CurrWindForce
000190:0x0005fca8:	ncalli	CGame.SetWindForce([0x3cd2f6c8])
000192:0x0005fcb0:	imove	ret, 0x000001
000192:0x0005fcc0:	rts
000195:0x0005fcc8:	imove	ret, 0x000000
000195:0x0005fcd8:	rts
000195:0x0005fce0:	rts
UIPopupScriptSceneSettings::OnOpen()
000203:0x0005fce8:	ncall	GetGame()
000203:0x0005fcf0:	ncalli	CGame.GetWorld()
000203:0x0005fcf8:	icall	World.GetDate(m_OrigYear, m_OrigMonth, m_OrigDay, m_OrigHour, m_OrigMinute)
000204:0x0005fd08:	ncall	GetGame()
000204:0x0005fd10:	ncalli	CGame.GetOvercast()
000204:0x0005fd18:	move	m_OrigOvercast, ret
000205:0x0005fd28:	ncall	GetGame()
000205:0x0005fd30:	ncalli	CGame.GetRain()
000205:0x0005fd38:	move	m_OrigRain, ret
000206:0x0005fd48:	ncall	GetGame()
000206:0x0005fd50:	ncalli	CGame.GetFog()
000206:0x0005fd58:	move	m_OrigFog, ret
000207:0x0005fd68:	ncall	GetGame()
000207:0x0005fd70:	ncalli	CGame.GetWindForce()
000207:0x0005fd78:	move	m_OrigWindForce, ret
000209:0x0005fd88:	move	m_CurrYear, m_OrigYear
000210:0x0005fd98:	move	m_CurrMonth, m_OrigMonth
000211:0x0005fda8:	move	m_CurrDay, m_OrigDay
000212:0x0005fdb8:	move	m_CurrHour, m_OrigHour
000213:0x0005fdc8:	move	m_CurrMinute, m_OrigMinute
000214:0x0005fdd8:	move	m_CurrOvercast, m_OrigOvercast
000215:0x0005fde8:	move	m_CurrRain, m_OrigRain
000216:0x0005fdf8:	move	m_CurrFog, m_OrigFog
000217:0x0005fe08:	move	m_CurrWindForce, m_OrigWindForce
000219:0x0005fe18:	icall	Print(_s'Year')
000220:0x0005fe20:	icall	Print(m_CurrYear)
000222:0x0005fe28:	delete	m_TimerUpdate
000223:0x0005fe30:	movec	obj, this
000223:0x0005fe40:	new	@c00, TimerUpdate
000223:0x0005fe68:	movec	m_TimerUpdate, @c00
000225:0x0005fe78:	call	UIPopupScriptSceneSettings.ResetSliders()
000225:0x0005fe80:	rts
UIPopupScriptSceneSettings::OnClose()
000233:0x0005fe88:	ncall	GetGame()
000233:0x0005fe90:	ncalli	CGame.GetWorld()
000233:0x0005fe98:	move	[0x3cd35e68], m_OrigYear
000233:0x0005fea8:	move	[0x3cd35e88], m_OrigMonth
000233:0x0005feb8:	move	[0x3cd35ea8], m_OrigDay
000233:0x0005fec8:	move	[0x3cd35ec8], m_OrigHour
000233:0x0005fed8:	move	[0x3cd35ee8], m_OrigMinute
000233:0x0005fee8:	ncalli	World.SetDate([0x3cd35e68], [0x3cd35e88], [0x3cd35ea8], [0x3cd35ec8], [0x3cd35ee8])
000234:0x0005fef8:	ncall	GetGame()
000234:0x0005ff00:	move	[0x3cd2f230], m_OrigOvercast
000234:0x0005ff10:	ncalli	CGame.SetOvercast([0x3cd2f230], _f0.000000, _f1000.000000)
000235:0x0005ff20:	ncall	GetGame()
000235:0x0005ff28:	move	[0x3cd2f4c8], m_OrigRain
000235:0x0005ff38:	ncalli	CGame.SetRain([0x3cd2f4c8], _f0.000000, _f1000.000000)
000236:0x0005ff48:	ncall	GetGame()
000236:0x0005ff50:	move	[0x3cd2f350], m_OrigFog
000236:0x0005ff60:	ncalli	CGame.SetFog([0x3cd2f350], _f0.000000, _f1000.000000)
000237:0x0005ff70:	ncall	GetGame()
000237:0x0005ff78:	move	[0x3cd2f6c8], m_OrigWindForce
000237:0x0005ff88:	ncalli	CGame.SetWindForce([0x3cd2f6c8])
000239:0x0005ff90:	movec	[0x3cd16738], m_TimerUpdate
000239:0x0005ffa0:	call	TimerUpdate.Stop()
000240:0x0005ffa8:	delete	m_TimerUpdate
000240:0x0005ffb0:	rts
UIPopupScriptSceneSettings::OnUpdate()
000248:0x0005ffb8:	ncall	GetGame()
000248:0x0005ffc0:	ncalli	CGame.GetWeatherTime()
000248:0x0005ffc8:	icall	ToString(ret)
000248:0x0005ffd0:	movefm	[0x11d09418], m_TxtWeatherTime
000248:0x0005ffe0:	ncalli	TextWidget.SetText(ret)
000249:0x0005ffe8:	ncall	GetGame()
000249:0x0005fff0:	ncalli	CGame.GetAirTemperature()
000249:0x0005fff8:	icall	ToString(ret)
000249:0x00060000:	movefm	[0x11d09418], m_TxtAirTemperature
000249:0x00060010:	ncalli	TextWidget.SetText(ret)
000249:0x00060018:	rts
UIPopupScriptSceneSettings::ResetSliders()
000258:0x00060100:	ncall	GetGame()
000258:0x00060108:	ncalli	CGame.GetWorld()
000258:0x00060110:	icall	World.GetDate(year, month, day, hour, minute)
000259:0x00060120:	citf	@f03, hour
000259:0x00060130:	mulf	@f03, @f03, _f60.000000
000259:0x00060140:	move	@f02, @f03
000259:0x00060150:	citf	@f03, minute
000259:0x00060160:	addf	@f02, @f02, @f03
000259:0x00060170:	move	@f01, @f02
000259:0x00060180:	divf	@f01, @f01, _f14.390000
000259:0x00060190:	move	@f00, @f01
000259:0x000601a0:	movefm	[0x11d09b60], m_SldStartTime
000259:0x000601b0:	ncalli	SliderWidget.SetCurrent(@f00)
000260:0x000601b8:	call	UIPopupScriptSceneSettings.UpdateSliderStartTime(hour, minute)
000262:0x000601c8:	citf	start_day, day
000263:0x000601d8:	move	month_tmp, month
000264:0x000601e8:	cmpi	month_tmp, _i1
000264:0x000601f8:	ble	0x060240
000266:0x00060200:	dec	month_tmp
000267:0x00060208:	ffv	@m00, m_DaysInMonth[month]
000267:0x00060218:	citf	@f00, @m00
000267:0x00060228:	addf	start_day, start_day, @f00
000267:0x00060238:	jump	0x0601e8
000269:0x00060240:	divf	@f01, start_day, _f3.640000
000269:0x00060250:	move	@f00, @f01
000269:0x00060260:	movefm	[0x11d09b60], m_SldStartDay
000269:0x00060270:	ncalli	SliderWidget.SetCurrent(@f00)
000270:0x00060278:	call	UIPopupScriptSceneSettings.UpdateSliderStartDay(month, day)
000272:0x00060288:	ncall	GetGame()
000272:0x00060290:	ncalli	CGame.GetOvercast()
000272:0x00060298:	mulf	@f02, ret, _f100.000000
000272:0x000602a8:	move	@f00, @f02
000272:0x000602b8:	movefm	[0x11d09b60], m_SldOvercast
000272:0x000602c8:	ncalli	SliderWidget.SetCurrent(@f00)
000273:0x000602d0:	call	UIPopupScriptSceneSettings.UpdateSliderOvercast()
000275:0x000602d8:	ncall	GetGame()
000275:0x000602e0:	ncalli	CGame.GetRain()
000275:0x000602e8:	mulf	@f02, ret, _f100.000000
000275:0x000602f8:	move	@f00, @f02
000275:0x00060308:	movefm	[0x11d09b60], m_SldRain
000275:0x00060318:	ncalli	SliderWidget.SetCurrent(@f00)
000276:0x00060320:	call	UIPopupScriptSceneSettings.UpdateSliderRain()
000278:0x00060328:	ncall	GetGame()
000278:0x00060330:	ncalli	CGame.GetFog()
000278:0x00060338:	mulf	@f02, ret, _f100.000000
000278:0x00060348:	move	@f00, @f02
000278:0x00060358:	movefm	[0x11d09b60], m_SldFog
000278:0x00060368:	ncalli	SliderWidget.SetCurrent(@f00)
000279:0x00060370:	call	UIPopupScriptSceneSettings.UpdateSliderFog()
000281:0x00060378:	ncall	GetGame()
000281:0x00060380:	ncalli	CGame.GetWindForce()
000281:0x00060388:	mulf	@f02, ret, _f100.000000
000281:0x00060398:	move	@f00, @f02
000281:0x000603a8:	movefm	[0x11d09b60], m_SldWindForce
000281:0x000603b8:	ncalli	SliderWidget.SetCurrent(@f00)
000282:0x000603c0:	call	UIPopupScriptSceneSettings.UpdateSliderWindForce()
000282:0x000603c8:	rts
UIPopupScriptSceneSettings::UpdateSliderStartTime()
000287:0x000603f0:	move	value, hour
000287:0x00060400:	call	ToStringLen(value, _i2)
000287:0x00060410:	move	hour, value
000287:0x00060420:	adds	@s02, ret, _s':'
000287:0x00060430:	moves	@s00, @s02
000287:0x00060440:	move	value, minute
000287:0x00060450:	pushs	ret
000287:0x00060458:	call	ToStringLen(value, _i2)
000287:0x00060468:	moves	@s02, ret
000287:0x00060478:	pops	ret
000287:0x00060480:	move	minute, value
000287:0x00060490:	adds	label_text, @s00, @s02
000288:0x000604a0:	movefm	[0x11d09418], m_TxtStartTimeValue
000288:0x000604b0:	ncalli	TextWidget.SetText(label_text)
000288:0x000604b8:	rts
UIPopupScriptSceneSettings::UpdateSliderStartDay()
000293:0x000604e0:	icall	ToString(day)
000293:0x000604e8:	adds	@s04, ret, _s'.'
000293:0x000604f8:	moves	@s02, @s04
000293:0x00060508:	pushs	ret
000293:0x00060510:	icall	ToString(month)
000293:0x00060518:	moves	@s04, ret
000293:0x00060528:	pops	ret
000293:0x00060530:	adds	@s02, @s02, @s04
000293:0x00060540:	moves	@s01, @s02
000293:0x00060550:	adds	@s01, @s01, _s'. '
000293:0x00060560:	moves	@s00, @s01
000293:0x00060570:	pushs	ret
000293:0x00060578:	icall	ToString(m_CurrYear)
000293:0x00060580:	moves	@s01, ret
000293:0x00060590:	pops	ret
000293:0x00060598:	adds	label_text, @s00, @s01
000294:0x000605a8:	movefm	[0x11d09418], m_TxtStartDayValue
000294:0x000605b8:	ncalli	TextWidget.SetText(label_text)
000294:0x000605c0:	rts
UIPopupScriptSceneSettings::UpdateSliderOvercast()
000299:0x000605e8:	movefm	[0x11d09b60], m_SldOvercast
000299:0x000605f8:	ncalli	SliderWidget.GetCurrent()
000299:0x00060600:	icall	ToString(ret)
000299:0x00060608:	adds	label_text, ret, _s'%'
000300:0x00060618:	movefm	[0x11d09418], m_TxtOvercastValue
000300:0x00060628:	ncalli	TextWidget.SetText(label_text)
000300:0x00060630:	rts
UIPopupScriptSceneSettings::UpdateSliderRain()
000305:0x00060658:	movefm	[0x11d09b60], m_SldRain
000305:0x00060668:	ncalli	SliderWidget.GetCurrent()
000305:0x00060670:	icall	ToString(ret)
000305:0x00060678:	adds	label_text, ret, _s'%'
000306:0x00060688:	movefm	[0x11d09418], m_TxtRainValue
000306:0x00060698:	ncalli	TextWidget.SetText(label_text)
000306:0x000606a0:	rts
UIPopupScriptSceneSettings::UpdateSliderFog()
000311:0x000606c8:	movefm	[0x11d09b60], m_SldFog
000311:0x000606d8:	ncalli	SliderWidget.GetCurrent()
000311:0x000606e0:	icall	ToString(ret)
000311:0x000606e8:	adds	label_text, ret, _s'%'
000312:0x000606f8:	movefm	[0x11d09418], m_TxtFogValue
000312:0x00060708:	ncalli	TextWidget.SetText(label_text)
000312:0x00060710:	rts
UIPopupScriptSceneSettings::UpdateSliderWindForce()
000317:0x00060738:	movefm	[0x11d09b60], m_SldWindForce
000317:0x00060748:	ncalli	SliderWidget.GetCurrent()
000317:0x00060750:	icall	ToString(ret)
000317:0x00060758:	adds	label_text, ret, _s'%'
000318:0x00060768:	movefm	[0x11d09418], m_TxtWindForceValue
000318:0x00060778:	ncalli	TextWidget.SetText(label_text)
000318:0x00060780:	rts
UIPopupScriptSQFWatchers::UIPopupScriptSQFWatchers()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript/UIPopupScriptSQFWatchers.c
000027:0x00060948:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sw_ok')
000027:0x00060950:	movetm	m_BtnOk, ret
000028:0x00060960:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sw_cancel')
000028:0x00060968:	movetm	m_BtnCancel, ret
000029:0x00060978:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_sw_editbox')
000029:0x00060980:	movetm	m_SQFEditBox, ret
000030:0x00060990:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_sw_editbox_background')
000030:0x00060998:	movetm	m_SQFEditBoxBackground, ret
000031:0x000609a8:	ncalli	Widget.FindAnyWidget(_s'txt_ppp_sw_editbox_edge')
000031:0x000609b0:	movetm	m_SQFEditBoxEdge, ret
000032:0x000609c0:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sw_add_watch')
000032:0x000609c8:	movetm	m_AddSqfDebugWatcherButton, ret
000033:0x000609d8:	ncalli	Widget.FindAnyWidget(_s'btn_ppp_sw_remove_watch')
000033:0x000609e0:	movetm	m_RemoveSqfDebugWatcherButton, ret
000035:0x000609f0:	new	@c00, map<int,Widget>
000035:0x00060a10:	movetm	m_SqfDebugWatchersRows, @c00
000036:0x00060a20:	new	@c00, map<int,EditBoxWidget>
000036:0x00060a40:	movetm	m_SqfDebugWatchers, @c00
000037:0x00060a50:	new	@c00, map<int,EditBoxWidget>
000037:0x00060a70:	movetm	m_SqfDebugWatchersResults, @c00
000038:0x00060a80:	new	@c00, map<int,ButtonWidget>
000038:0x00060aa0:	movetm	m_SqfDebugWatchersButtons, @c00
000039:0x00060ab0:	new	@c00, map<int,ButtonWidget>
000039:0x00060ad0:	movetm	m_SqfDebugWatchersClearButtons, @c00
000041:0x00060ae0:	movem	m_SqfDebugWatchersPanel, wgt
000043:0x00060af0:	call	GetPlugin(_T(PluginLocalSqfHistory))
000043:0x00060b00:	movec	m_ModuleLocalSqfHistory, ret
000045:0x00060b10:	new	@c00, array<string>
000045:0x00060b30:	movetm	m_SqfConsoleHistory, @c00
000046:0x00060b40:	movec	[0x45f4b358], m_ModuleLocalSqfHistory
000046:0x00060b50:	call	PluginLocalSqfHistory.GetAllLines()
000046:0x00060b58:	movem	m_SqfConsoleHistory, ret
000048:0x00060b68:	call	UIPopupScriptSQFWatchers.SqfHistoryBack()
000050:0x00060b70:	call	GetPlugin(_T(PluginDeveloper))
000050:0x00060b80:	movec	module_dev, ret
000051:0x00060b90:	call	PluginDeveloper.GetSqfDebugWatchersCount()
000051:0x00060b98:	move	sqf_debug_watchers_count, ret
000052:0x00060ba8:	imove	i, 0x000001
000052:0x00060bb8:	jump	0x060bc8
000052:0x00060bc0:	inc	i
000052:0x00060bc8:	cmpi	i, sqf_debug_watchers_count
000052:0x00060bd8:	bgt	0x060c28
000054:0x00060be0:	call	PluginDeveloper.GetSqfDebugWatcherById(i)
000054:0x00060bf0:	movec	sqf_debug_watcher, ret
000056:0x00060c00:	cmpc	sqf_debug_watcher, NULL
000056:0x00060c10:	beq	0x060c20
000058:0x00060c18:	call	UIPopupScriptSQFWatchers.AddSqfDebugWatcher()
000058:0x00060c20:	jump	0x060bc0
000058:0x00060c28:	rts
UIPopupScriptSQFWatchers::OnSqfDebugWatcherResult()
000065:0x00060c90:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000065:0x00060ca0:	icall	map<int,EditBoxWidget>.Get(id)
000065:0x00060ca8:	movetm	sqf_debug_watcher_result, ret
000067:0x00060cb8:	cmpcm	sqf_debug_watcher_result, NULL
000067:0x00060cc8:	beq	0x060cd8
000069:0x00060cd0:	ncalli	EditBoxWidget.SetText(result)
000069:0x00060cd8:	release	sqf_debug_watcher_result
000069:0x00060ce0:	rts
UIPopupScriptSQFWatchers::ApplySQF()
000075:0x00060d38:	moves	sqf_commands, _s''
000076:0x00060d48:	movefm	[0x11d0a218], m_SQFEditBox
000076:0x00060d58:	icall	MultilineEditBoxWidget.GetText(sqf_commands)
000077:0x00060d60:	ncall	GetGame()
000077:0x00060d68:	ncalli	CGame.ExecuteSQF(sqf_commands)
000078:0x00060d70:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000078:0x00060d80:	icall	array<string>.Insert(sqf_commands)
000079:0x00060d88:	movec	[0x45f4b358], m_ModuleLocalSqfHistory
000079:0x00060d98:	call	PluginLocalSqfHistory.AddNewLine(sqf_commands)
000079:0x00060da8:	rts
UIPopupScriptSQFWatchers::SqfHistoryBack()
000084:0x00060e00:	cmpcm	m_SQFEditBox, NULL
000084:0x00060e10:	beq	0x060ec8
000086:0x00060e18:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000086:0x00060e28:	ncalli	array<string>.Count()
000086:0x00060e30:	subi	@m01, ret, m_SqfHistoryRow
000086:0x00060e40:	move	@m00, @m01
000086:0x00060e50:	subi	history_index, @m00, _i1
000087:0x00060e60:	cmpi	history_index, _i-1
000087:0x00060e70:	ble	0x060ec8
000089:0x00060e78:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000089:0x00060e88:	icall	array<string>.Get(history_index)
000089:0x00060e90:	movefm	[0x11d0a218], m_SQFEditBox
000089:0x00060ea0:	ncalli	MultilineEditBoxWidget.SetText(ret)
000090:0x00060ea8:	addi	@m00, m_SqfHistoryRow, _i1
000090:0x00060eb8:	move	m_SqfHistoryRow, @m00
000090:0x00060ec8:	rts
UIPopupScriptSQFWatchers::SqfHistoryForward()
000097:0x00060ef0:	cmpcm	m_SQFEditBox, NULL
000097:0x00060f00:	beq	0x060fd0
000099:0x00060f08:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000099:0x00060f18:	ncalli	array<string>.Count()
000099:0x00060f20:	subi	@m01, ret, m_SqfHistoryRow
000099:0x00060f30:	move	@m00, @m01
000099:0x00060f40:	addi	history_index, @m00, _i1
000100:0x00060f50:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000100:0x00060f60:	ncalli	array<string>.Count()
000100:0x00060f68:	cmpi	history_index, ret
000100:0x00060f78:	bge	0x060fd0
000102:0x00060f80:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000102:0x00060f90:	icall	array<string>.Get(history_index)
000102:0x00060f98:	movefm	[0x11d0a218], m_SQFEditBox
000102:0x00060fa8:	ncalli	MultilineEditBoxWidget.SetText(ret)
000103:0x00060fb0:	subi	@m00, m_SqfHistoryRow, _i1
000103:0x00060fc0:	move	m_SqfHistoryRow, @m00
000103:0x00060fd0:	rts
UIPopupScriptSQFWatchers::GetSqfCommandForSqfDebugWatcher()
000110:0x00060ff8:	movefm	[0x703ad18], m_SqfDebugWatchers
000110:0x00061008:	icall	map<int,EditBoxWidget>.Get(id)
000110:0x00061010:	movetm	sqf_debug_watcher, ret
000112:0x00061020:	cmpcm	sqf_debug_watcher, NULL
000112:0x00061030:	beq	0x061068
000114:0x00061038:	icall	EditBoxWidget.GetText()
000114:0x00061040:	moves	ret, ret
000114:0x00061050:	release	sqf_debug_watcher
000114:0x00061058:	rts
000114:0x00061060:	jump	0x061088
000118:0x00061068:	moves	ret, _s''
000118:0x00061078:	release	sqf_debug_watcher
000118:0x00061080:	rts
000118:0x00061088:	release	sqf_debug_watcher
000118:0x00061090:	rts
UIPopupScriptSQFWatchers::AddSqfDebugWatcher()
000124:0x00061488:	call	GetPlugin(_T(PluginDeveloper))
000124:0x00061498:	movec	module_dev, ret
000126:0x000614a8:	movefm	[0x703ad18], m_SqfDebugWatchers
000126:0x000614b8:	ncalli	map<int,EditBoxWidget>.Count()
000126:0x000614c0:	addi	next_id, ret, _i1
000127:0x000614d0:	cmpi	next_id, MAX_SQF_DEBUG_WATCHERS_COUNT
000127:0x000614e0:	bgt	0x061a00
000129:0x000614e8:	ncall	GetGame()
000129:0x000614f0:	ncalli	CGame.GetWorkspace()
000129:0x000614f8:	movefm	[0x11d18388], m_SqfDebugWatchersPanel
000129:0x00061508:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/scene_editor_sqf_debug_watcher_row.layout', [0x11d18388])
000129:0x00061510:	movetm	root, ret
000130:0x00061520:	movefm	[0x703ad18], m_SqfDebugWatchers
000130:0x00061530:	ncalli	map<int,EditBoxWidget>.Count()
000130:0x00061538:	citf	@f03, ret
000130:0x00061548:	mulf	@f03, @f03, _f25.000000
000130:0x00061558:	move	@f01, @f03
000130:0x00061568:	addf	@f01, _f30.000000, @f01
000130:0x00061578:	move	@f00, @f01
000130:0x00061588:	ncalli	Widget.SetPos(_f10.000000, @f00, _i1)
000132:0x00061598:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcher')
000132:0x000615a0:	movetm	new_sqf_debug_watcher_input, ret
000133:0x000615b0:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherResult')
000133:0x000615b8:	movetm	new_sqf_debug_watcher_result, ret
000134:0x000615c8:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherButton')
000134:0x000615d0:	movetm	new_sqf_debug_watcher_button, ret
000135:0x000615e0:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherClearButton')
000135:0x000615e8:	movetm	new_sqf_debug_watcher_clear_buggon, ret
000137:0x000615f8:	icall	ToString(next_id)
000137:0x00061600:	adds	@s01, _s'SqfDebugWatcher', ret
000137:0x00061610:	moves	@s00, @s01
000137:0x00061620:	ncalli	EditBoxWidget.SetName(@s00)
000138:0x00061628:	icall	ToString(next_id)
000138:0x00061630:	adds	@s02, _s'SqfDebugWatcher', ret
000138:0x00061640:	moves	@s01, @s02
000138:0x00061650:	adds	@s01, @s01, _s'Result'
000138:0x00061660:	moves	@s00, @s01
000138:0x00061670:	ncalli	EditBoxWidget.SetName(@s00)
000139:0x00061678:	icall	ToString(next_id)
000139:0x00061680:	adds	@s02, _s'SqfDebugWatcher', ret
000139:0x00061690:	moves	@s01, @s02
000139:0x000616a0:	adds	@s01, @s01, _s'Button'
000139:0x000616b0:	moves	@s00, @s01
000139:0x000616c0:	ncalli	ButtonWidget.SetName(@s00)
000140:0x000616c8:	icall	ToString(next_id)
000140:0x000616d0:	adds	@s02, _s'SqfDebugWatcher', ret
000140:0x000616e0:	moves	@s01, @s02
000140:0x000616f0:	adds	@s01, @s01, _s'ClearButton'
000140:0x00061700:	moves	@s00, @s01
000140:0x00061710:	ncalli	ButtonWidget.SetName(@s00)
000142:0x00061718:	movefm	@c00, root
000142:0x00061728:	movefm	[0x703ac40], m_SqfDebugWatchersRows
000142:0x00061738:	icall	map<int,Widget>.Set(next_id, @c00)
000143:0x00061740:	movefm	@c00, new_sqf_debug_watcher_input
000143:0x00061750:	movefm	[0x703ad18], m_SqfDebugWatchers
000143:0x00061760:	icall	map<int,EditBoxWidget>.Set(next_id, @c00)
000144:0x00061768:	movefm	@c00, new_sqf_debug_watcher_result
000144:0x00061778:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000144:0x00061788:	icall	map<int,EditBoxWidget>.Set(next_id, @c00)
000145:0x00061790:	movefm	@c00, new_sqf_debug_watcher_button
000145:0x000617a0:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000145:0x000617b0:	icall	map<int,ButtonWidget>.Set(next_id, @c00)
000146:0x000617b8:	movefm	@c00, new_sqf_debug_watcher_clear_buggon
000146:0x000617c8:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000146:0x000617d8:	icall	map<int,ButtonWidget>.Set(next_id, @c00)
000148:0x000617e0:	call	PluginDeveloper.GetSqfDebugWatcherById(next_id)
000148:0x000617f0:	movec	sqf_debug_watcher, ret
000150:0x00061800:	cmpc	sqf_debug_watcher, NULL
000150:0x00061810:	beq	0x061868
000152:0x00061818:	call	SqfDebugWatcher.GetSqfCommand()
000152:0x00061820:	ncalli	EditBoxWidget.SetText(ret)
000154:0x00061828:	call	SqfDebugWatcher.IsRunning()
000154:0x00061830:	cmpi	ret, _i0
000154:0x00061840:	beq	0x061858
000156:0x00061848:	ncalli	ButtonWidget.SetText(_s'STOP')
000156:0x00061850:	jump	0x061860
000160:0x00061858:	ncalli	ButtonWidget.SetText(_s'RUN')
000160:0x00061860:	jump	0x061878
000165:0x00061868:	call	PluginDeveloper.AddSqfDebugWatcher(next_id)
000169:0x00061878:	movefm	[0x11cf2b58], m_SqfDebugWatchersPanel
000169:0x00061888:	icall	Widget.GetSize(m_orginal_width, m_orginal_height)
000170:0x00061890:	addf	@f01, m_orginal_height, _f25.000000
000170:0x000618a0:	move	@f00, @f01
000170:0x000618b0:	movefm	[0x11cf2b58], m_SqfDebugWatchersPanel
000170:0x000618c0:	ncalli	Widget.SetSize(m_orginal_width, @f00, _i1)
000172:0x000618d0:	movefm	[0x11d0a218], m_SQFEditBox
000172:0x000618e0:	icall	MultilineEditBoxWidget.GetPos(m_orginal_width, m_orginal_height)
000173:0x000618e8:	addf	@f01, m_orginal_height, _f25.000000
000173:0x000618f8:	move	@f00, @f01
000173:0x00061908:	movefm	[0x11d0a218], m_SQFEditBox
000173:0x00061918:	ncalli	MultilineEditBoxWidget.SetPos(m_orginal_width, @f00, _i1)
000174:0x00061928:	movefm	[0x11cf2b58], m_SQFEditBoxBackground
000174:0x00061938:	icall	Widget.GetPos(m_orginal_width, m_orginal_height)
000175:0x00061940:	addf	@f01, m_orginal_height, _f25.000000
000175:0x00061950:	move	@f00, @f01
000175:0x00061960:	movefm	[0x11cf2b58], m_SQFEditBoxBackground
000175:0x00061970:	ncalli	Widget.SetPos(m_orginal_width, @f00, _i1)
000176:0x00061980:	movefm	[0x11cf2b58], m_SQFEditBoxEdge
000176:0x00061990:	icall	Widget.GetPos(m_orginal_width, m_orginal_height)
000177:0x00061998:	addf	@f01, m_orginal_height, _f25.000000
000177:0x000619a8:	move	@f00, @f01
000177:0x000619b8:	movefm	[0x11cf2b58], m_SQFEditBoxEdge
000177:0x000619c8:	ncalli	Widget.SetPos(m_orginal_width, @f00, _i1)
000177:0x000619d8:	release	root
000177:0x000619e0:	release	new_sqf_debug_watcher_input
000177:0x000619e8:	release	new_sqf_debug_watcher_result
000177:0x000619f0:	release	new_sqf_debug_watcher_button
000177:0x000619f8:	release	new_sqf_debug_watcher_clear_buggon
000177:0x00061a00:	rts
UIPopupScriptSQFWatchers::RemoveLastSqfDebugWatcher()
000183:0x00061ad0:	call	GetPlugin(_T(PluginDeveloper))
000183:0x00061ae0:	movec	module_dev, ret
000184:0x00061af0:	call	PluginDeveloper.GetSqfDebugWatchersCount()
000184:0x00061af8:	move	last_id, ret
000186:0x00061b08:	call	PluginDeveloper.RemoveLastSqfDebugWatcher()
000186:0x00061b10:	cmpi	ret, _i0
000186:0x00061b20:	beq	0x061d38
000188:0x00061b28:	movefm	[0x703ac40], m_SqfDebugWatchersRows
000188:0x00061b38:	icall	map<int,Widget>.Get(last_id)
000188:0x00061b40:	movetm	w, ret
000189:0x00061b50:	ncalli	Widget.Destroy()
000191:0x00061b58:	movefm	[0x703ac40], m_SqfDebugWatchersRows
000191:0x00061b68:	icall	map<int,Widget>.Remove(last_id)
000192:0x00061b70:	movefm	[0x703ad18], m_SqfDebugWatchers
000192:0x00061b80:	icall	map<int,EditBoxWidget>.Remove(last_id)
000193:0x00061b88:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000193:0x00061b98:	icall	map<int,EditBoxWidget>.Remove(last_id)
000194:0x00061ba0:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000194:0x00061bb0:	icall	map<int,ButtonWidget>.Remove(last_id)
000195:0x00061bb8:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000195:0x00061bc8:	icall	map<int,ButtonWidget>.Remove(last_id)
000199:0x00061bd0:	movefm	[0x11cf2b58], m_SqfDebugWatchersPanel
000199:0x00061be0:	icall	Widget.GetSize(m_orginal_width, m_orginal_height)
000200:0x00061be8:	subf	@f01, m_orginal_height, _f25.000000
000200:0x00061bf8:	move	@f00, @f01
000200:0x00061c08:	movefm	[0x11cf2b58], m_SqfDebugWatchersPanel
000200:0x00061c18:	ncalli	Widget.SetSize(m_orginal_width, @f00, _i1)
000202:0x00061c28:	movefm	[0x11d0a218], m_SQFEditBox
000202:0x00061c38:	icall	MultilineEditBoxWidget.GetPos(m_orginal_width, m_orginal_height)
000203:0x00061c40:	subf	@f01, m_orginal_height, _f25.000000
000203:0x00061c50:	move	@f00, @f01
000203:0x00061c60:	movefm	[0x11d0a218], m_SQFEditBox
000203:0x00061c70:	ncalli	MultilineEditBoxWidget.SetPos(m_orginal_width, @f00, _i1)
000204:0x00061c80:	movefm	[0x11cf2b58], m_SQFEditBoxBackground
000204:0x00061c90:	icall	Widget.GetPos(m_orginal_width, m_orginal_height)
000205:0x00061c98:	subf	@f01, m_orginal_height, _f25.000000
000205:0x00061ca8:	move	@f00, @f01
000205:0x00061cb8:	movefm	[0x11cf2b58], m_SQFEditBoxBackground
000205:0x00061cc8:	ncalli	Widget.SetPos(m_orginal_width, @f00, _i1)
000206:0x00061cd8:	movefm	[0x11cf2b58], m_SQFEditBoxEdge
000206:0x00061ce8:	icall	Widget.GetPos(m_orginal_width, m_orginal_height)
000207:0x00061cf0:	subf	@f01, m_orginal_height, _f25.000000
000207:0x00061d00:	move	@f00, @f01
000207:0x00061d10:	movefm	[0x11cf2b58], m_SQFEditBoxEdge
000207:0x00061d20:	ncalli	Widget.SetPos(m_orginal_width, @f00, _i1)
000207:0x00061d30:	release	w
000207:0x00061d38:	rts
UIPopupScriptSQFWatchers::OnClick()
000213:0x00061ef8:	call	UIPopupScript.OnClick(w, x, y, button)
000215:0x00061f08:	call	GetPlugin(_T(PluginDeveloper))
000215:0x00061f18:	movec	module_dev, ret
000222:0x00061f28:	imove	i, 0x000000
000222:0x00061f38:	jump	0x061f48
000222:0x00061f40:	inc	i
000222:0x00061f48:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000222:0x00061f58:	ncalli	map<int,ButtonWidget>.Count()
000222:0x00061f60:	cmpi	i, ret
000222:0x00061f70:	bge	0x0620e8
000224:0x00061f78:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000224:0x00061f88:	icall	map<int,ButtonWidget>.GetElement(i)
000224:0x00061f90:	movetm	sqf_debug_watcher_button, ret
000226:0x00061fa0:	cmpm	w, sqf_debug_watcher_button
000226:0x00061fb0:	bne	0x0620d8
000228:0x00061fb8:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000228:0x00061fc8:	icall	map<int,ButtonWidget>.GetKey(i)
000228:0x00061fd0:	move	id, ret
000229:0x00061fe0:	call	PluginDeveloper.GetSqfDebugWatcherById(id)
000229:0x00061ff0:	movec	sqf_debug_watcher, ret
000231:0x00062000:	cmpc	sqf_debug_watcher, NULL
000231:0x00062010:	beq	0x0620a8
000233:0x00062018:	call	SqfDebugWatcher.IsRunning()
000233:0x00062020:	cmpi	ret, _i0
000233:0x00062030:	beq	0x062098
000235:0x00062038:	call	SqfDebugWatcher.Stop()
000236:0x00062040:	ncalli	ButtonWidget.SetText(_s'RUN')
000237:0x00062048:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000237:0x00062058:	icall	map<int,EditBoxWidget>.GetElement(i)
000237:0x00062060:	movetm	sqf_debug_watcher_result, ret
000239:0x00062070:	cmpcm	sqf_debug_watcher_result, NULL
000239:0x00062080:	beq	0x062090
000241:0x00062088:	ncalli	EditBoxWidget.SetText(_s'')
000241:0x00062090:	jump	0x0620a8
000246:0x00062098:	call	SqfDebugWatcher.Run()
000247:0x000620a0:	ncalli	ButtonWidget.SetText(_s'STOP')
000251:0x000620a8:	imove	ret, 0x000001
000251:0x000620b8:	release	sqf_debug_watcher_button
000251:0x000620c0:	release	sqf_debug_watcher_input
000251:0x000620c8:	release	sqf_debug_watcher_result
000251:0x000620d0:	rts
000251:0x000620d8:	release	sqf_debug_watcher_button
000251:0x000620e0:	jump	0x061f40
000255:0x000620e8:	imove	i, 0x000000
000255:0x000620f8:	jump	0x062108
000255:0x00062100:	inc	i
000255:0x00062108:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000255:0x00062118:	ncalli	map<int,ButtonWidget>.Count()
000255:0x00062120:	cmpi	i, ret
000255:0x00062130:	bge	0x0622e0
000257:0x00062138:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000257:0x00062148:	icall	map<int,ButtonWidget>.GetElement(i)
000257:0x00062150:	movetm	sqf_debug_watcher_clear_button, ret
000259:0x00062160:	cmpm	w, sqf_debug_watcher_clear_button
000259:0x00062170:	bne	0x0622d0
000261:0x00062178:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000261:0x00062188:	icall	map<int,ButtonWidget>.GetKey(i)
000261:0x00062190:	move	id, ret
000262:0x000621a0:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000262:0x000621b0:	icall	map<int,ButtonWidget>.GetElement(i)
000262:0x000621b8:	movetm	sqf_debug_watcher_button, ret
000263:0x000621c8:	call	PluginDeveloper.GetSqfDebugWatcherById(id)
000263:0x000621d8:	movec	sqf_debug_watcher, ret
000265:0x000621e8:	cmpc	sqf_debug_watcher, NULL
000265:0x000621f8:	beq	0x0622a0
000267:0x00062200:	call	SqfDebugWatcher.IsRunning()
000267:0x00062208:	cmpi	ret, _i0
000267:0x00062218:	beq	0x062230
000269:0x00062220:	call	SqfDebugWatcher.Stop()
000270:0x00062228:	ncalli	ButtonWidget.SetText(_s'RUN')
000273:0x00062230:	call	SqfDebugWatcher.SetSqfCommand(_s'')
000275:0x00062240:	movefm	[0x703ad18], m_SqfDebugWatchers
000275:0x00062250:	icall	map<int,EditBoxWidget>.GetElement(i)
000275:0x00062258:	movetm	sqf_debug_watcher_input, ret
000276:0x00062268:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000276:0x00062278:	icall	map<int,EditBoxWidget>.GetElement(i)
000276:0x00062280:	movetm	sqf_debug_watcher_result, ret
000278:0x00062290:	ncalli	EditBoxWidget.SetText(_s'')
000279:0x00062298:	ncalli	EditBoxWidget.SetText(_s'')
000282:0x000622a0:	imove	ret, 0x000001
000282:0x000622b0:	release	sqf_debug_watcher_clear_button
000282:0x000622b8:	release	sqf_debug_watcher_input
000282:0x000622c0:	release	sqf_debug_watcher_result
000282:0x000622c8:	rts
000282:0x000622d0:	release	sqf_debug_watcher_clear_button
000282:0x000622d8:	jump	0x062100
000286:0x000622e0:	cmpm	w, m_BtnOk
000286:0x000622f0:	bne	0x062338
000288:0x000622f8:	call	UIPopupScriptSQFWatchers.ApplySQF()
000289:0x00062300:	call	UIPopupScriptSQFWatchers.PopupBack()
000290:0x00062308:	imove	ret, 0x000001
000290:0x00062318:	release	sqf_debug_watcher_input
000290:0x00062320:	release	sqf_debug_watcher_result
000290:0x00062328:	rts
000290:0x00062330:	jump	0x062420
000292:0x00062338:	cmpm	w, m_BtnCancel
000292:0x00062348:	bne	0x062388
000294:0x00062350:	call	UIPopupScriptSQFWatchers.PopupBack()
000295:0x00062358:	imove	ret, 0x000001
000295:0x00062368:	release	sqf_debug_watcher_input
000295:0x00062370:	release	sqf_debug_watcher_result
000295:0x00062378:	rts
000295:0x00062380:	jump	0x062420
000297:0x00062388:	cmpm	w, m_AddSqfDebugWatcherButton
000297:0x00062398:	bne	0x0623d8
000299:0x000623a0:	call	UIPopupScriptSQFWatchers.AddSqfDebugWatcher()
000300:0x000623a8:	imove	ret, 0x000001
000300:0x000623b8:	release	sqf_debug_watcher_input
000300:0x000623c0:	release	sqf_debug_watcher_result
000300:0x000623c8:	rts
000300:0x000623d0:	jump	0x062420
000302:0x000623d8:	cmpm	w, m_RemoveSqfDebugWatcherButton
000302:0x000623e8:	bne	0x062420
000304:0x000623f0:	call	UIPopupScriptSQFWatchers.RemoveLastSqfDebugWatcher()
000305:0x000623f8:	imove	ret, 0x000001
000305:0x00062408:	release	sqf_debug_watcher_input
000305:0x00062410:	release	sqf_debug_watcher_result
000305:0x00062418:	rts
000308:0x00062420:	imove	ret, 0x000000
000308:0x00062430:	release	sqf_debug_watcher_input
000308:0x00062438:	release	sqf_debug_watcher_result
000308:0x00062440:	rts
000308:0x00062448:	release	sqf_debug_watcher_input
000308:0x00062450:	release	sqf_debug_watcher_result
000308:0x00062458:	rts
UIPopupScript::UIPopupScript()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPopupScript.c
000008:0x00062460:	movem	m_WgtRoot, wgt
000008:0x00062470:	rts
UIPopupScript::Show()
000021:0x00062478:	movefm	[0x11cf2b58], m_WgtRoot
000021:0x00062488:	ncalli	Widget.Show(show)
000021:0x00062490:	rts
UIPopupScript::OnClick()
000026:0x00062498:	imove	ret, 0x000000
000026:0x000624a8:	rts
000026:0x000624b0:	rts
UIPopupScript::OnChange()
000031:0x000624b8:	imove	ret, 0x000000
000031:0x000624c8:	rts
000031:0x000624d0:	rts
UIPopupScript::PopupBack()
000039:0x000624f8:	ncall	GetGame()
000039:0x00062500:	ncalli	CGame.GetUIManager()
000039:0x00062508:	ncalli	UIManager.GetMenu()
000039:0x00062510:	movetm	menu, ret
000040:0x00062520:	call	SceneEditorMenu.PopupBack()
000040:0x00062528:	release	menu
000040:0x00062530:	rts
UIPopupScript::PopupOpen()
000048:0x00062558:	ncall	GetGame()
000048:0x00062560:	ncalli	CGame.GetUIManager()
000048:0x00062568:	ncalli	UIManager.GetMenu()
000048:0x00062570:	movetm	menu, ret
000049:0x00062580:	call	SceneEditorMenu.PopupOpen(popup_id, param)
000049:0x00062590:	movec	ret, ret
000049:0x000625a0:	release	menu
000049:0x000625a8:	rts
000049:0x000625b0:	release	menu
000049:0x000625b8:	rts
UIPopupScript::GetSceneEditor()
000057:0x000625e0:	call	GetPlugin(_T(PluginSceneManager))
000057:0x000625f0:	movec	m, ret
000058:0x00062600:	movec	ret, m
000058:0x00062610:	rts
000058:0x00062618:	rts
UIPropertyAttachment::UIPropertyAttachment()
//scripts/5_Mission/GUI/SceneEditorMenu/UIPropertyAttachment.c
000015:0x00062680:	movem	m_WgtRoot, root
000017:0x00062690:	new	@c00, array<string>
000017:0x000626b0:	movetm	m_ComboItems, @c00
000019:0x000626c0:	ncall	GetGame()
000019:0x000626c8:	ncalli	CGame.GetWorkspace()
000019:0x000626d0:	movefm	[0x11d18388], m_WgtRoot
000019:0x000626e0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_scene_editor/day_z_scene_editor_attachment.layout', [0x11d18388])
000019:0x000626e8:	movetm	m_WgtThis, ret
000020:0x000626f8:	movefm	[0x11cf2b58], m_WgtThis
000020:0x00062708:	ncalli	Widget.FindAnyWidget(_s'combo_box')
000020:0x00062710:	movetm	m_WgtComboBox, ret
000021:0x00062720:	movefm	[0x11cf2b58], m_WgtThis
000021:0x00062730:	ncalli	Widget.FindAnyWidget(_s'txt_slot_name')
000021:0x00062738:	movetm	m_WgtSlotName, ret
000021:0x00062748:	rts
UIPropertyAttachment::~UIPropertyAttachment()
000026:0x00062750:	movetm	m_WgtRoot, NULL
000027:0x00062760:	movetm	m_WgtComboBox, NULL
000029:0x00062770:	movefm	[0x11cf2b58], m_WgtThis
000029:0x00062780:	ncalli	Widget.Destroy()
000029:0x00062788:	rts
UIPropertyAttachment::OnClick()
000034:0x00062860:	cmpm	w, m_WgtComboBox
000034:0x00062870:	bne	0x062a90
000036:0x00062878:	cmpi	m_PrevIndex, _i0
000036:0x00062888:	beq	0x062908
000038:0x00062890:	move	[0x3cd22798], m_SlotID
000038:0x000628a0:	movefm	[0x3cd16648], m_Obj
000038:0x000628b0:	ncalli	EntityAI.FindAttachment([0x3cd22798])
000038:0x000628b8:	movetm	attachment, ret
000039:0x000628c8:	movefm	[0x3cd22ae0], attachment
000039:0x000628d8:	move	[0x3cd22b00], m_SlotID
000039:0x000628e8:	movefm	[0x3cd16648], m_Obj
000039:0x000628f8:	ncalli	EntityAI.RemoveAttachmentEx([0x3cd22ae0], [0x3cd22b00])
000039:0x00062900:	release	attachment
000042:0x00062908:	movefm	[0x11d09bb0], m_WgtComboBox
000042:0x00062918:	ncalli	XComboBoxWidget.GetCurrentItem()
000042:0x00062920:	move	curr_index, ret
000044:0x00062930:	cmpi	curr_index, _i0
000044:0x00062940:	beq	0x062a68
000046:0x00062948:	call	GetPlugin(_T(PluginDeveloper))
000046:0x00062958:	movec	module_dev, ret
000047:0x00062968:	movefm	[0x11d0bb58], m_ComboItems
000047:0x00062978:	icall	array<string>.Get(curr_index)
000047:0x00062980:	movefm	[0x3cd16648], m_Obj
000047:0x00062990:	ncalli	EntityAI.GetPosition()
000047:0x00062998:	movem	attachmentObject, m_Obj
000047:0x000629a8:	call	PluginDeveloper.SpawnItem(PLAYER, ret, SPAWNTYPE_ATTACHMENT, _f0.000000, _f0.000000, _f0.000000, true, ret, attachmentObject)
000047:0x000629c8:	movem	e, ret
000049:0x000629d8:	cmpcm	e, NULL
000049:0x000629e8:	beq	0x062a60
000051:0x000629f0:	movefm	[0x11d0a2c8], e
000051:0x00062a00:	ncall	IsInherited([0x11d0a2c8], _T(ItemBase))
000051:0x00062a08:	cmpi	ret, _i0
000051:0x00062a18:	beq	0x062a60
000053:0x00062a20:	movefm	@c00, e
000053:0x00062a30:	movetm	item, @c00
000054:0x00062a40:	call	ItemBase.GetQuantityMax()
000054:0x00062a48:	call	ItemBase.SetQuantity(ret, _i0)
000054:0x00062a58:	release	item
000054:0x00062a60:	release	e
000061:0x00062a68:	move	m_PrevIndex, curr_index
000063:0x00062a78:	imove	ret, 0x000001
000063:0x00062a88:	rts
000066:0x00062a90:	imove	ret, 0x000000
000066:0x00062aa0:	rts
000066:0x00062aa8:	rts
UIPropertyAttachment::SetPos()
000071:0x00062ab0:	movefm	[0x11cf2b58], m_WgtThis
000071:0x00062ac0:	ncalli	Widget.SetPos(x, y, _i1)
000071:0x00062ad0:	rts
UIPropertyAttachment::SetSize()
000076:0x00062ad8:	movefm	[0x11cf2b58], m_WgtThis
000076:0x00062ae8:	ncalli	Widget.SetSize(width, height, _i1)
000076:0x00062af8:	rts
UIPropertyAttachment::Show()
000081:0x00062bd0:	movefm	[0x11cf2b58], m_WgtThis
000081:0x00062be0:	ncalli	Widget.Show(true)
000083:0x00062be8:	movem	m_Obj, e
000084:0x00062bf8:	movefm	[0x11d0bb58], m_ComboItems
000084:0x00062c08:	ncalli	array<string>.Clear()
000085:0x00062c10:	movefm	[0x11d0bb58], m_ComboItems
000085:0x00062c20:	icall	array<string>.Insert(_s'none')
000086:0x00062c28:	movefm	[0x11d0bb58], m_ComboItems
000086:0x00062c38:	call	array<string>.InsertAll(att_items)
000088:0x00062c48:	movefm	[0x11d09418], m_WgtSlotName
000088:0x00062c58:	ncalli	TextWidget.SetText(slot_name)
000090:0x00062c60:	movefm	[0x11d09bb0], m_WgtComboBox
000090:0x00062c70:	ncalli	XComboBoxWidget.ClearAll()
000092:0x00062c78:	ncall	GetGame()
000092:0x00062c80:	ncalli	CGame.GetInventorySlot(slot_name)
000092:0x00062c88:	move	m_SlotID, ret
000093:0x00062c98:	move	[0x3cd22798], m_SlotID
000093:0x00062ca8:	ncalli	EntityAI.FindAttachment([0x3cd22798])
000093:0x00062cb0:	movetm	attachment, ret
000094:0x00062cc0:	imove	selected_index, 0x000000
000096:0x00062cd0:	imove	i, 0x000000
000096:0x00062ce0:	jump	0x062cf0
000096:0x00062ce8:	inc	i
000096:0x00062cf0:	movefm	[0x11d0bb58], m_ComboItems
000096:0x00062d00:	ncalli	array<string>.Count()
000096:0x00062d08:	cmpi	i, ret
000096:0x00062d18:	bge	0x062db0
000098:0x00062d20:	movefm	[0x11d0bb58], m_ComboItems
000098:0x00062d30:	icall	array<string>.Get(i)
000098:0x00062d38:	moves	item_name, ret
000100:0x00062d48:	movefm	[0x11d09bb0], m_WgtComboBox
000100:0x00062d58:	ncalli	XComboBoxWidget.AddItem(item_name)
000102:0x00062d60:	cmpcm	attachment, NULL
000102:0x00062d70:	beq	0x062da8
000102:0x00062d78:	call	EntityAI.GetType()
000102:0x00062d80:	cmps	ret, item_name
000102:0x00062d90:	bne	0x062da8
000104:0x00062d98:	move	selected_index, i
000104:0x00062da8:	jump	0x062ce8
000108:0x00062db0:	movefm	[0x11d09bb0], m_WgtComboBox
000108:0x00062dc0:	ncalli	XComboBoxWidget.SetCurrentItem(selected_index)
000109:0x00062dc8:	move	m_PrevIndex, selected_index
000109:0x00062dd8:	release	attachment
000109:0x00062de0:	rts
UIPropertyAttachment::Hide()
000114:0x00062de8:	movefm	[0x11cf2b58], m_WgtThis
000114:0x00062df8:	ncalli	Widget.Show(false)
000116:0x00062e00:	movetm	m_Obj, NULL
000117:0x00062e10:	imove	m_SlotID, 0xffffffff
000117:0x00062e20:	rts
UIPropertyAttachment::IsVisible()
000122:0x00062e28:	movefm	[0x11cf2b58], m_WgtThis
000122:0x00062e38:	ncalli	Widget.IsVisible()
000122:0x00062e40:	move	ret, ret
000122:0x00062e50:	rts
000122:0x00062e58:	rts
SceneEditorMenu::RenderPresets()
//scripts/5_Mission/GUI/SceneEditorMenu.c
000023:0x00063030:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000023:0x00063040:	ncalli	TextListboxWidget.ClearItems()
000029:0x00063048:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000029:0x00063058:	call	PluginConfigDebugProfileFixed.GetPresets()
000029:0x00063060:	movem	presets_array, ret
000030:0x00063070:	imove	i, 0x000000
000030:0x00063080:	jump	0x063090
000030:0x00063088:	inc	i
000030:0x00063090:	ncalli	array<string>.Count()
000030:0x00063098:	cmpi	i, ret
000030:0x000630a8:	bge	0x063160
000032:0x000630b0:	icall	array<string>.Get(i)
000032:0x000630b8:	adds	@s02, _s'[', ret
000032:0x000630c8:	moves	@s01, @s02
000032:0x000630d8:	adds	@s01, @s01, _s']'
000032:0x000630e8:	moves	@s00, @s01
000032:0x000630f8:	icall	array<string>.Get(i)
000032:0x00063100:	new	@c00, Param3<string,bool,bool>
000032:0x00063128:	movec	[0x11d1a368], @c00
000032:0x00063138:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000032:0x00063148:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
000032:0x00063158:	jump	0x063088
000036:0x00063160:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000036:0x00063170:	call	PluginConfigDebugProfile.GetPresets()
000036:0x00063178:	movem	custom_presets_array, ret
000037:0x00063188:	imove	i, 0x000000
000037:0x00063198:	jump	0x0631a8
000037:0x000631a0:	inc	i
000037:0x000631a8:	ncalli	array<string>.Count()
000037:0x000631b0:	cmpi	i, ret
000037:0x000631c0:	bge	0x063258
000039:0x000631c8:	icall	array<string>.Get(i)
000039:0x000631d0:	pushs	ret
000039:0x000631d8:	icall	array<string>.Get(i)
000039:0x000631e0:	moves	@s02, ret
000039:0x000631f0:	pops	ret
000039:0x000631f8:	new	@c00, Param3<string,bool,bool>
000039:0x00063220:	movec	[0x11d1a368], @c00
000039:0x00063230:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000039:0x00063240:	ncalli	TextListboxWidget.AddItem(ret, [0x11d1a368], _i0, _i-1)
000039:0x00063250:	jump	0x0631a0
000042:0x00063258:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000042:0x00063268:	call	PluginConfigDebugProfile.GetDefaultPreset()
000042:0x00063270:	moves	default_preset, ret
000043:0x00063280:	cmps	default_preset, _s''
000043:0x00063290:	beq	0x0633d8
000046:0x00063298:	call	SceneEditorMenu.GetPresetIndexByName(default_preset)
000046:0x000632a8:	move	index, ret
000047:0x000632b8:	call	SceneEditorMenu.IsPresetFixed(default_preset)
000047:0x000632c8:	cmpi	ret, _i0
000047:0x000632d8:	beq	0x063320
000049:0x000632e0:	adds	@s01, _s'[', default_preset
000049:0x000632f0:	moves	@s00, @s01
000049:0x00063300:	adds	@s00, @s00, _s']'
000049:0x00063310:	moves	default_preset, @s00
000052:0x00063320:	cmpi	index, _i-1
000052:0x00063330:	ble	0x0633d8
000052:0x00063338:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000052:0x00063348:	ncalli	TextListboxWidget.GetNumItems()
000052:0x00063350:	cmpi	index, ret
000052:0x00063360:	bge	0x0633d8
000054:0x00063368:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000054:0x00063378:	icall	TextListboxWidget.GetItemData(index, _i0, preset_params_array)
000055:0x00063388:	adds	@s01, default_preset, CONST_DEFAULT_PRESET_PREFIX
000055:0x00063398:	moves	@s00, @s01
000055:0x000633a8:	movec	[0x11d1a428], preset_params_array
000055:0x000633b8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000055:0x000633c8:	ncalli	TextListboxWidget.SetItem(index, @s00, [0x11d1a428], _i0)
000055:0x000633d8:	release	preset_params
000055:0x000633e0:	release	presets_array
000055:0x000633e8:	release	custom_presets_array
000055:0x000633f0:	rts
SceneEditorMenu::IsPresetFixed()
000062:0x00063470:	call	SceneEditorMenu.GetPresetIndexByName(preset_name)
000062:0x00063480:	move	preset_index, ret
000064:0x00063490:	cmpi	preset_index, _i-1
000064:0x000634a0:	ble	0x063510
000064:0x000634a8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000064:0x000634b8:	ncalli	TextListboxWidget.GetNumItems()
000064:0x000634c0:	cmpi	preset_index, ret
000064:0x000634d0:	bge	0x063510
000066:0x000634d8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000066:0x000634e8:	icall	TextListboxWidget.GetItemData(preset_index, _i0, item_params_array)
000067:0x000634f8:	move	ret, param2
000067:0x00063508:	rts
000067:0x00063510:	rts
SceneEditorMenu::GetPresetIndexByName()
000074:0x00063558:	imove	i, 0x000000
000074:0x00063568:	jump	0x063578
000074:0x00063570:	inc	i
000074:0x00063578:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000074:0x00063588:	ncalli	TextListboxWidget.GetNumItems()
000074:0x00063590:	cmpi	i, ret
000074:0x000635a0:	bge	0x063600
000077:0x000635a8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000077:0x000635b8:	icall	TextListboxWidget.GetItemData(i, _i0, item_params_array)
000079:0x000635c8:	cmps	param1, preset_name
000079:0x000635d8:	bne	0x0635f8
000081:0x000635e0:	move	ret, i
000081:0x000635f0:	rts
000081:0x000635f8:	jump	0x063570
000081:0x00063600:	rts
SceneEditorMenu::NewPreset()
000088:0x00063608:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000088:0x00063618:	call	PluginConfigDebugProfile.PresetAdd(preset_name)
000089:0x00063628:	call	SceneEditorMenu.RefreshLists()
000089:0x00063630:	rts
SceneEditorMenu::DeletePreset()
000094:0x00063658:	call	SceneEditorMenu.GetCurrentPresetIndex()
000094:0x00063660:	cmpi	ret, _i-1
000094:0x00063670:	beq	0x0636b8
000096:0x00063678:	call	SceneEditorMenu.GetCurrentPresetName()
000096:0x00063680:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000096:0x00063690:	call	PluginConfigDebugProfile.PresetRemove(ret)
000096:0x000636a0:	move	result, ret
000097:0x000636b0:	call	SceneEditorMenu.RefreshLists()
000097:0x000636b8:	rts
SceneEditorMenu::SetDefaultPreset()
000104:0x000637a0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000104:0x000637b0:	call	PluginConfigDebugProfile.GetDefaultPreset()
000104:0x000637b8:	moves	default_preset, ret
000105:0x000637c8:	cmps	default_preset, _s''
000105:0x000637d8:	beq	0x063910
000107:0x000637e0:	call	SceneEditorMenu.GetPresetIndexByName(default_preset)
000107:0x000637f0:	move	index, ret
000109:0x00063800:	call	SceneEditorMenu.IsPresetFixed(default_preset)
000109:0x00063810:	cmpi	ret, _i0
000109:0x00063820:	beq	0x063868
000111:0x00063828:	adds	@s01, _s'[', default_preset
000111:0x00063838:	moves	@s00, @s01
000111:0x00063848:	adds	@s00, @s00, _s']'
000111:0x00063858:	moves	default_preset, @s00
000114:0x00063868:	cmpi	index, _i-1
000114:0x00063878:	ble	0x063910
000114:0x00063880:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000114:0x00063890:	ncalli	TextListboxWidget.GetNumItems()
000114:0x00063898:	cmpi	index, ret
000114:0x000638a8:	bge	0x063910
000116:0x000638b0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000116:0x000638c0:	icall	TextListboxWidget.GetItemData(index, _i0, prev_preset_params_array)
000117:0x000638d0:	imove	param3, 0x000000
000118:0x000638e0:	movec	[0x11d1a428], prev_preset_params_array
000118:0x000638f0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000118:0x00063900:	ncalli	TextListboxWidget.SetItem(index, default_preset, [0x11d1a428], _i0)
000124:0x00063910:	call	SceneEditorMenu.GetCurrentPresetName()
000124:0x00063918:	moves	preset_name, ret
000125:0x00063928:	call	SceneEditorMenu.IsPresetFixed(preset_name)
000125:0x00063938:	cmpi	ret, _i0
000125:0x00063948:	beq	0x063990
000127:0x00063950:	adds	@s01, _s'[', preset_name
000127:0x00063960:	moves	@s00, @s01
000127:0x00063970:	adds	@s00, @s00, _s']'
000127:0x00063980:	moves	preset_name, @s00
000131:0x00063990:	call	SceneEditorMenu.GetCurrentPresetIndex()
000131:0x00063998:	move	index, ret
000132:0x000639a8:	cmpi	index, _i-1
000132:0x000639b8:	ble	0x063a70
000132:0x000639c0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000132:0x000639d0:	ncalli	TextListboxWidget.GetNumItems()
000132:0x000639d8:	cmpi	index, ret
000132:0x000639e8:	bge	0x063a70
000134:0x000639f0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000134:0x00063a00:	icall	TextListboxWidget.GetItemData(index, _i0, preset_params_array)
000135:0x00063a10:	imove	param3, 0x000001
000136:0x00063a20:	adds	@s01, preset_name, CONST_DEFAULT_PRESET_PREFIX
000136:0x00063a30:	moves	@s00, @s01
000136:0x00063a40:	movec	[0x11d1a428], preset_params_array
000136:0x00063a50:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000136:0x00063a60:	ncalli	TextListboxWidget.SetItem(index, @s00, [0x11d1a428], _i0)
000139:0x00063a70:	call	SceneEditorMenu.GetCurrentPresetName()
000139:0x00063a78:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000139:0x00063a88:	call	PluginConfigDebugProfile.SetDefaultPreset(ret)
000139:0x00063a98:	rts
SceneEditorMenu::RefreshLists()
000144:0x00063aa0:	call	SceneEditorMenu.RenderPresets()
000145:0x00063aa8:	call	SceneEditorMenu.RenderPresetItems()
000145:0x00063ab0:	rts
SceneEditorMenu::RenamePreset()
000150:0x00063ad8:	call	SceneEditorMenu.GetCurrentPresetIndex()
000150:0x00063ae0:	cmpi	ret, _i-1
000150:0x00063af0:	beq	0x063b38
000152:0x00063af8:	call	SceneEditorMenu.GetCurrentPresetName()
000152:0x00063b00:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000152:0x00063b10:	call	PluginConfigDebugProfile.PresetRename(ret, new_preset_name)
000152:0x00063b20:	move	result, ret
000153:0x00063b30:	call	SceneEditorMenu.RefreshLists()
000153:0x00063b38:	rts
SceneEditorMenu::RenderPresetItems()
000162:0x00063bc8:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000162:0x00063bd8:	ncalli	TextListboxWidget.ClearItems()
000163:0x00063be0:	call	SceneEditorMenu.GetCurrentPresetIndex()
000163:0x00063be8:	cmpi	ret, _i-1
000163:0x00063bf8:	beq	0x063d50
000165:0x00063c00:	call	SceneEditorMenu.IsCurrentPresetFixed()
000165:0x00063c08:	move	isFixed, ret
000166:0x00063c18:	new	@c00, array<string>
000166:0x00063c38:	movetm	preset_array, @c00
000168:0x00063c48:	cmpi	isFixed, _i0
000168:0x00063c58:	beq	0x063c90
000170:0x00063c60:	call	SceneEditorMenu.GetCurrentPresetName()
000170:0x00063c68:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000170:0x00063c78:	call	PluginConfigDebugProfileFixed.GetPresetItems(ret, preset_array)
000170:0x00063c88:	jump	0x063cb8
000174:0x00063c90:	call	SceneEditorMenu.GetCurrentPresetName()
000174:0x00063c98:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000174:0x00063ca8:	call	PluginConfigDebugProfile.GetPresetItems(ret, preset_array)
000177:0x00063cb8:	cmpcm	preset_array, NULL
000177:0x00063cc8:	beq	0x063d40
000179:0x00063cd0:	imove	i, 0x000000
000179:0x00063ce0:	jump	0x063cf0
000179:0x00063ce8:	inc	i
000179:0x00063cf0:	ncalli	array<string>.Count()
000179:0x00063cf8:	cmpi	i, ret
000179:0x00063d08:	bge	0x063d40
000181:0x00063d10:	icall	array<string>.Get(i)
000181:0x00063d18:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000181:0x00063d28:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000181:0x00063d38:	jump	0x063ce8
000185:0x00063d40:	delete	preset_array
000185:0x00063d48:	release	preset_array
000185:0x00063d50:	rts
SceneEditorMenu::GetCurrentPresetName()
000191:0x00063d98:	call	SceneEditorMenu.GetCurrentPresetIndex()
000191:0x00063da0:	move	index, ret
000193:0x00063db0:	cmpi	index, _i-1
000193:0x00063dc0:	ble	0x063e30
000193:0x00063dc8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000193:0x00063dd8:	ncalli	TextListboxWidget.GetNumItems()
000193:0x00063de0:	cmpi	index, ret
000193:0x00063df0:	bge	0x063e30
000196:0x00063df8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000196:0x00063e08:	icall	TextListboxWidget.GetItemData(index, _i0, item_params_array)
000197:0x00063e18:	moves	ret, param1
000197:0x00063e28:	rts
000199:0x00063e30:	moves	ret, _s''
000199:0x00063e40:	rts
000199:0x00063e48:	rts
SceneEditorMenu::GetCurrentItemName()
000204:0x00063e70:	call	SceneEditorMenu.GetCurrentItemIndex()
000204:0x00063e78:	cmpi	ret, _i-1
000204:0x00063e88:	beq	0x063ed8
000206:0x00063e90:	call	SceneEditorMenu.GetCurrentItemIndex()
000206:0x00063e98:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000206:0x00063ea8:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000206:0x00063eb0:	moves	item_name, ret
000207:0x00063ec0:	moves	ret, item_name
000207:0x00063ed0:	rts
000209:0x00063ed8:	moves	ret, _s''
000209:0x00063ee8:	rts
000209:0x00063ef0:	rts
SceneEditorMenu::GetCurrentObjectName()
000214:0x00063f38:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000214:0x00063f48:	ncalli	TextListboxWidget.GetSelectedRow()
000214:0x00063f50:	move	selected_row_index, ret
000215:0x00063f60:	cmpi	selected_row_index, _i-1
000215:0x00063f70:	beq	0x063fb8
000217:0x00063f78:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000217:0x00063f88:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
000217:0x00063f90:	moves	item_name, ret
000218:0x00063fa0:	moves	ret, item_name
000218:0x00063fb0:	rts
000220:0x00063fb8:	moves	ret, _s''
000220:0x00063fc8:	rts
000220:0x00063fd0:	rts
SceneEditorMenu::GetCurrentPresetIndex()
000225:0x00063fd8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000225:0x00063fe8:	ncalli	TextListboxWidget.GetSelectedRow()
000225:0x00063ff0:	move	ret, ret
000225:0x00064000:	rts
000225:0x00064008:	rts
SceneEditorMenu::GetCurrentItemIndex()
000230:0x00064010:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000230:0x00064020:	ncalli	TextListboxWidget.GetSelectedRow()
000230:0x00064028:	move	ret, ret
000230:0x00064038:	rts
000230:0x00064040:	rts
SceneEditorMenu::IsCurrentPresetFixed()
000235:0x00064088:	call	SceneEditorMenu.GetCurrentPresetIndex()
000235:0x00064090:	move	index, ret
000236:0x000640a0:	cmpi	index, _i-1
000236:0x000640b0:	ble	0x064120
000236:0x000640b8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000236:0x000640c8:	ncalli	TextListboxWidget.GetNumItems()
000236:0x000640d0:	cmpi	index, ret
000236:0x000640e0:	bge	0x064120
000239:0x000640e8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000239:0x000640f8:	icall	TextListboxWidget.GetItemData(index, _i0, item_params_array)
000240:0x00064108:	move	ret, param2
000240:0x00064118:	rts
000240:0x00064120:	rts
SceneEditorMenu::AddItemToPreset()
000246:0x00064168:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000246:0x00064178:	ncalli	TextListboxWidget.GetSelectedRow()
000246:0x00064180:	move	selected_row_index, ret
000247:0x00064190:	cmpi	selected_row_index, _i-1
000247:0x000641a0:	beq	0x064220
000247:0x000641a8:	call	SceneEditorMenu.GetCurrentPresetIndex()
000247:0x000641b0:	cmpi	ret, _i-1
000247:0x000641c0:	beq	0x064220
000249:0x000641c8:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000249:0x000641d8:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
000249:0x000641e0:	moves	item_name, ret
000250:0x000641f0:	call	SceneEditorMenu.GetCurrentPresetName()
000250:0x000641f8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000250:0x00064208:	call	PluginConfigDebugProfile.ItemAddToPreset(ret, item_name)
000251:0x00064218:	call	SceneEditorMenu.RenderPresetItems()
000251:0x00064220:	rts
SceneEditorMenu::RemoveItemFromPreset()
000257:0x00064228:	call	SceneEditorMenu.GetCurrentItemIndex()
000257:0x00064230:	cmpi	ret, _i-1
000257:0x00064240:	beq	0x0642a0
000257:0x00064248:	call	SceneEditorMenu.GetCurrentPresetIndex()
000257:0x00064250:	cmpi	ret, _i-1
000257:0x00064260:	beq	0x0642a0
000259:0x00064268:	call	SceneEditorMenu.GetCurrentPresetName()
000259:0x00064270:	call	SceneEditorMenu.GetCurrentItemIndex()
000259:0x00064278:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000259:0x00064288:	call	PluginConfigDebugProfile.ItemRemoveFromPreset(ret, ret)
000260:0x00064298:	call	SceneEditorMenu.RenderPresetItems()
000260:0x000642a0:	rts
SceneEditorMenu::SetPreset()
000268:0x000643b8:	call	SceneEditorMenu.GetCurrentPresetIndex()
000268:0x000643c0:	cmpi	ret, _i-1
000268:0x000643d0:	beq	0x064680
000270:0x000643d8:	call	SceneEditorMenu.IsCurrentPresetFixed()
000270:0x000643e0:	move	is_preset_fixed, ret
000271:0x000643f0:	new	@c00, array<string>
000271:0x00064410:	movetm	preset_array, @c00
000273:0x00064420:	cmpi	is_preset_fixed, _i0
000273:0x00064430:	beq	0x064460
000275:0x00064438:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000275:0x00064448:	call	PluginConfigDebugProfileFixed.GetPresetItems(preset_name, preset_array)
000275:0x00064458:	jump	0x064480
000279:0x00064460:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000279:0x00064470:	call	PluginConfigDebugProfile.GetPresetItems(preset_name, preset_array)
000282:0x00064480:	ncall	GetGame()
000282:0x00064488:	ncalli	CGame.GetPlayer()
000282:0x00064490:	movetm	player, ret
000283:0x000644a0:	cmpi	clear_inventory, _i0
000283:0x000644b0:	beq	0x0644d8
000285:0x000644b8:	movec	[0x45f4f978], m_Developer
000285:0x000644c8:	call	PluginDeveloper.ClearInventory(player)
000288:0x000644d8:	imove	i, 0x000000
000288:0x000644e8:	jump	0x0644f8
000288:0x000644f0:	inc	i
000288:0x000644f8:	ncalli	array<string>.Count()
000288:0x00064500:	cmpi	i, ret
000288:0x00064510:	bge	0x064668
000290:0x00064518:	imove	damage, -1.00000
000291:0x00064528:	imove	quantity, 0xffffffff
000292:0x00064538:	cmpi	is_preset_fixed, _i0
000292:0x00064548:	beq	0x0645b8
000294:0x00064550:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000294:0x00064560:	call	PluginConfigDebugProfileFixed.GetItemDamage(preset_name, i)
000294:0x00064570:	move	damage, ret
000295:0x00064580:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000295:0x00064590:	call	PluginConfigDebugProfileFixed.GetItemQuantity(preset_name, i)
000295:0x000645a0:	move	quantity, ret
000295:0x000645b0:	jump	0x064618
000299:0x000645b8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000299:0x000645c8:	call	PluginConfigDebugProfile.GetItemDamage(preset_name, i)
000299:0x000645d8:	move	damage, ret
000300:0x000645e8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000300:0x000645f8:	call	PluginConfigDebugProfile.GetItemQuantity(preset_name, i)
000300:0x00064608:	move	quantity, ret
000303:0x00064618:	icall	array<string>.Get(i)
000303:0x00064620:	citf	quantity, quantity
000303:0x00064630:	movec	[0x45f4f978], m_Developer
000303:0x00064640:	call	PluginDeveloper.SpawnItem(player, ret, spawn_type, damage, quantity, distance, _i0, _v<0.000000,0.000000,0.000000>, _c0)
000303:0x00064660:	jump	0x0644f0
000306:0x00064668:	delete	preset_array
000306:0x00064670:	release	preset_array
000306:0x00064678:	release	player
000306:0x00064680:	rts
SceneEditorMenu::ItemMoveUp()
000312:0x000646d8:	call	SceneEditorMenu.GetCurrentItemIndex()
000312:0x000646e0:	subi	new_index, ret, _i1
000313:0x000646f0:	call	SceneEditorMenu.GetCurrentItemIndex()
000313:0x000646f8:	cmpi	ret, _i-1
000313:0x00064708:	beq	0x064798
000313:0x00064710:	call	SceneEditorMenu.GetCurrentPresetIndex()
000313:0x00064718:	cmpi	ret, _i-1
000313:0x00064728:	beq	0x064798
000313:0x00064730:	cmpi	new_index, _i-1
000313:0x00064740:	ble	0x064798
000315:0x00064748:	call	SceneEditorMenu.GetCurrentPresetName()
000315:0x00064750:	call	SceneEditorMenu.GetCurrentItemIndex()
000315:0x00064758:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000315:0x00064768:	call	PluginConfigDebugProfile.SwapItem(ret, ret, new_index)
000316:0x00064778:	call	SceneEditorMenu.RenderPresetItems()
000317:0x00064780:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000317:0x00064790:	ncalli	TextListboxWidget.SelectRow(new_index)
000317:0x00064798:	rts
SceneEditorMenu::ItemMoveDown()
000323:0x000647c0:	call	SceneEditorMenu.GetCurrentItemIndex()
000323:0x000647c8:	addi	new_index, ret, _i1
000324:0x000647d8:	call	SceneEditorMenu.GetCurrentItemIndex()
000324:0x000647e0:	cmpi	ret, _i-1
000324:0x000647f0:	beq	0x064898
000324:0x000647f8:	call	SceneEditorMenu.GetCurrentPresetIndex()
000324:0x00064800:	cmpi	ret, _i-1
000324:0x00064810:	beq	0x064898
000324:0x00064818:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000324:0x00064828:	ncalli	TextListboxWidget.GetNumItems()
000324:0x00064830:	cmpi	new_index, ret
000324:0x00064840:	bge	0x064898
000326:0x00064848:	call	SceneEditorMenu.GetCurrentPresetName()
000326:0x00064850:	call	SceneEditorMenu.GetCurrentItemIndex()
000326:0x00064858:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000326:0x00064868:	call	PluginConfigDebugProfile.SwapItem(ret, ret, new_index)
000327:0x00064878:	call	SceneEditorMenu.RenderPresetItems()
000328:0x00064880:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000328:0x00064890:	ncalli	TextListboxWidget.SelectRow(new_index)
000328:0x00064898:	rts
SceneEditorMenu::SaveProfileSpawnDistance()
000334:0x000648a0:	cmpc	m_ConfigDebugProfile, NULL
000334:0x000648b0:	beq	0x064910
000334:0x000648b8:	cmpcm	m_SpawnDistanceEditBox, NULL
000334:0x000648c8:	beq	0x064910
000336:0x000648d0:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000336:0x000648e0:	icall	EditBoxWidget.GetText()
000336:0x000648e8:	ncall	ToFloat(ret)
000336:0x000648f0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000336:0x00064900:	call	PluginConfigDebugProfile.SetSpawnDistance(ret)
000336:0x00064910:	rts
SceneEditorMenu::UseMouse()
000346:0x00064918:	imove	ret, 0x000000
000346:0x00064928:	rts
000346:0x00064930:	rts
SceneEditorMenu::UseKeyboard()
000354:0x00064938:	imove	ret, 0x000000
000354:0x00064948:	rts
000354:0x00064950:	rts
SceneEditorMenu::SceneEditorMenu()
000363:0x00064958:	call	GetPlugin(_T(PluginSceneManager))
000363:0x00064968:	movec	m_ModuleSceneManager, ret
000364:0x00064978:	movec	[0x45f497b8], m_ModuleSceneManager
000364:0x00064988:	call	PluginSceneManager.OnUIEditorOpened()
000366:0x00064990:	new	@c00, map<int,UIPopupScript>
000366:0x000649b0:	movetm	m_Popups, @c00
000367:0x000649c0:	new	@c00, map<int,SceneObject>
000367:0x000649e0:	movetm	m_SlObjectsList, @c00
000368:0x000649f0:	new	@c00, array<int>
000368:0x00064a10:	movetm	m_OpenedPopups, @c00
000369:0x00064a20:	new	@c00, array<string>
000369:0x00064a40:	movetm	m_ClClassesList, @c00
000369:0x00064a50:	rts
SceneEditorMenu::~SceneEditorMenu()
000377:0x00064a78:	call	SceneEditorMenu.PopupCloseAll()
000379:0x00064a80:	call	IsModuleExist(_T(PluginSceneManager))
000379:0x00064a90:	cmpi	ret, _i0
000379:0x00064aa0:	beq	0x064ad0
000381:0x00064aa8:	movec	[0x45f497b8], m_ModuleSceneManager
000381:0x00064ab8:	call	PluginSceneManager.OnUIEditorClosed()
000382:0x00064ac0:	movec	m_ModuleSceneManager, NULL
000387:0x00064ad0:	imove	i, 0x000000
000387:0x00064ae0:	jump	0x064af0
000387:0x00064ae8:	inc	i
000387:0x00064af0:	movefm	[0x703e8d0], m_PrWidgetsAttachments
000387:0x00064b00:	ncalli	array<UIPropertyAttachment>.Count()
000387:0x00064b08:	cmpi	i, ret
000387:0x00064b18:	bge	0x064b48
000389:0x00064b20:	movefm	[0x703e8d0], m_PrWidgetsAttachments
000389:0x00064b30:	icall	array<UIPropertyAttachment>.Get(i)
000389:0x00064b38:	delete	ret
000389:0x00064b40:	jump	0x064ae8
000391:0x00064b48:	delete	m_PrWidgetsAttachments
000393:0x00064b50:	imove	i, 0x000000
000393:0x00064b60:	jump	0x064b70
000393:0x00064b68:	inc	i
000393:0x00064b70:	movefm	[0x703dd78], m_Popups
000393:0x00064b80:	ncalli	map<int,UIPopupScript>.Count()
000393:0x00064b88:	cmpi	i, ret
000393:0x00064b98:	bge	0x064bc8
000395:0x00064ba0:	movefm	[0x703dd78], m_Popups
000395:0x00064bb0:	icall	map<int,UIPopupScript>.Get(i)
000395:0x00064bb8:	delete	ret
000395:0x00064bc0:	jump	0x064b68
000397:0x00064bc8:	delete	m_Popups
000399:0x00064bd0:	movec	[0x3cd17188], m_NotifyFadeTimer
000399:0x00064be0:	call	WidgetFadeTimer.Stop()
000400:0x00064be8:	delete	m_NotifyFadeTimer
000402:0x00064bf0:	delete	m_OpenedPopups
000403:0x00064bf8:	delete	m_ClClassesList
000403:0x00064c00:	rts
SceneEditorMenu::Init()
000412:0x000653c8:	ncall	GetGame()
000412:0x000653d0:	ncalli	CGame.GetWorkspace()
000412:0x000653d8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_scene_editor.layout', _c0)
000412:0x000653e0:	movetm	wgt, ret
000413:0x000653f0:	ncalli	Widget.FindAnyWidget(_s'pnl_presets_wrapper_outer')
000413:0x000653f8:	movetm	m_WgtPnlWrapper, ret
000414:0x00065408:	ncalli	Widget.FindAnyWidget(_s'txt_left_label_loaded_scene')
000414:0x00065410:	movetm	m_SlWgtLoadedScene, ret
000416:0x00065420:	ncalli	Widget.FindAnyWidget(_s'txtlist_left_items')
000416:0x00065428:	movetm	m_SlWgtLbxObjectsList, ret
000418:0x00065438:	ncalli	Widget.FindAnyWidget(_s'edit_left_search_item')
000418:0x00065440:	movetm	m_SlWgtEbxFilter, ret
000420:0x00065450:	ncalli	Widget.FindAnyWidget(_s'btn_left_select')
000420:0x00065458:	movetm	m_SlWgtSelect, ret
000421:0x00065468:	ncalli	Widget.FindAnyWidget(_s'btn_left_focus')
000421:0x00065470:	movetm	m_SlWgtFocus, ret
000423:0x00065480:	ncalli	Widget.FindAnyWidget(_s'pnl_popups')
000423:0x00065488:	movetm	m_WgtPopupsMain, ret
000425:0x00065498:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_bg')
000425:0x000654a0:	movetm	m_WgtPopupsBg, ret
000427:0x000654b0:	ncalli	Widget.FindAnyWidget(_s'edit_left_search_class')
000427:0x000654b8:	movetm	m_ClWgtEbxFilter, ret
000429:0x000654c8:	ncalli	Widget.FindAnyWidget(_s'txtlist_left_classes')
000429:0x000654d0:	movetm	m_ClWgtLbxClassesList, ret
000431:0x000654e0:	ncalli	Widget.FindAnyWidget(_s'btn_top_scene_manager')
000431:0x000654e8:	movetm	m_WgtBtnSceneManager, ret
000432:0x000654f8:	ncalli	Widget.FindAnyWidget(_s'btn_top_position_manager')
000432:0x00065500:	movetm	m_WgtBtnPositionManager, ret
000433:0x00065510:	ncalli	Widget.FindAnyWidget(_s'btn_top_settings')
000433:0x00065518:	movetm	m_WgtBtnSceneSettings, ret
000434:0x00065528:	ncalli	Widget.FindAnyWidget(_s'btn_left_cl_add_attachment')
000434:0x00065530:	movetm	m_ClWgtButtonAddAtt, ret
000435:0x00065540:	ncalli	Widget.FindAnyWidget(_s'btn_top_save_scene')
000435:0x00065548:	movetm	m_WgtBtnSceneSave, ret
000436:0x00065558:	ncalli	Widget.FindAnyWidget(_s'btn_top_editor_settings')
000436:0x00065560:	movetm	m_WgtBtnEditorSettings, ret
000437:0x00065570:	ncalli	Widget.FindAnyWidget(_s'btn_right_prop_pos_iscr_value')
000437:0x00065578:	movetm	m_WgtBtnEditInitScript, ret
000438:0x00065588:	ncalli	Widget.FindAnyWidget(_s'btn_delete_ruler')
000438:0x00065590:	movetm	m_WgtBtnDeleteRuler, ret
000439:0x000655a0:	ncalli	Widget.FindAnyWidget(_s'btn_left_presets')
000439:0x000655a8:	movetm	m_WgtBtnLeftPresets, ret
000442:0x000655b8:	ncalli	Widget.FindAnyWidget(_s'txt_right_prop_class_value')
000442:0x000655c0:	movetm	m_PrWgtClassName, ret
000443:0x000655d0:	ncalli	Widget.FindAnyWidget(_s'ebx_right_prop_pos_x_value')
000443:0x000655d8:	movetm	m_PrWgtPoxX, ret
000444:0x000655e8:	ncalli	Widget.FindAnyWidget(_s'ebx_right_prop_pos_y_value')
000444:0x000655f0:	movetm	m_PrWgtPoxY, ret
000445:0x00065600:	ncalli	Widget.FindAnyWidget(_s'ebx_right_prop_pos_z_value')
000445:0x00065608:	movetm	m_PrWgtPoxZ, ret
000446:0x00065618:	ncalli	Widget.FindAnyWidget(_s'ebx_right_prop_pos_dir_value')
000446:0x00065620:	movetm	m_PrWgtDir, ret
000447:0x00065630:	ncalli	Widget.FindAnyWidget(_s'ebx_right_prop_pos_dmg_value')
000447:0x00065638:	movetm	m_PrWgtDmg, ret
000448:0x00065648:	ncalli	Widget.FindAnyWidget(_s'pnl_right_inspector_attachments')
000448:0x00065650:	movetm	m_PrWgtAttRoot, ret
000449:0x00065660:	ncalli	Widget.FindAnyWidget(_s'pnl_att_title')
000449:0x00065668:	movetm	m_PrWgtAttTitle, ret
000450:0x00065678:	new	@c00, array<UIPropertyAttachment>
000450:0x00065698:	movetm	m_PrWidgetsAttachments, @c00
000453:0x000656a8:	ncalli	Widget.FindAnyWidget(_s'pnl_notify')
000453:0x000656b0:	movetm	m_NotifyWgtPanel, ret
000454:0x000656c0:	movefm	[0x11cf2b58], m_NotifyWgtPanel
000454:0x000656d0:	ncalli	Widget.SetAlpha(_f0.000000)
000455:0x000656d8:	new	@c00, WidgetFadeTimer
000455:0x000656f8:	movec	m_NotifyFadeTimer, @c00
000458:0x00065708:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_scene_manager')
000458:0x00065710:	movetm	wgt, ret
000458:0x00065720:	new	@c01, UIPopupScriptSceneManager
000458:0x00065748:	movefm	[0x703dd78], m_Popups
000458:0x00065758:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SCENE_MANAGER, @c01)
000459:0x00065760:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_position_manager')
000459:0x00065768:	movetm	wgt, ret
000459:0x00065778:	new	@c01, UIPopupScriptPositionManager
000459:0x000657a0:	movefm	[0x703dd78], m_Popups
000459:0x000657b0:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_POSITION_MANAGER, @c01)
000460:0x000657b8:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_settings')
000460:0x000657c0:	movetm	wgt, ret
000460:0x000657d0:	new	@c01, UIPopupScriptSceneSettings
000460:0x000657f8:	movefm	[0x703dd78], m_Popups
000460:0x00065808:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SCENE_SETTINGS, @c01)
000461:0x00065810:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_scene_new')
000461:0x00065818:	movetm	wgt, ret
000461:0x00065828:	new	@c01, UIPopupScriptSceneNew
000461:0x00065850:	movefm	[0x703dd78], m_Popups
000461:0x00065860:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SCENE_NEW, @c01)
000462:0x00065868:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_scene_rename')
000462:0x00065870:	movetm	wgt, ret
000462:0x00065880:	new	@c01, UIPopupScriptSceneRename
000462:0x000658a8:	movefm	[0x703dd78], m_Popups
000462:0x000658b8:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SCENE_RENAME, @c01)
000463:0x000658c0:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_scene_delete')
000463:0x000658c8:	movetm	wgt, ret
000463:0x000658d8:	new	@c01, UIPopupScriptSceneDelete
000463:0x00065900:	movefm	[0x703dd78], m_Popups
000463:0x00065910:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SCENE_DELETE, @c01)
000464:0x00065918:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_notify')
000464:0x00065920:	movetm	wgt, ret
000464:0x00065930:	new	@c01, UIPopupScriptNotify
000464:0x00065958:	movefm	[0x703dd78], m_Popups
000464:0x00065968:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_NOTIFY, @c01)
000465:0x00065970:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_editor_settings')
000465:0x00065978:	movetm	wgt, ret
000465:0x00065988:	new	@c01, UIPopupScriptEditorSettings
000465:0x000659b0:	movefm	[0x703dd78], m_Popups
000465:0x000659c0:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_EDITOR_SETTINGS, @c01)
000466:0x000659c8:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_init_script')
000466:0x000659d0:	movetm	wgt, ret
000466:0x000659e0:	new	@c01, UIPopupScriptInitScript
000466:0x00065a08:	movefm	[0x703dd78], m_Popups
000466:0x00065a18:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_INIT_SCRIPT, @c01)
000467:0x00065a20:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_preset_new')
000467:0x00065a28:	movetm	wgt, ret
000467:0x00065a38:	new	@c01, UIPopupScriptPresetNew
000467:0x00065a60:	movefm	[0x703dd78], m_Popups
000467:0x00065a70:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_PRESET_NEW, @c01)
000468:0x00065a78:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_preset_rename')
000468:0x00065a80:	movetm	wgt, ret
000468:0x00065a90:	new	@c01, UIPopupScriptPresetRename
000468:0x00065ab8:	movefm	[0x703dd78], m_Popups
000468:0x00065ac8:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_PRESET_RENAME, @c01)
000469:0x00065ad0:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_sqf_watchers')
000469:0x00065ad8:	movetm	wgt, ret
000469:0x00065ae8:	new	@c01, UIPopupScriptSQFWatchers
000469:0x00065b10:	movefm	[0x703dd78], m_Popups
000469:0x00065b20:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_SQF_WATCHERS, @c01)
000470:0x00065b28:	ncalli	Widget.FindAnyWidget(_s'pnl_popup_configs')
000470:0x00065b30:	movetm	wgt, ret
000470:0x00065b40:	new	@c01, UIPopupScriptConfigs
000470:0x00065b68:	movefm	[0x703dd78], m_Popups
000470:0x00065b78:	icall	map<int,UIPopupScript>.Insert(POPUP_ID_CONFIGS, @c01)
000472:0x00065b80:	ncalli	Widget.FindAnyWidget(_s'pnl_presets')
000472:0x00065b88:	movetm	m_PresetsTextListbox, ret
000473:0x00065b98:	ncalli	Widget.FindAnyWidget(_s'pnl_preset_items')
000473:0x00065ba0:	movetm	m_PresetItemsTextListbox, ret
000474:0x00065bb0:	call	GetPlugin(_T(PluginConfigDebugProfileFixed))
000474:0x00065bc0:	movec	m_ConfigDebugProfileFixed, ret
000475:0x00065bd0:	call	GetPlugin(_T(PluginConfigDebugProfile))
000475:0x00065be0:	movec	m_ConfigDebugProfile, ret
000476:0x00065bf0:	ncalli	Widget.FindAnyWidget(_s'btn_add_to_preset')
000476:0x00065bf8:	movetm	m_PresetAddItemtButton, ret
000477:0x00065c08:	ncalli	Widget.FindAnyWidget(_s'btn_remove_from_preset')
000477:0x00065c10:	movetm	m_PresetRemoveItemButton, ret
000478:0x00065c20:	ncalli	Widget.FindAnyWidget(_s'btn_spawn_on_ground')
000478:0x00065c28:	movetm	m_SpawnOnGroundButton, ret
000479:0x00065c38:	ncalli	Widget.FindAnyWidget(_s'btn_spawn_in_inventory')
000479:0x00065c40:	movetm	m_SpawnInInventoryButton, ret
000480:0x00065c50:	ncalli	Widget.FindAnyWidget(_s'btn_spawn_as_attachment')
000480:0x00065c58:	movetm	m_SpawnAsAttachmentButton, ret
000481:0x00065c68:	ncalli	Widget.FindAnyWidget(_s'btn_up')
000481:0x00065c70:	movetm	m_UpButton, ret
000482:0x00065c80:	ncalli	Widget.FindAnyWidget(_s'btn_down')
000482:0x00065c88:	movetm	m_DownButton, ret
000483:0x00065c98:	call	GetPlugin(_T(PluginDeveloper))
000483:0x00065ca8:	movec	m_Developer, ret
000484:0x00065cb8:	ncalli	Widget.FindAnyWidget(_s'txt_quantity_value')
000484:0x00065cc0:	movetm	m_QuantityEditBox, ret
000485:0x00065cd0:	ncalli	Widget.FindAnyWidget(_s'txt_damage_value')
000485:0x00065cd8:	movetm	m_DamageEditBox, ret
000486:0x00065ce8:	ncalli	Widget.FindAnyWidget(_s'txt_distance_value')
000486:0x00065cf0:	movetm	m_SpawnDistanceEditBox, ret
000487:0x00065d00:	ncalli	Widget.FindAnyWidget(_s'btn_new')
000487:0x00065d08:	movetm	m_PresetNewButton, ret
000488:0x00065d18:	ncalli	Widget.FindAnyWidget(_s'btn_delete')
000488:0x00065d20:	movetm	m_PresetDeleteButton, ret
000489:0x00065d30:	ncalli	Widget.FindAnyWidget(_s'btn_rename')
000489:0x00065d38:	movetm	m_PresetRenameButton, ret
000490:0x00065d48:	ncalli	Widget.FindAnyWidget(_s'btn_default')
000490:0x00065d50:	movetm	m_PresetSetDefaultButton, ret
000491:0x00065d60:	ncalli	Widget.FindAnyWidget(_s'btn_copy_to_clipboard')
000491:0x00065d68:	movetm	m_CopyToClipboardButton, ret
000492:0x00065d78:	ncalli	Widget.FindAnyWidget(_s'btn_sqf')
000492:0x00065d80:	movetm	m_SQFButton, ret
000493:0x00065d90:	ncalli	Widget.FindAnyWidget(_s'btn_top_configs')
000493:0x00065d98:	movetm	m_ConfigsButton, ret
000494:0x00065da8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000494:0x00065db8:	call	PluginConfigDebugProfile.GetSpawnDistance()
000494:0x00065dc0:	icall	ToString(ret)
000494:0x00065dc8:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000494:0x00065dd8:	ncalli	EditBoxWidget.SetText(ret)
000496:0x00065de0:	call	SceneEditorMenu.RenderPresets()
000498:0x00065de8:	call	SceneEditorMenu.UpdateListObjects()
000499:0x00065df0:	call	SceneEditorMenu.UpdateListClasses()
000501:0x00065df8:	call	SceneEditorMenu.PopupHideAll()
000503:0x00065e00:	movem	ret, wgt
000503:0x00065e10:	release	wgt
000503:0x00065e18:	rts
000503:0x00065e20:	release	wgt
000503:0x00065e28:	rts
SceneEditorMenu::OnDoubleClick()
000508:0x00065e90:	cmpm	w, m_PresetItemsTextListbox
000508:0x00065ea0:	beq	0x065ed8
000508:0x00065ea8:	cmpm	w, m_PresetsTextListbox
000508:0x00065eb8:	beq	0x065ed8
000508:0x00065ec0:	cmpm	w, m_ClWgtLbxClassesList
000508:0x00065ed0:	bne	0x066080
000510:0x00065ed8:	call	SceneEditorMenu.SaveProfileSpawnDistance()
000512:0x00065ee0:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000512:0x00065ef0:	icall	EditBoxWidget.GetText()
000512:0x00065ef8:	ncall	ToFloat(ret)
000512:0x00065f00:	move	distance, ret
000513:0x00065f10:	cmpi	m_SelectedObjectIsPreset, _i0
000513:0x00065f20:	beq	0x065f50
000515:0x00065f28:	moves	preset_name, m_SelectedObject
000515:0x00065f38:	call	SceneEditorMenu.SetPreset(true, preset_name, SPAWNTYPE_INVENTORY, distance)
000515:0x00065f48:	jump	0x066080
000519:0x00065f50:	imove	damage, -1.00000
000520:0x00065f60:	imove	quantity, 0xffffffff
000521:0x00065f70:	call	SceneEditorMenu.GetCurrentItemIndex()
000521:0x00065f78:	cmpi	ret, _i-1
000521:0x00065f88:	beq	0x066010
000523:0x00065f90:	call	SceneEditorMenu.GetCurrentPresetName()
000523:0x00065f98:	call	SceneEditorMenu.GetCurrentItemIndex()
000523:0x00065fa0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000523:0x00065fb0:	call	PluginConfigDebugProfile.GetItemDamage(ret, ret)
000523:0x00065fc0:	move	damage, ret
000524:0x00065fd0:	call	SceneEditorMenu.GetCurrentPresetName()
000524:0x00065fd8:	call	SceneEditorMenu.GetCurrentItemIndex()
000524:0x00065fe0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000524:0x00065ff0:	call	PluginConfigDebugProfile.GetItemQuantity(ret, ret)
000524:0x00066000:	move	quantity, ret
000526:0x00066010:	ncall	GetGame()
000526:0x00066018:	ncalli	CGame.GetPlayer()
000526:0x00066020:	movetm	player, ret
000526:0x00066030:	moves	item_name, m_SelectedObject
000526:0x00066040:	citf	quantity, quantity
000526:0x00066050:	movec	[0x45f4f978], m_Developer
000526:0x00066060:	call	PluginDeveloper.SpawnItem(player, item_name, SPAWNTYPE_INVENTORY, damage, quantity, distance, _i0, _v<0.000000,0.000000,0.000000>, _c0)
000526:0x00066080:	rts
SceneEditorMenu::OnClick()
000535:0x00066248:	call	UIScriptedMenu.OnClick(w, x, y, button)
000539:0x00066258:	cmpm	w, m_WgtBtnSceneManager
000539:0x00066268:	bne	0x0662b0
000541:0x00066270:	movec	param, NULL
000541:0x00066280:	call	SceneEditorMenu.PopupOpen(POPUP_ID_SCENE_MANAGER, param)
000543:0x00066290:	imove	ret, 0x000001
000543:0x000662a0:	rts
000543:0x000662a8:	jump	0x066f28
000545:0x000662b0:	cmpm	w, m_SQFButton
000545:0x000662c0:	bne	0x066318
000547:0x000662c8:	movec	param, NULL
000547:0x000662d8:	call	SceneEditorMenu.PopupOpen(POPUP_ID_SQF_WATCHERS, param)
000547:0x000662e8:	movec	m_PopupWatchers, ret
000548:0x000662f8:	imove	ret, 0x000001
000548:0x00066308:	rts
000548:0x00066310:	jump	0x066f28
000550:0x00066318:	cmpm	w, m_ConfigsButton
000550:0x00066328:	bne	0x066370
000552:0x00066330:	movec	param, NULL
000552:0x00066340:	call	SceneEditorMenu.PopupOpen(POPUP_ID_CONFIGS, param)
000553:0x00066350:	imove	ret, 0x000001
000553:0x00066360:	rts
000553:0x00066368:	jump	0x066f28
000555:0x00066370:	cmpm	w, m_PresetsTextListbox
000555:0x00066380:	bne	0x0663d8
000557:0x00066388:	call	SceneEditorMenu.RenderPresetItems()
000558:0x00066390:	imove	m_SelectedObjectIsPreset, 0x000001
000559:0x000663a0:	call	SceneEditorMenu.GetCurrentPresetName()
000559:0x000663a8:	moves	m_SelectedObject, ret
000560:0x000663b8:	imove	ret, 0x000001
000560:0x000663c8:	rts
000560:0x000663d0:	jump	0x066f28
000562:0x000663d8:	cmpm	w, m_PresetSetDefaultButton
000562:0x000663e8:	bne	0x066448
000564:0x000663f0:	call	SceneEditorMenu.GetCurrentPresetName()
000564:0x000663f8:	cmps	ret, _s''
000564:0x00066408:	beq	0x066428
000566:0x00066410:	call	SceneEditorMenu.GetCurrentPresetIndex()
000566:0x00066418:	call	SceneEditorMenu.SetDefaultPreset(ret)
000568:0x00066428:	imove	ret, 0x000001
000568:0x00066438:	rts
000568:0x00066440:	jump	0x066f28
000570:0x00066448:	cmpm	w, m_PresetNewButton
000570:0x00066458:	bne	0x0664a8
000572:0x00066460:	movec	param, NULL
000572:0x00066470:	call	SceneEditorMenu.PopupOpen(POPUP_ID_PRESET_NEW, param)
000573:0x00066480:	call	SceneEditorMenu.RefreshLists()
000574:0x00066488:	imove	ret, 0x000001
000574:0x00066498:	rts
000574:0x000664a0:	jump	0x066f28
000576:0x000664a8:	cmpm	w, m_PresetRenameButton
000576:0x000664b8:	bne	0x066500
000578:0x000664c0:	movec	param, NULL
000578:0x000664d0:	call	SceneEditorMenu.PopupOpen(POPUP_ID_PRESET_RENAME, param)
000579:0x000664e0:	imove	ret, 0x000001
000579:0x000664f0:	rts
000579:0x000664f8:	jump	0x066f28
000581:0x00066500:	cmpm	w, m_CopyToClipboardButton
000581:0x00066510:	bne	0x066558
000583:0x00066518:	ncall	GetGame()
000583:0x00066520:	moves	[0x3cd2bfb0], m_SelectedObject
000583:0x00066530:	ncalli	CGame.CopyToClipboard([0x3cd2bfb0])
000584:0x00066538:	imove	ret, 0x000001
000584:0x00066548:	rts
000584:0x00066550:	jump	0x066f28
000586:0x00066558:	cmpm	w, m_PresetDeleteButton
000586:0x00066568:	bne	0x0665b8
000588:0x00066570:	call	SceneEditorMenu.GetCurrentPresetName()
000588:0x00066578:	cmps	ret, _s''
000588:0x00066588:	beq	0x066598
000590:0x00066590:	call	SceneEditorMenu.DeletePreset()
000592:0x00066598:	imove	ret, 0x000001
000592:0x000665a8:	rts
000592:0x000665b0:	jump	0x066f28
000594:0x000665b8:	cmpm	w, m_SpawnOnGroundButton
000594:0x000665c8:	beq	0x066600
000594:0x000665d0:	cmpm	w, m_SpawnAsAttachmentButton
000594:0x000665e0:	beq	0x066600
000594:0x000665e8:	cmpm	w, m_SpawnInInventoryButton
000594:0x000665f8:	bne	0x066860
000596:0x00066600:	call	SceneEditorMenu.SaveProfileSpawnDistance()
000598:0x00066608:	imove	spawn_type, 0x000002
000599:0x00066618:	movefm	@c00, m_SpawnOnGroundButton
000599:0x00066628:	cmpmc	@c00, w
000599:0x00066638:	bne	0x066660
000603:0x00066640:	imove	spawn_type, 0x000000
000604:0x00066650:	jump	0x0666a0
000604:0x00066658:	jump	0x066688
000604:0x00066660:	movefm	@c00, m_SpawnAsAttachmentButton
000604:0x00066670:	cmpmc	@c00, w
000604:0x00066680:	bne	0x0666a0
000609:0x00066688:	imove	spawn_type, 0x000003
000610:0x00066698:	jump	0x0666a0
000614:0x000666a0:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000614:0x000666b0:	icall	EditBoxWidget.GetText()
000614:0x000666b8:	ncall	ToFloat(ret)
000614:0x000666c0:	move	distance, ret
000615:0x000666d0:	cmpi	m_SelectedObjectIsPreset, _i0
000615:0x000666e0:	beq	0x066710
000617:0x000666e8:	moves	preset_name, m_SelectedObject
000617:0x000666f8:	call	SceneEditorMenu.SetPreset(true, preset_name, spawn_type, distance)
000617:0x00066708:	jump	0x066840
000621:0x00066710:	imove	damage, -1.00000
000622:0x00066720:	imove	quantity, 0xffffffff
000623:0x00066730:	call	SceneEditorMenu.GetCurrentItemIndex()
000623:0x00066738:	cmpi	ret, _i-1
000623:0x00066748:	beq	0x0667d0
000625:0x00066750:	call	SceneEditorMenu.GetCurrentPresetName()
000625:0x00066758:	call	SceneEditorMenu.GetCurrentItemIndex()
000625:0x00066760:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000625:0x00066770:	call	PluginConfigDebugProfile.GetItemDamage(ret, ret)
000625:0x00066780:	move	damage, ret
000626:0x00066790:	call	SceneEditorMenu.GetCurrentPresetName()
000626:0x00066798:	call	SceneEditorMenu.GetCurrentItemIndex()
000626:0x000667a0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000626:0x000667b0:	call	PluginConfigDebugProfile.GetItemQuantity(ret, ret)
000626:0x000667c0:	move	quantity, ret
000628:0x000667d0:	ncall	GetGame()
000628:0x000667d8:	ncalli	CGame.GetPlayer()
000628:0x000667e0:	movetm	player, ret
000628:0x000667f0:	moves	item_name, m_SelectedObject
000628:0x00066800:	citf	quantity, quantity
000628:0x00066810:	movec	[0x45f4f978], m_Developer
000628:0x00066820:	call	PluginDeveloper.SpawnItem(player, item_name, spawn_type, damage, quantity, distance, _i0, _v<0.000000,0.000000,0.000000>, _c0)
000631:0x00066840:	imove	ret, 0x000001
000631:0x00066850:	rts
000631:0x00066858:	jump	0x066f28
000633:0x00066860:	cmpm	w, m_PresetItemsTextListbox
000633:0x00066870:	bne	0x0669a0
000635:0x00066878:	imove	m_SelectedObjectIsPreset, 0x000000
000636:0x00066888:	call	SceneEditorMenu.GetCurrentItemName()
000636:0x00066890:	moves	m_SelectedObject, ret
000638:0x000668a0:	call	SceneEditorMenu.GetCurrentItemIndex()
000638:0x000668a8:	cmpi	ret, _i-1
000638:0x000668b8:	beq	0x066980
000640:0x000668c0:	call	SceneEditorMenu.GetCurrentPresetName()
000640:0x000668c8:	call	SceneEditorMenu.GetCurrentItemIndex()
000640:0x000668d0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000640:0x000668e0:	call	PluginConfigDebugProfile.GetItemDamage(ret, ret)
000640:0x000668f0:	move	item_damage, ret
000641:0x00066900:	call	SceneEditorMenu.GetCurrentPresetName()
000641:0x00066908:	call	SceneEditorMenu.GetCurrentItemIndex()
000641:0x00066910:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000641:0x00066920:	call	PluginConfigDebugProfile.GetItemQuantity(ret, ret)
000641:0x00066930:	move	item_quantity, ret
000643:0x00066940:	icall	ToString(item_damage)
000643:0x00066948:	movefm	[0x11d09a20], m_DamageEditBox
000643:0x00066958:	ncalli	EditBoxWidget.SetText(ret)
000644:0x00066960:	icall	ToString(item_quantity)
000644:0x00066968:	movefm	[0x11d09a20], m_QuantityEditBox
000644:0x00066978:	ncalli	EditBoxWidget.SetText(ret)
000647:0x00066980:	imove	ret, 0x000001
000647:0x00066990:	rts
000647:0x00066998:	jump	0x066f28
000649:0x000669a0:	cmpm	w, m_UpButton
000649:0x000669b0:	bne	0x0669e0
000651:0x000669b8:	call	SceneEditorMenu.ItemMoveUp()
000652:0x000669c0:	imove	ret, 0x000001
000652:0x000669d0:	rts
000652:0x000669d8:	jump	0x066f28
000654:0x000669e0:	cmpm	w, m_DownButton
000654:0x000669f0:	bne	0x066a20
000656:0x000669f8:	call	SceneEditorMenu.ItemMoveDown()
000657:0x00066a00:	imove	ret, 0x000001
000657:0x00066a10:	rts
000657:0x00066a18:	jump	0x066f28
000659:0x00066a20:	cmpm	w, m_WgtBtnLeftPresets
000659:0x00066a30:	bne	0x066af0
000661:0x00066a38:	movefm	[0x11cf2b58], m_WgtPnlWrapper
000661:0x00066a48:	ncalli	Widget.IsVisible()
000661:0x00066a50:	cmpi	ret, _i0
000661:0x00066a60:	beq	0x066aa0
000663:0x00066a68:	movefm	[0x11cf2b58], m_WgtPnlWrapper
000663:0x00066a78:	ncalli	Widget.Show(false)
000664:0x00066a80:	movefm	[0x11d09c98], m_WgtBtnLeftPresets
000664:0x00066a90:	ncalli	ButtonWidget.SetText(_s'Presets >>')
000664:0x00066a98:	jump	0x066ad0
000668:0x00066aa0:	movefm	[0x11cf2b58], m_WgtPnlWrapper
000668:0x00066ab0:	ncalli	Widget.Show(true)
000669:0x00066ab8:	movefm	[0x11d09c98], m_WgtBtnLeftPresets
000669:0x00066ac8:	ncalli	ButtonWidget.SetText(_s'Presets <<')
000672:0x00066ad0:	imove	ret, 0x000001
000672:0x00066ae0:	rts
000672:0x00066ae8:	jump	0x066f28
000674:0x00066af0:	cmpm	w, m_PresetAddItemtButton
000674:0x00066b00:	bne	0x066b30
000676:0x00066b08:	call	SceneEditorMenu.AddItemToPreset()
000677:0x00066b10:	imove	ret, 0x000001
000677:0x00066b20:	rts
000677:0x00066b28:	jump	0x066f28
000679:0x00066b30:	cmpm	w, m_PresetRemoveItemButton
000679:0x00066b40:	bne	0x066b70
000681:0x00066b48:	call	SceneEditorMenu.RemoveItemFromPreset()
000682:0x00066b50:	imove	ret, 0x000001
000682:0x00066b60:	rts
000682:0x00066b68:	jump	0x066f28
000684:0x00066b70:	cmpm	w, m_WgtBtnPositionManager
000684:0x00066b80:	bne	0x066bd8
000686:0x00066b88:	movec	param, NULL
000686:0x00066b98:	call	SceneEditorMenu.PopupOpen(POPUP_ID_POSITION_MANAGER, param)
000686:0x00066ba8:	movec	m_PopupScriptPositionManager, ret
000687:0x00066bb8:	imove	ret, 0x000001
000687:0x00066bc8:	rts
000687:0x00066bd0:	jump	0x066f28
000689:0x00066bd8:	cmpm	w, m_WgtBtnSceneSettings
000689:0x00066be8:	bne	0x066c30
000691:0x00066bf0:	movec	param, NULL
000691:0x00066c00:	call	SceneEditorMenu.PopupOpen(POPUP_ID_SCENE_SETTINGS, param)
000692:0x00066c10:	imove	ret, 0x000001
000692:0x00066c20:	rts
000692:0x00066c28:	jump	0x066f28
000694:0x00066c30:	cmpm	w, m_SlWgtSelect
000694:0x00066c40:	bne	0x066d28
000696:0x00066c48:	movefm	[0x11d0a1c0], m_SlWgtLbxObjectsList
000696:0x00066c58:	ncalli	TextListboxWidget.GetSelectedRow()
000696:0x00066c60:	move	row_index, ret
000698:0x00066c70:	movefm	[0x703df48], m_SlObjectsList
000698:0x00066c80:	ncalli	map<int,SceneObject>.Count()
000698:0x00066c88:	cmpi	ret, _i0
000698:0x00066c98:	ble	0x066d08
000698:0x00066ca0:	movefm	[0x703df48], m_SlObjectsList
000698:0x00066cb0:	ncalli	map<int,SceneObject>.Count()
000698:0x00066cb8:	cmpi	ret, row_index
000698:0x00066cc8:	ble	0x066d08
000700:0x00066cd0:	movefm	[0x703df48], m_SlObjectsList
000700:0x00066ce0:	icall	map<int,SceneObject>.GetElement(row_index)
000700:0x00066ce8:	movec	[0x45f497b8], m_ModuleSceneManager
000700:0x00066cf8:	call	PluginSceneManager.SelectObject(ret)
000703:0x00066d08:	imove	ret, 0x000001
000703:0x00066d18:	rts
000703:0x00066d20:	jump	0x066f28
000705:0x00066d28:	cmpm	w, m_SlWgtFocus
000705:0x00066d38:	bne	0x066d78
000707:0x00066d40:	movec	[0x45f497b8], m_ModuleSceneManager
000707:0x00066d50:	call	PluginSceneManager.SelectedObjectFocus()
000709:0x00066d58:	imove	ret, 0x000001
000709:0x00066d68:	rts
000709:0x00066d70:	jump	0x066f28
000711:0x00066d78:	cmpm	w, m_WgtBtnSceneSave
000711:0x00066d88:	bne	0x066dc8
000713:0x00066d90:	movec	[0x45f497b8], m_ModuleSceneManager
000713:0x00066da0:	call	PluginSceneManager.SceneSave()
000715:0x00066da8:	imove	ret, 0x000001
000715:0x00066db8:	rts
000715:0x00066dc0:	jump	0x066f28
000717:0x00066dc8:	cmpm	w, m_WgtBtnEditorSettings
000717:0x00066dd8:	bne	0x066e20
000719:0x00066de0:	movec	param, NULL
000719:0x00066df0:	call	SceneEditorMenu.PopupOpen(POPUP_ID_EDITOR_SETTINGS, param)
000721:0x00066e00:	imove	ret, 0x000001
000721:0x00066e10:	rts
000721:0x00066e18:	jump	0x066f28
000723:0x00066e20:	cmpm	w, m_WgtBtnEditInitScript
000723:0x00066e30:	bne	0x066ee0
000725:0x00066e38:	movec	[0x45f497b8], m_ModuleSceneManager
000725:0x00066e48:	call	PluginSceneManager.GetSelectedSceneObjectIndex()
000725:0x00066e50:	movec	[0x45f497b8], m_ModuleSceneManager
000725:0x00066e60:	call	PluginSceneManager.GetSelectedSceneObject()
000725:0x00066e68:	new	@c01, Param2<int,SceneObject>
000725:0x00066e90:	movec	param, @c01
000726:0x00066ea0:	movec	param, param
000726:0x00066eb0:	call	SceneEditorMenu.PopupOpen(POPUP_ID_INIT_SCRIPT, param)
000728:0x00066ec0:	imove	ret, 0x000001
000728:0x00066ed0:	rts
000728:0x00066ed8:	jump	0x066f28
000730:0x00066ee0:	cmpm	w, m_WgtBtnDeleteRuler
000730:0x00066ef0:	bne	0x066f28
000732:0x00066ef8:	movec	[0x45f497b8], m_ModuleSceneManager
000732:0x00066f08:	call	PluginSceneManager.RulerDelete()
000734:0x00066f10:	imove	ret, 0x000001
000734:0x00066f20:	rts
000737:0x00066f28:	call	SceneEditorMenu.ComponentsOnClick(w, x, y, button)
000737:0x00066f38:	move	ret, ret
000739:0x00066f48:	move	ret, ret
000739:0x00066f58:	rts
000739:0x00066f60:	rts
SceneEditorMenu::OnSqfDebugWatcherResult()
000744:0x00066f68:	cmpc	m_PopupWatchers, NULL
000744:0x00066f78:	beq	0x066fa0
000746:0x00066f80:	movec	[0x7035488], m_PopupWatchers
000746:0x00066f90:	call	UIPopupScriptSQFWatchers.OnSqfDebugWatcherResult(id, result)
000746:0x00066fa0:	rts
SceneEditorMenu::GetSqfCommandForSqfDebugWatcher()
000752:0x00066fa8:	cmpc	m_PopupWatchers, NULL
000752:0x00066fb8:	beq	0x067000
000754:0x00066fc0:	movec	[0x7035488], m_PopupWatchers
000754:0x00066fd0:	call	UIPopupScriptSQFWatchers.GetSqfCommandForSqfDebugWatcher(id)
000754:0x00066fe0:	moves	ret, ret
000754:0x00066ff0:	rts
000754:0x00066ff8:	jump	0x067018
000758:0x00067000:	moves	ret, _s''
000758:0x00067010:	rts
000758:0x00067018:	rts
SceneEditorMenu::OnChange()
000766:0x00067040:	call	UIScriptedMenu.OnChange(w, x, y, finished)
000768:0x00067050:	cmpm	w, m_ClWgtEbxFilter
000768:0x00067060:	bne	0x067090
000770:0x00067068:	call	SceneEditorMenu.UpdateListClasses()
000771:0x00067070:	imove	ret, 0x000001
000771:0x00067080:	rts
000771:0x00067088:	jump	0x067460
000773:0x00067090:	cmpm	w, m_SlWgtEbxFilter
000773:0x000670a0:	bne	0x0670d0
000775:0x000670a8:	call	SceneEditorMenu.UpdateListObjects()
000776:0x000670b0:	imove	ret, 0x000001
000776:0x000670c0:	rts
000776:0x000670c8:	jump	0x067460
000778:0x000670d0:	cmpm	w, m_PrWgtPoxX
000778:0x000670e0:	bne	0x067148
000778:0x000670e8:	cmpi	finished, _i0
000778:0x000670f8:	beq	0x067148
000780:0x00067100:	movefm	[0x11d09a20], m_PrWgtPoxX
000780:0x00067110:	icall	EditBoxWidget.GetText()
000780:0x00067118:	ncall	ToFloat(ret)
000780:0x00067120:	movec	[0x45f497b8], m_ModuleSceneManager
000780:0x00067130:	call	PluginSceneManager.SelectedObjectSetPosX(ret)
000780:0x00067140:	jump	0x067460
000782:0x00067148:	cmpm	w, m_PrWgtPoxY
000782:0x00067158:	bne	0x0671c0
000782:0x00067160:	cmpi	finished, _i0
000782:0x00067170:	beq	0x0671c0
000784:0x00067178:	movefm	[0x11d09a20], m_PrWgtPoxY
000784:0x00067188:	icall	EditBoxWidget.GetText()
000784:0x00067190:	ncall	ToFloat(ret)
000784:0x00067198:	movec	[0x45f497b8], m_ModuleSceneManager
000784:0x000671a8:	call	PluginSceneManager.SelectedObjectSetPosY(ret)
000784:0x000671b8:	jump	0x067460
000786:0x000671c0:	cmpm	w, m_PrWgtPoxZ
000786:0x000671d0:	bne	0x067238
000786:0x000671d8:	cmpi	finished, _i0
000786:0x000671e8:	beq	0x067238
000788:0x000671f0:	movefm	[0x11d09a20], m_PrWgtPoxZ
000788:0x00067200:	icall	EditBoxWidget.GetText()
000788:0x00067208:	ncall	ToFloat(ret)
000788:0x00067210:	movec	[0x45f497b8], m_ModuleSceneManager
000788:0x00067220:	call	PluginSceneManager.SelectedObjectSetPosZ(ret)
000788:0x00067230:	jump	0x067460
000790:0x00067238:	cmpm	w, m_PrWgtDir
000790:0x00067248:	bne	0x0672c8
000790:0x00067250:	cmpi	finished, _i0
000790:0x00067260:	beq	0x0672c8
000792:0x00067268:	movefm	[0x11d09a20], m_PrWgtDir
000792:0x00067278:	icall	EditBoxWidget.GetText()
000792:0x00067280:	ncall	ToFloat(ret)
000792:0x00067288:	movec	[0x45f497b8], m_ModuleSceneManager
000792:0x00067298:	call	PluginSceneManager.SelectedObjectSetRot(ret)
000793:0x000672a8:	imove	ret, 0x000001
000793:0x000672b8:	rts
000793:0x000672c0:	jump	0x067460
000795:0x000672c8:	cmpm	w, m_PrWgtDmg
000795:0x000672d8:	bne	0x067358
000795:0x000672e0:	cmpi	finished, _i0
000795:0x000672f0:	beq	0x067358
000797:0x000672f8:	movefm	[0x11d09a20], m_PrWgtDmg
000797:0x00067308:	icall	EditBoxWidget.GetText()
000797:0x00067310:	ncall	ToFloat(ret)
000797:0x00067318:	movec	[0x45f497b8], m_ModuleSceneManager
000797:0x00067328:	call	PluginSceneManager.SelectedObjectSetDamage(ret)
000798:0x00067338:	imove	ret, 0x000001
000798:0x00067348:	rts
000798:0x00067350:	jump	0x067460
000800:0x00067358:	cmpm	w, m_QuantityEditBox
000800:0x00067368:	bne	0x0673e0
000802:0x00067370:	call	SceneEditorMenu.GetCurrentPresetName()
000802:0x00067378:	call	SceneEditorMenu.GetCurrentItemIndex()
000802:0x00067380:	movefm	[0x11d09a20], m_QuantityEditBox
000802:0x00067390:	icall	EditBoxWidget.GetText()
000802:0x00067398:	ncall	ToInt(ret)
000802:0x000673a0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000802:0x000673b0:	call	PluginConfigDebugProfile.SetItemQuantity(ret, ret, ret)
000803:0x000673c0:	imove	ret, 0x000001
000803:0x000673d0:	rts
000803:0x000673d8:	jump	0x067460
000805:0x000673e0:	cmpm	w, m_DamageEditBox
000805:0x000673f0:	bne	0x067460
000807:0x000673f8:	call	SceneEditorMenu.GetCurrentPresetName()
000807:0x00067400:	call	SceneEditorMenu.GetCurrentItemIndex()
000807:0x00067408:	movefm	[0x11d09a20], m_DamageEditBox
000807:0x00067418:	icall	EditBoxWidget.GetText()
000807:0x00067420:	ncall	ToFloat(ret)
000807:0x00067428:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000807:0x00067438:	call	PluginConfigDebugProfile.SetItemDamage(ret, ret, ret)
000808:0x00067448:	imove	ret, 0x000001
000808:0x00067458:	rts
000811:0x00067460:	call	SceneEditorMenu.ComponentsOnChange(w, x, y, finished)
000811:0x00067470:	move	ret, ret
000813:0x00067480:	imove	ret, 0x000000
000813:0x00067490:	rts
000813:0x00067498:	rts
SceneEditorMenu::OnMouseWheel()
000821:0x000674a0:	call	UIScriptedMenu.OnMouseWheel(w, x, y, wheel)
000823:0x000674b0:	movec	[0x45f497b8], m_ModuleSceneManager
000823:0x000674c0:	call	PluginSceneManager.OnMouseWheel(wheel)
000823:0x000674d0:	rts
SceneEditorMenu::OnItemSelected()
000831:0x000675a0:	call	UIScriptedMenu.OnItemSelected(w, x, y, row, column, oldRow, oldColumn)
000833:0x000675b8:	cmpm	w, m_ClWgtLbxClassesList
000833:0x000675c8:	bne	0x067688
000835:0x000675d0:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000835:0x000675e0:	ncalli	TextListboxWidget.GetSelectedRow()
000835:0x000675e8:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
000835:0x000675f8:	ncalli	TextListboxWidget.GetItem(ret, _i0)
000835:0x00067600:	moves	selected_class_name, ret
000836:0x00067610:	movec	[0x45f497b8], m_ModuleSceneManager
000836:0x00067620:	call	PluginSceneManager.SelectClassName(selected_class_name)
000838:0x00067630:	movec	[0x45f497b8], m_ModuleSceneManager
000838:0x00067640:	call	PluginSceneManager.GetSelectedSceneObject()
000838:0x00067648:	movec	obj_selected, ret
000839:0x00067658:	call	SceneEditorMenu.GetCurrentObjectName()
000839:0x00067660:	moves	m_SelectedObject, ret
000840:0x00067670:	imove	m_SelectedObjectIsPreset, 0x000000
000840:0x00067680:	jump	0x067760
000842:0x00067688:	cmpm	w, m_SlWgtLbxObjectsList
000842:0x00067698:	bne	0x067760
000844:0x000676a0:	movefm	[0x11d0a1c0], m_SlWgtLbxObjectsList
000844:0x000676b0:	ncalli	TextListboxWidget.GetSelectedRow()
000844:0x000676b8:	move	row_index, ret
000846:0x000676c8:	movefm	[0x703df48], m_SlObjectsList
000846:0x000676d8:	ncalli	map<int,SceneObject>.Count()
000846:0x000676e0:	cmpi	ret, _i0
000846:0x000676f0:	ble	0x067760
000846:0x000676f8:	movefm	[0x703df48], m_SlObjectsList
000846:0x00067708:	ncalli	map<int,SceneObject>.Count()
000846:0x00067710:	cmpi	ret, row_index
000846:0x00067720:	ble	0x067760
000848:0x00067728:	movefm	[0x703df48], m_SlObjectsList
000848:0x00067738:	icall	map<int,SceneObject>.GetElement(row_index)
000848:0x00067740:	movec	[0x45f497b8], m_ModuleSceneManager
000848:0x00067750:	call	PluginSceneManager.SelectObject(ret)
000852:0x00067760:	cmpc	m_PopupScriptPositionManager, NULL
000852:0x00067770:	beq	0x0677a0
000854:0x00067778:	movec	[0x7034cc0], m_PopupScriptPositionManager
000854:0x00067788:	call	UIPopupScriptPositionManager.OnItemSelected(w, x, y, row, column, oldRow, oldColumn)
000857:0x000677a0:	imove	ret, 0x000001
000857:0x000677b0:	rts
000857:0x000677b8:	rts
SceneEditorMenu::PopupOpen()
000867:0x00067858:	movefm	[0x11d0bd68], m_OpenedPopups
000867:0x00067868:	ncalli	array<int>.Count()
000867:0x00067870:	cmpi	ret, _i0
000867:0x00067880:	bne	0x0678c0
000869:0x00067888:	movefm	[0x11cf2b58], m_WgtPopupsMain
000869:0x00067898:	ncalli	Widget.Show(true)
000870:0x000678a0:	movefm	[0x11cf2b58], m_WgtPopupsBg
000870:0x000678b0:	ncalli	Widget.Show(true)
000870:0x000678b8:	jump	0x067948
000874:0x000678c0:	movefm	[0x11d0bd68], m_OpenedPopups
000874:0x000678d0:	ncalli	array<int>.Count()
000874:0x000678d8:	subi	@m02, ret, _i1
000874:0x000678e8:	move	@m01, @m02
000874:0x000678f8:	movefm	[0x11d0bd68], m_OpenedPopups
000874:0x00067908:	icall	array<int>.Get(@m01)
000874:0x00067910:	move	popup_curr_id, ret
000875:0x00067920:	movefm	[0x703dd78], m_Popups
000875:0x00067930:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
000875:0x00067938:	call	UIPopupScript.Show(false)
000878:0x00067948:	movefm	[0x11d0bd68], m_OpenedPopups
000878:0x00067958:	icall	array<int>.Insert(popup_id)
000880:0x00067960:	movefm	[0x703dd78], m_Popups
000880:0x00067970:	icall	map<int,UIPopupScript>.Get(popup_id)
000880:0x00067978:	movec	popup, ret
000882:0x00067988:	call	UIPopupScript.Show(true)
000883:0x00067998:	call	UIPopupScript.OnOpen(param)
000885:0x000679a8:	movec	ret, popup
000885:0x000679b8:	rts
000885:0x000679c0:	rts
SceneEditorMenu::PopupBack()
000893:0x00067a30:	movefm	[0x11d0bd68], m_OpenedPopups
000893:0x00067a40:	ncalli	array<int>.Count()
000893:0x00067a48:	cmpi	ret, _i0
000893:0x00067a58:	ble	0x067c78
000895:0x00067a60:	movefm	[0x11d0bd68], m_OpenedPopups
000895:0x00067a70:	ncalli	array<int>.Count()
000895:0x00067a78:	subi	@m02, ret, _i1
000895:0x00067a88:	move	@m01, @m02
000895:0x00067a98:	movefm	[0x11d0bd68], m_OpenedPopups
000895:0x00067aa8:	icall	array<int>.Get(@m01)
000895:0x00067ab0:	move	popup_curr_id, ret
000897:0x00067ac0:	movefm	[0x703dd78], m_Popups
000897:0x00067ad0:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
000897:0x00067ad8:	call	UIPopupScript.Show(false)
000898:0x00067ae8:	movefm	[0x703dd78], m_Popups
000898:0x00067af8:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
000898:0x00067b00:	call	UIPopupScript.OnClose()
000900:0x00067b08:	movefm	[0x11d0bd68], m_OpenedPopups
000900:0x00067b18:	ncalli	array<int>.Count()
000900:0x00067b20:	subi	@m01, ret, _i1
000900:0x00067b30:	move	@m00, @m01
000900:0x00067b40:	movefm	[0x11d0bd68], m_OpenedPopups
000900:0x00067b50:	ncalli	array<int>.Remove(@m00)
000902:0x00067b58:	movefm	[0x11d0bd68], m_OpenedPopups
000902:0x00067b68:	ncalli	array<int>.Count()
000902:0x00067b70:	cmpi	ret, _i0
000902:0x00067b80:	ble	0x067c78
000904:0x00067b88:	movefm	[0x11d0bd68], m_OpenedPopups
000904:0x00067b98:	ncalli	array<int>.Count()
000904:0x00067ba0:	subi	@m02, ret, _i1
000904:0x00067bb0:	move	@m01, @m02
000904:0x00067bc0:	movefm	[0x11d0bd68], m_OpenedPopups
000904:0x00067bd0:	icall	array<int>.Get(@m01)
000904:0x00067bd8:	move	ppp_id, ret
000905:0x00067be8:	movefm	[0x703dd78], m_Popups
000905:0x00067bf8:	icall	map<int,UIPopupScript>.Get(ppp_id)
000905:0x00067c00:	call	UIPopupScript.Show(true)
000906:0x00067c10:	movefm	[0x703dd78], m_Popups
000906:0x00067c20:	icall	map<int,UIPopupScript>.Get(ppp_id)
000906:0x00067c28:	movec	param, NULL
000906:0x00067c38:	call	UIPopupScript.OnOpen(param)
000908:0x00067c48:	movefm	[0x703dd78], m_Popups
000908:0x00067c58:	icall	map<int,UIPopupScript>.Get(ppp_id)
000908:0x00067c60:	movec	ret, ret
000908:0x00067c70:	rts
000912:0x00067c78:	movefm	[0x11cf2b58], m_WgtPopupsMain
000912:0x00067c88:	ncalli	Widget.Show(false)
000913:0x00067c90:	movefm	[0x11cf2b58], m_WgtPopupsBg
000913:0x00067ca0:	ncalli	Widget.Show(false)
000915:0x00067ca8:	movec	ret, NULL
000915:0x00067cb8:	rts
000915:0x00067cc0:	rts
SceneEditorMenu::PopupCloseAll()
000923:0x00067ce8:	movefm	[0x11d0bd68], m_OpenedPopups
000923:0x00067cf8:	ncalli	array<int>.Count()
000923:0x00067d00:	cmpi	ret, _i0
000923:0x00067d10:	ble	0x067dd8
000925:0x00067d18:	movefm	[0x11d0bd68], m_OpenedPopups
000925:0x00067d28:	ncalli	array<int>.Count()
000925:0x00067d30:	subi	@m02, ret, _i1
000925:0x00067d40:	move	@m01, @m02
000925:0x00067d50:	movefm	[0x11d0bd68], m_OpenedPopups
000925:0x00067d60:	icall	array<int>.Get(@m01)
000925:0x00067d68:	move	popup_curr_id, ret
000927:0x00067d78:	movefm	[0x703dd78], m_Popups
000927:0x00067d88:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
000927:0x00067d90:	call	UIPopupScript.Show(false)
000928:0x00067da0:	movefm	[0x703dd78], m_Popups
000928:0x00067db0:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
000928:0x00067db8:	call	UIPopupScript.OnClose()
000930:0x00067dc0:	movefm	[0x11d0bd68], m_OpenedPopups
000930:0x00067dd0:	ncalli	array<int>.Clear()
000930:0x00067dd8:	rts
SceneEditorMenu::ToggleVisibility()
000941:0x00067de0:	movec	[0x45f497b8], m_ModuleSceneManager
000941:0x00067df0:	call	PluginSceneManager.IsOpened()
000941:0x00067df8:	movefm	[0x11cf2b58], m_WgtRoot
000941:0x00067e08:	ncalli	Widget.Show(ret)
000941:0x00067e10:	rts
SceneEditorMenu::Refresh()
000949:0x00068290:	call	SceneEditorMenu.UpdateListObjects()
000951:0x00068298:	moves	class_name, _s'n/a'
000952:0x000682a8:	moves	pos_x, _s'n/a'
000953:0x000682b8:	moves	pos_y, _s'n/a'
000954:0x000682c8:	moves	pos_z, _s'n/a'
000955:0x000682d8:	moves	rot, _s'n/a'
000956:0x000682e8:	moves	dmg, _s'n/a'
000959:0x000682f8:	imove	i, 0x000000
000959:0x00068308:	jump	0x068318
000959:0x00068310:	inc	i
000959:0x00068318:	movefm	[0x703e8d0], m_PrWidgetsAttachments
000959:0x00068328:	ncalli	array<UIPropertyAttachment>.Count()
000959:0x00068330:	cmpi	i, ret
000959:0x00068340:	bge	0x068370
000961:0x00068348:	movefm	[0x703e8d0], m_PrWidgetsAttachments
000961:0x00068358:	icall	array<UIPropertyAttachment>.Get(i)
000961:0x00068360:	call	UIPropertyAttachment.Hide()
000961:0x00068368:	jump	0x068310
000964:0x00068370:	movec	[0x45f497b8], m_ModuleSceneManager
000964:0x00068380:	call	PluginSceneManager.GetSelectedSceneObject()
000964:0x00068388:	cmpc	ret, NULL
000964:0x00068398:	beq	0x068740
000966:0x000683a0:	movec	[0x45f497b8], m_ModuleSceneManager
000966:0x000683b0:	call	PluginSceneManager.GetSelectedSceneObject()
000966:0x000683b8:	movec	obj, ret
000967:0x000683c8:	call	SceneObject.GetPosition()
000967:0x000683d0:	movev	v, ret
000969:0x000683e0:	call	SceneObject.GetTypeName()
000969:0x000683e8:	moves	class_name, ret
000970:0x000683f8:	ifv	@f00, v[0x000000]
000970:0x00068408:	icall	ToString(@f00)
000970:0x00068410:	moves	pos_x, ret
000971:0x00068420:	ifv	@f00, v[0x000001]
000971:0x00068430:	icall	ToString(@f00)
000971:0x00068438:	moves	pos_y, ret
000972:0x00068448:	ifv	@f00, v[0x000002]
000972:0x00068458:	icall	ToString(@f00)
000972:0x00068460:	moves	pos_z, ret
000973:0x00068470:	call	SceneObject.GetRotation()
000973:0x00068478:	icall	ToString(ret)
000973:0x00068480:	moves	rot, ret
000974:0x00068490:	call	SceneObject.GetDamage()
000974:0x00068498:	icall	ToString(ret)
000974:0x000684a0:	moves	dmg, ret
000976:0x000684b0:	call	SceneObject.GetConfigAttachments()
000976:0x000684b8:	movem	attachments_slots, ret
000978:0x000684c8:	imove	prop_h, 0.03000
000979:0x000684d8:	ncalli	array<string>.Count()
000979:0x000684e0:	citf	prop_count, ret
000980:0x000684f0:	addf	@f01, prop_count, _f1.000000
000980:0x00068500:	move	@f00, @f01
000980:0x00068510:	mulf	prop_root_h, prop_h, @f00
000981:0x00068520:	addf	@f01, prop_count, _f1.000000
000981:0x00068530:	move	@f00, @f01
000981:0x00068540:	divf	line_h, _f1.000000, @f00
000983:0x00068550:	movefm	[0x11cf2b58], m_PrWgtAttRoot
000983:0x00068560:	ncalli	Widget.SetSize(_f1.000000, prop_root_h, _i1)
000984:0x00068570:	movefm	[0x11cf2b58], m_PrWgtAttTitle
000984:0x00068580:	ncalli	Widget.SetSize(_f1.000000, line_h, _i1)
000987:0x00068590:	movec	[0x45f497b8], m_ModuleSceneManager
000987:0x000685a0:	call	PluginSceneManager.GetSelectedSceneObject()
000987:0x000685a8:	call	SceneObject.GetObject()
000987:0x000685b0:	movem	e, ret
000989:0x000685c0:	call	SceneEditorMenu.GetItemNamesForSlots(attachments_slots)
000989:0x000685d0:	movem	attachments_in_slots, ret
000992:0x000685e0:	imove	j, 0x000000
000992:0x000685f0:	jump	0x068600
000992:0x000685f8:	inc	j
000992:0x00068600:	ncalli	map<string,array<string>>.Count()
000992:0x00068608:	cmpi	j, ret
000992:0x00068618:	bge	0x068708
000994:0x00068620:	icall	map<string,array<string>>.GetElement(j)
000994:0x00068628:	movetm	attachments_in_slot, ret
000996:0x00068638:	call	SceneEditorMenu.GetFreeUIPropertyAttchament()
000996:0x00068640:	movec	ui_prop, ret
000998:0x00068650:	movec	[0x45f497b8], m_ModuleSceneManager
000998:0x00068660:	call	PluginSceneManager.GetSelectedSceneObject()
000998:0x00068668:	call	SceneObject.GetObject()
000998:0x00068670:	icall	map<string,array<string>>.GetKey(j)
000998:0x00068678:	call	UIPropertyAttachment.Show(ret, ret, attachments_in_slot)
000999:0x00068688:	citf	@f02, j
000999:0x00068698:	addf	@f02, _f1.000000, @f02
000999:0x000686a8:	move	@f01, @f02
000999:0x000686b8:	mulf	@f01, @f01, line_h
000999:0x000686c8:	move	@f00, @f01
000999:0x000686d8:	call	UIPropertyAttachment.SetPos(_f0.000000, @f00)
001000:0x000686e8:	call	UIPropertyAttachment.SetSize(_f1.000000, line_h)
001000:0x000686f8:	release	attachments_in_slot
001000:0x00068700:	jump	0x0685f8
001003:0x00068708:	movefm	[0x11d09c98], m_WgtBtnEditInitScript
001003:0x00068718:	ncalli	ButtonWidget.Enable(true)
001003:0x00068720:	delete	attachments_slots
001003:0x00068728:	release	e
001003:0x00068730:	release	attachments_in_slots
001003:0x00068738:	jump	0x068758
001007:0x00068740:	movefm	[0x11d09c98], m_WgtBtnEditInitScript
001007:0x00068750:	ncalli	ButtonWidget.Enable(false)
001010:0x00068758:	movefm	[0x11d09418], m_PrWgtClassName
001010:0x00068768:	ncalli	TextWidget.SetText(class_name)
001011:0x00068770:	movefm	[0x11d09a20], m_PrWgtPoxX
001011:0x00068780:	ncalli	EditBoxWidget.SetText(pos_x)
001012:0x00068788:	movefm	[0x11d09a20], m_PrWgtPoxY
001012:0x00068798:	ncalli	EditBoxWidget.SetText(pos_y)
001013:0x000687a0:	movefm	[0x11d09a20], m_PrWgtPoxZ
001013:0x000687b0:	ncalli	EditBoxWidget.SetText(pos_z)
001014:0x000687b8:	movefm	[0x11d09a20], m_PrWgtDir
001014:0x000687c8:	ncalli	EditBoxWidget.SetText(rot)
001015:0x000687d0:	movefm	[0x11d09a20], m_PrWgtDmg
001015:0x000687e0:	ncalli	EditBoxWidget.SetText(dmg)
001017:0x000687e8:	movec	[0x45f497b8], m_ModuleSceneManager
001017:0x000687f8:	call	PluginSceneManager.SceneGetName()
001017:0x00068800:	adds	@s01, _s'Loaded Scene: ', ret
001017:0x00068810:	moves	@s00, @s01
001017:0x00068820:	movefm	[0x11d09418], m_SlWgtLoadedScene
001017:0x00068830:	ncalli	TextWidget.SetText(@s00)
001020:0x00068838:	movec	[0x45f497b8], m_ModuleSceneManager
001020:0x00068848:	call	PluginSceneManager.IsRulerActivated()
001020:0x00068850:	cmpi	ret, _i0
001020:0x00068860:	beq	0x068888
001022:0x00068868:	movefm	[0x11d09c98], m_WgtBtnDeleteRuler
001022:0x00068878:	ncalli	ButtonWidget.SetColor(_i-10624984)
001022:0x00068880:	jump	0x0688a0
001026:0x00068888:	movefm	[0x11d09c98], m_WgtBtnDeleteRuler
001026:0x00068898:	ncalli	ButtonWidget.SetColor(_i-1)
001026:0x000688a0:	rts
SceneEditorMenu::SceneEditorCommand()
001033:0x000689b0:	movec	p, params
001034:0x000689c0:	move	cmd_id, param1
001036:0x000689d0:	imove	@m00, 0x000000
001036:0x000689e0:	cmpi	@m00, cmd_id
001036:0x000689f0:	bne	0x068a10
001039:0x000689f8:	call	SceneEditorMenu.Refresh()
001040:0x00068a00:	jump	0x068c08
001040:0x00068a08:	jump	0x068a38
001040:0x00068a10:	imove	@m00, 0x000001
001040:0x00068a20:	cmpi	@m00, cmd_id
001040:0x00068a30:	bne	0x068b90
001044:0x00068a38:	imove	popup_curr_id, 0x000000
001046:0x00068a48:	movefm	[0x11d0bd68], m_OpenedPopups
001046:0x00068a58:	ncalli	array<int>.Count()
001046:0x00068a60:	cmpi	ret, _i0
001046:0x00068a70:	beq	0x068ad8
001048:0x00068a78:	movefm	[0x11d0bd68], m_OpenedPopups
001048:0x00068a88:	ncalli	array<int>.Count()
001048:0x00068a90:	subi	@m02, ret, _i1
001048:0x00068aa0:	move	@m01, @m02
001048:0x00068ab0:	movefm	[0x11d0bd68], m_OpenedPopups
001048:0x00068ac0:	icall	array<int>.Get(@m01)
001048:0x00068ac8:	move	popup_curr_id, ret
001051:0x00068ad8:	movefm	[0x703dd78], m_Popups
001051:0x00068ae8:	icall	map<int,UIPopupScript>.Get(popup_curr_id)
001051:0x00068af0:	cmpc	m_PopupWatchers, ret
001051:0x00068b00:	beq	0x068b80
001053:0x00068b08:	movec	param_string, params
001054:0x00068b18:	movec	[0x3cd18fd8], param2
001054:0x00068b28:	moves	message, param1
001056:0x00068b38:	movec	param, NULL
001056:0x00068b48:	call	SceneEditorMenu.PopupOpen(POPUP_ID_NOTIFY, param)
001056:0x00068b58:	movec	popup_notify, ret
001057:0x00068b68:	call	UIPopupScriptNotify.SetLabelText(message)
001058:0x00068b78:	delete	param2
001061:0x00068b80:	jump	0x068c08
001061:0x00068b88:	jump	0x068bb8
001061:0x00068b90:	imove	@m00, 0x000002
001061:0x00068ba0:	cmpi	@m00, cmd_id
001061:0x00068bb0:	bne	0x068c08
001064:0x00068bb8:	movefm	[0x11cf2b58], m_NotifyWgtPanel
001064:0x00068bc8:	ncalli	Widget.SetAlpha(_f1.000000)
001065:0x00068bd0:	movem	w, m_NotifyWgtPanel
001065:0x00068be0:	movec	[0x3cd17188], m_NotifyFadeTimer
001065:0x00068bf0:	call	WidgetFadeTimer.FadeOut(w, _f2.000000, true)
001066:0x00068c00:	jump	0x068c08
001066:0x00068c08:	rts
SceneEditorMenu::UpdateListObjects()
001165:0x00068cf0:	movefm	[0x11d09a20], m_SlWgtEbxFilter
001165:0x00068d00:	icall	EditBoxWidget.GetText()
001165:0x00068d08:	movem	array_ret, m_SlObjectsList
001165:0x00068d18:	call	SceneEditorMenu.GetFiltredSceneObjects(ret, array_ret)
001165:0x00068d28:	movem	m_SlObjectsList, ret
001167:0x00068d38:	movefm	[0x11d0a1c0], m_SlWgtLbxObjectsList
001167:0x00068d48:	ncalli	TextListboxWidget.ClearItems()
001169:0x00068d50:	imove	row, 0xffffffff
001170:0x00068d60:	movec	[0x45f497b8], m_ModuleSceneManager
001170:0x00068d70:	call	PluginSceneManager.GetSelectedSceneObject()
001170:0x00068d78:	movec	selected_object, ret
001172:0x00068d88:	imove	i, 0x000000
001172:0x00068d98:	jump	0x068da8
001172:0x00068da0:	inc	i
001172:0x00068da8:	movefm	[0x703df48], m_SlObjectsList
001172:0x00068db8:	ncalli	map<int,SceneObject>.Count()
001172:0x00068dc0:	cmpi	i, ret
001172:0x00068dd0:	bge	0x068e70
001174:0x00068dd8:	movefm	[0x703df48], m_SlObjectsList
001174:0x00068de8:	icall	map<int,SceneObject>.GetElement(i)
001174:0x00068df0:	movec	scene_obj, ret
001176:0x00068e00:	cmpc	selected_object, NULL
001176:0x00068e10:	beq	0x068e40
001176:0x00068e18:	cmpc	selected_object, scene_obj
001176:0x00068e28:	bne	0x068e40
001178:0x00068e30:	move	row, i
001181:0x00068e40:	call	SceneObject.GetTypeName()
001181:0x00068e48:	movefm	[0x11d0a1c0], m_SlWgtLbxObjectsList
001181:0x00068e58:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
001181:0x00068e68:	jump	0x068da0
001184:0x00068e70:	movefm	[0x11d0a1c0], m_SlWgtLbxObjectsList
001184:0x00068e80:	ncalli	TextListboxWidget.SelectRow(row)
001184:0x00068e88:	rts
SceneEditorMenu::UpdateListClasses()
001192:0x00068eb0:	movefm	[0x11d09a20], m_ClWgtEbxFilter
001192:0x00068ec0:	icall	EditBoxWidget.GetText()
001192:0x00068ec8:	movem	array_ret, m_ClClassesList
001192:0x00068ed8:	call	SceneEditorMenu.GetFiltredConfigClasses(ret, array_ret)
001192:0x00068ee8:	movem	m_ClClassesList, ret
001194:0x00068ef8:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
001194:0x00068f08:	ncalli	TextListboxWidget.ClearItems()
001196:0x00068f10:	imove	i, 0x000000
001196:0x00068f20:	jump	0x068f30
001196:0x00068f28:	inc	i
001196:0x00068f30:	movefm	[0x11d0bb58], m_ClClassesList
001196:0x00068f40:	ncalli	array<string>.Count()
001196:0x00068f48:	cmpi	i, ret
001196:0x00068f58:	bge	0x068fa0
001198:0x00068f60:	movefm	[0x11d0bb58], m_ClClassesList
001198:0x00068f70:	icall	array<string>.Get(i)
001198:0x00068f78:	movefm	[0x11d0a1c0], m_ClWgtLbxClassesList
001198:0x00068f88:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
001198:0x00068f98:	jump	0x068f28
001198:0x00068fa0:	rts
SceneEditorMenu::GetFiltredSceneObjects()
001207:0x00069028:	movec	[0x45f497b8], m_ModuleSceneManager
001207:0x00069038:	call	PluginSceneManager.GetSceneObjectsAll()
001207:0x00069040:	movem	scene_objects, ret
001209:0x00069050:	icall	ToLower(search_string)
001211:0x00069058:	ncalli	map<int,SceneObject>.Clear()
001213:0x00069060:	cmpcm	scene_objects, NULL
001213:0x00069070:	beq	0x069148
001215:0x00069078:	imove	i, 0x000000
001215:0x00069088:	jump	0x069098
001215:0x00069090:	inc	i
001215:0x00069098:	ncalli	array<SceneObject>.Count()
001215:0x000690a0:	cmpi	i, ret
001215:0x000690b0:	bge	0x069148
001217:0x000690b8:	icall	array<SceneObject>.Get(i)
001217:0x000690c0:	movec	sc_obj, ret
001219:0x000690d0:	call	SceneObject.GetTypeName()
001219:0x000690d8:	moves	obj_name, ret
001221:0x000690e8:	icall	ToLower(obj_name)
001223:0x000690f0:	moves	value, obj_name
001223:0x00069100:	call	Contains(value, search_string)
001223:0x00069110:	moves	obj_name, value
001223:0x00069120:	cmpi	ret, _i0
001223:0x00069130:	beq	0x069140
001225:0x00069138:	icall	map<int,SceneObject>.Insert(i, sc_obj)
001225:0x00069140:	jump	0x069090
001230:0x00069148:	movem	ret, array_ret
001230:0x00069158:	release	scene_objects
001230:0x00069160:	rts
001230:0x00069168:	release	scene_objects
001230:0x00069170:	rts
SceneEditorMenu::GetFiltredConfigClasses()
001238:0x00069298:	new	@c00, array<string>
001238:0x000692b8:	movetm	searching_in, @c00
001239:0x000692c8:	icall	array<string>.Insert(CFG_VEHICLESPATH)
001240:0x000692d0:	icall	array<string>.Insert(CFG_WEAPONSPATH)
001241:0x000692d8:	icall	array<string>.Insert(CFG_MAGAZINESPATH)
001243:0x000692e0:	ncalli	array<string>.Clear()
001245:0x000692e8:	icall	ToLower(search_string)
001247:0x000692f0:	imove	s, 0x000000
001247:0x00069300:	jump	0x069310
001247:0x00069308:	inc	s
001247:0x00069310:	ncalli	array<string>.Count()
001247:0x00069318:	cmpi	s, ret
001247:0x00069328:	bge	0x0694b8
001249:0x00069330:	icall	array<string>.Get(s)
001249:0x00069338:	moves	config_path, ret
001251:0x00069348:	ncalli	DayZGame.ConfigGetChildrenCount(config_path)
001251:0x00069350:	move	objects_count, ret
001252:0x00069360:	imove	i, 0x000000
001252:0x00069370:	jump	0x069380
001252:0x00069378:	inc	i
001252:0x00069380:	cmpi	i, objects_count
001252:0x00069390:	bge	0x0694b0
001255:0x00069398:	icall	DayZGame.ConfigGetChildName(config_path, i, childName)
001257:0x000693a8:	adds	@s03, config_path, _s' '
001257:0x000693b8:	moves	@s02, @s03
001257:0x000693c8:	adds	@s02, @s02, childName
001257:0x000693d8:	moves	@s01, @s02
001257:0x000693e8:	adds	@s01, @s01, _s' scope'
001257:0x000693f8:	moves	@s00, @s01
001257:0x00069408:	ncalli	DayZGame.ConfigGetInt(@s00)
001257:0x00069410:	move	scope, ret
001258:0x00069420:	cmpi	scope, _i0
001258:0x00069430:	bne	0x069440
001260:0x00069438:	jump	0x069378
001263:0x00069440:	moves	nchName, childName
001264:0x00069450:	icall	ToLower(nchName)
001266:0x00069458:	moves	value, nchName
001266:0x00069468:	call	Contains(value, search_string)
001266:0x00069478:	moves	nchName, value
001266:0x00069488:	cmpi	ret, _i0
001266:0x00069498:	beq	0x0694a8
001268:0x000694a0:	icall	array<string>.Insert(childName)
001268:0x000694a8:	jump	0x069378
001268:0x000694b0:	jump	0x069308
001273:0x000694b8:	delete	searching_in
001275:0x000694c0:	movem	ret, array_ret
001275:0x000694d0:	release	searching_in
001275:0x000694d8:	rts
001275:0x000694e0:	release	searching_in
001275:0x000694e8:	rts
SceneEditorMenu::PopupHideAll()
001290:0x00069510:	imove	i, 0x000000
001290:0x00069520:	jump	0x069530
001290:0x00069528:	inc	i
001290:0x00069530:	movefm	[0x703dd78], m_Popups
001290:0x00069540:	ncalli	map<int,UIPopupScript>.Count()
001290:0x00069548:	cmpi	i, ret
001290:0x00069558:	bge	0x069590
001292:0x00069560:	movefm	[0x703dd78], m_Popups
001292:0x00069570:	icall	map<int,UIPopupScript>.Get(i)
001292:0x00069578:	call	UIPopupScript.Show(false)
001292:0x00069588:	jump	0x069528
001295:0x00069590:	movefm	[0x11cf2b58], m_WgtPopupsMain
001295:0x000695a0:	ncalli	Widget.Show(false)
001296:0x000695a8:	movefm	[0x11cf2b58], m_WgtPopupsBg
001296:0x000695b8:	ncalli	Widget.Show(false)
001296:0x000695c0:	rts
SceneEditorMenu::ComponentsOnClick()
001304:0x00069608:	imove	i, 0x000000
001304:0x00069618:	jump	0x069628
001304:0x00069620:	inc	i
001304:0x00069628:	movefm	[0x703dd78], m_Popups
001304:0x00069638:	ncalli	map<int,UIPopupScript>.Count()
001304:0x00069640:	cmpi	i, ret
001304:0x00069650:	bge	0x0696b8
001306:0x00069658:	movefm	[0x703dd78], m_Popups
001306:0x00069668:	icall	map<int,UIPopupScript>.Get(i)
001306:0x00069670:	call	UIPopupScript.OnClick(w, x, y, button)
001306:0x00069680:	cmpi	ret, _i0
001306:0x00069690:	beq	0x0696b0
001308:0x00069698:	imove	ret, 0x000001
001308:0x000696a8:	rts
001308:0x000696b0:	jump	0x069620
001312:0x000696b8:	imove	j, 0x000000
001312:0x000696c8:	jump	0x0696d8
001312:0x000696d0:	inc	j
001312:0x000696d8:	movefm	[0x703e8d0], m_PrWidgetsAttachments
001312:0x000696e8:	ncalli	array<UIPropertyAttachment>.Count()
001312:0x000696f0:	cmpi	j, ret
001312:0x00069700:	bge	0x069768
001314:0x00069708:	movefm	[0x703e8d0], m_PrWidgetsAttachments
001314:0x00069718:	icall	array<UIPropertyAttachment>.Get(j)
001314:0x00069720:	call	UIPropertyAttachment.OnClick(w, x, y, button)
001314:0x00069730:	cmpi	ret, _i0
001314:0x00069740:	beq	0x069760
001316:0x00069748:	imove	ret, 0x000001
001316:0x00069758:	rts
001316:0x00069760:	jump	0x0696d0
001320:0x00069768:	imove	ret, 0x000000
001320:0x00069778:	rts
001320:0x00069780:	rts
SceneEditorMenu::ComponentsOnChange()
001328:0x000697a8:	imove	i, 0x000000
001328:0x000697b8:	jump	0x0697c8
001328:0x000697c0:	inc	i
001328:0x000697c8:	movefm	[0x703dd78], m_Popups
001328:0x000697d8:	ncalli	map<int,UIPopupScript>.Count()
001328:0x000697e0:	cmpi	i, ret
001328:0x000697f0:	bge	0x069858
001330:0x000697f8:	movefm	[0x703dd78], m_Popups
001330:0x00069808:	icall	map<int,UIPopupScript>.Get(i)
001330:0x00069810:	call	UIPopupScript.OnChange(w, x, y, finished)
001330:0x00069820:	cmpi	ret, _i0
001330:0x00069830:	beq	0x069850
001332:0x00069838:	imove	ret, 0x000001
001332:0x00069848:	rts
001332:0x00069850:	jump	0x0697c0
001336:0x00069858:	imove	ret, 0x000000
001336:0x00069868:	rts
001336:0x00069870:	rts
SceneEditorMenu::GetFreeUIPropertyAttchament()
001344:0x00069900:	imove	i, 0x000000
001344:0x00069910:	jump	0x069920
001344:0x00069918:	inc	i
001344:0x00069920:	movefm	[0x703e8d0], m_PrWidgetsAttachments
001344:0x00069930:	ncalli	array<UIPropertyAttachment>.Count()
001344:0x00069938:	cmpi	i, ret
001344:0x00069948:	bge	0x0699b8
001346:0x00069950:	movefm	[0x703e8d0], m_PrWidgetsAttachments
001346:0x00069960:	icall	array<UIPropertyAttachment>.Get(i)
001346:0x00069968:	movec	ui_comp, ret
001348:0x00069978:	call	UIPropertyAttachment.IsVisible()
001348:0x00069980:	cmpi	ret, _i0
001348:0x00069990:	bne	0x0699b0
001350:0x00069998:	movec	ret, ui_comp
001350:0x000699a8:	rts
001350:0x000699b0:	jump	0x069918
001354:0x000699b8:	movem	root, m_PrWgtAttRoot
001354:0x000699c8:	new	@c00, UIPropertyAttachment
001354:0x000699f0:	movec	ui_prop, @c00
001355:0x00069a00:	movefm	[0x703e8d0], m_PrWidgetsAttachments
001355:0x00069a10:	icall	array<UIPropertyAttachment>.Insert(ui_prop)
001357:0x00069a18:	movec	ret, ui_prop
001357:0x00069a28:	rts
001357:0x00069a30:	rts
SceneEditorMenu::GetItemNamesForSlots()
001365:0x00069d08:	new	@c00, array<string>
001365:0x00069d28:	movetm	searching_in, @c00
001366:0x00069d38:	icall	array<string>.Insert(CFG_VEHICLESPATH)
001367:0x00069d40:	icall	array<string>.Insert(CFG_WEAPONSPATH)
001368:0x00069d48:	icall	array<string>.Insert(CFG_MAGAZINESPATH)
001370:0x00069d50:	new	@c00, map<string,array<string>>
001370:0x00069d70:	movetm	array_ret, @c00
001372:0x00069d80:	imove	m, 0x000000
001372:0x00069d90:	jump	0x069da0
001372:0x00069d98:	inc	m
001372:0x00069da0:	ncalli	array<string>.Count()
001372:0x00069da8:	cmpi	m, ret
001372:0x00069db8:	bge	0x069df8
001374:0x00069dc0:	icall	array<string>.Get(m)
001374:0x00069dc8:	new	@c00, array<string>
001374:0x00069de8:	icall	map<string,array<string>>.Insert(ret, @c00)
001374:0x00069df0:	jump	0x069d98
001377:0x00069df8:	new	@c00, array<string>
001377:0x00069e18:	movetm	inv_slots, @c00
001381:0x00069e28:	imove	s, 0x000000
001381:0x00069e38:	jump	0x069e48
001381:0x00069e40:	inc	s
001381:0x00069e48:	ncalli	array<string>.Count()
001381:0x00069e50:	cmpi	s, ret
001381:0x00069e60:	bge	0x06a1a0
001383:0x00069e68:	icall	array<string>.Get(s)
001383:0x00069e70:	moves	config_path, ret
001385:0x00069e80:	ncalli	DayZGame.ConfigGetChildrenCount(config_path)
001385:0x00069e88:	move	objects_count, ret
001386:0x00069e98:	imove	i, 0x000000
001386:0x00069ea8:	jump	0x069eb8
001386:0x00069eb0:	inc	i
001386:0x00069eb8:	cmpi	i, objects_count
001386:0x00069ec8:	bge	0x06a198
001388:0x00069ed0:	icall	DayZGame.ConfigGetChildName(config_path, i, childName)
001390:0x00069ee0:	adds	@s03, config_path, _s' '
001390:0x00069ef0:	moves	@s02, @s03
001390:0x00069f00:	adds	@s02, @s02, childName
001390:0x00069f10:	moves	@s01, @s02
001390:0x00069f20:	adds	@s01, @s01, _s' inventorySlot'
001390:0x00069f30:	moves	@s00, @s01
001390:0x00069f40:	movefm	[0x3cd2baa8], inv_slots
001390:0x00069f50:	ncalli	DayZGame.ConfigGetTextArray(@s00, [0x3cd2baa8])
001392:0x00069f58:	ncalli	array<string>.Count()
001392:0x00069f60:	cmpi	ret, _i0
001392:0x00069f70:	ble	0x06a078
001394:0x00069f78:	imove	j, 0x000000
001394:0x00069f88:	jump	0x069f98
001394:0x00069f90:	inc	j
001394:0x00069f98:	ncalli	array<string>.Count()
001394:0x00069fa0:	cmpi	j, ret
001394:0x00069fb0:	bge	0x06a070
001396:0x00069fb8:	moves	inv_slot, _s''
001397:0x00069fc8:	icall	array<string>.Get(j)
001397:0x00069fd0:	moves	inv_slot, ret
001399:0x00069fe0:	imove	k, 0x000000
001399:0x00069ff0:	jump	0x06a000
001399:0x00069ff8:	inc	k
001399:0x0006a000:	ncalli	array<string>.Count()
001399:0x0006a008:	cmpi	k, ret
001399:0x0006a018:	bge	0x06a068
001401:0x0006a020:	icall	array<string>.Get(k)
001401:0x0006a028:	moves	finding_slot_type, ret
001403:0x0006a038:	cmps	inv_slot, finding_slot_type
001403:0x0006a048:	bne	0x06a060
001405:0x0006a050:	icall	map<string,array<string>>.Get(finding_slot_type)
001405:0x0006a058:	icall	array<string>.Insert(childName)
001405:0x0006a060:	jump	0x069ff8
001405:0x0006a068:	jump	0x069f90
001405:0x0006a070:	jump	0x06a190
001412:0x0006a078:	moves	inv_slot, _s''
001413:0x0006a088:	adds	@s03, config_path, _s' '
001413:0x0006a098:	moves	@s02, @s03
001413:0x0006a0a8:	adds	@s02, @s02, childName
001413:0x0006a0b8:	moves	@s01, @s02
001413:0x0006a0c8:	adds	@s01, @s01, _s' inventorySlot'
001413:0x0006a0d8:	moves	@s00, @s01
001413:0x0006a0e8:	icall	DayZGame.ConfigGetText(@s00, inv_slot)
001415:0x0006a0f0:	cmps	inv_slot, _s''
001415:0x0006a100:	beq	0x06a190
001417:0x0006a108:	imove	l, 0x000000
001417:0x0006a118:	jump	0x06a128
001417:0x0006a120:	inc	l
001417:0x0006a128:	ncalli	array<string>.Count()
001417:0x0006a130:	cmpi	l, ret
001417:0x0006a140:	bge	0x06a190
001419:0x0006a148:	icall	array<string>.Get(l)
001419:0x0006a150:	moves	finding_slot_type_2, ret
001421:0x0006a160:	cmps	inv_slot, finding_slot_type_2
001421:0x0006a170:	bne	0x06a188
001423:0x0006a178:	icall	map<string,array<string>>.Get(finding_slot_type_2)
001423:0x0006a180:	icall	array<string>.Insert(childName)
001423:0x0006a188:	jump	0x06a120
001423:0x0006a190:	jump	0x069eb0
001423:0x0006a198:	jump	0x069e40
001431:0x0006a1a0:	delete	inv_slots
001432:0x0006a1a8:	delete	searching_in
001434:0x0006a1b0:	movem	ret, array_ret
001434:0x0006a1c0:	release	searching_in
001434:0x0006a1c8:	release	array_ret
001434:0x0006a1d0:	release	inv_slots
001434:0x0006a1d8:	rts
001434:0x0006a1e0:	release	searching_in
001434:0x0006a1e8:	release	array_ret
001434:0x0006a1f0:	release	inv_slots
001434:0x0006a1f8:	rts
ScriptConsoleNewPresetDialog::Init()
//scripts/5_Mission/GUI/ScriptConsole/ScriptConsoleNewPresetDialog.c
000014:0x0006a2a0:	ncall	GetGame()
000014:0x0006a2a8:	ncalli	CGame.GetWorkspace()
000014:0x0006a2b0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/script_console_dialog_preset.layout', _c0)
000014:0x0006a2b8:	movetm	layoutRoot, ret
000015:0x0006a2c8:	ncalli	Widget.FindAnyWidget(_s'PrimaryEditBox')
000015:0x0006a2d0:	movetm	m_Editbox, ret
000016:0x0006a2e0:	ncalli	Widget.FindAnyWidget(_s'WindowLabel')
000016:0x0006a2e8:	movetm	m_Label, ret
000017:0x0006a2f8:	movefm	[0x11d09418], m_Label
000017:0x0006a308:	ncalli	TextWidget.SetText(_s'NEW PRESET')
000019:0x0006a310:	movem	ret, layoutRoot
000019:0x0006a320:	release	layoutRoot
000019:0x0006a328:	rts
000019:0x0006a330:	release	layoutRoot
000019:0x0006a338:	rts
ScriptConsoleNewPresetDialog::OnClick()
000024:0x0006a3e0:	call	UIScriptedMenu.OnClick(w, x, y, button)
000026:0x0006a3f0:	ncalli	Widget.GetUserID()
000026:0x0006a3f8:	cmpi	ret, IDC_OK
000026:0x0006a408:	bne	0x06a4d0
000028:0x0006a410:	ncall	GetGame()
000028:0x0006a418:	ncalli	CGame.GetUIManager()
000028:0x0006a420:	call	UIManager.FindMenu(MENU_SCRIPTCONSOLE)
000028:0x0006a430:	movem	ui_menu, ret
000029:0x0006a440:	cmpcm	ui_menu, NULL
000029:0x0006a450:	beq	0x06a498
000031:0x0006a458:	movem	scripted_console, ui_menu
000032:0x0006a468:	movefm	[0x11d09a20], m_Editbox
000032:0x0006a478:	icall	EditBoxWidget.GetText()
000032:0x0006a480:	call	ScriptConsole.NewPreset(ret)
000032:0x0006a490:	release	scripted_console
000035:0x0006a498:	ncalli	ScriptConsoleNewPresetDialog.Close()
000036:0x0006a4a0:	imove	ret, 0x000001
000036:0x0006a4b0:	release	ui_menu
000036:0x0006a4b8:	rts
000036:0x0006a4c0:	release	ui_menu
000036:0x0006a4c8:	jump	0x06a510
000038:0x0006a4d0:	ncalli	Widget.GetUserID()
000038:0x0006a4d8:	cmpi	ret, IDC_CANCEL
000038:0x0006a4e8:	bne	0x06a510
000040:0x0006a4f0:	ncalli	ScriptConsoleNewPresetDialog.Close()
000041:0x0006a4f8:	imove	ret, 0x000001
000041:0x0006a508:	rts
000044:0x0006a510:	imove	ret, 0x000000
000044:0x0006a520:	rts
000044:0x0006a528:	rts
ScriptConsoleRenamePresetDialog::Init()
//scripts/5_Mission/GUI/ScriptConsole/ScriptConsoleRenamePresetDialog.c
000014:0x0006a5f0:	ncall	GetGame()
000014:0x0006a5f8:	ncalli	CGame.GetWorkspace()
000014:0x0006a600:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/script_console_dialog_preset.layout', _c0)
000014:0x0006a608:	movetm	layoutRoot, ret
000015:0x0006a618:	ncalli	Widget.FindAnyWidget(_s'PrimaryEditBox')
000015:0x0006a620:	movetm	m_Editbox, ret
000016:0x0006a630:	ncalli	Widget.FindAnyWidget(_s'WindowLabel')
000016:0x0006a638:	movetm	m_Label, ret
000017:0x0006a648:	ncalli	Widget.FindAnyWidget(_s'MessageText')
000017:0x0006a650:	movetm	m_Message, ret
000019:0x0006a660:	ncall	GetGame()
000019:0x0006a668:	ncalli	CGame.GetMission()
000019:0x0006a670:	movec	mission, ret
000021:0x0006a680:	ncall	GetGame()
000021:0x0006a688:	ncalli	CGame.GetUIManager()
000021:0x0006a690:	call	UIManager.FindMenu(MENU_SCRIPTCONSOLE)
000021:0x0006a6a0:	movem	ui_menu, ret
000022:0x0006a6b0:	cmpcm	ui_menu, NULL
000022:0x0006a6c0:	beq	0x06a738
000024:0x0006a6c8:	movem	scripted_console, ui_menu
000026:0x0006a6d8:	call	ScriptConsole.GetCurrentPresetName()
000026:0x0006a6e0:	movefm	[0x11d09a20], m_Editbox
000026:0x0006a6f0:	ncalli	EditBoxWidget.SetText(ret)
000027:0x0006a6f8:	movefm	[0x11d09418], m_Label
000027:0x0006a708:	ncalli	TextWidget.SetText(_s'RENAME PRESET')
000028:0x0006a710:	call	ScriptConsole.GetCurrentPresetName()
000028:0x0006a718:	movefm	[0x11d09418], m_Message
000028:0x0006a728:	ncalli	TextWidget.SetText(ret)
000028:0x0006a730:	release	scripted_console
000031:0x0006a738:	movem	ret, layoutRoot
000031:0x0006a748:	release	layoutRoot
000031:0x0006a750:	release	ui_menu
000031:0x0006a758:	rts
000031:0x0006a760:	release	layoutRoot
000031:0x0006a768:	release	ui_menu
000031:0x0006a770:	rts
ScriptConsoleRenamePresetDialog::OnClick()
000036:0x0006a7b8:	call	UIScriptedMenu.OnClick(w, x, y, button)
000038:0x0006a7c8:	ncalli	Widget.GetUserID()
000038:0x0006a7d0:	cmpi	ret, IDC_OK
000038:0x0006a7e0:	bne	0x06a8b0
000040:0x0006a7e8:	ncall	GetGame()
000040:0x0006a7f0:	ncalli	CGame.GetUIManager()
000040:0x0006a7f8:	call	UIManager.FindMenu(MENU_SCRIPTCONSOLE)
000040:0x0006a808:	movem	ui_menu, ret
000041:0x0006a818:	cmpcm	ui_menu, NULL
000041:0x0006a828:	beq	0x06a8a0
000043:0x0006a830:	movem	scripted_console, ui_menu
000044:0x0006a840:	movefm	[0x11d09a20], m_Editbox
000044:0x0006a850:	icall	EditBoxWidget.GetText()
000044:0x0006a858:	call	ScriptConsole.RenamePreset(ret)
000045:0x0006a868:	ncalli	ScriptConsoleRenamePresetDialog.Close()
000046:0x0006a870:	imove	ret, 0x000001
000046:0x0006a880:	release	scripted_console
000046:0x0006a888:	release	ui_menu
000046:0x0006a890:	rts
000046:0x0006a898:	release	scripted_console
000046:0x0006a8a0:	release	ui_menu
000046:0x0006a8a8:	jump	0x06a8f0
000049:0x0006a8b0:	ncalli	Widget.GetUserID()
000049:0x0006a8b8:	cmpi	ret, IDC_CANCEL
000049:0x0006a8c8:	bne	0x06a8f0
000051:0x0006a8d0:	ncalli	ScriptConsoleRenamePresetDialog.Close()
000052:0x0006a8d8:	imove	ret, 0x000001
000052:0x0006a8e8:	rts
000055:0x0006a8f0:	imove	ret, 0x000000
000055:0x0006a900:	rts
000055:0x0006a908:	rts
ScriptConsole::ScriptConsole()
//scripts/5_Mission/GUI/ScriptConsole.c
000008:0x0006a930:	movec	m_TimerRefreshPlayerPosEditBoxes, NULL
000010:0x0006a940:	call	GetPlugin(_T(PluginLocalSqfHistory))
000010:0x0006a950:	movec	m_ModuleLocalSqfHistory, ret
000011:0x0006a960:	call	GetPlugin(_T(PluginLocalEnscriptHistory))
000011:0x0006a970:	movec	m_ModuleLocalEnscriptHistory, ret
000013:0x0006a980:	new	@c00, map<int,Widget>
000013:0x0006a9a0:	movetm	m_SqfDebugWatchersRows, @c00
000014:0x0006a9b0:	new	@c00, map<int,EditBoxWidget>
000014:0x0006a9d0:	movetm	m_SqfDebugWatchers, @c00
000015:0x0006a9e0:	new	@c00, map<int,EditBoxWidget>
000015:0x0006aa00:	movetm	m_SqfDebugWatchersResults, @c00
000016:0x0006aa10:	new	@c00, map<int,ButtonWidget>
000016:0x0006aa30:	movetm	m_SqfDebugWatchersButtons, @c00
000017:0x0006aa40:	new	@c00, map<int,ButtonWidget>
000017:0x0006aa60:	movetm	m_SqfDebugWatchersClearButtons, @c00
000017:0x0006aa70:	rts
ScriptConsole::~ScriptConsole()
000025:0x0006aab8:	imove	i, 0x000000
000025:0x0006aac8:	jump	0x06aad8
000025:0x0006aad0:	inc	i
000025:0x0006aad8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000025:0x0006aae8:	ncalli	TextListboxWidget.GetNumItems()
000025:0x0006aaf0:	cmpi	i, ret
000025:0x0006ab00:	bge	0x06ab38
000028:0x0006ab08:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000028:0x0006ab18:	icall	TextListboxWidget.GetItemData(i, _i0, item_params_array)
000029:0x0006ab28:	delete	item_params_array
000029:0x0006ab30:	jump	0x06aad0
000029:0x0006ab38:	rts
ScriptConsole::Init()
000043:0x0006b4b0:	ncall	GetGame()
000043:0x0006b4b8:	ncalli	CGame.GetWorkspace()
000043:0x0006b4c0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/script_console.layout', _c0)
000043:0x0006b4c8:	movetm	layoutRoot, ret
000045:0x0006b4d8:	ncalli	Widget.FindAnyWidget(_s'SQFPanel')
000045:0x0006b4e0:	ctv	m_Tabs[TAB_SQF], ret
000046:0x0006b4f0:	ncalli	Widget.FindAnyWidget(_s'ItemsPanel')
000046:0x0006b4f8:	ctv	m_Tabs[TAB_ITEMS], ret
000047:0x0006b508:	ncalli	Widget.FindAnyWidget(_s'ConfigsPanel')
000047:0x0006b510:	ctv	m_Tabs[TAB_CONFIGS], ret
000048:0x0006b520:	ncalli	Widget.FindAnyWidget(_s'EnScriptPanel')
000048:0x0006b528:	ctv	m_Tabs[TAB_ENSCRIPT], ret
000049:0x0006b538:	ncalli	Widget.FindAnyWidget(_s'GeneralPanel')
000049:0x0006b540:	ctv	m_Tabs[TABS_GENERAL], ret
000050:0x0006b550:	ncalli	Widget.FindAnyWidget(_s'OutputPanel')
000050:0x0006b558:	ctv	m_Tabs[TABS_OUTPUT], ret
000052:0x0006b568:	ncalli	Widget.FindAnyWidget(_s'SQFButtonWidget')
000052:0x0006b570:	ctv	m_Tab_buttons[TAB_SQF], ret
000053:0x0006b580:	ncalli	Widget.FindAnyWidget(_s'ItemsButtonWidget')
000053:0x0006b588:	ctv	m_Tab_buttons[TAB_ITEMS], ret
000054:0x0006b598:	ncalli	Widget.FindAnyWidget(_s'ConfigsButtonWidget')
000054:0x0006b5a0:	ctv	m_Tab_buttons[TAB_CONFIGS], ret
000055:0x0006b5b0:	ncalli	Widget.FindAnyWidget(_s'EnScriptButtonWidget')
000055:0x0006b5b8:	ctv	m_Tab_buttons[TAB_ENSCRIPT], ret
000056:0x0006b5c8:	ncalli	Widget.FindAnyWidget(_s'GeneralButtonWidget')
000056:0x0006b5d0:	ctv	m_Tab_buttons[TABS_GENERAL], ret
000057:0x0006b5e0:	ncalli	Widget.FindAnyWidget(_s'OutputButtonWidget')
000057:0x0006b5e8:	ctv	m_Tab_buttons[TABS_OUTPUT], ret
000059:0x0006b5f8:	ncalli	Widget.FindAnyWidget(_s'TextListbox')
000059:0x0006b600:	movetm	m_ClientLogListbox, ret
000060:0x0006b610:	ncalli	Widget.FindAnyWidget(_s'ButtonClear')
000060:0x0006b618:	movetm	m_ClientLogClearButton, ret
000061:0x0006b628:	ncalli	Widget.FindAnyWidget(_s'CheckBoxAutoScroll')
000061:0x0006b630:	movetm	m_ClientLogScrollCheckbox, ret
000063:0x0006b640:	ncalli	Widget.FindAnyWidget(_s'DiagToggle')
000063:0x0006b648:	movetm	m_DiagToggleTextListbox, ret
000064:0x0006b658:	ncalli	Widget.FindAnyWidget(_s'ButtonDiagToggle')
000064:0x0006b660:	movetm	m_DiagToggleButton, ret
000066:0x0006b670:	ncalli	Widget.FindAnyWidget(_s'DiagDrawmode')
000066:0x0006b678:	movetm	m_DiagDrawmodeTextListbox, ret
000067:0x0006b688:	ncalli	Widget.FindAnyWidget(_s'ButtonDiagDraw')
000067:0x0006b690:	movetm	m_DiagDrawButton, ret
000069:0x0006b6a0:	ncalli	Widget.FindAnyWidget(_s'PositionsList')
000069:0x0006b6a8:	movetm	m_PositionsListbox, ret
000070:0x0006b6b8:	ncalli	Widget.FindAnyWidget(_s'ButtonTeleport')
000070:0x0006b6c0:	movetm	m_TeleportButton, ret
000071:0x0006b6d0:	ncalli	Widget.FindAnyWidget(_s'TeleportX')
000071:0x0006b6d8:	movetm	m_TeleportX, ret
000072:0x0006b6e8:	ncalli	Widget.FindAnyWidget(_s'TeleportY')
000072:0x0006b6f0:	movetm	m_TeleportY, ret
000073:0x0006b700:	ncalli	Widget.FindAnyWidget(_s'PlayerPosX')
000073:0x0006b708:	movetm	m_PlayerPosX, ret
000074:0x0006b718:	ncalli	Widget.FindAnyWidget(_s'PlayerPosY')
000074:0x0006b720:	movetm	m_PlayerPosY, ret
000075:0x0006b730:	ncalli	Widget.FindAnyWidget(_s'cbx_LogsEnabled')
000075:0x0006b738:	movetm	m_LogsEnabled, ret
000076:0x0006b748:	ncalli	Widget.FindAnyWidget(_s'cbx_CharacterStats')
000076:0x0006b750:	movetm	m_HudDCharStats, ret
000077:0x0006b760:	ncalli	Widget.FindAnyWidget(_s'cbx_CharacterModifiers')
000077:0x0006b768:	movetm	m_HudDCharModifiers, ret
000078:0x0006b778:	ncalli	Widget.FindAnyWidget(_s'cbx_CharacterAgents')
000078:0x0006b780:	movetm	m_HudDCharAgents, ret
000079:0x0006b790:	ncalli	Widget.FindAnyWidget(_s'cbx_CharacterDebug')
000079:0x0006b798:	movetm	m_HudDCharDebug, ret
000080:0x0006b7a8:	ncalli	Widget.FindAnyWidget(_s'cbx_FreeCamCross')
000080:0x0006b7b0:	movetm	m_HudDFreeCamCross, ret
000082:0x0006b7c0:	ncalli	Widget.FindAnyWidget(_s'ButtonClearScriptLogs')
000082:0x0006b7c8:	movetm	m_ClearScriptLogsButton, ret
000084:0x0006b7d8:	ncalli	Widget.FindAnyWidget(_s'MultilineEditBoxWidget0')
000084:0x0006b7e0:	movetm	m_EnfScriptEdit, ret
000085:0x0006b7f0:	ncalli	Widget.FindAnyWidget(_s'ButtonWidget0')
000085:0x0006b7f8:	movetm	m_EnfScriptRun, ret
000087:0x0006b808:	ncalli	Widget.FindAnyWidget(_s'ObjectFilter')
000087:0x0006b810:	movetm	m_ObjectFilter, ret
000088:0x0006b820:	ncalli	Widget.FindAnyWidget(_s'SpawnDistance')
000088:0x0006b828:	movetm	m_SpawnDistanceEditBox, ret
000089:0x0006b838:	ncalli	Widget.FindAnyWidget(_s'SelectedObject')
000089:0x0006b840:	movetm	m_SelectedObjectText, ret
000090:0x0006b850:	ncalli	Widget.FindAnyWidget(_s'ObjectsList')
000090:0x0006b858:	movetm	m_ObjectsTextListbox, ret
000091:0x0006b868:	ncalli	Widget.FindAnyWidget(_s'PresetList')
000091:0x0006b870:	movetm	m_PresetsTextListbox, ret
000092:0x0006b880:	ncalli	Widget.FindAnyWidget(_s'PresetItemsList')
000092:0x0006b888:	movetm	m_PresetItemsTextListbox, ret
000093:0x0006b898:	ncalli	Widget.FindAnyWidget(_s'NewPresetButton')
000093:0x0006b8a0:	movetm	m_PresetNewButton, ret
000094:0x0006b8b0:	ncalli	Widget.FindAnyWidget(_s'DeletePresetButton')
000094:0x0006b8b8:	movetm	m_PresetDeleteButton, ret
000095:0x0006b8c8:	ncalli	Widget.FindAnyWidget(_s'RenamePresetButton')
000095:0x0006b8d0:	movetm	m_PresetRenameButton, ret
000096:0x0006b8e0:	ncalli	Widget.FindAnyWidget(_s'SetDefaultPresetButton')
000096:0x0006b8e8:	movetm	m_PresetSetDefaultButton, ret
000097:0x0006b8f8:	ncalli	Widget.FindAnyWidget(_s'AddToPresetButton')
000097:0x0006b900:	movetm	m_PresetAddItemtButton, ret
000098:0x0006b910:	ncalli	Widget.FindAnyWidget(_s'ItemNameCopy')
000098:0x0006b918:	movetm	m_ItemNameCopy, ret
000099:0x0006b928:	ncalli	Widget.FindAnyWidget(_s'RemoveFromPresetButton')
000099:0x0006b930:	movetm	m_PresetRemoveItemButton, ret
000100:0x0006b940:	ncalli	Widget.FindAnyWidget(_s'ItemMoveUpButton')
000100:0x0006b948:	movetm	m_ItemMoveUpButton, ret
000101:0x0006b958:	ncalli	Widget.FindAnyWidget(_s'ItemMoveDownButton')
000101:0x0006b960:	movetm	m_ItemMoveDownButton, ret
000103:0x0006b970:	ncalli	Widget.FindAnyWidget(_s'QuantityValue')
000103:0x0006b978:	movetm	m_QuantityEditBox, ret
000104:0x0006b988:	ncalli	Widget.FindAnyWidget(_s'DamageValue')
000104:0x0006b990:	movetm	m_DamageEditBox, ret
000105:0x0006b9a0:	ncalli	Widget.FindAnyWidget(_s'DamageLabel')
000105:0x0006b9a8:	movetm	m_ItemDamageLabel, ret
000106:0x0006b9b8:	ncalli	Widget.FindAnyWidget(_s'QuantityLabel')
000106:0x0006b9c0:	movetm	m_ItemQuantityLabel, ret
000108:0x0006b9d0:	ncalli	Widget.FindAnyWidget(_s'ButtonSpawnInInv')
000108:0x0006b9d8:	movetm	m_SpawnInInvButton, ret
000109:0x0006b9e8:	ncalli	Widget.FindAnyWidget(_s'ButtonSpawnInGround')
000109:0x0006b9f0:	movetm	m_SpawnGroundButton, ret
000110:0x0006ba00:	ncalli	Widget.FindAnyWidget(_s'SpawnAsAttachment')
000110:0x0006ba08:	movetm	m_SpawnAsAttachment, ret
000112:0x0006ba18:	ncalli	Widget.FindAnyWidget(_s'EditBoxSQF')
000112:0x0006ba20:	movetm	m_SQFEditBox, ret
000113:0x0006ba30:	ncalli	Widget.FindAnyWidget(_s'ButtonSQFOK')
000113:0x0006ba38:	movetm	m_SQFOKButton, ret
000114:0x0006ba48:	ncalli	Widget.FindAnyWidget(_s'ButtonSQFApply')
000114:0x0006ba50:	movetm	m_SQFApplyButton, ret
000116:0x0006ba60:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatchersPanel')
000116:0x0006ba68:	movetm	m_SqfDebugWatchersPanel, ret
000118:0x0006ba78:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherAddButton')
000118:0x0006ba80:	movetm	m_AddSqfDebugWatcherButton, ret
000119:0x0006ba90:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherRemoveButton')
000119:0x0006ba98:	movetm	m_RemoveSqfDebugWatcherButton, ret
000121:0x0006baa8:	ncalli	Widget.FindAnyWidget(_s'HelpTextListboxWidget')
000121:0x0006bab0:	movetm	m_HelpTextListboxWidget, ret
000123:0x0006bac0:	call	GetPlugin(_T(PluginDeveloper))
000123:0x0006bad0:	movec	module_dev, ret
000124:0x0006bae0:	call	PluginDeveloper.GetSqfDebugWatchersCount()
000124:0x0006bae8:	move	sqf_debug_watchers_count, ret
000125:0x0006baf8:	imove	i, 0x000001
000125:0x0006bb08:	jump	0x06bb18
000125:0x0006bb10:	inc	i
000125:0x0006bb18:	cmpi	i, sqf_debug_watchers_count
000125:0x0006bb28:	bgt	0x06bb78
000127:0x0006bb30:	call	PluginDeveloper.GetSqfDebugWatcherById(i)
000127:0x0006bb40:	movec	sqf_debug_watcher, ret
000129:0x0006bb50:	cmpc	sqf_debug_watcher, NULL
000129:0x0006bb60:	beq	0x06bb70
000131:0x0006bb68:	call	ScriptConsole.AddSqfDebugWatcher()
000131:0x0006bb70:	jump	0x06bb10
000136:0x0006bb78:	ncalli	Widget.FindAnyWidget(_s'ObjectConfigFilter')
000136:0x0006bb80:	movetm	m_ObjectConfigFilter, ret
000137:0x0006bb90:	ncalli	Widget.FindAnyWidget(_s'ConfigHierarchy')
000137:0x0006bb98:	movetm	m_ConfigHierarchyTextListbox, ret
000138:0x0006bba8:	ncalli	Widget.FindAnyWidget(_s'ConfigVariables')
000138:0x0006bbb0:	movetm	m_ConfigVariablesTextListbox, ret
000139:0x0006bbc0:	ncalli	Widget.FindAnyWidget(_s'SelectedRowCopy')
000139:0x0006bbc8:	movetm	m_SelectedRowCopy, ret
000141:0x0006bbd8:	ncalli	Widget.FindAnyWidget(_s'CloseConsoleButtonWidget')
000141:0x0006bbe0:	movetm	m_CloseConsoleButton, ret
000143:0x0006bbf0:	ncall	GetGame()
000143:0x0006bbf8:	ncalli	CGame.GetMission()
000143:0x0006bc00:	movec	m_MissionGameplay, ret
000144:0x0006bc10:	call	GetPlugin(_T(PluginDeveloper))
000144:0x0006bc20:	movec	m_Developer, ret
000145:0x0006bc30:	call	GetPlugin(_T(PluginConfigDebugProfile))
000145:0x0006bc40:	movec	m_ConfigDebugProfile, ret
000146:0x0006bc50:	call	GetPlugin(_T(PluginConfigDebugProfileFixed))
000146:0x0006bc60:	movec	m_ConfigDebugProfileFixed, ret
000147:0x0006bc70:	call	GetPlugin(_T(PluginConfigViewer))
000147:0x0006bc80:	movec	m_ModuleConfigViewer, ret
000150:0x0006bc90:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000150:0x0006bca0:	call	PluginConfigDebugProfile.GetCharacterStatsVisible()
000150:0x0006bca8:	movefm	[0x11d0a020], m_HudDCharStats
000150:0x0006bcb8:	ncalli	CheckBoxWidget.SetChecked(ret)
000151:0x0006bcc0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000151:0x0006bcd0:	call	PluginConfigDebugProfile.GetCharacterModifiersVisible()
000151:0x0006bcd8:	movefm	[0x11d0a020], m_HudDCharModifiers
000151:0x0006bce8:	ncalli	CheckBoxWidget.SetChecked(ret)
000152:0x0006bcf0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000152:0x0006bd00:	call	PluginConfigDebugProfile.GetCharacterAgentsVisible()
000152:0x0006bd08:	movefm	[0x11d0a020], m_HudDCharAgents
000152:0x0006bd18:	ncalli	CheckBoxWidget.SetChecked(ret)
000153:0x0006bd20:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000153:0x0006bd30:	call	PluginConfigDebugProfile.GetCharacterDebugVisible()
000153:0x0006bd38:	movefm	[0x11d0a020], m_HudDCharDebug
000153:0x0006bd48:	ncalli	CheckBoxWidget.SetChecked(ret)
000154:0x0006bd50:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000154:0x0006bd60:	call	PluginConfigDebugProfile.GetFreeCameraCrosshairVisible()
000154:0x0006bd68:	movefm	[0x11d0a020], m_HudDFreeCamCross
000154:0x0006bd78:	ncalli	CheckBoxWidget.SetChecked(ret)
000156:0x0006bd80:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000156:0x0006bd90:	call	PluginConfigDebugProfile.GetLogsEnabled()
000156:0x0006bd98:	movefm	[0x11d0a020], m_LogsEnabled
000156:0x0006bda8:	ncalli	CheckBoxWidget.SetChecked(ret)
000158:0x0006bdb0:	new	@c00, array<string>
000158:0x0006bdd0:	movetm	diag_names, @c00
000159:0x0006bde0:	ncall	GetGame()
000159:0x0006bde8:	movefm	[0x3cd2cac0], diag_names
000159:0x0006bdf8:	ncalli	CGame.GetDiagModeNames([0x3cd2cac0])
000160:0x0006be00:	imove	i, 0x000000
000160:0x0006be10:	jump	0x06be20
000160:0x0006be18:	inc	i
000160:0x0006be20:	ncalli	array<string>.Count()
000160:0x0006be28:	cmpi	i, ret
000160:0x0006be38:	bge	0x06be70
000162:0x0006be40:	icall	array<string>.Get(i)
000162:0x0006be48:	movefm	[0x11d0a1c0], m_DiagToggleTextListbox
000162:0x0006be58:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000162:0x0006be68:	jump	0x06be18
000165:0x0006be70:	ncall	GetGame()
000165:0x0006be78:	movefm	[0x3cd2cc08], diag_names
000165:0x0006be88:	ncalli	CGame.GetDiagDrawModeNames([0x3cd2cc08])
000166:0x0006be90:	imove	i, 0x000000
000166:0x0006bea0:	jump	0x06beb0
000166:0x0006bea8:	inc	i
000166:0x0006beb0:	ncalli	array<string>.Count()
000166:0x0006beb8:	cmpi	i, ret
000166:0x0006bec8:	bge	0x06bf00
000168:0x0006bed0:	icall	array<string>.Get(i)
000168:0x0006bed8:	movefm	[0x11d0a1c0], m_DiagDrawmodeTextListbox
000168:0x0006bee8:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000168:0x0006bef8:	jump	0x06bea8
000171:0x0006bf00:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000171:0x0006bf10:	call	PluginConfigDebugProfile.GetItemSearch()
000171:0x0006bf18:	movefm	[0x11d09a20], m_ObjectFilter
000171:0x0006bf28:	ncalli	EditBoxWidget.SetText(ret)
000172:0x0006bf30:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000172:0x0006bf40:	call	PluginConfigDebugProfile.GetSpawnDistance()
000172:0x0006bf48:	icall	ToString(ret)
000172:0x0006bf50:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000172:0x0006bf60:	ncalli	EditBoxWidget.SetText(ret)
000173:0x0006bf68:	call	ScriptConsole.ChangeFilter()
000175:0x0006bf70:	imove	m_Rows, 0x000000
000176:0x0006bf80:	imove	m_ServerRows, 0x000000
000177:0x0006bf90:	imove	m_SqfHistoryRow, 0x000000
000178:0x0006bfa0:	imove	m_EnscriptHistoryRow, 0x000000
000182:0x0006bfb0:	movec	[0x45f4b358], m_ModuleLocalSqfHistory
000182:0x0006bfc0:	call	PluginLocalSqfHistory.GetAllLines()
000182:0x0006bfc8:	movem	m_SqfConsoleHistory, ret
000185:0x0006bfd8:	movec	[0x45f4a9b8], m_ModuleLocalEnscriptHistory
000185:0x0006bfe8:	call	PluginLocalEnscriptHistory.GetAllLines()
000185:0x0006bff0:	movem	m_EnscriptConsoleHistory, ret
000188:0x0006c000:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000188:0x0006c010:	call	PluginConfigDebugProfile.GetTabSelected()
000188:0x0006c018:	move	m_selected_tab, ret
000189:0x0006c028:	move	tab_id, m_selected_tab
000189:0x0006c038:	call	ScriptConsole.SelectTab(tab_id)
000191:0x0006c048:	call	ScriptConsole.RenderPresets()
000192:0x0006c050:	call	ScriptConsole.HideItemButtons()
000194:0x0006c058:	movefm	[0x11d09c98], m_PresetDeleteButton
000194:0x0006c068:	ncalli	ButtonWidget.Show(false)
000195:0x0006c070:	movefm	[0x11d09c98], m_PresetRenameButton
000195:0x0006c080:	ncalli	ButtonWidget.Show(false)
000197:0x0006c088:	call	ScriptConsole.ShowItemTransferButtons()
000198:0x0006c090:	call	ScriptConsole.SqfHistoryBack()
000199:0x0006c098:	call	ScriptConsole.EnscriptHistoryBack()
000201:0x0006c0a0:	new	@c00, array<string>
000201:0x0006c0c0:	movetm	positions_array, @c00
000202:0x0006c0d0:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000202:0x0006c0e0:	call	PluginConfigDebugProfileFixed.GetAllPositionsNames(positions_array)
000203:0x0006c0f0:	imove	i, 0x000000
000203:0x0006c100:	jump	0x06c110
000203:0x0006c108:	inc	i
000203:0x0006c110:	ncalli	array<string>.Count()
000203:0x0006c118:	cmpi	i, ret
000203:0x0006c128:	bge	0x06c1c0
000205:0x0006c130:	icall	array<string>.Get(i)
000205:0x0006c138:	pushs	ret
000205:0x0006c140:	icall	array<string>.Get(i)
000205:0x0006c148:	moves	@s02, ret
000205:0x0006c158:	pops	ret
000205:0x0006c160:	new	@c00, Param3<string,bool,bool>
000205:0x0006c188:	movec	[0x11d1a368], @c00
000205:0x0006c198:	movefm	[0x11d0a1c0], m_PositionsListbox
000205:0x0006c1a8:	ncalli	TextListboxWidget.AddItem(ret, [0x11d1a368], _i0, _i-1)
000205:0x0006c1b8:	jump	0x06c108
000207:0x0006c1c0:	delete	positions_array
000209:0x0006c1c8:	call	ScriptConsole.ClearHierarchy()
000211:0x0006c1d0:	call	ScriptConsole.UpdateHudDebugSetting()
000213:0x0006c1d8:	new	@c00, Timer
000213:0x0006c200:	movec	m_TimerRefreshPlayerPosEditBoxes, @c00
000214:0x0006c210:	movec	obj, this
000214:0x0006c220:	movec	params, NULL
000214:0x0006c230:	movec	[0x3cd17138], m_TimerRefreshPlayerPosEditBoxes
000214:0x0006c240:	call	Timer.Run(_f1.000000, obj, _s'RefreshPlayerPosEditBoxes', params, true)
000215:0x0006c258:	call	ScriptConsole.RefreshPlayerPosEditBoxes()
000217:0x0006c260:	movem	ret, layoutRoot
000217:0x0006c270:	delete	diag_names
000217:0x0006c278:	release	layoutRoot
000217:0x0006c280:	release	positions_array
000217:0x0006c288:	rts
000217:0x0006c290:	delete	diag_names
000217:0x0006c298:	release	layoutRoot
000217:0x0006c2a0:	release	positions_array
000217:0x0006c2a8:	rts
ScriptConsole::Add()
000222:0x0006c2b0:	cmpcm	m_ClientLogListbox, NULL
000222:0x0006c2c0:	beq	0x06c388
000224:0x0006c2c8:	addi	@m00, m_Rows, _i1
000224:0x0006c2d8:	move	m_Rows, @m00
000226:0x0006c2e8:	cmps	message, Empty
000226:0x0006c2f8:	beq	0x06c388
000228:0x0006c300:	call	String(message)
000228:0x0006c310:	movefm	[0x11d0a1c0], m_ClientLogListbox
000228:0x0006c320:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000230:0x0006c330:	movefm	[0x11d0a020], m_ClientLogScrollCheckbox
000230:0x0006c340:	ncalli	CheckBoxWidget.IsChecked()
000230:0x0006c348:	cmpi	ret, _i0
000230:0x0006c358:	beq	0x06c388
000232:0x0006c360:	move	[0x11d11038], m_Rows
000232:0x0006c370:	movefm	[0x11d0a1c0], m_ClientLogListbox
000232:0x0006c380:	ncalli	TextListboxWidget.EnsureVisible([0x11d11038])
000232:0x0006c388:	rts
ScriptConsole::HistoryBack()
000253:0x0006c390:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000253:0x0006c3a0:	call	PluginConfigDebugProfile.GetTabSelected()
000253:0x0006c3a8:	cmpi	ret, TAB_SQF
000253:0x0006c3b8:	bne	0x06c3d0
000255:0x0006c3c0:	call	ScriptConsole.SqfHistoryBack()
000255:0x0006c3c8:	jump	0x06c408
000257:0x0006c3d0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000257:0x0006c3e0:	call	PluginConfigDebugProfile.GetTabSelected()
000257:0x0006c3e8:	cmpi	ret, TAB_ENSCRIPT
000257:0x0006c3f8:	bne	0x06c408
000259:0x0006c400:	call	ScriptConsole.EnscriptHistoryBack()
000259:0x0006c408:	rts
ScriptConsole::HistoryForward()
000265:0x0006c410:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000265:0x0006c420:	call	PluginConfigDebugProfile.GetTabSelected()
000265:0x0006c428:	cmpi	ret, TAB_SQF
000265:0x0006c438:	bne	0x06c450
000267:0x0006c440:	call	ScriptConsole.SqfHistoryForward()
000267:0x0006c448:	jump	0x06c488
000269:0x0006c450:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000269:0x0006c460:	call	PluginConfigDebugProfile.GetTabSelected()
000269:0x0006c468:	cmpi	ret, TAB_ENSCRIPT
000269:0x0006c478:	bne	0x06c488
000271:0x0006c480:	call	ScriptConsole.EnscriptHistoryForward()
000271:0x0006c488:	rts
ScriptConsole::SqfHistoryBack()
000277:0x0006c4b0:	cmpcm	m_SQFEditBox, NULL
000277:0x0006c4c0:	beq	0x06c578
000279:0x0006c4c8:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000279:0x0006c4d8:	ncalli	array<string>.Count()
000279:0x0006c4e0:	subi	@m01, ret, m_SqfHistoryRow
000279:0x0006c4f0:	move	@m00, @m01
000279:0x0006c500:	subi	history_index, @m00, _i1
000280:0x0006c510:	cmpi	history_index, _i-1
000280:0x0006c520:	ble	0x06c578
000282:0x0006c528:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000282:0x0006c538:	icall	array<string>.Get(history_index)
000282:0x0006c540:	movefm	[0x11d0a218], m_SQFEditBox
000282:0x0006c550:	ncalli	MultilineEditBoxWidget.SetText(ret)
000283:0x0006c558:	addi	@m00, m_SqfHistoryRow, _i1
000283:0x0006c568:	move	m_SqfHistoryRow, @m00
000283:0x0006c578:	rts
ScriptConsole::SqfHistoryForward()
000290:0x0006c5a0:	cmpcm	m_SQFEditBox, NULL
000290:0x0006c5b0:	beq	0x06c680
000292:0x0006c5b8:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000292:0x0006c5c8:	ncalli	array<string>.Count()
000292:0x0006c5d0:	subi	@m01, ret, m_SqfHistoryRow
000292:0x0006c5e0:	move	@m00, @m01
000292:0x0006c5f0:	addi	history_index, @m00, _i1
000293:0x0006c600:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000293:0x0006c610:	ncalli	array<string>.Count()
000293:0x0006c618:	cmpi	history_index, ret
000293:0x0006c628:	bge	0x06c680
000295:0x0006c630:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000295:0x0006c640:	icall	array<string>.Get(history_index)
000295:0x0006c648:	movefm	[0x11d0a218], m_SQFEditBox
000295:0x0006c658:	ncalli	MultilineEditBoxWidget.SetText(ret)
000296:0x0006c660:	subi	@m00, m_SqfHistoryRow, _i1
000296:0x0006c670:	move	m_SqfHistoryRow, @m00
000296:0x0006c680:	rts
ScriptConsole::EnscriptHistoryBack()
000303:0x0006c6a8:	cmpcm	m_EnfScriptEdit, NULL
000303:0x0006c6b8:	beq	0x06c770
000305:0x0006c6c0:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000305:0x0006c6d0:	ncalli	array<string>.Count()
000305:0x0006c6d8:	subi	@m01, ret, m_EnscriptHistoryRow
000305:0x0006c6e8:	move	@m00, @m01
000305:0x0006c6f8:	subi	history_index, @m00, _i1
000306:0x0006c708:	cmpi	history_index, _i-1
000306:0x0006c718:	ble	0x06c770
000308:0x0006c720:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000308:0x0006c730:	icall	array<string>.Get(history_index)
000308:0x0006c738:	movefm	[0x11d0a218], m_EnfScriptEdit
000308:0x0006c748:	ncalli	MultilineEditBoxWidget.SetText(ret)
000309:0x0006c750:	addi	@m00, m_EnscriptHistoryRow, _i1
000309:0x0006c760:	move	m_EnscriptHistoryRow, @m00
000309:0x0006c770:	rts
ScriptConsole::EnscriptHistoryForward()
000316:0x0006c798:	cmpcm	m_EnfScriptEdit, NULL
000316:0x0006c7a8:	beq	0x06c878
000318:0x0006c7b0:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000318:0x0006c7c0:	ncalli	array<string>.Count()
000318:0x0006c7c8:	subi	@m01, ret, m_EnscriptHistoryRow
000318:0x0006c7d8:	move	@m00, @m01
000318:0x0006c7e8:	addi	history_index, @m00, _i1
000319:0x0006c7f8:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000319:0x0006c808:	ncalli	array<string>.Count()
000319:0x0006c810:	cmpi	history_index, ret
000319:0x0006c820:	bge	0x06c878
000321:0x0006c828:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000321:0x0006c838:	icall	array<string>.Get(history_index)
000321:0x0006c840:	movefm	[0x11d0a218], m_EnfScriptEdit
000321:0x0006c850:	ncalli	MultilineEditBoxWidget.SetText(ret)
000322:0x0006c858:	subi	@m00, m_EnscriptHistoryRow, _i1
000322:0x0006c868:	move	m_EnscriptHistoryRow, @m00
000322:0x0006c878:	rts
ScriptConsole::Clear()
000329:0x0006c880:	imove	m_Rows, 0x000000
000330:0x0006c890:	movefm	[0x11d0a1c0], m_ClientLogListbox
000330:0x0006c8a0:	ncalli	TextListboxWidget.ClearItems()
000330:0x0006c8a8:	rts
ScriptConsole::ApplySQF()
000335:0x0006c8d0:	moves	sqf_commands, _s''
000336:0x0006c8e0:	movefm	[0x11d0a218], m_SQFEditBox
000336:0x0006c8f0:	icall	MultilineEditBoxWidget.GetText(sqf_commands)
000337:0x0006c8f8:	ncall	GetGame()
000337:0x0006c900:	ncalli	CGame.ExecuteSQF(sqf_commands)
000338:0x0006c908:	movefm	[0x11d0bb58], m_SqfConsoleHistory
000338:0x0006c918:	icall	array<string>.Insert(sqf_commands)
000339:0x0006c920:	movec	[0x45f4b358], m_ModuleLocalSqfHistory
000339:0x0006c930:	call	PluginLocalSqfHistory.AddNewLine(sqf_commands)
000339:0x0006c940:	rts
ScriptConsole::RunEnscript()
000345:0x0006c9c8:	movefm	[0x11d0a218], m_EnfScriptEdit
000345:0x0006c9d8:	icall	MultilineEditBoxWidget.GetText(code)
000346:0x0006c9e0:	ncall	GetGame()
000346:0x0006c9e8:	adds	@s02, _s'void main() 
{
', code
000346:0x0006c9f8:	moves	@s01, @s02
000346:0x0006ca08:	adds	@s01, @s01, _s'
}
'
000346:0x0006ca18:	moves	@s00, @s01
000346:0x0006ca28:	ncalli	CGame.ExecuteEnforceScript(@s00, _s'main')
000347:0x0006ca30:	movefm	[0x11d0bb58], m_EnscriptConsoleHistory
000347:0x0006ca40:	icall	array<string>.Insert(code)
000348:0x0006ca48:	movec	[0x45f4a9b8], m_ModuleLocalEnscriptHistory
000348:0x0006ca58:	call	PluginLocalEnscriptHistory.AddNewLine(code)
000348:0x0006ca68:	rts
ScriptConsole::ChangeFilter()
000354:0x0006cc18:	movefm	[0x11d09a20], m_ObjectFilter
000354:0x0006cc28:	icall	EditBoxWidget.GetText()
000354:0x0006cc30:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000354:0x0006cc40:	call	PluginConfigDebugProfile.SetItemSearch(ret)
000355:0x0006cc50:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
000355:0x0006cc60:	ncalli	TextListboxWidget.ClearItems()
000357:0x0006cc68:	movefm	[0x11d09a20], m_ObjectFilter
000357:0x0006cc78:	icall	EditBoxWidget.GetText()
000357:0x0006cc80:	icall	Trim(ret)
000357:0x0006cc88:	moves	filter_lower, ret
000358:0x0006cc98:	icall	ToLower(filter_lower)
000360:0x0006cca0:	new	@c00, array<string>
000360:0x0006ccc0:	movetm	filters, @c00
000361:0x0006ccd0:	moves	value, filter_lower
000361:0x0006cce0:	call	Split(value, _s' ', filters)
000361:0x0006ccf0:	moves	filter_lower, value
000363:0x0006cd00:	new	@c00, array<string>
000363:0x0006cd20:	movetm	searching_in, @c00
000364:0x0006cd30:	call	GetBaseConfigClasses(searching_in)
000366:0x0006cd40:	imove	i, 0x000000
000366:0x0006cd50:	jump	0x06cd60
000366:0x0006cd58:	inc	i
000366:0x0006cd60:	ncalli	array<string>.Count()
000366:0x0006cd68:	cmpi	i, ret
000366:0x0006cd78:	bge	0x06cff8
000368:0x0006cd80:	icall	array<string>.Get(i)
000368:0x0006cd88:	moves	config_path, ret
000370:0x0006cd98:	ncall	GetGame()
000370:0x0006cda0:	ncalli	CGame.ConfigGetChildrenCount(config_path)
000370:0x0006cda8:	move	objects_count, ret
000371:0x0006cdb8:	imove	j, 0x000000
000371:0x0006cdc8:	jump	0x06cdd8
000371:0x0006cdd0:	inc	j
000371:0x0006cdd8:	cmpi	j, objects_count
000371:0x0006cde8:	bge	0x06cff0
000374:0x0006cdf0:	ncall	GetGame()
000374:0x0006cdf8:	icall	CGame.ConfigGetChildName(config_path, j, child_name)
000376:0x0006ce08:	ncall	GetGame()
000376:0x0006ce10:	adds	@s03, config_path, _s' '
000376:0x0006ce20:	moves	@s02, @s03
000376:0x0006ce30:	adds	@s02, @s02, child_name
000376:0x0006ce40:	moves	@s01, @s02
000376:0x0006ce50:	adds	@s01, @s01, _s' scope'
000376:0x0006ce60:	moves	@s00, @s01
000376:0x0006ce70:	ncalli	CGame.ConfigGetInt(@s00)
000376:0x0006ce78:	move	scope, ret
000377:0x0006ce88:	cmpi	scope, _i0
000377:0x0006ce98:	ble	0x06cfe8
000379:0x0006cea0:	imove	display, 0x000000
000380:0x0006ceb0:	ncalli	array<string>.Count()
000380:0x0006ceb8:	cmpi	ret, _i0
000380:0x0006cec8:	ble	0x06cfa0
000382:0x0006ced0:	moves	child_name_lower, child_name
000383:0x0006cee0:	icall	ToLower(child_name_lower)
000385:0x0006cee8:	imove	k, 0x000000
000385:0x0006cef8:	jump	0x06cf08
000385:0x0006cf00:	inc	k
000385:0x0006cf08:	ncalli	array<string>.Count()
000385:0x0006cf10:	cmpi	k, ret
000385:0x0006cf20:	bge	0x06cf98
000387:0x0006cf28:	moves	value, child_name_lower
000387:0x0006cf38:	icall	array<string>.Get(k)
000387:0x0006cf40:	call	Contains(value, ret)
000387:0x0006cf50:	moves	child_name_lower, value
000387:0x0006cf60:	cmpi	ret, _i0
000387:0x0006cf70:	beq	0x06cf90
000389:0x0006cf78:	imove	display, 0x000001
000390:0x0006cf88:	jump	0x06cf98
000390:0x0006cf90:	jump	0x06cf00
000390:0x0006cf98:	jump	0x06cfb0
000396:0x0006cfa0:	imove	display, 0x000001
000399:0x0006cfb0:	cmpi	display, _i0
000399:0x0006cfc0:	beq	0x06cfe8
000401:0x0006cfc8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
000401:0x0006cfd8:	ncalli	TextListboxWidget.AddItem(child_name, NULL, _i0, _i-1)
000401:0x0006cfe8:	jump	0x06cdd0
000401:0x0006cff0:	jump	0x06cd58
000401:0x0006cff8:	delete	filters
000401:0x0006d000:	delete	searching_in
000401:0x0006d008:	rts
ScriptConsole::ChangeConfigFilter()
000410:0x0006d010:	movefm	[0x11d09a20], m_ObjectConfigFilter
000410:0x0006d020:	icall	EditBoxWidget.GetText()
000410:0x0006d028:	cmps	ret, _s''
000410:0x0006d038:	bne	0x06d050
000412:0x0006d040:	call	ScriptConsole.ClearHierarchy()
000412:0x0006d048:	jump	0x06d078
000416:0x0006d050:	movefm	[0x11d09a20], m_ObjectConfigFilter
000416:0x0006d060:	icall	EditBoxWidget.GetText()
000416:0x0006d068:	call	ScriptConsole.FindInHierarchy(ret)
000416:0x0006d078:	rts
ScriptConsole::OnKeyPress()
000422:0x0006d080:	call	UIScriptedMenu.OnKeyPress(w, x, y, key)
000424:0x0006d090:	cmpm	w, m_ObjectFilter
000424:0x0006d0a0:	bne	0x06d0b8
000426:0x0006d0a8:	call	ScriptConsole.ChangeFilter()
000426:0x0006d0b0:	jump	0x06d0d8
000428:0x0006d0b8:	cmpm	w, m_ObjectConfigFilter
000428:0x0006d0c8:	bne	0x06d0d8
000430:0x0006d0d0:	call	ScriptConsole.ChangeConfigFilter()
000433:0x0006d0d8:	imove	ret, 0x000000
000433:0x0006d0e8:	rts
000433:0x0006d0f0:	rts
ScriptConsole::OnController()
000438:0x0006d0f8:	call	UIScriptedMenu.OnController(w, control, value)
000440:0x0006d108:	cmpi	control, CID_TABLEFT
000440:0x0006d118:	bne	0x06d140
000440:0x0006d120:	cmpi	value, _i0
000440:0x0006d130:	beq	0x06d140
000442:0x0006d138:	call	ScriptConsole.SelectPreviousTab()
000445:0x0006d140:	cmpi	control, CID_TABRIGHT
000445:0x0006d150:	bne	0x06d178
000445:0x0006d158:	cmpi	value, _i0
000445:0x0006d168:	beq	0x06d178
000447:0x0006d170:	call	ScriptConsole.SelectNextTab()
000447:0x0006d178:	rts
ScriptConsole::OnClick()
000453:0x0006d578:	call	UIScriptedMenu.OnClick(w, x, y, button)
000457:0x0006d588:	ncall	GetGame()
000457:0x0006d590:	ncalli	CGame.GetPlayer()
000457:0x0006d598:	movetm	player, ret
000459:0x0006d5a8:	call	GetPlugin(_T(PluginDeveloper))
000459:0x0006d5b8:	movec	module_dev, ret
000466:0x0006d5c8:	imove	i, 0x000000
000466:0x0006d5d8:	jump	0x06d5e8
000466:0x0006d5e0:	inc	i
000466:0x0006d5e8:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000466:0x0006d5f8:	ncalli	map<int,ButtonWidget>.Count()
000466:0x0006d600:	cmpi	i, ret
000466:0x0006d610:	bge	0x06d790
000468:0x0006d618:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000468:0x0006d628:	icall	map<int,ButtonWidget>.GetElement(i)
000468:0x0006d630:	movetm	sqf_debug_watcher_button, ret
000470:0x0006d640:	cmpm	w, sqf_debug_watcher_button
000470:0x0006d650:	bne	0x06d780
000472:0x0006d658:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000472:0x0006d668:	icall	map<int,ButtonWidget>.GetKey(i)
000472:0x0006d670:	move	id, ret
000473:0x0006d680:	call	PluginDeveloper.GetSqfDebugWatcherById(id)
000473:0x0006d690:	movec	sqf_debug_watcher, ret
000475:0x0006d6a0:	cmpc	sqf_debug_watcher, NULL
000475:0x0006d6b0:	beq	0x06d748
000478:0x0006d6b8:	call	SqfDebugWatcher.IsRunning()
000478:0x0006d6c0:	cmpi	ret, _i0
000478:0x0006d6d0:	beq	0x06d738
000480:0x0006d6d8:	call	SqfDebugWatcher.Stop()
000481:0x0006d6e0:	ncalli	ButtonWidget.SetText(_s'RUN')
000482:0x0006d6e8:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000482:0x0006d6f8:	icall	map<int,EditBoxWidget>.GetElement(i)
000482:0x0006d700:	movetm	sqf_debug_watcher_result, ret
000484:0x0006d710:	cmpcm	sqf_debug_watcher_result, NULL
000484:0x0006d720:	beq	0x06d730
000486:0x0006d728:	ncalli	EditBoxWidget.SetText(_s'')
000486:0x0006d730:	jump	0x06d748
000491:0x0006d738:	call	SqfDebugWatcher.Run()
000492:0x0006d740:	ncalli	ButtonWidget.SetText(_s'STOP')
000496:0x0006d748:	imove	ret, 0x000001
000496:0x0006d758:	release	sqf_debug_watcher_button
000496:0x0006d760:	release	player
000496:0x0006d768:	release	sqf_debug_watcher_input
000496:0x0006d770:	release	sqf_debug_watcher_result
000496:0x0006d778:	rts
000496:0x0006d780:	release	sqf_debug_watcher_button
000496:0x0006d788:	jump	0x06d5e0
000500:0x0006d790:	imove	i, 0x000000
000500:0x0006d7a0:	jump	0x06d7b0
000500:0x0006d7a8:	inc	i
000500:0x0006d7b0:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000500:0x0006d7c0:	ncalli	map<int,ButtonWidget>.Count()
000500:0x0006d7c8:	cmpi	i, ret
000500:0x0006d7d8:	bge	0x06d990
000502:0x0006d7e0:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000502:0x0006d7f0:	icall	map<int,ButtonWidget>.GetElement(i)
000502:0x0006d7f8:	movetm	sqf_debug_watcher_clear_button, ret
000504:0x0006d808:	cmpm	w, sqf_debug_watcher_clear_button
000504:0x0006d818:	bne	0x06d980
000506:0x0006d820:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
000506:0x0006d830:	icall	map<int,ButtonWidget>.GetKey(i)
000506:0x0006d838:	move	id, ret
000507:0x0006d848:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
000507:0x0006d858:	icall	map<int,ButtonWidget>.GetElement(i)
000507:0x0006d860:	movetm	sqf_debug_watcher_button, ret
000508:0x0006d870:	call	PluginDeveloper.GetSqfDebugWatcherById(id)
000508:0x0006d880:	movec	sqf_debug_watcher, ret
000510:0x0006d890:	cmpc	sqf_debug_watcher, NULL
000510:0x0006d8a0:	beq	0x06d948
000512:0x0006d8a8:	call	SqfDebugWatcher.IsRunning()
000512:0x0006d8b0:	cmpi	ret, _i0
000512:0x0006d8c0:	beq	0x06d8d8
000514:0x0006d8c8:	call	SqfDebugWatcher.Stop()
000515:0x0006d8d0:	ncalli	ButtonWidget.SetText(_s'RUN')
000518:0x0006d8d8:	call	SqfDebugWatcher.SetSqfCommand(_s'')
000520:0x0006d8e8:	movefm	[0x703ad18], m_SqfDebugWatchers
000520:0x0006d8f8:	icall	map<int,EditBoxWidget>.GetElement(i)
000520:0x0006d900:	movetm	sqf_debug_watcher_input, ret
000521:0x0006d910:	movefm	[0x703ad18], m_SqfDebugWatchersResults
000521:0x0006d920:	icall	map<int,EditBoxWidget>.GetElement(i)
000521:0x0006d928:	movetm	sqf_debug_watcher_result, ret
000523:0x0006d938:	ncalli	EditBoxWidget.SetText(_s'')
000524:0x0006d940:	ncalli	EditBoxWidget.SetText(_s'')
000527:0x0006d948:	imove	ret, 0x000001
000527:0x0006d958:	release	sqf_debug_watcher_clear_button
000527:0x0006d960:	release	player
000527:0x0006d968:	release	sqf_debug_watcher_input
000527:0x0006d970:	release	sqf_debug_watcher_result
000527:0x0006d978:	rts
000527:0x0006d980:	release	sqf_debug_watcher_clear_button
000527:0x0006d988:	jump	0x06d7a8
000531:0x0006d990:	cmpm	w, m_ClientLogClearButton
000531:0x0006d9a0:	bne	0x06d9e8
000533:0x0006d9a8:	call	ScriptConsole.Clear()
000534:0x0006d9b0:	imove	ret, 0x000001
000534:0x0006d9c0:	release	player
000534:0x0006d9c8:	release	sqf_debug_watcher_input
000534:0x0006d9d0:	release	sqf_debug_watcher_result
000534:0x0006d9d8:	rts
000534:0x0006d9e0:	jump	0x06ef90
000536:0x0006d9e8:	cmpm	w, m_ConfigHierarchyTextListbox
000536:0x0006d9f8:	bne	0x06db20
000538:0x0006da00:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000538:0x0006da10:	ncalli	TextListboxWidget.GetSelectedRow()
000538:0x0006da18:	move	objects_row_index, ret
000539:0x0006da28:	icall	Print(objects_row_index)
000541:0x0006da30:	cmpi	objects_row_index, _i-1
000541:0x0006da40:	ble	0x06dae8
000541:0x0006da48:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000541:0x0006da58:	ncalli	TextListboxWidget.GetNumItems()
000541:0x0006da60:	cmpi	objects_row_index, ret
000541:0x0006da70:	bge	0x06dae8
000544:0x0006da78:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
000544:0x0006da88:	icall	TextListboxWidget.GetItemData(objects_row_index, _i0, config_params)
000546:0x0006da98:	cmpi	param1, false
000546:0x0006daa8:	bne	0x06dac8
000548:0x0006dab0:	call	ScriptConsole.ExpandHierarchy(objects_row_index)
000548:0x0006dac0:	jump	0x06dad8
000552:0x0006dac8:	call	ScriptConsole.CollapseHierarchy(objects_row_index)
000554:0x0006dad8:	call	ScriptConsole.RenderVariables(objects_row_index)
000556:0x0006dae8:	imove	ret, 0x000001
000556:0x0006daf8:	release	player
000556:0x0006db00:	release	sqf_debug_watcher_input
000556:0x0006db08:	release	sqf_debug_watcher_result
000556:0x0006db10:	rts
000556:0x0006db18:	jump	0x06ef90
000558:0x0006db20:	cmpm	w, m_PositionsListbox
000558:0x0006db30:	bne	0x06dc18
000560:0x0006db38:	call	ScriptConsole.GetCurrentPositionName()
000560:0x0006db40:	moves	position_name, ret
000561:0x0006db50:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000561:0x0006db60:	call	PluginConfigDebugProfileFixed.GetPositionByName(position_name)
000561:0x0006db70:	movev	position, ret
000562:0x0006db80:	ifv	@f00, position[0x000000]
000562:0x0006db90:	icall	ToString(@f00)
000562:0x0006db98:	movefm	[0x11d09a20], m_TeleportX
000562:0x0006dba8:	ncalli	EditBoxWidget.SetText(ret)
000563:0x0006dbb0:	ifv	@f00, position[0x000002]
000563:0x0006dbc0:	icall	ToString(@f00)
000563:0x0006dbc8:	movefm	[0x11d09a20], m_TeleportY
000563:0x0006dbd8:	ncalli	EditBoxWidget.SetText(ret)
000564:0x0006dbe0:	imove	ret, 0x000001
000564:0x0006dbf0:	release	player
000564:0x0006dbf8:	release	sqf_debug_watcher_input
000564:0x0006dc00:	release	sqf_debug_watcher_result
000564:0x0006dc08:	rts
000564:0x0006dc10:	jump	0x06ef90
000566:0x0006dc18:	cmpm	w, m_TeleportButton
000566:0x0006dc28:	bne	0x06dd80
000568:0x0006dc30:	movefm	[0x11d09a20], m_TeleportX
000568:0x0006dc40:	icall	EditBoxWidget.GetText()
000568:0x0006dc48:	moves	pos_x, ret
000569:0x0006dc58:	movefm	[0x11d09a20], m_TeleportY
000569:0x0006dc68:	icall	EditBoxWidget.GetText()
000569:0x0006dc70:	moves	pos_y, ret
000570:0x0006dc80:	moves	pos_z, _s'0'
000571:0x0006dc90:	adds	@s01, pos_x, _s' '
000571:0x0006dca0:	moves	@s00, @s01
000571:0x0006dcb0:	adds	@s00, @s00, pos_z
000571:0x0006dcc0:	moves	@s01, @s00
000571:0x0006dcd0:	adds	@s01, @s01, _s' '
000571:0x0006dce0:	moves	@s00, @s01
000571:0x0006dcf0:	adds	@s00, @s00, pos_y
000571:0x0006dd00:	moves	@s01, @s00
000571:0x0006dd10:	icall	ToVector(@s01)
000571:0x0006dd18:	movev	v, ret
000572:0x0006dd28:	movec	[0x45f4f978], m_Developer
000572:0x0006dd38:	call	PluginDeveloper.Teleport(player, v)
000573:0x0006dd48:	imove	ret, 0x000001
000573:0x0006dd58:	release	player
000573:0x0006dd60:	release	sqf_debug_watcher_input
000573:0x0006dd68:	release	sqf_debug_watcher_result
000573:0x0006dd70:	rts
000573:0x0006dd78:	jump	0x06ef90
000575:0x0006dd80:	cmpm	w, m_LogsEnabled
000575:0x0006dd90:	bne	0x06de48
000579:0x0006dd98:	cmpc	m_ConfigDebugProfile, NULL
000579:0x0006dda8:	beq	0x06de10
000581:0x0006ddb0:	movefm	[0x11d0a020], m_LogsEnabled
000581:0x0006ddc0:	ncalli	CheckBoxWidget.IsChecked()
000581:0x0006ddc8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000581:0x0006ddd8:	call	PluginConfigDebugProfile.SetLogsEnabled(ret)
000582:0x0006dde8:	movefm	[0x11d0a020], m_LogsEnabled
000582:0x0006ddf8:	ncalli	CheckBoxWidget.IsChecked()
000582:0x0006de00:	call	SetEnabledLogs(ret)
000585:0x0006de10:	imove	ret, 0x000001
000585:0x0006de20:	release	player
000585:0x0006de28:	release	sqf_debug_watcher_input
000585:0x0006de30:	release	sqf_debug_watcher_result
000585:0x0006de38:	rts
000585:0x0006de40:	jump	0x06ef90
000587:0x0006de48:	cmpm	w, m_HudDCharStats
000587:0x0006de58:	bne	0x06df08
000589:0x0006de60:	cmpc	m_ConfigDebugProfile, NULL
000589:0x0006de70:	beq	0x06deb0
000591:0x0006de78:	movefm	[0x11d0a020], m_HudDCharStats
000591:0x0006de88:	ncalli	CheckBoxWidget.IsChecked()
000591:0x0006de90:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000591:0x0006dea0:	call	PluginConfigDebugProfile.SetCharacterStatsVisible(ret)
000595:0x0006deb0:	movec	[0x7035830], m_MissionGameplay
000595:0x0006dec0:	call	MissionGameplay.GetHudDebug()
000595:0x0006dec8:	call	HudDebug.RefreshByLocalProfile()
000597:0x0006ded0:	imove	ret, 0x000001
000597:0x0006dee0:	release	player
000597:0x0006dee8:	release	sqf_debug_watcher_input
000597:0x0006def0:	release	sqf_debug_watcher_result
000597:0x0006def8:	rts
000597:0x0006df00:	jump	0x06ef90
000599:0x0006df08:	cmpm	w, m_HudDCharModifiers
000599:0x0006df18:	bne	0x06dfc8
000601:0x0006df20:	cmpc	m_ConfigDebugProfile, NULL
000601:0x0006df30:	beq	0x06df70
000603:0x0006df38:	movefm	[0x11d0a020], m_HudDCharModifiers
000603:0x0006df48:	ncalli	CheckBoxWidget.IsChecked()
000603:0x0006df50:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000603:0x0006df60:	call	PluginConfigDebugProfile.SetCharacterModifiersVisible(ret)
000607:0x0006df70:	movec	[0x7035830], m_MissionGameplay
000607:0x0006df80:	call	MissionGameplay.GetHudDebug()
000607:0x0006df88:	call	HudDebug.RefreshByLocalProfile()
000609:0x0006df90:	imove	ret, 0x000001
000609:0x0006dfa0:	release	player
000609:0x0006dfa8:	release	sqf_debug_watcher_input
000609:0x0006dfb0:	release	sqf_debug_watcher_result
000609:0x0006dfb8:	rts
000609:0x0006dfc0:	jump	0x06ef90
000611:0x0006dfc8:	cmpm	w, m_HudDCharAgents
000611:0x0006dfd8:	bne	0x06e088
000613:0x0006dfe0:	cmpc	m_ConfigDebugProfile, NULL
000613:0x0006dff0:	beq	0x06e030
000615:0x0006dff8:	movefm	[0x11d0a020], m_HudDCharAgents
000615:0x0006e008:	ncalli	CheckBoxWidget.IsChecked()
000615:0x0006e010:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000615:0x0006e020:	call	PluginConfigDebugProfile.SetCharacterAgentsVisible(ret)
000619:0x0006e030:	movec	[0x7035830], m_MissionGameplay
000619:0x0006e040:	call	MissionGameplay.GetHudDebug()
000619:0x0006e048:	call	HudDebug.RefreshByLocalProfile()
000621:0x0006e050:	imove	ret, 0x000001
000621:0x0006e060:	release	player
000621:0x0006e068:	release	sqf_debug_watcher_input
000621:0x0006e070:	release	sqf_debug_watcher_result
000621:0x0006e078:	rts
000621:0x0006e080:	jump	0x06ef90
000623:0x0006e088:	cmpm	w, m_HudDCharDebug
000623:0x0006e098:	bne	0x06e148
000625:0x0006e0a0:	cmpc	m_ConfigDebugProfile, NULL
000625:0x0006e0b0:	beq	0x06e0f0
000627:0x0006e0b8:	movefm	[0x11d0a020], m_HudDCharDebug
000627:0x0006e0c8:	ncalli	CheckBoxWidget.IsChecked()
000627:0x0006e0d0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000627:0x0006e0e0:	call	PluginConfigDebugProfile.SetCharacterDebugVisible(ret)
000631:0x0006e0f0:	movec	[0x7035830], m_MissionGameplay
000631:0x0006e100:	call	MissionGameplay.GetHudDebug()
000631:0x0006e108:	call	HudDebug.RefreshByLocalProfile()
000633:0x0006e110:	imove	ret, 0x000001
000633:0x0006e120:	release	player
000633:0x0006e128:	release	sqf_debug_watcher_input
000633:0x0006e130:	release	sqf_debug_watcher_result
000633:0x0006e138:	rts
000633:0x0006e140:	jump	0x06ef90
000635:0x0006e148:	cmpm	w, m_HudDFreeCamCross
000635:0x0006e158:	bne	0x06e280
000637:0x0006e160:	cmpc	m_ConfigDebugProfile, NULL
000637:0x0006e170:	beq	0x06e1b0
000639:0x0006e178:	movefm	[0x11d0a020], m_HudDFreeCamCross
000639:0x0006e188:	ncalli	CheckBoxWidget.IsChecked()
000639:0x0006e190:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000639:0x0006e1a0:	call	PluginConfigDebugProfile.SetFreeCameraCrosshairVisible(ret)
000643:0x0006e1b0:	movec	[0x7035830], m_MissionGameplay
000643:0x0006e1c0:	call	MissionGameplay.GetHudDebug()
000643:0x0006e1c8:	call	HudDebug.RefreshByLocalProfile()
000645:0x0006e1d0:	ncall	GetGame()
000645:0x0006e1d8:	call	CGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000645:0x0006e1e8:	pushc	ret
000645:0x0006e1f0:	ncall	GetGame()
000645:0x0006e1f8:	movec	@c01, ret
000645:0x0006e208:	popc	ret
000645:0x0006e210:	ncalli	CGame.GetMission()
000645:0x0006e218:	movec	obj, ret
000645:0x0006e228:	movec	params, NULL
000645:0x0006e238:	call	CallQueue.Call(obj, _s'RefreshCrosshairVisibility', params)
000647:0x0006e248:	imove	ret, 0x000001
000647:0x0006e258:	release	player
000647:0x0006e260:	release	sqf_debug_watcher_input
000647:0x0006e268:	release	sqf_debug_watcher_result
000647:0x0006e270:	rts
000647:0x0006e278:	jump	0x06ef90
000649:0x0006e280:	cmpm	w, m_AddSqfDebugWatcherButton
000649:0x0006e290:	bne	0x06e2d8
000651:0x0006e298:	call	ScriptConsole.AddSqfDebugWatcher()
000652:0x0006e2a0:	imove	ret, 0x000001
000652:0x0006e2b0:	release	player
000652:0x0006e2b8:	release	sqf_debug_watcher_input
000652:0x0006e2c0:	release	sqf_debug_watcher_result
000652:0x0006e2c8:	rts
000652:0x0006e2d0:	jump	0x06ef90
000654:0x0006e2d8:	cmpm	w, m_RemoveSqfDebugWatcherButton
000654:0x0006e2e8:	bne	0x06e330
000656:0x0006e2f0:	call	ScriptConsole.RemoveLastSqfDebugWatcher()
000657:0x0006e2f8:	imove	ret, 0x000001
000657:0x0006e308:	release	player
000657:0x0006e310:	release	sqf_debug_watcher_input
000657:0x0006e318:	release	sqf_debug_watcher_result
000657:0x0006e320:	rts
000657:0x0006e328:	jump	0x06ef90
000659:0x0006e330:	cmpm	w, m_ObjectsTextListbox
000659:0x0006e340:	bne	0x06e410
000661:0x0006e348:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000661:0x0006e358:	ncalli	TextListboxWidget.SelectRow(_i-1)
000662:0x0006e360:	call	ScriptConsole.HideItemButtons()
000663:0x0006e368:	call	ScriptConsole.ShowItemTransferButtons()
000664:0x0006e370:	call	ScriptConsole.GetCurrentObjectName()
000664:0x0006e378:	adds	@s01, _s'Object : ', ret
000664:0x0006e388:	moves	@s00, @s01
000664:0x0006e398:	movefm	[0x11d09418], m_SelectedObjectText
000664:0x0006e3a8:	ncalli	TextWidget.SetText(@s00)
000666:0x0006e3b0:	call	ScriptConsole.GetCurrentObjectName()
000666:0x0006e3b8:	moves	m_SelectedObject, ret
000667:0x0006e3c8:	imove	m_SelectedObjectIsPreset, 0x000000
000668:0x0006e3d8:	imove	ret, 0x000001
000668:0x0006e3e8:	release	player
000668:0x0006e3f0:	release	sqf_debug_watcher_input
000668:0x0006e3f8:	release	sqf_debug_watcher_result
000668:0x0006e400:	rts
000668:0x0006e408:	jump	0x06ef90
000670:0x0006e410:	cmpm	w, m_ObjectFilter
000670:0x0006e420:	bne	0x06e468
000672:0x0006e428:	call	ScriptConsole.ChangeFilter()
000673:0x0006e430:	imove	ret, 0x000001
000673:0x0006e440:	release	player
000673:0x0006e448:	release	sqf_debug_watcher_input
000673:0x0006e450:	release	sqf_debug_watcher_result
000673:0x0006e458:	rts
000673:0x0006e460:	jump	0x06ef90
000675:0x0006e468:	cmpm	w, m_SpawnInInvButton
000675:0x0006e478:	beq	0x06e4b0
000675:0x0006e480:	cmpm	w, m_SpawnGroundButton
000675:0x0006e490:	beq	0x06e4b0
000675:0x0006e498:	cmpm	w, m_SpawnAsAttachment
000675:0x0006e4a8:	bne	0x06e678
000677:0x0006e4b0:	call	ScriptConsole.SaveProfileSpawnDistance()
000679:0x0006e4b8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
000679:0x0006e4c8:	ncalli	TextListboxWidget.GetSelectedRow()
000679:0x0006e4d0:	move	objects_row_index, ret
000680:0x0006e4e0:	cmps	m_SelectedObject, _s''
000680:0x0006e4f0:	beq	0x06e640
000682:0x0006e4f8:	imove	spawn_type, 0x000002
000683:0x0006e508:	movefm	@c00, m_SpawnGroundButton
000683:0x0006e518:	cmpmc	@c00, w
000683:0x0006e528:	bne	0x06e550
000687:0x0006e530:	imove	spawn_type, 0x000000
000688:0x0006e540:	jump	0x06e590
000688:0x0006e548:	jump	0x06e578
000688:0x0006e550:	movefm	@c00, m_SpawnAsAttachment
000688:0x0006e560:	cmpmc	@c00, w
000688:0x0006e570:	bne	0x06e590
000693:0x0006e578:	imove	spawn_type, 0x000003
000694:0x0006e588:	jump	0x06e590
000702:0x0006e590:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000702:0x0006e5a0:	icall	EditBoxWidget.GetText()
000702:0x0006e5a8:	ncall	ToFloat(ret)
000702:0x0006e5b0:	move	distance, ret
000703:0x0006e5c0:	cmpi	m_SelectedObjectIsPreset, _i0
000703:0x0006e5d0:	beq	0x06e600
000705:0x0006e5d8:	moves	preset_name, m_SelectedObject
000705:0x0006e5e8:	call	ScriptConsole.SetPreset(true, preset_name, spawn_type, distance)
000705:0x0006e5f8:	jump	0x06e640
000709:0x0006e600:	moves	item_name, m_SelectedObject
000709:0x0006e610:	movec	[0x45f4f978], m_Developer
000709:0x0006e620:	call	PluginDeveloper.SpawnItem(player, item_name, spawn_type, _f-1.000000, _f-1.000000, distance, _i0, _v<0.000000,0.000000,0.000000>, _c0)
000713:0x0006e640:	imove	ret, 0x000001
000713:0x0006e650:	release	player
000713:0x0006e658:	release	sqf_debug_watcher_input
000713:0x0006e660:	release	sqf_debug_watcher_result
000713:0x0006e668:	rts
000713:0x0006e670:	jump	0x06ef90
000715:0x0006e678:	cmpm	w, m_DiagToggleButton
000715:0x0006e688:	bne	0x06e760
000717:0x0006e690:	movefm	[0x11d0a1c0], m_DiagToggleTextListbox
000717:0x0006e6a0:	ncalli	TextListboxWidget.GetSelectedRow()
000717:0x0006e6a8:	move	toggle_row_index, ret
000718:0x0006e6b8:	ncall	GetGame()
000718:0x0006e6c0:	ncalli	CGame.GetDiagModeEnable(toggle_row_index)
000718:0x0006e6c8:	move	toggle_state, ret
000719:0x0006e6d8:	ncall	GetGame()
000719:0x0006e6e0:	cmpi	toggle_state, _i0
000719:0x0006e6f0:	beq	0x06e710
000719:0x0006e6f8:	imove	@m00, 0x000000
000719:0x0006e708:	jump	0x06e720
000719:0x0006e710:	imove	@m00, 0x000001
000719:0x0006e720:	ncalli	CGame.SetDiagModeEnable(toggle_row_index, @m00)
000720:0x0006e728:	imove	ret, 0x000001
000720:0x0006e738:	release	player
000720:0x0006e740:	release	sqf_debug_watcher_input
000720:0x0006e748:	release	sqf_debug_watcher_result
000720:0x0006e750:	rts
000720:0x0006e758:	jump	0x06ef90
000722:0x0006e760:	cmpm	w, m_DiagDrawButton
000722:0x0006e770:	bne	0x06e7e8
000724:0x0006e778:	movefm	[0x11d0a1c0], m_DiagDrawmodeTextListbox
000724:0x0006e788:	ncalli	TextListboxWidget.GetSelectedRow()
000724:0x0006e790:	move	draw_row_index, ret
000725:0x0006e7a0:	ncall	GetGame()
000725:0x0006e7a8:	ncalli	CGame.SetDiagDrawMode(draw_row_index)
000726:0x0006e7b0:	imove	ret, 0x000001
000726:0x0006e7c0:	release	player
000726:0x0006e7c8:	release	sqf_debug_watcher_input
000726:0x0006e7d0:	release	sqf_debug_watcher_result
000726:0x0006e7d8:	rts
000726:0x0006e7e0:	jump	0x06ef90
000728:0x0006e7e8:	cmpm	w, m_SQFApplyButton
000728:0x0006e7f8:	bne	0x06e840
000730:0x0006e800:	call	ScriptConsole.ApplySQF()
000731:0x0006e808:	imove	ret, 0x000001
000731:0x0006e818:	release	player
000731:0x0006e820:	release	sqf_debug_watcher_input
000731:0x0006e828:	release	sqf_debug_watcher_result
000731:0x0006e830:	rts
000731:0x0006e838:	jump	0x06ef90
000733:0x0006e840:	cmpm	w, m_SQFOKButton
000733:0x0006e850:	bne	0x06e8a0
000735:0x0006e858:	call	ScriptConsole.ApplySQF()
000736:0x0006e860:	ncalli	ScriptConsole.Close()
000737:0x0006e868:	imove	ret, 0x000001
000737:0x0006e878:	release	player
000737:0x0006e880:	release	sqf_debug_watcher_input
000737:0x0006e888:	release	sqf_debug_watcher_result
000737:0x0006e890:	rts
000737:0x0006e898:	jump	0x06ef90
000739:0x0006e8a0:	cmpm	w, m_CloseConsoleButton
000739:0x0006e8b0:	bne	0x06e8f8
000741:0x0006e8b8:	ncalli	ScriptConsole.Close()
000742:0x0006e8c0:	imove	ret, 0x000001
000742:0x0006e8d0:	release	player
000742:0x0006e8d8:	release	sqf_debug_watcher_input
000742:0x0006e8e0:	release	sqf_debug_watcher_result
000742:0x0006e8e8:	rts
000742:0x0006e8f0:	jump	0x06ef90
000744:0x0006e8f8:	cmpm	w, m_PresetsTextListbox
000744:0x0006e908:	bne	0x06e9c8
000746:0x0006e910:	call	ScriptConsole.RenderPresetItems()
000747:0x0006e918:	call	ScriptConsole.ShowPresetButtons()
000748:0x0006e920:	call	ScriptConsole.ShowItemTransferButtons()
000749:0x0006e928:	call	ScriptConsole.GetCurrentPresetName()
000749:0x0006e930:	adds	@s01, _s'Preset : ', ret
000749:0x0006e940:	moves	@s00, @s01
000749:0x0006e950:	movefm	[0x11d09418], m_SelectedObjectText
000749:0x0006e960:	ncalli	TextWidget.SetText(@s00)
000750:0x0006e968:	call	ScriptConsole.GetCurrentPresetName()
000750:0x0006e970:	moves	m_SelectedObject, ret
000751:0x0006e980:	imove	m_SelectedObjectIsPreset, 0x000001
000752:0x0006e990:	imove	ret, 0x000001
000752:0x0006e9a0:	release	player
000752:0x0006e9a8:	release	sqf_debug_watcher_input
000752:0x0006e9b0:	release	sqf_debug_watcher_result
000752:0x0006e9b8:	rts
000752:0x0006e9c0:	jump	0x06ef90
000754:0x0006e9c8:	cmpm	w, m_PresetItemsTextListbox
000754:0x0006e9d8:	bne	0x06eaa8
000756:0x0006e9e0:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
000756:0x0006e9f0:	ncalli	TextListboxWidget.SelectRow(_i-1)
000757:0x0006e9f8:	call	ScriptConsole.ShowItemButtons()
000758:0x0006ea00:	call	ScriptConsole.ShowItemTransferButtons()
000759:0x0006ea08:	call	ScriptConsole.GetCurrentItemName()
000759:0x0006ea10:	adds	@s01, _s'Object : ', ret
000759:0x0006ea20:	moves	@s00, @s01
000759:0x0006ea30:	movefm	[0x11d09418], m_SelectedObjectText
000759:0x0006ea40:	ncalli	TextWidget.SetText(@s00)
000760:0x0006ea48:	call	ScriptConsole.GetCurrentItemName()
000760:0x0006ea50:	moves	m_SelectedObject, ret
000761:0x0006ea60:	imove	m_SelectedObjectIsPreset, 0x000000
000763:0x0006ea70:	imove	ret, 0x000001
000763:0x0006ea80:	release	player
000763:0x0006ea88:	release	sqf_debug_watcher_input
000763:0x0006ea90:	release	sqf_debug_watcher_result
000763:0x0006ea98:	rts
000763:0x0006eaa0:	jump	0x06ef90
000765:0x0006eaa8:	cmpm	w, m_PresetSetDefaultButton
000765:0x0006eab8:	bne	0x06eb30
000767:0x0006eac0:	call	ScriptConsole.GetCurrentPresetName()
000767:0x0006eac8:	cmps	ret, _s''
000767:0x0006ead8:	beq	0x06eaf8
000769:0x0006eae0:	call	ScriptConsole.GetCurrentPresetIndex()
000769:0x0006eae8:	call	ScriptConsole.SetDefaultPreset(ret)
000771:0x0006eaf8:	imove	ret, 0x000001
000771:0x0006eb08:	release	player
000771:0x0006eb10:	release	sqf_debug_watcher_input
000771:0x0006eb18:	release	sqf_debug_watcher_result
000771:0x0006eb20:	rts
000771:0x0006eb28:	jump	0x06ef90
000773:0x0006eb30:	cmpm	w, m_PresetNewButton
000773:0x0006eb40:	bne	0x06eba0
000775:0x0006eb48:	ncalli	DayZGame.GetUIManager()
000775:0x0006eb50:	movec	[0x3cd3f3e0], this
000775:0x0006eb60:	ncalli	UIManager.EnterScriptedMenu(MENU_SCRIPTCONSOLE_DIALOG_PRESET_NAME, [0x3cd3f3e0])
000776:0x0006eb68:	imove	ret, 0x000001
000776:0x0006eb78:	release	player
000776:0x0006eb80:	release	sqf_debug_watcher_input
000776:0x0006eb88:	release	sqf_debug_watcher_result
000776:0x0006eb90:	rts
000776:0x0006eb98:	jump	0x06ef90
000778:0x0006eba0:	cmpm	w, m_PresetDeleteButton
000778:0x0006ebb0:	bne	0x06ec18
000780:0x0006ebb8:	call	ScriptConsole.GetCurrentPresetName()
000780:0x0006ebc0:	cmps	ret, _s''
000780:0x0006ebd0:	beq	0x06ebe0
000782:0x0006ebd8:	call	ScriptConsole.DeletePreset()
000784:0x0006ebe0:	imove	ret, 0x000001
000784:0x0006ebf0:	release	player
000784:0x0006ebf8:	release	sqf_debug_watcher_input
000784:0x0006ec00:	release	sqf_debug_watcher_result
000784:0x0006ec08:	rts
000784:0x0006ec10:	jump	0x06ef90
000786:0x0006ec18:	cmpm	w, m_PresetRenameButton
000786:0x0006ec28:	bne	0x06eca8
000788:0x0006ec30:	call	ScriptConsole.GetCurrentPresetName()
000788:0x0006ec38:	cmps	ret, _s''
000788:0x0006ec48:	beq	0x06ec70
000790:0x0006ec50:	ncalli	DayZGame.GetUIManager()
000790:0x0006ec58:	movec	[0x3cd3f3e0], this
000790:0x0006ec68:	ncalli	UIManager.EnterScriptedMenu(MENU_SCRIPTCONSOLE_DIALOG_PRESET_RENAME, [0x3cd3f3e0])
000792:0x0006ec70:	imove	ret, 0x000001
000792:0x0006ec80:	release	player
000792:0x0006ec88:	release	sqf_debug_watcher_input
000792:0x0006ec90:	release	sqf_debug_watcher_result
000792:0x0006ec98:	rts
000792:0x0006eca0:	jump	0x06ef90
000794:0x0006eca8:	cmpm	w, m_PresetAddItemtButton
000794:0x0006ecb8:	bne	0x06ed00
000796:0x0006ecc0:	call	ScriptConsole.AddItemToPreset()
000797:0x0006ecc8:	imove	ret, 0x000001
000797:0x0006ecd8:	release	player
000797:0x0006ece0:	release	sqf_debug_watcher_input
000797:0x0006ece8:	release	sqf_debug_watcher_result
000797:0x0006ecf0:	rts
000797:0x0006ecf8:	jump	0x06ef90
000799:0x0006ed00:	cmpm	w, m_ItemNameCopy
000799:0x0006ed10:	bne	0x06ed70
000801:0x0006ed18:	movem	text_listbox_widget, m_ObjectsTextListbox
000801:0x0006ed28:	call	ScriptConsole.AddItemToClipboard(text_listbox_widget)
000802:0x0006ed38:	imove	ret, 0x000001
000802:0x0006ed48:	release	player
000802:0x0006ed50:	release	sqf_debug_watcher_input
000802:0x0006ed58:	release	sqf_debug_watcher_result
000802:0x0006ed60:	rts
000802:0x0006ed68:	jump	0x06ef90
000804:0x0006ed70:	cmpm	w, m_SelectedRowCopy
000804:0x0006ed80:	bne	0x06ede0
000806:0x0006ed88:	movem	text_listbox_widget, m_ConfigVariablesTextListbox
000806:0x0006ed98:	call	ScriptConsole.AddItemToClipboard(text_listbox_widget)
000807:0x0006eda8:	imove	ret, 0x000001
000807:0x0006edb8:	release	player
000807:0x0006edc0:	release	sqf_debug_watcher_input
000807:0x0006edc8:	release	sqf_debug_watcher_result
000807:0x0006edd0:	rts
000807:0x0006edd8:	jump	0x06ef90
000809:0x0006ede0:	cmpm	w, m_PresetRemoveItemButton
000809:0x0006edf0:	bne	0x06ee38
000811:0x0006edf8:	call	ScriptConsole.RemoveItemFromPreset()
000812:0x0006ee00:	imove	ret, 0x000001
000812:0x0006ee10:	release	player
000812:0x0006ee18:	release	sqf_debug_watcher_input
000812:0x0006ee20:	release	sqf_debug_watcher_result
000812:0x0006ee28:	rts
000812:0x0006ee30:	jump	0x06ef90
000814:0x0006ee38:	cmpm	w, m_ItemMoveUpButton
000814:0x0006ee48:	bne	0x06ee90
000816:0x0006ee50:	call	ScriptConsole.ItemMoveUp()
000817:0x0006ee58:	imove	ret, 0x000001
000817:0x0006ee68:	release	player
000817:0x0006ee70:	release	sqf_debug_watcher_input
000817:0x0006ee78:	release	sqf_debug_watcher_result
000817:0x0006ee80:	rts
000817:0x0006ee88:	jump	0x06ef90
000819:0x0006ee90:	cmpm	w, m_ItemMoveDownButton
000819:0x0006eea0:	bne	0x06eee8
000821:0x0006eea8:	call	ScriptConsole.ItemMoveDown()
000822:0x0006eeb0:	imove	ret, 0x000001
000822:0x0006eec0:	release	player
000822:0x0006eec8:	release	sqf_debug_watcher_input
000822:0x0006eed0:	release	sqf_debug_watcher_result
000822:0x0006eed8:	rts
000822:0x0006eee0:	jump	0x06ef90
000824:0x0006eee8:	cmpm	w, m_EnfScriptRun
000824:0x0006eef8:	bne	0x06ef40
000826:0x0006ef00:	call	ScriptConsole.RunEnscript()
000827:0x0006ef08:	imove	ret, 0x000001
000827:0x0006ef18:	release	player
000827:0x0006ef20:	release	sqf_debug_watcher_input
000827:0x0006ef28:	release	sqf_debug_watcher_result
000827:0x0006ef30:	rts
000827:0x0006ef38:	jump	0x06ef90
000829:0x0006ef40:	cmpm	w, m_ClearScriptLogsButton
000829:0x0006ef50:	bne	0x06ef90
000831:0x0006ef58:	call	ClearScriptLogs()
000832:0x0006ef60:	imove	ret, 0x000001
000832:0x0006ef70:	release	player
000832:0x0006ef78:	release	sqf_debug_watcher_input
000832:0x0006ef80:	release	sqf_debug_watcher_result
000832:0x0006ef88:	rts
000836:0x0006ef90:	imove	i, 0x000000
000836:0x0006efa0:	jump	0x06efb0
000836:0x0006efa8:	inc	i
000836:0x0006efb0:	cmpi	i, TABS_COUNT
000836:0x0006efc0:	bge	0x06f038
000838:0x0006efc8:	cfv	@c01, m_Tab_buttons[i]
000838:0x0006efd8:	cmpcm	w, @c01
000838:0x0006efe8:	bne	0x06f030
000840:0x0006eff0:	call	ScriptConsole.SelectTab(i)
000841:0x0006f000:	imove	ret, 0x000001
000841:0x0006f010:	release	player
000841:0x0006f018:	release	sqf_debug_watcher_input
000841:0x0006f020:	release	sqf_debug_watcher_result
000841:0x0006f028:	rts
000841:0x0006f030:	jump	0x06efa8
000845:0x0006f038:	imove	ret, 0x000000
000845:0x0006f048:	release	player
000845:0x0006f050:	release	sqf_debug_watcher_input
000845:0x0006f058:	release	sqf_debug_watcher_result
000845:0x0006f060:	rts
000845:0x0006f068:	release	player
000845:0x0006f070:	release	sqf_debug_watcher_input
000845:0x0006f078:	release	sqf_debug_watcher_result
000845:0x0006f080:	rts
ScriptConsole::OnChange()
000850:0x0006f088:	call	UIScriptedMenu.OnChange(w, x, y, finished)
000852:0x0006f098:	cmpm	w, m_ObjectFilter
000852:0x0006f0a8:	bne	0x06f0d8
000854:0x0006f0b0:	call	ScriptConsole.ChangeFilter()
000855:0x0006f0b8:	imove	ret, 0x000001
000855:0x0006f0c8:	rts
000855:0x0006f0d0:	jump	0x06f220
000857:0x0006f0d8:	cmpm	w, m_QuantityEditBox
000857:0x0006f0e8:	bne	0x06f160
000859:0x0006f0f0:	call	ScriptConsole.GetCurrentPresetName()
000859:0x0006f0f8:	call	ScriptConsole.GetCurrentItemIndex()
000859:0x0006f100:	movefm	[0x11d09a20], m_QuantityEditBox
000859:0x0006f110:	icall	EditBoxWidget.GetText()
000859:0x0006f118:	ncall	ToInt(ret)
000859:0x0006f120:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000859:0x0006f130:	call	PluginConfigDebugProfile.SetItemQuantity(ret, ret, ret)
000860:0x0006f140:	imove	ret, 0x000001
000860:0x0006f150:	rts
000860:0x0006f158:	jump	0x06f220
000862:0x0006f160:	cmpm	w, m_DamageEditBox
000862:0x0006f170:	bne	0x06f1e8
000864:0x0006f178:	call	ScriptConsole.GetCurrentPresetName()
000864:0x0006f180:	call	ScriptConsole.GetCurrentItemIndex()
000864:0x0006f188:	movefm	[0x11d09a20], m_DamageEditBox
000864:0x0006f198:	icall	EditBoxWidget.GetText()
000864:0x0006f1a0:	ncall	ToFloat(ret)
000864:0x0006f1a8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000864:0x0006f1b8:	call	PluginConfigDebugProfile.SetItemDamage(ret, ret, ret)
000865:0x0006f1c8:	imove	ret, 0x000001
000865:0x0006f1d8:	rts
000865:0x0006f1e0:	jump	0x06f220
000867:0x0006f1e8:	cmpm	w, m_ObjectConfigFilter
000867:0x0006f1f8:	bne	0x06f220
000869:0x0006f200:	call	ScriptConsole.ChangeConfigFilter()
000870:0x0006f208:	imove	ret, 0x000001
000870:0x0006f218:	rts
000873:0x0006f220:	imove	ret, 0x000000
000873:0x0006f230:	rts
000873:0x0006f238:	rts
ScriptConsole::OnItemSelected()
000878:0x0006f270:	call	UIScriptedMenu.OnItemSelected(w, x, y, row, column, oldRow, oldColumn)
000880:0x0006f288:	cmpm	w, m_PositionsListbox
000880:0x0006f298:	bne	0x06f350
000882:0x0006f2a0:	call	ScriptConsole.GetCurrentPositionName()
000882:0x0006f2a8:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000882:0x0006f2b8:	call	PluginConfigDebugProfileFixed.GetPositionByName(ret)
000882:0x0006f2c8:	movev	position, ret
000883:0x0006f2d8:	ifv	@f00, position[0x000000]
000883:0x0006f2e8:	icall	ToString(@f00)
000883:0x0006f2f0:	movefm	[0x11d09a20], m_TeleportX
000883:0x0006f300:	ncalli	EditBoxWidget.SetText(ret)
000884:0x0006f308:	ifv	@f00, position[0x000002]
000884:0x0006f318:	icall	ToString(@f00)
000884:0x0006f320:	movefm	[0x11d09a20], m_TeleportY
000884:0x0006f330:	ncalli	EditBoxWidget.SetText(ret)
000885:0x0006f338:	imove	ret, 0x000001
000885:0x0006f348:	rts
000887:0x0006f350:	imove	ret, 0x000001
000887:0x0006f360:	rts
000887:0x0006f368:	rts
ScriptConsole::RefreshLists()
000892:0x0006f370:	call	ScriptConsole.RenderPresets()
000893:0x0006f378:	call	ScriptConsole.RenderPresetItems()
000893:0x0006f380:	rts
ScriptConsole::RenderPresets()
000899:0x0006f468:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000899:0x0006f478:	ncalli	TextListboxWidget.ClearItems()
000905:0x0006f480:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000905:0x0006f490:	call	PluginConfigDebugProfileFixed.GetPresets()
000905:0x0006f498:	movem	presets_array, ret
000906:0x0006f4a8:	imove	i, 0x000000
000906:0x0006f4b8:	jump	0x06f4c8
000906:0x0006f4c0:	inc	i
000906:0x0006f4c8:	ncalli	array<string>.Count()
000906:0x0006f4d0:	cmpi	i, ret
000906:0x0006f4e0:	bge	0x06f598
000908:0x0006f4e8:	icall	array<string>.Get(i)
000908:0x0006f4f0:	adds	@s02, _s'[', ret
000908:0x0006f500:	moves	@s01, @s02
000908:0x0006f510:	adds	@s01, @s01, _s']'
000908:0x0006f520:	moves	@s00, @s01
000908:0x0006f530:	icall	array<string>.Get(i)
000908:0x0006f538:	new	@c00, Param3<string,bool,bool>
000908:0x0006f560:	movec	[0x11d1a368], @c00
000908:0x0006f570:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000908:0x0006f580:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
000908:0x0006f590:	jump	0x06f4c0
000912:0x0006f598:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000912:0x0006f5a8:	call	PluginConfigDebugProfile.GetPresets()
000912:0x0006f5b0:	movem	custom_presets_array, ret
000913:0x0006f5c0:	imove	i, 0x000000
000913:0x0006f5d0:	jump	0x06f5e0
000913:0x0006f5d8:	inc	i
000913:0x0006f5e0:	ncalli	array<string>.Count()
000913:0x0006f5e8:	cmpi	i, ret
000913:0x0006f5f8:	bge	0x06f690
000915:0x0006f600:	icall	array<string>.Get(i)
000915:0x0006f608:	pushs	ret
000915:0x0006f610:	icall	array<string>.Get(i)
000915:0x0006f618:	moves	@s02, ret
000915:0x0006f628:	pops	ret
000915:0x0006f630:	new	@c00, Param3<string,bool,bool>
000915:0x0006f658:	movec	[0x11d1a368], @c00
000915:0x0006f668:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000915:0x0006f678:	ncalli	TextListboxWidget.AddItem(ret, [0x11d1a368], _i0, _i-1)
000915:0x0006f688:	jump	0x06f5d8
000918:0x0006f690:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000918:0x0006f6a0:	call	PluginConfigDebugProfile.GetDefaultPreset()
000918:0x0006f6a8:	moves	default_preset, ret
000919:0x0006f6b8:	cmps	default_preset, _s''
000919:0x0006f6c8:	beq	0x06f810
000922:0x0006f6d0:	call	ScriptConsole.GetPresetIndexByName(default_preset)
000922:0x0006f6e0:	move	index, ret
000923:0x0006f6f0:	call	ScriptConsole.IsPresetFixed(default_preset)
000923:0x0006f700:	cmpi	ret, _i0
000923:0x0006f710:	beq	0x06f758
000925:0x0006f718:	adds	@s01, _s'[', default_preset
000925:0x0006f728:	moves	@s00, @s01
000925:0x0006f738:	adds	@s00, @s00, _s']'
000925:0x0006f748:	moves	default_preset, @s00
000928:0x0006f758:	cmpi	index, _i-1
000928:0x0006f768:	ble	0x06f810
000928:0x0006f770:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000928:0x0006f780:	ncalli	TextListboxWidget.GetNumItems()
000928:0x0006f788:	cmpi	index, ret
000928:0x0006f798:	bge	0x06f810
000930:0x0006f7a0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000930:0x0006f7b0:	icall	TextListboxWidget.GetItemData(index, _i0, preset_params_array)
000931:0x0006f7c0:	adds	@s01, default_preset, CONST_DEFAULT_PRESET_PREFIX
000931:0x0006f7d0:	moves	@s00, @s01
000931:0x0006f7e0:	movec	[0x11d1a428], preset_params_array
000931:0x0006f7f0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
000931:0x0006f800:	ncalli	TextListboxWidget.SetItem(index, @s00, [0x11d1a428], _i0)
000931:0x0006f810:	release	preset_params
000931:0x0006f818:	release	presets_array
000931:0x0006f820:	release	custom_presets_array
000931:0x0006f828:	rts
ScriptConsole::RenderPresetItems()
000941:0x0006f890:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000941:0x0006f8a0:	ncalli	TextListboxWidget.ClearItems()
000942:0x0006f8a8:	call	ScriptConsole.GetCurrentPresetIndex()
000942:0x0006f8b0:	cmpi	ret, _i-1
000942:0x0006f8c0:	beq	0x06fa18
000944:0x0006f8c8:	call	ScriptConsole.IsCurrentPresetFixed()
000944:0x0006f8d0:	move	isFixed, ret
000945:0x0006f8e0:	new	@c00, array<string>
000945:0x0006f900:	movetm	preset_array, @c00
000947:0x0006f910:	cmpi	isFixed, _i0
000947:0x0006f920:	beq	0x06f958
000949:0x0006f928:	call	ScriptConsole.GetCurrentPresetName()
000949:0x0006f930:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
000949:0x0006f940:	call	PluginConfigDebugProfileFixed.GetPresetItems(ret, preset_array)
000949:0x0006f950:	jump	0x06f980
000953:0x0006f958:	call	ScriptConsole.GetCurrentPresetName()
000953:0x0006f960:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000953:0x0006f970:	call	PluginConfigDebugProfile.GetPresetItems(ret, preset_array)
000956:0x0006f980:	cmpcm	preset_array, NULL
000956:0x0006f990:	beq	0x06fa08
000958:0x0006f998:	imove	i, 0x000000
000958:0x0006f9a8:	jump	0x06f9b8
000958:0x0006f9b0:	inc	i
000958:0x0006f9b8:	ncalli	array<string>.Count()
000958:0x0006f9c0:	cmpi	i, ret
000958:0x0006f9d0:	bge	0x06fa08
000960:0x0006f9d8:	icall	array<string>.Get(i)
000960:0x0006f9e0:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
000960:0x0006f9f0:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
000960:0x0006fa00:	jump	0x06f9b0
000964:0x0006fa08:	delete	preset_array
000964:0x0006fa10:	release	preset_array
000964:0x0006fa18:	rts
ScriptConsole::NewPreset()
000970:0x0006fa20:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000970:0x0006fa30:	call	PluginConfigDebugProfile.PresetAdd(preset_name)
000971:0x0006fa40:	call	ScriptConsole.RefreshLists()
000971:0x0006fa48:	rts
ScriptConsole::DeletePreset()
000976:0x0006fa70:	call	ScriptConsole.GetCurrentPresetIndex()
000976:0x0006fa78:	cmpi	ret, _i-1
000976:0x0006fa88:	beq	0x06fad0
000978:0x0006fa90:	call	ScriptConsole.GetCurrentPresetName()
000978:0x0006fa98:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000978:0x0006faa8:	call	PluginConfigDebugProfile.PresetRemove(ret)
000978:0x0006fab8:	move	result, ret
000979:0x0006fac8:	call	ScriptConsole.RefreshLists()
000979:0x0006fad0:	rts
ScriptConsole::SaveProfileSpawnDistance()
000985:0x0006fad8:	cmpc	m_ConfigDebugProfile, NULL
000985:0x0006fae8:	beq	0x06fb48
000985:0x0006faf0:	cmpcm	m_SpawnDistanceEditBox, NULL
000985:0x0006fb00:	beq	0x06fb48
000987:0x0006fb08:	movefm	[0x11d09a20], m_SpawnDistanceEditBox
000987:0x0006fb18:	icall	EditBoxWidget.GetText()
000987:0x0006fb20:	ncall	ToFloat(ret)
000987:0x0006fb28:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000987:0x0006fb38:	call	PluginConfigDebugProfile.SetSpawnDistance(ret)
000987:0x0006fb48:	rts
ScriptConsole::RenamePreset()
000993:0x0006fb70:	call	ScriptConsole.GetCurrentPresetIndex()
000993:0x0006fb78:	cmpi	ret, _i-1
000993:0x0006fb88:	beq	0x06fbd0
000995:0x0006fb90:	call	ScriptConsole.GetCurrentPresetName()
000995:0x0006fb98:	movec	[0x45f4e8c0], m_ConfigDebugProfile
000995:0x0006fba8:	call	PluginConfigDebugProfile.PresetRename(ret, new_preset_name)
000995:0x0006fbb8:	move	result, ret
000996:0x0006fbc8:	call	ScriptConsole.RefreshLists()
000996:0x0006fbd0:	rts
ScriptConsole::SetPreset()
001004:0x0006fc98:	call	ScriptConsole.GetCurrentPresetIndex()
001004:0x0006fca0:	cmpi	ret, _i-1
001004:0x0006fcb0:	beq	0x06ff60
001006:0x0006fcb8:	call	ScriptConsole.IsCurrentPresetFixed()
001006:0x0006fcc0:	move	is_preset_fixed, ret
001007:0x0006fcd0:	new	@c00, array<string>
001007:0x0006fcf0:	movetm	preset_array, @c00
001009:0x0006fd00:	cmpi	is_preset_fixed, _i0
001009:0x0006fd10:	beq	0x06fd40
001011:0x0006fd18:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
001011:0x0006fd28:	call	PluginConfigDebugProfileFixed.GetPresetItems(preset_name, preset_array)
001011:0x0006fd38:	jump	0x06fd60
001015:0x0006fd40:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001015:0x0006fd50:	call	PluginConfigDebugProfile.GetPresetItems(preset_name, preset_array)
001018:0x0006fd60:	ncall	GetGame()
001018:0x0006fd68:	ncalli	CGame.GetPlayer()
001018:0x0006fd70:	movetm	player, ret
001019:0x0006fd80:	cmpi	clear_inventory, _i0
001019:0x0006fd90:	beq	0x06fdb8
001021:0x0006fd98:	movec	[0x45f4f978], m_Developer
001021:0x0006fda8:	call	PluginDeveloper.ClearInventory(player)
001024:0x0006fdb8:	imove	i, 0x000000
001024:0x0006fdc8:	jump	0x06fdd8
001024:0x0006fdd0:	inc	i
001024:0x0006fdd8:	ncalli	array<string>.Count()
001024:0x0006fde0:	cmpi	i, ret
001024:0x0006fdf0:	bge	0x06ff48
001026:0x0006fdf8:	imove	damage, -1.00000
001027:0x0006fe08:	imove	quantity, 0xffffffff
001028:0x0006fe18:	cmpi	is_preset_fixed, _i0
001028:0x0006fe28:	beq	0x06fe98
001030:0x0006fe30:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
001030:0x0006fe40:	call	PluginConfigDebugProfileFixed.GetItemDamage(preset_name, i)
001030:0x0006fe50:	move	damage, ret
001031:0x0006fe60:	movec	[0x45f4e920], m_ConfigDebugProfileFixed
001031:0x0006fe70:	call	PluginConfigDebugProfileFixed.GetItemQuantity(preset_name, i)
001031:0x0006fe80:	move	quantity, ret
001031:0x0006fe90:	jump	0x06fef8
001035:0x0006fe98:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001035:0x0006fea8:	call	PluginConfigDebugProfile.GetItemDamage(preset_name, i)
001035:0x0006feb8:	move	damage, ret
001036:0x0006fec8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001036:0x0006fed8:	call	PluginConfigDebugProfile.GetItemQuantity(preset_name, i)
001036:0x0006fee8:	move	quantity, ret
001038:0x0006fef8:	icall	array<string>.Get(i)
001038:0x0006ff00:	citf	quantity, quantity
001038:0x0006ff10:	movec	[0x45f4f978], m_Developer
001038:0x0006ff20:	call	PluginDeveloper.SpawnItem(player, ret, spawn_type, damage, quantity, distance, _i0, _v<0.000000,0.000000,0.000000>, _c0)
001038:0x0006ff40:	jump	0x06fdd0
001041:0x0006ff48:	delete	preset_array
001041:0x0006ff50:	release	preset_array
001041:0x0006ff58:	release	player
001041:0x0006ff60:	rts
ScriptConsole::SetDefaultPreset()
001048:0x00070008:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001048:0x00070018:	call	PluginConfigDebugProfile.GetDefaultPreset()
001048:0x00070020:	moves	default_preset, ret
001049:0x00070030:	cmps	default_preset, _s''
001049:0x00070040:	beq	0x070178
001051:0x00070048:	call	ScriptConsole.GetPresetIndexByName(default_preset)
001051:0x00070058:	move	index, ret
001053:0x00070068:	call	ScriptConsole.IsPresetFixed(default_preset)
001053:0x00070078:	cmpi	ret, _i0
001053:0x00070088:	beq	0x0700d0
001055:0x00070090:	adds	@s01, _s'[', default_preset
001055:0x000700a0:	moves	@s00, @s01
001055:0x000700b0:	adds	@s00, @s00, _s']'
001055:0x000700c0:	moves	default_preset, @s00
001058:0x000700d0:	cmpi	index, _i-1
001058:0x000700e0:	ble	0x070178
001058:0x000700e8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001058:0x000700f8:	ncalli	TextListboxWidget.GetNumItems()
001058:0x00070100:	cmpi	index, ret
001058:0x00070110:	bge	0x070178
001060:0x00070118:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001060:0x00070128:	icall	TextListboxWidget.GetItemData(index, _i0, prev_preset_params_array)
001061:0x00070138:	imove	param3, 0x000000
001062:0x00070148:	movec	[0x11d1a428], prev_preset_params_array
001062:0x00070158:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001062:0x00070168:	ncalli	TextListboxWidget.SetItem(index, default_preset, [0x11d1a428], _i0)
001068:0x00070178:	call	ScriptConsole.GetCurrentPresetName()
001068:0x00070180:	moves	preset_name, ret
001069:0x00070190:	call	ScriptConsole.IsPresetFixed(preset_name)
001069:0x000701a0:	cmpi	ret, _i0
001069:0x000701b0:	beq	0x0701f8
001071:0x000701b8:	adds	@s01, _s'[', preset_name
001071:0x000701c8:	moves	@s00, @s01
001071:0x000701d8:	adds	@s00, @s00, _s']'
001071:0x000701e8:	moves	preset_name, @s00
001075:0x000701f8:	call	ScriptConsole.GetCurrentPresetIndex()
001075:0x00070200:	move	index, ret
001076:0x00070210:	cmpi	index, _i-1
001076:0x00070220:	ble	0x0702d8
001076:0x00070228:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001076:0x00070238:	ncalli	TextListboxWidget.GetNumItems()
001076:0x00070240:	cmpi	index, ret
001076:0x00070250:	bge	0x0702d8
001078:0x00070258:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001078:0x00070268:	icall	TextListboxWidget.GetItemData(index, _i0, preset_params_array)
001079:0x00070278:	imove	param3, 0x000001
001080:0x00070288:	adds	@s01, preset_name, CONST_DEFAULT_PRESET_PREFIX
001080:0x00070298:	moves	@s00, @s01
001080:0x000702a8:	movec	[0x11d1a428], preset_params_array
001080:0x000702b8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001080:0x000702c8:	ncalli	TextListboxWidget.SetItem(index, @s00, [0x11d1a428], _i0)
001083:0x000702d8:	call	ScriptConsole.GetCurrentPresetName()
001083:0x000702e0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001083:0x000702f0:	call	PluginConfigDebugProfile.SetDefaultPreset(ret)
001083:0x00070300:	rts
ScriptConsole::AddItemToPreset()
001088:0x00070348:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
001088:0x00070358:	ncalli	TextListboxWidget.GetSelectedRow()
001088:0x00070360:	move	selected_row_index, ret
001089:0x00070370:	cmpi	selected_row_index, _i-1
001089:0x00070380:	beq	0x070400
001089:0x00070388:	call	ScriptConsole.GetCurrentPresetIndex()
001089:0x00070390:	cmpi	ret, _i-1
001089:0x000703a0:	beq	0x070400
001091:0x000703a8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
001091:0x000703b8:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
001091:0x000703c0:	moves	item_name, ret
001092:0x000703d0:	call	ScriptConsole.GetCurrentPresetName()
001092:0x000703d8:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001092:0x000703e8:	call	PluginConfigDebugProfile.ItemAddToPreset(ret, item_name)
001093:0x000703f8:	call	ScriptConsole.RenderPresetItems()
001093:0x00070400:	rts
ScriptConsole::ShowPresetButtons()
001099:0x00070428:	imove	show, 0x000001
001100:0x00070438:	call	ScriptConsole.IsCurrentPresetFixed()
001100:0x00070440:	cmpi	ret, _i0
001100:0x00070450:	beq	0x070468
001102:0x00070458:	imove	show, 0x000000
001104:0x00070468:	movefm	[0x11d09c98], m_PresetDeleteButton
001104:0x00070478:	ncalli	ButtonWidget.Show(show)
001105:0x00070480:	movefm	[0x11d09c98], m_PresetRenameButton
001105:0x00070490:	ncalli	ButtonWidget.Show(show)
001107:0x00070498:	call	ScriptConsole.HideItemButtons()
001107:0x000704a0:	rts
ScriptConsole::AddItemToClipboard()
001112:0x000704e8:	ncalli	TextListboxWidget.GetSelectedRow()
001112:0x000704f0:	move	selected_row_index, ret
001113:0x00070500:	cmpi	selected_row_index, _i-1
001113:0x00070510:	beq	0x070540
001115:0x00070518:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
001115:0x00070520:	moves	item_name, ret
001116:0x00070530:	ncall	GetGame()
001116:0x00070538:	ncalli	CGame.CopyToClipboard(item_name)
001116:0x00070540:	rts
ScriptConsole::RemoveItemFromPreset()
001122:0x00070548:	call	ScriptConsole.GetCurrentItemIndex()
001122:0x00070550:	cmpi	ret, _i-1
001122:0x00070560:	beq	0x0705c0
001122:0x00070568:	call	ScriptConsole.GetCurrentPresetIndex()
001122:0x00070570:	cmpi	ret, _i-1
001122:0x00070580:	beq	0x0705c0
001124:0x00070588:	call	ScriptConsole.GetCurrentPresetName()
001124:0x00070590:	call	ScriptConsole.GetCurrentItemIndex()
001124:0x00070598:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001124:0x000705a8:	call	PluginConfigDebugProfile.ItemRemoveFromPreset(ret, ret)
001125:0x000705b8:	call	ScriptConsole.RenderPresetItems()
001125:0x000705c0:	rts
ScriptConsole::GetCurrentPresetName()
001131:0x00070608:	call	ScriptConsole.GetCurrentPresetIndex()
001131:0x00070610:	move	index, ret
001133:0x00070620:	cmpi	index, _i-1
001133:0x00070630:	ble	0x0706a0
001133:0x00070638:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001133:0x00070648:	ncalli	TextListboxWidget.GetNumItems()
001133:0x00070650:	cmpi	index, ret
001133:0x00070660:	bge	0x0706a0
001136:0x00070668:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001136:0x00070678:	icall	TextListboxWidget.GetItemData(index, _i0, item_params_array)
001137:0x00070688:	moves	ret, param1
001137:0x00070698:	rts
001139:0x000706a0:	moves	ret, _s''
001139:0x000706b0:	rts
001139:0x000706b8:	rts
ScriptConsole::GetCurrentItemName()
001144:0x000706e0:	call	ScriptConsole.GetCurrentItemIndex()
001144:0x000706e8:	cmpi	ret, _i-1
001144:0x000706f8:	beq	0x070748
001146:0x00070700:	call	ScriptConsole.GetCurrentItemIndex()
001146:0x00070708:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
001146:0x00070718:	ncalli	TextListboxWidget.GetItem(ret, _i0)
001146:0x00070720:	moves	item_name, ret
001147:0x00070730:	moves	ret, item_name
001147:0x00070740:	rts
001149:0x00070748:	moves	ret, _s''
001149:0x00070758:	rts
001149:0x00070760:	rts
ScriptConsole::GetCurrentObjectName()
001154:0x000707a8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
001154:0x000707b8:	ncalli	TextListboxWidget.GetSelectedRow()
001154:0x000707c0:	move	selected_row_index, ret
001155:0x000707d0:	cmpi	selected_row_index, _i-1
001155:0x000707e0:	beq	0x070828
001157:0x000707e8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
001157:0x000707f8:	ncalli	TextListboxWidget.GetItem(selected_row_index, _i0)
001157:0x00070800:	moves	item_name, ret
001158:0x00070810:	moves	ret, item_name
001158:0x00070820:	rts
001160:0x00070828:	moves	ret, _s''
001160:0x00070838:	rts
001160:0x00070840:	rts
ScriptConsole::GetCurrentPositionName()
001165:0x00070868:	movefm	[0x11d0a1c0], m_PositionsListbox
001165:0x00070878:	ncalli	TextListboxWidget.GetSelectedRow()
001165:0x00070880:	cmpi	ret, _i-1
001165:0x00070890:	beq	0x0708f0
001167:0x00070898:	movefm	[0x11d0a1c0], m_PositionsListbox
001167:0x000708a8:	ncalli	TextListboxWidget.GetSelectedRow()
001167:0x000708b0:	movefm	[0x11d0a1c0], m_PositionsListbox
001167:0x000708c0:	ncalli	TextListboxWidget.GetItem(ret, _i0)
001167:0x000708c8:	moves	position_name, ret
001168:0x000708d8:	moves	ret, position_name
001168:0x000708e8:	rts
001170:0x000708f0:	moves	ret, _s''
001170:0x00070900:	rts
001170:0x00070908:	rts
ScriptConsole::GetCurrentPresetIndex()
001175:0x00070910:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001175:0x00070920:	ncalli	TextListboxWidget.GetSelectedRow()
001175:0x00070928:	move	ret, ret
001175:0x00070938:	rts
001175:0x00070940:	rts
ScriptConsole::GetCurrentItemIndex()
001180:0x00070948:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
001180:0x00070958:	ncalli	TextListboxWidget.GetSelectedRow()
001180:0x00070960:	move	ret, ret
001180:0x00070970:	rts
001180:0x00070978:	rts
ScriptConsole::IsCurrentPresetFixed()
001185:0x000709c0:	call	ScriptConsole.GetCurrentPresetIndex()
001185:0x000709c8:	move	index, ret
001186:0x000709d8:	cmpi	index, _i-1
001186:0x000709e8:	ble	0x070a58
001186:0x000709f0:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001186:0x00070a00:	ncalli	TextListboxWidget.GetNumItems()
001186:0x00070a08:	cmpi	index, ret
001186:0x00070a18:	bge	0x070a58
001189:0x00070a20:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001189:0x00070a30:	icall	TextListboxWidget.GetItemData(index, _i0, item_params_array)
001190:0x00070a40:	move	ret, param2
001190:0x00070a50:	rts
001190:0x00070a58:	rts
ScriptConsole::IsPresetFixed()
001196:0x00070aa0:	call	ScriptConsole.GetPresetIndexByName(preset_name)
001196:0x00070ab0:	move	preset_index, ret
001198:0x00070ac0:	cmpi	preset_index, _i-1
001198:0x00070ad0:	ble	0x070b40
001198:0x00070ad8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001198:0x00070ae8:	ncalli	TextListboxWidget.GetNumItems()
001198:0x00070af0:	cmpi	preset_index, ret
001198:0x00070b00:	bge	0x070b40
001200:0x00070b08:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001200:0x00070b18:	icall	TextListboxWidget.GetItemData(preset_index, _i0, item_params_array)
001201:0x00070b28:	move	ret, param2
001201:0x00070b38:	rts
001201:0x00070b40:	rts
ScriptConsole::GetPresetIndexByName()
001208:0x00070b88:	imove	i, 0x000000
001208:0x00070b98:	jump	0x070ba8
001208:0x00070ba0:	inc	i
001208:0x00070ba8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001208:0x00070bb8:	ncalli	TextListboxWidget.GetNumItems()
001208:0x00070bc0:	cmpi	i, ret
001208:0x00070bd0:	bge	0x070c30
001211:0x00070bd8:	movefm	[0x11d0a1c0], m_PresetsTextListbox
001211:0x00070be8:	icall	TextListboxWidget.GetItemData(i, _i0, item_params_array)
001213:0x00070bf8:	cmps	param1, preset_name
001213:0x00070c08:	bne	0x070c28
001215:0x00070c10:	move	ret, i
001215:0x00070c20:	rts
001215:0x00070c28:	jump	0x070ba0
001215:0x00070c30:	rts
ScriptConsole::ShowItemButtons()
001222:0x00070cb8:	call	ScriptConsole.IsCurrentPresetFixed()
001222:0x00070cc0:	cmpi	ret, _i0
001222:0x00070cd0:	bne	0x070ec8
001224:0x00070cd8:	call	ScriptConsole.ShowItemTransferButtons()
001226:0x00070ce0:	call	ScriptConsole.GetCurrentPresetName()
001226:0x00070ce8:	moves	preset_name, ret
001227:0x00070cf8:	call	ScriptConsole.GetCurrentItemIndex()
001227:0x00070d00:	move	item_index, ret
001229:0x00070d10:	movefm	[0x11d09c98], m_ItemMoveUpButton
001229:0x00070d20:	ncalli	ButtonWidget.Show(true)
001230:0x00070d28:	movefm	[0x11d09c98], m_ItemMoveDownButton
001230:0x00070d38:	ncalli	ButtonWidget.Show(true)
001232:0x00070d40:	movefm	[0x11d09418], m_ItemDamageLabel
001232:0x00070d50:	ncalli	TextWidget.Show(true)
001233:0x00070d58:	movefm	[0x11d09418], m_ItemQuantityLabel
001233:0x00070d68:	ncalli	TextWidget.Show(true)
001235:0x00070d70:	cmps	preset_name, _s''
001235:0x00070d80:	beq	0x070e98
001235:0x00070d88:	cmpi	item_index, _i-1
001235:0x00070d98:	ble	0x070e98
001237:0x00070da0:	movefm	[0x11d09a20], m_DamageEditBox
001237:0x00070db0:	ncalli	EditBoxWidget.Show(true)
001238:0x00070db8:	movefm	[0x11d09a20], m_QuantityEditBox
001238:0x00070dc8:	ncalli	EditBoxWidget.Show(true)
001239:0x00070dd0:	call	ScriptConsole.GetCurrentPresetName()
001239:0x00070dd8:	call	ScriptConsole.GetCurrentItemIndex()
001239:0x00070de0:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001239:0x00070df0:	call	PluginConfigDebugProfile.GetItemDamage(ret, ret)
001239:0x00070e00:	move	item_damage, ret
001240:0x00070e10:	call	ScriptConsole.GetCurrentPresetName()
001240:0x00070e18:	call	ScriptConsole.GetCurrentItemIndex()
001240:0x00070e20:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001240:0x00070e30:	call	PluginConfigDebugProfile.GetItemQuantity(ret, ret)
001240:0x00070e40:	move	item_quantity, ret
001243:0x00070e50:	icall	ToString(item_damage)
001243:0x00070e58:	movefm	[0x11d09a20], m_DamageEditBox
001243:0x00070e68:	ncalli	EditBoxWidget.SetText(ret)
001246:0x00070e70:	icall	ToString(item_quantity)
001246:0x00070e78:	movefm	[0x11d09a20], m_QuantityEditBox
001246:0x00070e88:	ncalli	EditBoxWidget.SetText(ret)
001246:0x00070e90:	jump	0x070ec8
001252:0x00070e98:	movefm	[0x11d09a20], m_DamageEditBox
001252:0x00070ea8:	ncalli	EditBoxWidget.Show(false)
001253:0x00070eb0:	movefm	[0x11d09a20], m_QuantityEditBox
001253:0x00070ec0:	ncalli	EditBoxWidget.Show(false)
001253:0x00070ec8:	rts
ScriptConsole::HideItemButtons()
001260:0x00070ed0:	movefm	[0x11d09c98], m_ItemMoveUpButton
001260:0x00070ee0:	ncalli	ButtonWidget.Show(false)
001261:0x00070ee8:	movefm	[0x11d09c98], m_ItemMoveDownButton
001261:0x00070ef8:	ncalli	ButtonWidget.Show(false)
001263:0x00070f00:	movefm	[0x11d09a20], m_DamageEditBox
001263:0x00070f10:	ncalli	EditBoxWidget.Show(false)
001264:0x00070f18:	movefm	[0x11d09a20], m_QuantityEditBox
001264:0x00070f28:	ncalli	EditBoxWidget.Show(false)
001265:0x00070f30:	movefm	[0x11d09418], m_ItemDamageLabel
001265:0x00070f40:	ncalli	TextWidget.Show(false)
001266:0x00070f48:	movefm	[0x11d09418], m_ItemQuantityLabel
001266:0x00070f58:	ncalli	TextWidget.Show(false)
001266:0x00070f60:	rts
ScriptConsole::ShowItemTransferButtons()
001271:0x00070fb8:	movefm	[0x11d0a1c0], m_ObjectsTextListbox
001271:0x00070fc8:	ncalli	TextListboxWidget.GetSelectedRow()
001271:0x00070fd0:	move	object_row, ret
001272:0x00070fe0:	cmpi	object_row, _i-1
001272:0x00070ff0:	ble	0x071058
001272:0x00070ff8:	call	ScriptConsole.GetCurrentPresetIndex()
001272:0x00071000:	cmpi	ret, _i-1
001272:0x00071010:	ble	0x071058
001272:0x00071018:	call	ScriptConsole.IsCurrentPresetFixed()
001272:0x00071020:	cmpi	ret, _i0
001272:0x00071030:	bne	0x071058
001274:0x00071038:	movefm	[0x11d09c98], m_PresetAddItemtButton
001274:0x00071048:	ncalli	ButtonWidget.Show(true)
001274:0x00071050:	jump	0x071070
001278:0x00071058:	movefm	[0x11d09c98], m_PresetAddItemtButton
001278:0x00071068:	ncalli	ButtonWidget.Show(false)
001281:0x00071070:	call	ScriptConsole.GetCurrentItemIndex()
001281:0x00071078:	cmpi	ret, _i-1
001281:0x00071088:	ble	0x0710f0
001281:0x00071090:	call	ScriptConsole.GetCurrentPresetIndex()
001281:0x00071098:	cmpi	ret, _i-1
001281:0x000710a8:	ble	0x0710f0
001281:0x000710b0:	call	ScriptConsole.IsCurrentPresetFixed()
001281:0x000710b8:	cmpi	ret, _i0
001281:0x000710c8:	bne	0x0710f0
001283:0x000710d0:	movefm	[0x11d09c98], m_PresetRemoveItemButton
001283:0x000710e0:	ncalli	ButtonWidget.Show(true)
001283:0x000710e8:	jump	0x071108
001287:0x000710f0:	movefm	[0x11d09c98], m_PresetRemoveItemButton
001287:0x00071100:	ncalli	ButtonWidget.Show(false)
001290:0x00071108:	cmpi	object_row, _i-1
001290:0x00071118:	ble	0x071140
001292:0x00071120:	movefm	[0x11d09c98], m_ItemNameCopy
001292:0x00071130:	ncalli	ButtonWidget.Show(true)
001292:0x00071138:	jump	0x071158
001296:0x00071140:	movefm	[0x11d09c98], m_ItemNameCopy
001296:0x00071150:	ncalli	ButtonWidget.Show(false)
001296:0x00071158:	rts
ScriptConsole::ItemMoveUp()
001303:0x00071180:	call	ScriptConsole.GetCurrentItemIndex()
001303:0x00071188:	subi	new_index, ret, _i1
001304:0x00071198:	call	ScriptConsole.GetCurrentItemIndex()
001304:0x000711a0:	cmpi	ret, _i-1
001304:0x000711b0:	beq	0x071240
001304:0x000711b8:	call	ScriptConsole.GetCurrentPresetIndex()
001304:0x000711c0:	cmpi	ret, _i-1
001304:0x000711d0:	beq	0x071240
001304:0x000711d8:	cmpi	new_index, _i-1
001304:0x000711e8:	ble	0x071240
001306:0x000711f0:	call	ScriptConsole.GetCurrentPresetName()
001306:0x000711f8:	call	ScriptConsole.GetCurrentItemIndex()
001306:0x00071200:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001306:0x00071210:	call	PluginConfigDebugProfile.SwapItem(ret, ret, new_index)
001307:0x00071220:	call	ScriptConsole.RenderPresetItems()
001308:0x00071228:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
001308:0x00071238:	ncalli	TextListboxWidget.SelectRow(new_index)
001308:0x00071240:	rts
ScriptConsole::ItemMoveDown()
001314:0x00071268:	call	ScriptConsole.GetCurrentItemIndex()
001314:0x00071270:	addi	new_index, ret, _i1
001315:0x00071280:	call	ScriptConsole.GetCurrentItemIndex()
001315:0x00071288:	cmpi	ret, _i-1
001315:0x00071298:	beq	0x071340
001315:0x000712a0:	call	ScriptConsole.GetCurrentPresetIndex()
001315:0x000712a8:	cmpi	ret, _i-1
001315:0x000712b8:	beq	0x071340
001315:0x000712c0:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
001315:0x000712d0:	ncalli	TextListboxWidget.GetNumItems()
001315:0x000712d8:	cmpi	new_index, ret
001315:0x000712e8:	bge	0x071340
001317:0x000712f0:	call	ScriptConsole.GetCurrentPresetName()
001317:0x000712f8:	call	ScriptConsole.GetCurrentItemIndex()
001317:0x00071300:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001317:0x00071310:	call	PluginConfigDebugProfile.SwapItem(ret, ret, new_index)
001318:0x00071320:	call	ScriptConsole.RenderPresetItems()
001319:0x00071328:	movefm	[0x11d0a1c0], m_PresetItemsTextListbox
001319:0x00071338:	ncalli	TextListboxWidget.SelectRow(new_index)
001319:0x00071340:	rts
ScriptConsole::ClearHierarchy()
001329:0x00071428:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001329:0x00071438:	ncalli	TextListboxWidget.ClearItems()
001330:0x00071440:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
001330:0x00071450:	ncalli	TextListboxWidget.ClearItems()
001332:0x00071458:	new	@c00, array<string>
001332:0x00071478:	movetm	base_classes, @c00
001333:0x00071488:	call	GetBaseConfigClasses(base_classes)
001335:0x00071498:	moves	config_path, _s'configfile'
001336:0x000714a8:	movec	[0x45f54110], m_ModuleConfigViewer
001336:0x000714b8:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
001336:0x000714c8:	movem	variables, ret
001337:0x000714d8:	imove	i, 0x000000
001337:0x000714e8:	jump	0x0714f8
001337:0x000714f0:	inc	i
001337:0x000714f8:	ncalli	array<string>.Count()
001337:0x00071500:	cmpi	i, ret
001337:0x00071510:	bge	0x071678
001339:0x00071518:	icall	array<string>.Get(i)
001339:0x00071520:	moves	variable, ret
001341:0x00071530:	imove	j, 0x000000
001341:0x00071540:	jump	0x071550
001341:0x00071548:	inc	j
001341:0x00071550:	ncalli	array<string>.Count()
001341:0x00071558:	cmpi	j, ret
001341:0x00071568:	bge	0x071670
001343:0x00071570:	icall	array<string>.Get(j)
001343:0x00071578:	cmps	variable, ret
001343:0x00071588:	bne	0x071668
001345:0x00071590:	adds	@s02, config_path, _s' '
001345:0x000715a0:	moves	@s01, @s02
001345:0x000715b0:	adds	@s01, @s01, variable
001345:0x000715c0:	moves	@s02, @s01
001345:0x000715d0:	icall	Trim(@s02)
001345:0x000715d8:	moves	new_config_path, ret
001346:0x000715e8:	adds	@s01, _s'+ ', variable
001346:0x000715f8:	moves	@s00, @s01
001346:0x00071608:	new	@c00, Param5<bool,string,int,string,int>
001346:0x00071638:	movec	[0x11d1a368], @c00
001346:0x00071648:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001346:0x00071658:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
001346:0x00071668:	jump	0x071548
001346:0x00071670:	jump	0x0714f0
001346:0x00071678:	delete	base_classes
001346:0x00071680:	delete	variables
001346:0x00071688:	rts
ScriptConsole::FindInHierarchy()
001354:0x00071810:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001354:0x00071820:	ncalli	TextListboxWidget.ClearItems()
001355:0x00071828:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
001355:0x00071838:	ncalli	TextListboxWidget.ClearItems()
001357:0x00071840:	icall	ToLower(class_name)
001358:0x00071848:	moves	config_base_path, _s'configfile'
001360:0x00071858:	new	@c00, array<string>
001360:0x00071878:	movetm	base_classes, @c00
001361:0x00071888:	call	GetBaseConfigClasses(base_classes)
001363:0x00071898:	moves	filter_lower, class_name
001364:0x000718a8:	icall	ToLower(filter_lower)
001366:0x000718b0:	new	@c00, array<string>
001366:0x000718d0:	movetm	filters, @c00
001367:0x000718e0:	moves	value, filter_lower
001367:0x000718f0:	call	Split(value, _s' ', filters)
001367:0x00071900:	moves	filter_lower, value
001369:0x00071910:	imove	i, 0x000000
001369:0x00071920:	jump	0x071930
001369:0x00071928:	inc	i
001369:0x00071930:	ncalli	array<string>.Count()
001369:0x00071938:	cmpi	i, ret
001369:0x00071948:	bge	0x071bb8
001371:0x00071950:	adds	@s01, config_base_path, _s' '
001371:0x00071960:	moves	@s00, @s01
001371:0x00071970:	icall	array<string>.Get(i)
001371:0x00071978:	adds	config_path, @s00, ret
001372:0x00071988:	movec	[0x45f54110], m_ModuleConfigViewer
001372:0x00071998:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
001372:0x000719a8:	movem	variables, ret
001374:0x000719b8:	imove	j, 0x000000
001374:0x000719c8:	jump	0x0719d8
001374:0x000719d0:	inc	j
001374:0x000719d8:	ncalli	array<string>.Count()
001374:0x000719e0:	cmpi	j, ret
001374:0x000719f0:	bge	0x071ba8
001376:0x000719f8:	icall	array<string>.Get(j)
001376:0x00071a00:	moves	variable, ret
001377:0x00071a10:	moves	variable_lower, variable
001378:0x00071a20:	icall	ToLower(variable_lower)
001380:0x00071a28:	imove	k, 0x000000
001380:0x00071a38:	jump	0x071a48
001380:0x00071a40:	inc	k
001380:0x00071a48:	ncalli	array<string>.Count()
001380:0x00071a50:	cmpi	k, ret
001380:0x00071a60:	bge	0x071ba0
001382:0x00071a68:	moves	value, variable_lower
001382:0x00071a78:	icall	array<string>.Get(k)
001382:0x00071a80:	call	Contains(value, ret)
001382:0x00071a90:	moves	variable_lower, value
001382:0x00071aa0:	cmpi	ret, _i0
001382:0x00071ab0:	beq	0x071b98
001384:0x00071ab8:	adds	@s02, config_path, _s' '
001384:0x00071ac8:	moves	@s01, @s02
001384:0x00071ad8:	adds	@s01, @s01, variable
001384:0x00071ae8:	moves	@s02, @s01
001384:0x00071af8:	icall	Trim(@s02)
001384:0x00071b00:	moves	new_config_path, ret
001385:0x00071b10:	adds	@s01, _s'+ ', variable
001385:0x00071b20:	moves	@s00, @s01
001385:0x00071b30:	new	@c00, Param5<bool,string,int,string,int>
001385:0x00071b60:	movec	[0x11d1a368], @c00
001385:0x00071b70:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001385:0x00071b80:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, _i-1)
001386:0x00071b90:	jump	0x071ba0
001386:0x00071b98:	jump	0x071a40
001386:0x00071ba0:	jump	0x0719d0
001386:0x00071ba8:	delete	variables
001386:0x00071bb0:	jump	0x071928
001386:0x00071bb8:	delete	base_classes
001386:0x00071bc0:	delete	filters
001386:0x00071bc8:	rts
ScriptConsole::ExpandHierarchy()
001395:0x00071cd0:	cmpi	row, _i-1
001395:0x00071ce0:	bgt	0x071d20
001395:0x00071ce8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001395:0x00071cf8:	ncalli	TextListboxWidget.GetNumItems()
001395:0x00071d00:	cmpi	row, ret
001395:0x00071d10:	blt	0x071d20
001397:0x00071d18:	rts
001404:0x00071d20:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001404:0x00071d30:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
001406:0x00071d40:	moves	config_path, param4
001407:0x00071d50:	move	deep, param5
001409:0x00071d60:	moves	offset, _s''
001410:0x00071d70:	imove	i, 0x000000
001410:0x00071d80:	jump	0x071d90
001410:0x00071d88:	inc	i
001410:0x00071d90:	cmpi	i, deep
001410:0x00071da0:	bge	0x071dd0
001412:0x00071da8:	adds	@s00, offset, _s'  '
001412:0x00071db8:	moves	offset, @s00
001412:0x00071dc8:	jump	0x071d88
001416:0x00071dd0:	movec	[0x45f54110], m_ModuleConfigViewer
001416:0x00071de0:	call	PluginConfigViewer.GetConfigHierarchy(config_path)
001416:0x00071df0:	movem	variables, ret
001417:0x00071e00:	ncalli	array<string>.Count()
001417:0x00071e08:	move	childrens_count, ret
001418:0x00071e18:	adds	@s02, offset, _s'- '
001418:0x00071e28:	moves	@s01, @s02
001418:0x00071e38:	adds	@s01, @s01, param2
001418:0x00071e48:	moves	@s00, @s01
001418:0x00071e58:	moves	p2, param2
001418:0x00071e68:	new	@c00, Param5<bool,string,int,string,int>
001418:0x00071e98:	movec	[0x11d1a428], @c00
001418:0x00071ea8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001418:0x00071eb8:	ncalli	TextListboxWidget.SetItem(row, @s00, [0x11d1a428], _i0)
001420:0x00071ec8:	adds	@s00, offset, _s'  '
001420:0x00071ed8:	moves	offset, @s00
001423:0x00071ee8:	inc	deep
001424:0x00071ef0:	imove	childrens_count, 0x000000
001425:0x00071f00:	ncalli	array<string>.Count()
001425:0x00071f08:	subi	@m00, ret, _i1
001425:0x00071f18:	move	i, @m00
001425:0x00071f28:	jump	0x071f38
001425:0x00071f30:	dec	i
001425:0x00071f38:	cmpi	i, _i0
001425:0x00071f48:	blt	0x072088
001427:0x00071f50:	adds	@s02, config_path, _s' '
001427:0x00071f60:	moves	@s01, @s02
001427:0x00071f70:	icall	array<string>.Get(i)
001427:0x00071f78:	adds	@s01, @s01, ret
001427:0x00071f88:	moves	@s02, @s01
001427:0x00071f98:	icall	Trim(@s02)
001427:0x00071fa0:	moves	new_config_path, ret
001428:0x00071fb0:	adds	@s02, offset, _s'+ '
001428:0x00071fc0:	moves	@s01, @s02
001428:0x00071fd0:	icall	array<string>.Get(i)
001428:0x00071fd8:	adds	@s01, @s01, ret
001428:0x00071fe8:	moves	@s00, @s01
001428:0x00071ff8:	icall	array<string>.Get(i)
001428:0x00072000:	new	@c00, Param5<bool,string,int,string,int>
001428:0x00072030:	movec	[0x11d1a368], @c00
001428:0x00072040:	addi	@m01, row, _i1
001428:0x00072050:	move	@m00, @m01
001428:0x00072060:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001428:0x00072070:	ncalli	TextListboxWidget.AddItem(@s00, [0x11d1a368], _i0, @m00)
001428:0x00072080:	jump	0x071f30
001428:0x00072088:	delete	variables
001428:0x00072090:	rts
ScriptConsole::CollapseHierarchy()
001435:0x000721b8:	cmpi	row, _i-1
001435:0x000721c8:	bgt	0x072208
001435:0x000721d0:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001435:0x000721e0:	ncalli	TextListboxWidget.GetNumItems()
001435:0x000721e8:	cmpi	row, ret
001435:0x000721f8:	blt	0x072208
001437:0x00072200:	rts
001442:0x00072208:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001442:0x00072218:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
001443:0x00072228:	addi	@m01, row, _i1
001443:0x00072238:	move	@m00, @m01
001443:0x00072248:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001443:0x00072258:	icall	TextListboxWidget.GetItemData(@m00, _i0, config_params_next)
001445:0x00072268:	move	deep, param5
001446:0x00072278:	move	deep_next, param5
001447:0x00072288:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001447:0x00072298:	ncalli	TextListboxWidget.GetNumItems()
001447:0x000722a0:	move	max_count, ret
001448:0x000722b0:	imove	remove_lines_count, 0x000000
001450:0x000722c0:	addi	i, row, _i1
001450:0x000722d0:	jump	0x0722e0
001450:0x000722d8:	inc	i
001450:0x000722e0:	cmpi	i, max_count
001450:0x000722f0:	bge	0x072368
001452:0x000722f8:	cmpi	deep, deep_next
001452:0x00072308:	bge	0x072360
001452:0x00072310:	cmpi	i, max_count
001452:0x00072320:	bgt	0x072360
001454:0x00072328:	inc	remove_lines_count
001455:0x00072330:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001455:0x00072340:	icall	TextListboxWidget.GetItemData(i, _i0, config_params_next)
001456:0x00072350:	move	deep_next, param5
001456:0x00072360:	jump	0x0722d8
001462:0x00072368:	imove	i, 0x000001
001462:0x00072378:	jump	0x072388
001462:0x00072380:	inc	i
001462:0x00072388:	cmpi	i, remove_lines_count
001462:0x00072398:	bge	0x0723e8
001464:0x000723a0:	addi	x, row, _i1
001465:0x000723b0:	cmpi	x, max_count
001465:0x000723c0:	bge	0x0723e0
001467:0x000723c8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001467:0x000723d8:	ncalli	TextListboxWidget.RemoveRow(x)
001467:0x000723e0:	jump	0x072380
001471:0x000723e8:	moves	offset, _s''
001472:0x000723f8:	imove	i, 0x000000
001472:0x00072408:	jump	0x072418
001472:0x00072410:	inc	i
001472:0x00072418:	cmpi	i, deep
001472:0x00072428:	bge	0x072458
001474:0x00072430:	adds	@s00, offset, _s'  '
001474:0x00072440:	moves	offset, @s00
001474:0x00072450:	jump	0x072410
001476:0x00072458:	adds	@s02, offset, _s'+ '
001476:0x00072468:	moves	@s01, @s02
001476:0x00072478:	adds	@s01, @s01, param2
001476:0x00072488:	moves	@s00, @s01
001476:0x00072498:	moves	p2, param2
001476:0x000724a8:	moves	p4, param4
001476:0x000724b8:	new	@c00, Param5<bool,string,int,string,int>
001476:0x000724e8:	movec	[0x11d1a428], @c00
001476:0x000724f8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001476:0x00072508:	ncalli	TextListboxWidget.SetItem(row, @s00, [0x11d1a428], _i0)
001478:0x00072518:	cmpi	deep, _i0
001478:0x00072528:	bne	0x072538
001480:0x00072530:	call	ScriptConsole.ClearHierarchy()
001480:0x00072538:	rts
ScriptConsole::RenderVariables()
001487:0x000725c0:	cmpi	row, _i-1
001487:0x000725d0:	ble	0x0726f8
001487:0x000725d8:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001487:0x000725e8:	ncalli	TextListboxWidget.GetNumItems()
001487:0x000725f0:	cmpi	row, ret
001487:0x00072600:	bge	0x0726f8
001489:0x00072608:	movefm	[0x11d0a1c0], m_ConfigHierarchyTextListbox
001489:0x00072618:	icall	TextListboxWidget.GetItemData(row, _i0, config_params)
001490:0x00072628:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
001490:0x00072638:	ncalli	TextListboxWidget.ClearItems()
001492:0x00072640:	moves	path, param4
001493:0x00072650:	movec	[0x45f54110], m_ModuleConfigViewer
001493:0x00072660:	call	PluginConfigViewer.GetConfigVariables(path)
001493:0x00072670:	movem	variables, ret
001494:0x00072680:	imove	i, 0x000000
001494:0x00072690:	jump	0x0726a0
001494:0x00072698:	inc	i
001494:0x000726a0:	ncalli	array<string>.Count()
001494:0x000726a8:	cmpi	i, ret
001494:0x000726b8:	bge	0x0726f0
001496:0x000726c0:	icall	array<string>.Get(i)
001496:0x000726c8:	movefm	[0x11d0a1c0], m_ConfigVariablesTextListbox
001496:0x000726d8:	ncalli	TextListboxWidget.AddItem(ret, NULL, _i0, _i-1)
001496:0x000726e8:	jump	0x072698
001496:0x000726f0:	delete	variables
001496:0x000726f8:	rts
ScriptConsole::AddSqfDebugWatcher()
001505:0x00072840:	call	GetPlugin(_T(PluginDeveloper))
001505:0x00072850:	movec	module_dev, ret
001507:0x00072860:	movefm	[0x703ad18], m_SqfDebugWatchers
001507:0x00072870:	ncalli	map<int,EditBoxWidget>.Count()
001507:0x00072878:	addi	next_id, ret, _i1
001508:0x00072888:	cmpi	next_id, MAX_SQF_DEBUG_WATCHERS_COUNT
001508:0x00072898:	bgt	0x072c38
001510:0x000728a0:	ncall	GetGame()
001510:0x000728a8:	ncalli	CGame.GetWorkspace()
001510:0x000728b0:	movefm	[0x11d18388], m_SqfDebugWatchersPanel
001510:0x000728c0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/sqf_debug_watcher_row.layout', [0x11d18388])
001510:0x000728c8:	movetm	root, ret
001511:0x000728d8:	movefm	[0x703ad18], m_SqfDebugWatchers
001511:0x000728e8:	ncalli	map<int,EditBoxWidget>.Count()
001511:0x000728f0:	citf	@f02, ret
001511:0x00072900:	mulf	@f02, @f02, _f42.000000
001511:0x00072910:	move	@f00, @f02
001511:0x00072920:	ncalli	Widget.SetPos(_f0.000000, @f00, _i1)
001513:0x00072930:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcher')
001513:0x00072938:	movetm	new_sqf_debug_watcher_input, ret
001514:0x00072948:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherResult')
001514:0x00072950:	movetm	new_sqf_debug_watcher_result, ret
001515:0x00072960:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherButton')
001515:0x00072968:	movetm	new_sqf_debug_watcher_button, ret
001516:0x00072978:	ncalli	Widget.FindAnyWidget(_s'SqfDebugWatcherClearButton')
001516:0x00072980:	movetm	new_sqf_debug_watcher_clear_buggon, ret
001518:0x00072990:	icall	ToString(next_id)
001518:0x00072998:	adds	@s01, _s'SqfDebugWatcher', ret
001518:0x000729a8:	moves	@s00, @s01
001518:0x000729b8:	ncalli	EditBoxWidget.SetName(@s00)
001519:0x000729c0:	icall	ToString(next_id)
001519:0x000729c8:	adds	@s02, _s'SqfDebugWatcher', ret
001519:0x000729d8:	moves	@s01, @s02
001519:0x000729e8:	adds	@s01, @s01, _s'Result'
001519:0x000729f8:	moves	@s00, @s01
001519:0x00072a08:	ncalli	EditBoxWidget.SetName(@s00)
001520:0x00072a10:	icall	ToString(next_id)
001520:0x00072a18:	adds	@s02, _s'SqfDebugWatcher', ret
001520:0x00072a28:	moves	@s01, @s02
001520:0x00072a38:	adds	@s01, @s01, _s'Button'
001520:0x00072a48:	moves	@s00, @s01
001520:0x00072a58:	ncalli	ButtonWidget.SetName(@s00)
001521:0x00072a60:	icall	ToString(next_id)
001521:0x00072a68:	adds	@s02, _s'SqfDebugWatcher', ret
001521:0x00072a78:	moves	@s01, @s02
001521:0x00072a88:	adds	@s01, @s01, _s'ClearButton'
001521:0x00072a98:	moves	@s00, @s01
001521:0x00072aa8:	ncalli	ButtonWidget.SetName(@s00)
001523:0x00072ab0:	movefm	@c00, root
001523:0x00072ac0:	movefm	[0x703ac40], m_SqfDebugWatchersRows
001523:0x00072ad0:	icall	map<int,Widget>.Set(next_id, @c00)
001524:0x00072ad8:	movefm	@c00, new_sqf_debug_watcher_input
001524:0x00072ae8:	movefm	[0x703ad18], m_SqfDebugWatchers
001524:0x00072af8:	icall	map<int,EditBoxWidget>.Set(next_id, @c00)
001525:0x00072b00:	movefm	@c00, new_sqf_debug_watcher_result
001525:0x00072b10:	movefm	[0x703ad18], m_SqfDebugWatchersResults
001525:0x00072b20:	icall	map<int,EditBoxWidget>.Set(next_id, @c00)
001526:0x00072b28:	movefm	@c00, new_sqf_debug_watcher_button
001526:0x00072b38:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
001526:0x00072b48:	icall	map<int,ButtonWidget>.Set(next_id, @c00)
001527:0x00072b50:	movefm	@c00, new_sqf_debug_watcher_clear_buggon
001527:0x00072b60:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
001527:0x00072b70:	icall	map<int,ButtonWidget>.Set(next_id, @c00)
001529:0x00072b78:	call	PluginDeveloper.GetSqfDebugWatcherById(next_id)
001529:0x00072b88:	movec	sqf_debug_watcher, ret
001531:0x00072b98:	cmpc	sqf_debug_watcher, NULL
001531:0x00072ba8:	beq	0x072c00
001533:0x00072bb0:	call	SqfDebugWatcher.GetSqfCommand()
001533:0x00072bb8:	ncalli	EditBoxWidget.SetText(ret)
001535:0x00072bc0:	call	SqfDebugWatcher.IsRunning()
001535:0x00072bc8:	cmpi	ret, _i0
001535:0x00072bd8:	beq	0x072bf0
001537:0x00072be0:	ncalli	ButtonWidget.SetText(_s'STOP')
001537:0x00072be8:	jump	0x072bf8
001541:0x00072bf0:	ncalli	ButtonWidget.SetText(_s'RUN')
001541:0x00072bf8:	jump	0x072c10
001546:0x00072c00:	call	PluginDeveloper.AddSqfDebugWatcher(next_id)
001546:0x00072c10:	release	root
001546:0x00072c18:	release	new_sqf_debug_watcher_input
001546:0x00072c20:	release	new_sqf_debug_watcher_result
001546:0x00072c28:	release	new_sqf_debug_watcher_button
001546:0x00072c30:	release	new_sqf_debug_watcher_clear_buggon
001546:0x00072c38:	rts
ScriptConsole::RemoveLastSqfDebugWatcher()
001553:0x00072ca0:	call	GetPlugin(_T(PluginDeveloper))
001553:0x00072cb0:	movec	module_dev, ret
001554:0x00072cc0:	call	PluginDeveloper.GetSqfDebugWatchersCount()
001554:0x00072cc8:	move	last_id, ret
001556:0x00072cd8:	call	PluginDeveloper.RemoveLastSqfDebugWatcher()
001556:0x00072ce0:	cmpi	ret, _i0
001556:0x00072cf0:	beq	0x072da8
001558:0x00072cf8:	movefm	[0x703ac40], m_SqfDebugWatchersRows
001558:0x00072d08:	icall	map<int,Widget>.Get(last_id)
001558:0x00072d10:	movetm	w, ret
001559:0x00072d20:	ncalli	Widget.Destroy()
001561:0x00072d28:	movefm	[0x703ac40], m_SqfDebugWatchersRows
001561:0x00072d38:	icall	map<int,Widget>.Remove(last_id)
001562:0x00072d40:	movefm	[0x703ad18], m_SqfDebugWatchers
001562:0x00072d50:	icall	map<int,EditBoxWidget>.Remove(last_id)
001563:0x00072d58:	movefm	[0x703ad18], m_SqfDebugWatchersResults
001563:0x00072d68:	icall	map<int,EditBoxWidget>.Remove(last_id)
001564:0x00072d70:	movefm	[0x703ae40], m_SqfDebugWatchersButtons
001564:0x00072d80:	icall	map<int,ButtonWidget>.Remove(last_id)
001565:0x00072d88:	movefm	[0x703ae40], m_SqfDebugWatchersClearButtons
001565:0x00072d98:	icall	map<int,ButtonWidget>.Remove(last_id)
001565:0x00072da0:	release	w
001565:0x00072da8:	rts
ScriptConsole::GetSqfCommandForSqfDebugWatcher()
001571:0x00072dd0:	movefm	[0x703ad18], m_SqfDebugWatchers
001571:0x00072de0:	icall	map<int,EditBoxWidget>.Get(id)
001571:0x00072de8:	movetm	sqf_debug_watcher, ret
001573:0x00072df8:	cmpcm	sqf_debug_watcher, NULL
001573:0x00072e08:	beq	0x072e40
001575:0x00072e10:	icall	EditBoxWidget.GetText()
001575:0x00072e18:	moves	ret, ret
001575:0x00072e28:	release	sqf_debug_watcher
001575:0x00072e30:	rts
001575:0x00072e38:	jump	0x072e60
001579:0x00072e40:	moves	ret, _s''
001579:0x00072e50:	release	sqf_debug_watcher
001579:0x00072e58:	rts
001579:0x00072e60:	release	sqf_debug_watcher
001579:0x00072e68:	rts
ScriptConsole::OnSqfDebugWatcherResult()
001585:0x00072e90:	movefm	[0x703ad18], m_SqfDebugWatchersResults
001585:0x00072ea0:	icall	map<int,EditBoxWidget>.Get(id)
001585:0x00072ea8:	movetm	sqf_debug_watcher_result, ret
001587:0x00072eb8:	cmpcm	sqf_debug_watcher_result, NULL
001587:0x00072ec8:	beq	0x072ed8
001589:0x00072ed0:	ncalli	EditBoxWidget.SetText(result)
001589:0x00072ed8:	release	sqf_debug_watcher_result
001589:0x00072ee0:	rts
ScriptConsole::RefreshPlayerPosEditBoxes()
001597:0x00072f18:	ncall	GetGame()
001597:0x00072f20:	ncalli	CGame.GetPlayer()
001597:0x00072f28:	ncalli	Man.GetPosition()
001597:0x00072f30:	movev	player_pos, ret
001598:0x00072f40:	ifv	@f00, player_pos[0x000000]
001598:0x00072f50:	icall	ToString(@f00)
001598:0x00072f58:	movefm	[0x11d09a20], m_PlayerPosX
001598:0x00072f68:	ncalli	EditBoxWidget.SetText(ret)
001599:0x00072f70:	ifv	@f00, player_pos[0x000002]
001599:0x00072f80:	icall	ToString(@f00)
001599:0x00072f88:	movefm	[0x11d09a20], m_PlayerPosY
001599:0x00072f98:	ncalli	EditBoxWidget.SetText(ret)
001599:0x00072fa0:	rts
ScriptConsole::SelectPreviousTab()
001713:0x00072fc8:	move	currTab, m_selected_tab
001714:0x00072fd8:	subi	@m01, currTab, _i1
001714:0x00072fe8:	move	@m00, @m01
001714:0x00072ff8:	modi	@m00, @m00, TABS_COUNT
001714:0x00073008:	move	currTab, @m00
001715:0x00073018:	cmpi	currTab, _i0
001715:0x00073028:	bge	0x073050
001717:0x00073030:	imove	@m00, 0x000005
001717:0x00073040:	move	currTab, @m00
001720:0x00073050:	cmpi	currTab, m_selected_tab
001720:0x00073060:	beq	0x073128
001722:0x00073068:	cfv	@c00, m_Tab_buttons[currTab]
001722:0x00073078:	cmpm	@c00, NULL
001722:0x00073088:	beq	0x0730a8
001724:0x00073090:	call	ScriptConsole.SelectTab(currTab)
001725:0x000730a0:	rts
001728:0x000730a8:	subi	@m01, currTab, _i1
001728:0x000730b8:	move	@m00, @m01
001728:0x000730c8:	modi	@m00, @m00, TABS_COUNT
001728:0x000730d8:	move	currTab, @m00
001729:0x000730e8:	cmpi	currTab, _i0
001729:0x000730f8:	bge	0x073120
001731:0x00073100:	imove	@m00, 0x000005
001731:0x00073110:	move	currTab, @m00
001731:0x00073120:	jump	0x073050
001731:0x00073128:	rts
ScriptConsole::SelectNextTab()
001738:0x00073150:	move	currTab, m_selected_tab
001739:0x00073160:	addi	@m01, currTab, _i1
001739:0x00073170:	move	@m00, @m01
001739:0x00073180:	modi	@m00, @m00, TABS_COUNT
001739:0x00073190:	move	currTab, @m00
001741:0x000731a0:	cmpi	currTab, m_selected_tab
001741:0x000731b0:	beq	0x073240
001743:0x000731b8:	cfv	@c00, m_Tab_buttons[currTab]
001743:0x000731c8:	cmpm	@c00, NULL
001743:0x000731d8:	beq	0x0731f8
001745:0x000731e0:	call	ScriptConsole.SelectTab(currTab)
001746:0x000731f0:	rts
001749:0x000731f8:	addi	@m01, currTab, _i1
001749:0x00073208:	move	@m00, @m01
001749:0x00073218:	modi	@m00, @m00, TABS_COUNT
001749:0x00073228:	move	currTab, @m00
001749:0x00073238:	jump	0x0731a0
001749:0x00073240:	rts
ScriptConsole::SelectTab()
001755:0x000732a8:	imove	i, 0x000000
001756:0x000732b8:	imove	i, 0x000000
001756:0x000732c8:	jump	0x0732d8
001756:0x000732d0:	inc	i
001756:0x000732d8:	cmpi	i, TABS_COUNT
001756:0x000732e8:	bge	0x073368
001758:0x000732f0:	cfv	@c01, m_Tabs[i]
001758:0x00073300:	movetm	tab, @c01
001759:0x00073310:	cmpi	i, tab_id
001759:0x00073320:	bne	0x073340
001759:0x00073328:	imove	@m00, 0x000001
001759:0x00073338:	jump	0x073350
001759:0x00073340:	imove	@m00, 0x000000
001759:0x00073350:	ncalli	Widget.Show(@m00)
001759:0x00073358:	release	tab
001759:0x00073360:	jump	0x0732d0
001762:0x00073368:	imove	i, 0x000000
001762:0x00073378:	jump	0x073388
001762:0x00073380:	inc	i
001762:0x00073388:	cmpi	i, TABS_COUNT
001762:0x00073398:	bge	0x073418
001764:0x000733a0:	cfv	@c01, m_Tab_buttons[i]
001764:0x000733b0:	movetm	button, @c01
001765:0x000733c0:	cmpi	i, tab_id
001765:0x000733d0:	bne	0x0733f0
001765:0x000733d8:	imove	@m00, 0x000001
001765:0x000733e8:	jump	0x073400
001765:0x000733f0:	imove	@m00, 0x000000
001765:0x00073400:	ncalli	ButtonWidget.SetState(@m00)
001765:0x00073408:	release	button
001765:0x00073410:	jump	0x073380
001768:0x00073418:	move	m_selected_tab, tab_id
001769:0x00073428:	move	value, m_selected_tab
001769:0x00073438:	movec	[0x45f4e8c0], m_ConfigDebugProfile
001769:0x00073448:	call	PluginConfigDebugProfile.SetTabSelected(value)
001769:0x00073458:	rts
MissionLoader::MissionLoader()
//scripts/5_Mission/GUI/ScriptedWindows/MissionLoader.c
000012:0x00073460:	move	m_Id, id
000012:0x00073470:	rts
MissionLoader::~MissionLoader()
000017:0x00073478:	delete	m_ListMissionsNames
000017:0x00073480:	rts
MissionLoader::Init()
000022:0x00073578:	call	MissionLoader.GetMissionList()
000022:0x00073580:	movem	m_ListMissionsNames, ret
000024:0x00073590:	ncall	GetGame()
000024:0x00073598:	ncalli	CGame.GetWorkspace()
000024:0x000735a0:	pushc	ret
000024:0x000735a8:	ncall	GetGame()
000024:0x000735b0:	movec	@c02, ret
000024:0x000735c0:	popc	ret
000024:0x000735c8:	ncalli	CGame.GetUIManager()
000024:0x000735d0:	ncalli	UIManager.GetMenu()
000024:0x000735d8:	call	UIScriptedMenu.GetLayoutRoot()
000024:0x000735e0:	movefm	[0x11d18388], ret
000024:0x000735f0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_mission_loader.layout', [0x11d18388])
000024:0x000735f8:	movetm	m_WgtRoot, ret
000025:0x00073608:	movefm	[0x11cf2b58], m_WgtRoot
000025:0x00073618:	ncalli	Widget.FindAnyWidget(_s'wgt_lst_missions')
000025:0x00073620:	movetm	m_WgtLstMsnList, ret
000026:0x00073630:	movefm	[0x11cf2b58], m_WgtRoot
000026:0x00073640:	ncalli	Widget.FindAnyWidget(_s'wgt_btn_mission_play')
000026:0x00073648:	movetm	m_WgtBtnMsnPlay, ret
000027:0x00073658:	movefm	[0x11cf2b58], m_WgtRoot
000027:0x00073668:	ncalli	Widget.FindAnyWidget(_s'wgt_btn_mission_close')
000027:0x00073670:	movetm	m_WgtBtnMsnClose, ret
000029:0x00073680:	imove	i, 0x000000
000029:0x00073690:	jump	0x0736a0
000029:0x00073698:	inc	i
000029:0x000736a0:	movefm	[0x11d0bb58], m_ListMissionsNames
000029:0x000736b0:	ncalli	array<string>.Count()
000029:0x000736b8:	cmpi	i, ret
000029:0x000736c8:	bge	0x073720
000031:0x000736d0:	movefm	[0x11d0bb58], m_ListMissionsNames
000031:0x000736e0:	icall	array<string>.Get(i)
000031:0x000736e8:	moves	mission_name, ret
000032:0x000736f8:	movefm	[0x11d0a1c0], m_WgtLstMsnList
000032:0x00073708:	ncalli	TextListboxWidget.AddItem(mission_name, NULL, _i0, _i-1)
000032:0x00073718:	jump	0x073698
000032:0x00073720:	rts
MissionLoader::GetMissionList()
000041:0x00073878:	new	@c00, array<string>
000041:0x00073898:	movetm	list, @c00
000043:0x000738a8:	moves	m_PathToMissions, _s'$saves:\missions'
000045:0x000738b8:	adds	path_find_pattern, m_PathToMissions, _s'\*'
000046:0x000738c8:	icall	FindFile(path_find_pattern, file_name, file_attr, flags)
000046:0x000738d8:	movea	file_handler, ret
000048:0x000738e8:	imove	found, 0x000001
000049:0x000738f8:	cmpi	found, _i0
000049:0x00073908:	beq	0x073978
000051:0x00073910:	andi	@m01, file_attr, _i1
000051:0x00073920:	move	@m00, @m01
000051:0x00073930:	cmpi	@m00, _i0
000051:0x00073940:	beq	0x073950
000053:0x00073948:	icall	array<string>.Insert(file_name)
000056:0x00073950:	icall	FindNextFile(file_handler, file_name, file_attr)
000056:0x00073960:	move	found, ret
000056:0x00073970:	jump	0x0738f8
000059:0x00073978:	movem	ret, list
000059:0x00073988:	release	list
000059:0x00073990:	rts
000059:0x00073998:	release	list
000059:0x000739a0:	rts
MissionLoader::OnClick()
000064:0x00073a58:	cmpm	w, m_WgtBtnMsnPlay
000064:0x00073a68:	bne	0x073b28
000066:0x00073a70:	movefm	[0x11d0a1c0], m_WgtLstMsnList
000066:0x00073a80:	ncalli	TextListboxWidget.GetSelectedRow()
000066:0x00073a88:	move	row_index, ret
000068:0x00073a98:	movefm	[0x11d0bb58], m_ListMissionsNames
000068:0x00073aa8:	icall	array<string>.Get(row_index)
000068:0x00073ab0:	moves	mission_name, ret
000070:0x00073ac0:	adds	@s01, m_PathToMissions, _s'\'
000070:0x00073ad0:	moves	@s00, @s01
000070:0x00073ae0:	adds	mission_path, @s00, mission_name
000072:0x00073af0:	call	Log(mission_path, _i0)
000074:0x00073b00:	ncall	GetGame()
000074:0x00073b08:	ncalli	CGame.PlayMission(mission_path)
000076:0x00073b10:	imove	ret, 0x000001
000076:0x00073b20:	rts
000079:0x00073b28:	cmpm	w, m_WgtBtnMsnClose
000079:0x00073b38:	bne	0x073b60
000081:0x00073b40:	call	MissionLoader.CloseWindow()
000083:0x00073b48:	imove	ret, 0x000001
000083:0x00073b58:	rts
000086:0x00073b60:	imove	ret, 0x000000
000086:0x00073b70:	rts
000086:0x00073b78:	rts
HudDebugWinBase::HudDebugWinBase()
//scripts/5_Mission/GUI/ScriptsHudDebug/HudDebugWinBase.c
000010:0x00073b80:	movem	m_WgtRoot, widget_root
000010:0x00073b90:	rts
HudDebugWinBase::GetType()
000018:0x00073b98:	imove	ret, 0x000000
000018:0x00073ba8:	rts
000018:0x00073bb0:	rts
HudDebugWinBase::Show()
000030:0x00073bb8:	movefm	[0x11cf2b58], m_WgtRoot
000030:0x00073bc8:	ncalli	Widget.Show(true)
000030:0x00073bd0:	rts
HudDebugWinBase::Hide()
000038:0x00073bd8:	movefm	[0x11cf2b58], m_WgtRoot
000038:0x00073be8:	ncalli	Widget.Show(false)
000038:0x00073bf0:	rts
HudDebugWinBase::IsVisible()
000046:0x00073bf8:	movefm	[0x11cf2b58], m_WgtRoot
000046:0x00073c08:	ncalli	Widget.IsVisible()
000046:0x00073c10:	move	ret, ret
000046:0x00073c20:	rts
000046:0x00073c28:	rts
HudDebugWinBase::FitWindowByContent()
000054:0x00073cc0:	imove	size_of_value, 0x000011
000055:0x00073cd0:	ncalli	TextListboxWidget.GetNumItems()
000055:0x00073cd8:	muli	@m01, size_of_value, ret
000055:0x00073ce8:	move	@m00, @m01
000055:0x00073cf8:	call	HudDebugWinBase.SetValueListSize(_i250, @m00, wgt)
000055:0x00073d08:	rts
HudDebugWinBase::SetValueListSize()
000063:0x00073e40:	imove	offset, 0x00000a
000064:0x00073e50:	imove	size_of_title, 0x000014
000066:0x00073e60:	citf	[0x11d0eed8], x
000066:0x00073e70:	citf	[0x11d0eef8], y
000066:0x00073e80:	ncalli	TextListboxWidget.SetSize([0x11d0eed8], [0x11d0eef8], _i1)
000068:0x00073e90:	muli	@m01, _i2, offset
000068:0x00073ea0:	move	@m00, @m01
000068:0x00073eb0:	addi	root_size_x, x, @m00
000069:0x00073ec0:	muli	@m01, _i2, offset
000069:0x00073ed0:	move	@m00, @m01
000069:0x00073ee0:	addi	@m00, y, @m00
000069:0x00073ef0:	move	@m01, @m00
000069:0x00073f00:	addi	root_size_y, @m01, size_of_title
000071:0x00073f10:	citf	[0x11d0eed8], root_size_x
000071:0x00073f20:	citf	[0x11d0eef8], root_size_y
000071:0x00073f30:	movefm	[0x11cf2b58], m_WgtRoot
000071:0x00073f40:	ncalli	Widget.SetSize([0x11d0eed8], [0x11d0eef8], _i1)
000071:0x00073f50:	rts
HudDebugWinCharAgents::HudDebugWinCharAgents()
//scripts/5_Mission/GUI/ScriptsHudDebug/HudDebugWinCharAgents.c
000010:0x00073f78:	movem	m_WgtRoot, widget_root
000011:0x00073f88:	movefm	[0x11cf2b58], m_WgtRoot
000011:0x00073f98:	ncalli	Widget.FindAnyWidget(_s'txl_CharAgents_Values')
000011:0x00073fa0:	movetm	m_WgtAgents, ret
000013:0x00073fb0:	movem	wgt, m_WgtAgents
000013:0x00073fc0:	call	HudDebugWinCharAgents.FitWindowByContent(wgt)
000013:0x00073fd0:	rts
HudDebugWinCharAgents::~HudDebugWinCharAgents()
000018:0x00073fd8:	call	HudDebugWinCharAgents.SetUpdate(false)
000018:0x00073fe8:	rts
HudDebugWinCharAgents::GetType()
000026:0x00073ff0:	imove	ret, 0x000003
000026:0x00074000:	rts
000026:0x00074008:	rts
HudDebugWinCharAgents::SetUpdate()
000035:0x000740c0:	ncall	GetGame()
000035:0x000740c8:	ncalli	CGame.GetPlayer()
000035:0x000740d0:	movetm	player, ret
000036:0x000740e0:	call	GetPlugin(_T(PluginDeveloperSync))
000036:0x000740f0:	movec	developer_sync, ret
000039:0x00074100:	ncall	GetGame()
000039:0x00074108:	ncalli	CGame.IsClient()
000039:0x00074110:	cmpi	ret, _i0
000039:0x00074120:	beq	0x0741b8
000041:0x00074128:	move	p1, state
000041:0x00074138:	new	@c00, Param1<int>
000041:0x00074160:	movec	params, @c00
000042:0x00074170:	cmpcm	player, NULL
000042:0x00074180:	beq	0x0741a8
000044:0x00074188:	movec	param, params
000044:0x00074198:	call	PlayerBase.RPCSingleParam(DEV_AGENTS_UPDATE, param, _c0)
000044:0x000741a8:	delete	params
000044:0x000741b0:	jump	0x0741e0
000050:0x000741b8:	cmpc	developer_sync, NULL
000050:0x000741c8:	beq	0x0741e0
000052:0x000741d0:	call	PluginDeveloperSync.EnableUpdate(state, DEV_AGENTS_UPDATE, player)
000052:0x000741e0:	release	player
000052:0x000741e8:	rts
HudDebugWinCharAgents::Update()
000059:0x000741f0:	call	HudDebugWinBase.Update()
000064:0x000741f8:	call	HudDebugWinCharAgents.SetAgents()
000064:0x00074200:	rts
HudDebugWinCharAgents::Show()
000072:0x00074208:	call	HudDebugWinBase.Show()
000076:0x00074210:	call	HudDebugWinCharAgents.SetUpdate(true)
000076:0x00074220:	rts
HudDebugWinCharAgents::Hide()
000081:0x00074228:	call	HudDebugWinBase.Hide()
000085:0x00074230:	call	HudDebugWinCharAgents.SetUpdate(false)
000085:0x00074240:	rts
HudDebugWinCharAgents::SetAgents()
000090:0x00074288:	call	GetPlugin(_T(PluginDeveloperSync))
000090:0x00074298:	movec	developer_sync, ret
000093:0x000742a8:	call	HudDebugWinCharAgents.ClearAgents()
000096:0x000742b0:	call	GetDayZGame()
000096:0x000742b8:	call	DayZGame.IsNewPlayer()
000096:0x000742c0:	cmpi	ret, _i0
000096:0x000742d0:	beq	0x0743d8
000096:0x000742d8:	movefm	[0x45f7fee0], m_PlayerAgentsSynced
000096:0x000742e8:	ncalli	array<SyncedValue>.Count()
000096:0x000742f0:	cmpi	ret, _i0
000096:0x00074300:	ble	0x0743d8
000098:0x00074308:	imove	i, 0x000000
000098:0x00074318:	jump	0x074328
000098:0x00074320:	inc	i
000098:0x00074328:	movefm	[0x45f7fee0], m_PlayerAgentsSynced
000098:0x00074338:	ncalli	array<SyncedValue>.Count()
000098:0x00074340:	cmpi	i, ret
000098:0x00074350:	bge	0x0743d8
000100:0x00074358:	movefm	[0x45f7fee0], m_PlayerAgentsSynced
000100:0x00074368:	icall	array<SyncedValue>.Get(i)
000100:0x00074370:	call	SyncedValue.GetName()
000100:0x00074378:	movefm	[0x45f7fee0], m_PlayerAgentsSynced
000100:0x00074388:	pushc	ret
000100:0x00074390:	icall	array<SyncedValue>.Get(i)
000100:0x00074398:	movec	@c00, ret
000100:0x000743a8:	popc	ret
000100:0x000743b0:	call	SyncedValue.GetValue()
000100:0x000743b8:	icall	ToString(ret)
000100:0x000743c0:	call	HudDebugWinCharAgents.AddAgent(ret, ret)
000100:0x000743d0:	jump	0x074320
000105:0x000743d8:	call	HudDebugWinCharAgents.FitWindow()
000105:0x000743e0:	rts
HudDebugWinCharAgents::AddAgent()
000110:0x00074408:	movefm	[0x11d0a1c0], m_WgtAgents
000110:0x00074418:	ncalli	TextListboxWidget.AddItem(title, NULL, _i0, _i-1)
000110:0x00074428:	move	index, ret
000111:0x00074438:	movefm	[0x11d0a1c0], m_WgtAgents
000111:0x00074448:	ncalli	TextListboxWidget.SetItem(index, value, NULL, _i1)
000111:0x00074458:	rts
HudDebugWinCharAgents::ClearAgents()
000116:0x00074460:	movefm	[0x11d0a1c0], m_WgtAgents
000116:0x00074470:	ncalli	TextListboxWidget.ClearItems()
000116:0x00074478:	rts
HudDebugWinCharAgents::FitWindow()
000121:0x00074480:	movem	wgt, m_WgtAgents
000121:0x00074490:	call	HudDebugWinCharAgents.FitWindowByContent(wgt)
000121:0x000744a0:	rts
HudDebugWinCharDebug::HudDebugWinCharDebug()
//scripts/5_Mission/GUI/ScriptsHudDebug/HudDebugWinCharDebug.c
000014:0x00074508:	ncalli	Widget.FindAnyWidget(_s'txt_PlayerPos')
000014:0x00074510:	movetm	m_PlayerPosTextWidget, ret
000015:0x00074520:	ncalli	Widget.FindAnyWidget(_s'txt_Clipboard')
000015:0x00074528:	movetm	m_ClipboardTextWidget, ret
000016:0x00074538:	ncalli	Widget.FindAnyWidget(_s'txt_GodMode')
000016:0x00074540:	movetm	m_GodModeTextWidget, ret
000016:0x00074550:	rts
HudDebugWinCharDebug::Update()
000031:0x000746c0:	call	HudDebugWinBase.Update()
000033:0x000746c8:	ncall	GetGame()
000033:0x000746d0:	ncalli	CGame.GetPlayer()
000033:0x000746d8:	movetm	player, ret
000034:0x000746e8:	cmpcm	player, NULL
000034:0x000746f8:	beq	0x0747b0
000036:0x00074700:	ncalli	PlayerBase.GetPosition()
000036:0x00074708:	movev	pos, ret
000037:0x00074718:	ifv	@f00, pos[0x000000]
000037:0x00074728:	icall	ToString(@f00)
000037:0x00074730:	adds	@s02, _s'Pos: ', ret
000037:0x00074740:	moves	@s01, @s02
000037:0x00074750:	adds	@s01, @s01, _s' '
000037:0x00074760:	moves	@s00, @s01
000037:0x00074770:	ifv	@f01, pos[0x000002]
000037:0x00074780:	icall	ToString(@f01)
000037:0x00074788:	adds	pos_str, @s00, ret
000038:0x00074798:	movefm	[0x11d09418], m_PlayerPosTextWidget
000038:0x000747a8:	ncalli	TextWidget.SetText(pos_str)
000042:0x000747b0:	ncall	GetGame()
000042:0x000747b8:	icall	CGame.CopyFromClipboard(clipboard)
000043:0x000747c0:	ncall	Length(clipboard)
000043:0x000747c8:	citf	x, ret
000043:0x000747d8:	call	Min(x, _f64.000000)
000043:0x000747e8:	cfti	@m01, ret
000043:0x000747f8:	icall	Substring(clipboard, _i0, @m01)
000043:0x00074808:	moves	clipboard, ret
000044:0x00074818:	adds	@s00, _s'Clipboard: ', clipboard
000044:0x00074828:	moves	clipboard, @s00
000045:0x00074838:	movefm	[0x11d09418], m_ClipboardTextWidget
000045:0x00074848:	ncalli	TextWidget.SetText(clipboard)
000047:0x00074850:	call	GetInstance()
000047:0x00074858:	call	PluginDeveloper.IsGodMode()
000047:0x00074860:	cmpi	ret, _i0
000047:0x00074870:	beq	0x074898
000049:0x00074878:	movefm	[0x11d09418], m_GodModeTextWidget
000049:0x00074888:	ncalli	TextWidget.SetText(_s'God mode: ENABLED')
000049:0x00074890:	jump	0x0748b0
000053:0x00074898:	movefm	[0x11d09418], m_GodModeTextWidget
000053:0x000748a8:	ncalli	TextWidget.SetText(_s'God mode: DISABLED')
000053:0x000748b0:	release	player
000053:0x000748b8:	rts
HudDebugWinCharDebug::GetType()
000062:0x000748c0:	imove	ret, 0x000004
000062:0x000748d0:	rts
000062:0x000748d8:	rts
HudDebugWinCharModifiers::HudDebugWinCharModifiers()
//scripts/5_Mission/GUI/ScriptsHudDebug/HudDebugWinCharModifiers.c
000010:0x00074900:	movem	m_WgtRoot, widget_root
000011:0x00074910:	movefm	[0x11cf2b58], m_WgtRoot
000011:0x00074920:	ncalli	Widget.FindAnyWidget(_s'txl_CharModifiers_Values')
000011:0x00074928:	movetm	m_WgtModifiers, ret
000013:0x00074938:	movem	wgt, m_WgtModifiers
000013:0x00074948:	call	HudDebugWinCharModifiers.FitWindowByContent(wgt)
000013:0x00074958:	rts
HudDebugWinCharModifiers::~HudDebugWinCharModifiers()
000018:0x00074960:	call	HudDebugWinCharModifiers.SetUpdate(false)
000018:0x00074970:	rts
HudDebugWinCharModifiers::GetType()
000026:0x00074978:	imove	ret, 0x000002
000026:0x00074988:	rts
000026:0x00074990:	rts
HudDebugWinCharModifiers::SetUpdate()
000035:0x000749f8:	ncall	GetGame()
000035:0x00074a00:	ncalli	CGame.GetPlayer()
000035:0x00074a08:	movetm	player, ret
000036:0x00074a18:	call	GetPlugin(_T(PluginDeveloperSync))
000036:0x00074a28:	movec	developer_sync, ret
000039:0x00074a38:	ncall	GetGame()
000039:0x00074a40:	ncalli	CGame.IsClient()
000039:0x00074a48:	cmpi	ret, _i0
000039:0x00074a58:	beq	0x074af0
000041:0x00074a60:	move	p1, state
000041:0x00074a70:	new	@c00, Param1<int>
000041:0x00074a98:	movec	params, @c00
000042:0x00074aa8:	cmpcm	player, NULL
000042:0x00074ab8:	beq	0x074ae0
000044:0x00074ac0:	movec	param, params
000044:0x00074ad0:	call	PlayerBase.RPCSingleParam(DEV_MODS_UPDATE, param, _c0)
000044:0x00074ae0:	delete	params
000044:0x00074ae8:	jump	0x074b18
000050:0x00074af0:	cmpc	developer_sync, NULL
000050:0x00074b00:	beq	0x074b18
000052:0x00074b08:	call	PluginDeveloperSync.EnableUpdate(state, DEV_MODS_UPDATE, player)
000052:0x00074b18:	release	player
000052:0x00074b20:	rts
HudDebugWinCharModifiers::Update()
000059:0x00074b28:	call	HudDebugWinBase.Update()
000064:0x00074b30:	call	HudDebugWinCharModifiers.SetModifiers()
000064:0x00074b38:	rts
HudDebugWinCharModifiers::Show()
000072:0x00074b40:	call	HudDebugWinBase.Show()
000076:0x00074b48:	call	HudDebugWinCharModifiers.SetUpdate(true)
000076:0x00074b58:	rts
HudDebugWinCharModifiers::Hide()
000081:0x00074b60:	call	HudDebugWinBase.Hide()
000085:0x00074b68:	call	HudDebugWinCharModifiers.SetUpdate(false)
000085:0x00074b78:	rts
HudDebugWinCharModifiers::SetModifiers()
000090:0x00074c60:	call	GetPlugin(_T(PluginDeveloperSync))
000090:0x00074c70:	movec	developer_sync, ret
000093:0x00074c80:	call	HudDebugWinCharModifiers.ClearModifiers()
000095:0x00074c88:	call	GetDayZGame()
000095:0x00074c90:	call	DayZGame.IsNewPlayer()
000095:0x00074c98:	cmpi	ret, _i0
000095:0x00074ca8:	beq	0x074e80
000095:0x00074cb0:	movefm	[0x45f7fee0], m_PlayerModsSynced
000095:0x00074cc0:	ncalli	array<SyncedValue>.Count()
000095:0x00074cc8:	cmpi	ret, _i0
000095:0x00074cd8:	ble	0x074e80
000098:0x00074ce0:	new	@c00, array<string>
000098:0x00074d00:	movetm	active_mods, @c00
000099:0x00074d10:	movem	in_data, m_PlayerModsSynced
000099:0x00074d20:	call	HudDebugWinCharModifiers.FilterActiveModifiers(in_data, active_mods)
000100:0x00074d30:	new	@c00, array<string>
000100:0x00074d50:	movetm	inactive_mods, @c00
000101:0x00074d60:	movem	in_data, m_PlayerModsSynced
000101:0x00074d70:	call	HudDebugWinCharModifiers.FilterInactiveModifiers(in_data, inactive_mods)
000104:0x00074d80:	imove	i, 0x000000
000104:0x00074d90:	jump	0x074da0
000104:0x00074d98:	inc	i
000104:0x00074da0:	ncalli	array<string>.Count()
000104:0x00074da8:	cmpi	i, ret
000104:0x00074db8:	bge	0x074de0
000106:0x00074dc0:	icall	array<string>.Get(i)
000106:0x00074dc8:	call	HudDebugWinCharModifiers.AddModifier(ret, _s'ACTIVE')
000106:0x00074dd8:	jump	0x074d98
000110:0x00074de0:	ncalli	array<string>.Count()
000110:0x00074de8:	cmpi	ret, _i0
000110:0x00074df8:	ble	0x074e10
000112:0x00074e00:	call	HudDebugWinCharModifiers.AddModifier(_s'', _s'')
000116:0x00074e10:	imove	j, 0x000000
000116:0x00074e20:	jump	0x074e30
000116:0x00074e28:	inc	j
000116:0x00074e30:	ncalli	array<string>.Count()
000116:0x00074e38:	cmpi	j, ret
000116:0x00074e48:	bge	0x074e70
000118:0x00074e50:	icall	array<string>.Get(j)
000118:0x00074e58:	call	HudDebugWinCharModifiers.AddModifier(ret, _s'INACTIVE')
000118:0x00074e68:	jump	0x074e28
000118:0x00074e70:	delete	active_mods
000118:0x00074e78:	delete	inactive_mods
000123:0x00074e80:	call	HudDebugWinCharModifiers.FitWindow()
000123:0x00074e88:	rts
HudDebugWinCharModifiers::AddModifier()
000128:0x00074eb0:	movefm	[0x11d0a1c0], m_WgtModifiers
000128:0x00074ec0:	ncalli	TextListboxWidget.AddItem(title, NULL, _i0, _i-1)
000128:0x00074ed0:	move	index, ret
000129:0x00074ee0:	movefm	[0x11d0a1c0], m_WgtModifiers
000129:0x00074ef0:	ncalli	TextListboxWidget.SetItem(index, value, NULL, _i1)
000129:0x00074f00:	rts
HudDebugWinCharModifiers::ClearModifiers()
000134:0x00074f08:	movefm	[0x11d0a1c0], m_WgtModifiers
000134:0x00074f18:	ncalli	TextListboxWidget.ClearItems()
000134:0x00074f20:	rts
HudDebugWinCharModifiers::FitWindow()
000139:0x00074f28:	movem	wgt, m_WgtModifiers
000139:0x00074f38:	call	HudDebugWinCharModifiers.FitWindowByContent(wgt)
000139:0x00074f48:	rts
HudDebugWinCharModifiers::FilterActiveModifiers()
000145:0x00074f70:	imove	i, 0x000000
000145:0x00074f80:	jump	0x074f90
000145:0x00074f88:	inc	i
000145:0x00074f90:	ncalli	array<SyncedValue>.Count()
000145:0x00074f98:	cmpi	i, ret
000145:0x00074fa8:	bge	0x074ff8
000147:0x00074fb0:	icall	array<SyncedValue>.Get(i)
000147:0x00074fb8:	call	SyncedValue.GetValue()
000147:0x00074fc0:	cmpf	ret, _f0.000000
000147:0x00074fd0:	ble	0x074ff0
000149:0x00074fd8:	icall	array<SyncedValue>.Get(i)
000149:0x00074fe0:	call	SyncedValue.GetName()
000149:0x00074fe8:	icall	array<string>.Insert(ret)
000149:0x00074ff0:	jump	0x074f88
000149:0x00074ff8:	rts
HudDebugWinCharModifiers::FilterInactiveModifiers()
000156:0x00075020:	imove	i, 0x000000
000156:0x00075030:	jump	0x075040
000156:0x00075038:	inc	i
000156:0x00075040:	ncalli	array<SyncedValue>.Count()
000156:0x00075048:	cmpi	i, ret
000156:0x00075058:	bge	0x0750a8
000158:0x00075060:	icall	array<SyncedValue>.Get(i)
000158:0x00075068:	call	SyncedValue.GetValue()
000158:0x00075070:	cmpf	ret, _f1.000000
000158:0x00075080:	bge	0x0750a0
000160:0x00075088:	icall	array<SyncedValue>.Get(i)
000160:0x00075090:	call	SyncedValue.GetName()
000160:0x00075098:	icall	array<string>.Insert(ret)
000160:0x000750a0:	jump	0x075038
000160:0x000750a8:	rts
HudDebugWinCharStats::HudDebugWinCharStats()
//scripts/5_Mission/GUI/ScriptsHudDebug/HudDebugWinCharStats.c
000010:0x000750d0:	ncalli	Widget.FindAnyWidget(_s'txl_CharStats_Values')
000010:0x000750d8:	movetm	m_WgtValues, ret
000012:0x000750e8:	call	HudDebugWinCharStats.FitWindow()
000012:0x000750f0:	rts
HudDebugWinCharStats::~HudDebugWinCharStats()
000017:0x000750f8:	call	HudDebugWinCharStats.SetUpdate(false)
000017:0x00075108:	rts
HudDebugWinCharStats::GetType()
000026:0x00075110:	imove	ret, 0x000001
000026:0x00075120:	rts
000026:0x00075128:	rts
HudDebugWinCharStats::Show()
000034:0x00075130:	call	HudDebugWinBase.Show()
000038:0x00075138:	call	HudDebugWinCharStats.SetUpdate(true)
000038:0x00075148:	rts
HudDebugWinCharStats::Hide()
000043:0x00075150:	call	HudDebugWinBase.Hide()
000047:0x00075158:	call	HudDebugWinCharStats.SetUpdate(false)
000047:0x00075168:	rts
HudDebugWinCharStats::SetUpdate()
000057:0x000751d0:	ncall	GetGame()
000057:0x000751d8:	ncalli	CGame.GetPlayer()
000057:0x000751e0:	movetm	player, ret
000058:0x000751f0:	call	GetPlugin(_T(PluginDeveloperSync))
000058:0x00075200:	movec	developer_sync, ret
000061:0x00075210:	ncall	GetGame()
000061:0x00075218:	ncalli	CGame.IsClient()
000061:0x00075220:	cmpi	ret, _i0
000061:0x00075230:	beq	0x0752c8
000063:0x00075238:	move	p1, state
000063:0x00075248:	new	@c00, Param1<int>
000063:0x00075270:	movec	params, @c00
000064:0x00075280:	cmpcm	player, NULL
000064:0x00075290:	beq	0x0752b8
000066:0x00075298:	movec	param, params
000066:0x000752a8:	call	PlayerBase.RPCSingleParam(DEV_STATS_UPDATE, param, _c0)
000066:0x000752b8:	delete	params
000066:0x000752c0:	jump	0x0752f0
000072:0x000752c8:	cmpc	developer_sync, NULL
000072:0x000752d8:	beq	0x0752f0
000074:0x000752e0:	call	PluginDeveloperSync.EnableUpdate(state, DEV_STATS_UPDATE, player)
000074:0x000752f0:	release	player
000074:0x000752f8:	rts
HudDebugWinCharStats::Update()
000082:0x00075300:	call	HudDebugWinBase.Update()
000087:0x00075308:	call	HudDebugWinCharStats.SetValues()
000087:0x00075310:	rts
HudDebugWinCharStats::SetValues()
000092:0x00075358:	call	GetPlugin(_T(PluginDeveloperSync))
000092:0x00075368:	movec	developer_sync, ret
000095:0x00075378:	call	HudDebugWinCharStats.ClearValues()
000097:0x00075380:	call	GetDayZGame()
000097:0x00075388:	call	DayZGame.IsNewPlayer()
000097:0x00075390:	cmpi	ret, _i0
000097:0x000753a0:	beq	0x0754a8
000097:0x000753a8:	movefm	[0x45f7fee0], m_PlayerStatsSynced
000097:0x000753b8:	ncalli	array<SyncedValue>.Count()
000097:0x000753c0:	cmpi	ret, _i0
000097:0x000753d0:	ble	0x0754a8
000100:0x000753d8:	imove	i, 0x000000
000100:0x000753e8:	jump	0x0753f8
000100:0x000753f0:	inc	i
000100:0x000753f8:	movefm	[0x45f7fee0], m_PlayerStatsSynced
000100:0x00075408:	ncalli	array<SyncedValue>.Count()
000100:0x00075410:	cmpi	i, ret
000100:0x00075420:	bge	0x0754a8
000102:0x00075428:	movefm	[0x45f7fee0], m_PlayerStatsSynced
000102:0x00075438:	icall	array<SyncedValue>.Get(i)
000102:0x00075440:	call	SyncedValue.GetName()
000102:0x00075448:	movefm	[0x45f7fee0], m_PlayerStatsSynced
000102:0x00075458:	pushc	ret
000102:0x00075460:	icall	array<SyncedValue>.Get(i)
000102:0x00075468:	movec	@c00, ret
000102:0x00075478:	popc	ret
000102:0x00075480:	call	SyncedValue.GetValue()
000102:0x00075488:	icall	ToString(ret)
000102:0x00075490:	call	HudDebugWinCharStats.AddValue(ret, ret)
000102:0x000754a0:	jump	0x0753f0
000107:0x000754a8:	call	HudDebugWinCharStats.FitWindow()
000107:0x000754b0:	rts
HudDebugWinCharStats::AddValue()
000112:0x000754d8:	movefm	[0x11d0a1c0], m_WgtValues
000112:0x000754e8:	ncalli	TextListboxWidget.AddItem(title, NULL, _i0, _i-1)
000112:0x000754f8:	move	index, ret
000113:0x00075508:	movefm	[0x11d0a1c0], m_WgtValues
000113:0x00075518:	ncalli	TextListboxWidget.SetItem(index, value, NULL, _i1)
000113:0x00075528:	rts
HudDebugWinCharStats::ClearValues()
000118:0x00075530:	movefm	[0x11d0a1c0], m_WgtValues
000118:0x00075540:	ncalli	TextListboxWidget.ClearItems()
000118:0x00075548:	rts
HudDebugWinCharStats::FitWindow()
000123:0x00075550:	movem	wgt, m_WgtValues
000123:0x00075560:	call	HudDebugWinCharStats.FitWindowByContent(wgt)
000123:0x00075570:	rts
StartupMenu::Init()
//scripts/5_Mission/GUI/StartupMenu.c
000013:0x000755b8:	ncall	GetGame()
000013:0x000755c0:	ncalli	CGame.GetWorkspace()
000013:0x000755c8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/startup.layout', _c0)
000013:0x000755d0:	movetm	layoutRoot, ret
000015:0x000755e0:	ncalli	Widget.FindAnyWidget(_s'TextWidget')
000015:0x000755e8:	movetm	m_label, ret
000017:0x000755f8:	movem	ret, layoutRoot
000017:0x00075608:	release	layoutRoot
000017:0x00075610:	rts
000017:0x00075618:	release	layoutRoot
000017:0x00075620:	rts
DispatcherCaller::SendLogAtClient()
//scripts/5_Mission/mission/DispatcherCaller.c
000005:0x00075648:	call	GetPlugin(_T(PluginDeveloper))
000005:0x00075658:	movec	m, ret
000007:0x00075668:	cmpc	m, NULL
000007:0x00075678:	beq	0x0756a0
000009:0x00075680:	moves	msg, param1
000009:0x00075690:	call	PluginDeveloper.SendServerLogToClient(msg)
000009:0x000756a0:	rts
DispatcherCaller::ScriptConsoleAddPrint()
000015:0x000756e8:	ncall	GetGame()
000015:0x000756f0:	ncalli	CGame.GetUIManager()
000015:0x000756f8:	ncalli	UIManager.GetMenu()
000015:0x00075700:	movetm	ui_menu, ret
000016:0x00075710:	call	UIScriptedMenu.GetID()
000016:0x00075718:	cmpi	ret, MENU_SCRIPTCONSOLE
000016:0x00075728:	bne	0x075768
000018:0x00075730:	movem	scripted_console, ui_menu
000019:0x00075740:	moves	message, param1
000019:0x00075750:	call	ScriptConsole.Add(message)
000019:0x00075760:	release	scripted_console
000019:0x00075768:	release	ui_menu
000019:0x00075770:	rts
DispatcherCaller::ScriptConsoleHistoryBack()
000025:0x000757b8:	ncall	GetGame()
000025:0x000757c0:	ncalli	CGame.GetUIManager()
000025:0x000757c8:	ncalli	UIManager.GetMenu()
000025:0x000757d0:	movetm	ui_menu, ret
000026:0x000757e0:	call	UIScriptedMenu.GetID()
000026:0x000757e8:	cmpi	ret, MENU_SCRIPTCONSOLE
000026:0x000757f8:	bne	0x075820
000028:0x00075800:	movem	scripted_console, ui_menu
000029:0x00075810:	call	ScriptConsole.HistoryBack()
000029:0x00075818:	release	scripted_console
000029:0x00075820:	release	ui_menu
000029:0x00075828:	rts
DispatcherCaller::ScriptConsoleHistoryForward()
000035:0x00075870:	ncall	GetGame()
000035:0x00075878:	ncalli	CGame.GetUIManager()
000035:0x00075880:	ncalli	UIManager.GetMenu()
000035:0x00075888:	movetm	ui_menu, ret
000036:0x00075898:	call	UIScriptedMenu.GetID()
000036:0x000758a0:	cmpi	ret, MENU_SCRIPTCONSOLE
000036:0x000758b0:	bne	0x0758d8
000038:0x000758b8:	movem	scripted_console, ui_menu
000039:0x000758c8:	call	ScriptConsole.HistoryForward()
000039:0x000758d0:	release	scripted_console
000039:0x000758d8:	release	ui_menu
000039:0x000758e0:	rts
DispatcherCaller::ScriptConsoleGetSqfCommandWatcher()
000045:0x00075a10:	movec	p, params
000047:0x00075a20:	move	watcher_id, param1
000049:0x00075a30:	ncall	GetGame()
000049:0x00075a38:	ncalli	CGame.GetUIManager()
000049:0x00075a40:	ncalli	UIManager.GetMenu()
000049:0x00075a48:	movetm	ui_menu, ret
000052:0x00075a58:	call	UIScriptedMenu.GetID()
000052:0x00075a60:	cmpi	ret, MENU_SCENE_EDITOR
000052:0x00075a70:	bne	0x075ae0
000054:0x00075a78:	movem	scene_editor_menu, ui_menu
000055:0x00075a88:	call	SceneEditorMenu.GetSqfCommandForSqfDebugWatcher(watcher_id)
000055:0x00075a98:	new	@c00, Param1<string>
000055:0x00075ac0:	movec	param, @c00
000055:0x00075ad0:	release	scene_editor_menu
000055:0x00075ad8:	jump	0x075b60
000057:0x00075ae0:	call	UIScriptedMenu.GetID()
000057:0x00075ae8:	cmpi	ret, MENU_SCRIPTCONSOLE
000057:0x00075af8:	bne	0x075b60
000059:0x00075b00:	movem	scripted_console, ui_menu
000060:0x00075b10:	call	ScriptConsole.GetSqfCommandForSqfDebugWatcher(watcher_id)
000060:0x00075b20:	new	@c00, Param1<string>
000060:0x00075b48:	movec	param, @c00
000060:0x00075b58:	release	scripted_console
000063:0x00075b60:	movec	ret, param
000063:0x00075b70:	release	ui_menu
000063:0x00075b78:	rts
000063:0x00075b80:	release	ui_menu
000063:0x00075b88:	rts
DispatcherCaller::ScriptConsoleGetSqfCommandWatcherResult()
000068:0x00075c80:	movec	p, params
000070:0x00075c90:	move	watcher_id, param1
000071:0x00075ca0:	moves	watcher_result, param2
000073:0x00075cb0:	ncall	GetGame()
000073:0x00075cb8:	ncalli	CGame.GetUIManager()
000073:0x00075cc0:	ncalli	UIManager.GetMenu()
000073:0x00075cc8:	movetm	ui_menu, ret
000074:0x00075cd8:	cmpcm	ui_menu, NULL
000074:0x00075ce8:	beq	0x075d88
000076:0x00075cf0:	call	UIScriptedMenu.GetID()
000076:0x00075cf8:	cmpi	ret, MENU_SCENE_EDITOR
000076:0x00075d08:	bne	0x075d40
000078:0x00075d10:	movem	scene_editor_menu, ui_menu
000079:0x00075d20:	call	SceneEditorMenu.OnSqfDebugWatcherResult(watcher_id, watcher_result)
000079:0x00075d30:	release	scene_editor_menu
000079:0x00075d38:	jump	0x075d88
000081:0x00075d40:	call	UIScriptedMenu.GetID()
000081:0x00075d48:	cmpi	ret, MENU_SCRIPTCONSOLE
000081:0x00075d58:	bne	0x075d88
000083:0x00075d60:	movem	scripted_console, ui_menu
000084:0x00075d70:	call	ScriptConsole.OnSqfDebugWatcherResult(watcher_id, watcher_result)
000084:0x00075d80:	release	scripted_console
000084:0x00075d88:	release	ui_menu
000084:0x00075d90:	rts
DispatcherCaller::SceneEditorCommand()
000091:0x00075e08:	ncall	GetGame()
000091:0x00075e10:	ncalli	CGame.GetUIManager()
000091:0x00075e18:	ncalli	UIManager.GetMenu()
000091:0x00075e20:	movetm	ui_menu, ret
000092:0x00075e30:	cmpcm	ui_menu, NULL
000092:0x00075e40:	beq	0x075e90
000092:0x00075e48:	call	UIScriptedMenu.GetID()
000092:0x00075e50:	cmpi	ret, MENU_SCENE_EDITOR
000092:0x00075e60:	bne	0x075e90
000094:0x00075e68:	movem	editor_menu, ui_menu
000095:0x00075e78:	call	SceneEditorMenu.SceneEditorCommand(params)
000095:0x00075e88:	release	editor_menu
000095:0x00075e90:	release	ui_menu
000095:0x00075e98:	rts
DispatcherCaller::MissionGameplayHideInventory()
000101:0x00075ec0:	ncall	GetGame()
000101:0x00075ec8:	ncalli	CGame.GetMission()
000101:0x00075ed0:	movec	mission, ret
000102:0x00075ee0:	cmpc	mission, NULL
000102:0x00075ef0:	beq	0x075f00
000104:0x00075ef8:	call	MissionGameplay.HideInventory()
000104:0x00075f00:	rts
DispatcherCaller::CallMethod()
000110:0x00075f08:	imove	@m00, 0x000000
000110:0x00075f18:	cmpi	@m00, call_id
000110:0x00075f28:	bne	0x075f60
000113:0x00075f30:	movec	p, params
000113:0x00075f40:	call	DispatcherCaller.SendLogAtClient(p)
000114:0x00075f50:	jump	0x076160
000114:0x00075f58:	jump	0x075f88
000114:0x00075f60:	imove	@m00, 0x000003
000114:0x00075f70:	cmpi	@m00, call_id
000114:0x00075f80:	bne	0x075fb8
000116:0x00075f88:	movec	p, params
000116:0x00075f98:	call	DispatcherCaller.ScriptConsoleAddPrint(p)
000117:0x00075fa8:	jump	0x076160
000117:0x00075fb0:	jump	0x075fe0
000117:0x00075fb8:	imove	@m00, 0x000001
000117:0x00075fc8:	cmpi	@m00, call_id
000117:0x00075fd8:	bne	0x075ff8
000119:0x00075fe0:	call	DispatcherCaller.ScriptConsoleHistoryBack()
000120:0x00075fe8:	jump	0x076160
000120:0x00075ff0:	jump	0x076020
000120:0x00075ff8:	imove	@m00, 0x000002
000120:0x00076008:	cmpi	@m00, call_id
000120:0x00076018:	bne	0x076038
000122:0x00076020:	call	DispatcherCaller.ScriptConsoleHistoryForward()
000123:0x00076028:	jump	0x076160
000123:0x00076030:	jump	0x076060
000123:0x00076038:	imove	@m00, 0x000004
000123:0x00076048:	cmpi	@m00, call_id
000123:0x00076058:	bne	0x076098
000125:0x00076060:	call	DispatcherCaller.ScriptConsoleGetSqfCommandWatcher(params)
000125:0x00076070:	movec	ret, ret
000125:0x00076080:	rts
000126:0x00076088:	jump	0x076160
000126:0x00076090:	jump	0x0760c0
000126:0x00076098:	imove	@m00, 0x000005
000126:0x000760a8:	cmpi	@m00, call_id
000126:0x000760b8:	bne	0x0760e0
000128:0x000760c0:	call	DispatcherCaller.ScriptConsoleGetSqfCommandWatcherResult(params)
000129:0x000760d0:	jump	0x076160
000129:0x000760d8:	jump	0x076108
000129:0x000760e0:	imove	@m00, 0x000006
000129:0x000760f0:	cmpi	@m00, call_id
000129:0x00076100:	bne	0x076128
000131:0x00076108:	call	DispatcherCaller.SceneEditorCommand(params)
000132:0x00076118:	jump	0x076160
000132:0x00076120:	jump	0x076150
000132:0x00076128:	imove	@m00, 0x000007
000132:0x00076138:	cmpi	@m00, call_id
000132:0x00076148:	bne	0x076160
000134:0x00076150:	call	DispatcherCaller.MissionGameplayHideInventory()
000135:0x00076158:	jump	0x076160
000135:0x00076160:	rts
NotificationMessage::NotificationMessage()
//scripts/5_Mission/mission/missionBase.c
000018:0x000761e8:	ncall	GetGame()
000018:0x000761f0:	ncalli	CGame.GetWorkspace()
000018:0x000761f8:	ncalli	Widget.FindAnyWidget(_s'NotificationFrameWidget')
000018:0x00076200:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/notification_info.layout', ret)
000018:0x00076208:	movetm	m_notification_widget, ret
000019:0x00076218:	ncalli	Widget.FindAnyWidget(_s'NoticiationLabellTextWidget')
000019:0x00076220:	movetm	m_notification_label, ret
000020:0x00076230:	ncalli	Widget.FindAnyWidget(_s'NotificationMultilineTextWidget')
000020:0x00076238:	movetm	m_notification_text, ret
000021:0x00076248:	movefm	[0x11cf2b58], m_notification_widget
000021:0x00076258:	ncalli	Widget.Show(false)
000023:0x00076260:	new	@c00, WidgetFadeTimer
000023:0x00076280:	movec	m_fade_timer, @c00
000024:0x00076290:	new	@c00, Timer
000024:0x000762b8:	movec	m_timeout_timer, @c00
000024:0x000762c8:	rts
NotificationMessage::Show()
000038:0x00076338:	imove	do_show, 0x000001
000039:0x00076348:	imove	@m00, 0x000000
000039:0x00076358:	cmpi	@m00, priority
000039:0x00076368:	bne	0x0763b0
000042:0x00076370:	movefm	[0x11d09418], m_notification_label
000042:0x00076380:	ncalli	TextWidget.SetColor(COLOR_RED)
000043:0x00076388:	movefm	[0x11d09418], m_notification_text
000043:0x00076398:	ncalli	TextWidget.SetColor(COLOR_RED)
000044:0x000763a0:	jump	0x076490
000044:0x000763a8:	jump	0x0763d8
000044:0x000763b0:	imove	@m00, 0x000001
000044:0x000763c0:	cmpi	@m00, priority
000044:0x000763d0:	bne	0x076418
000046:0x000763d8:	movefm	[0x11d09418], m_notification_label
000046:0x000763e8:	ncalli	TextWidget.SetColor(COLOR_YELLOW)
000047:0x000763f0:	movefm	[0x11d09418], m_notification_text
000047:0x00076400:	ncalli	TextWidget.SetColor(COLOR_YELLOW)
000048:0x00076408:	jump	0x076490
000048:0x00076410:	jump	0x076440
000048:0x00076418:	imove	@m00, 0x000004
000048:0x00076428:	cmpi	@m00, priority
000048:0x00076438:	bne	0x076478
000050:0x00076440:	movefm	[0x11d09418], m_notification_label
000050:0x00076450:	ncalli	TextWidget.SetColor(COLOR_GREEN)
000051:0x00076458:	movefm	[0x11d09418], m_notification_text
000051:0x00076468:	ncalli	TextWidget.SetColor(COLOR_GREEN)
000052:0x00076470:	jump	0x076490
000054:0x00076478:	imove	do_show, 0x000000
000056:0x00076488:	jump	0x076490
000058:0x00076490:	cmpi	do_show, _i0
000058:0x000764a0:	beq	0x0765b8
000060:0x000764a8:	cmps	label, _s''
000060:0x000764b8:	beq	0x0764d8
000062:0x000764c0:	movefm	[0x11d09418], m_notification_label
000062:0x000764d0:	ncalli	TextWidget.SetText(label)
000064:0x000764d8:	cmps	text, _s''
000064:0x000764e8:	beq	0x076508
000066:0x000764f0:	movefm	[0x11d09418], m_notification_text
000066:0x00076500:	ncalli	TextWidget.SetText(text)
000068:0x00076508:	movem	w, m_notification_widget
000068:0x00076518:	movec	[0x3cd17188], m_fade_timer
000068:0x00076528:	call	WidgetFadeTimer.FadeIn(w, FADE_IN_DURATION, _i0)
000069:0x00076538:	movec	obj, m_fade_timer
000069:0x00076548:	movem	p1, m_notification_widget
000069:0x00076558:	new	@c00, Param2<Widget,float>
000069:0x00076580:	movec	params, @c00
000069:0x00076590:	movec	[0x3cd17138], m_timeout_timer
000069:0x000765a0:	call	Timer.Run(FADE_TIMEOUT, obj, _s'FadeOut', params, _i0)
000069:0x000765b8:	rts
NotificationMessage::Hide()
000075:0x000765c0:	movefm	[0x11cf2b58], m_notification_widget
000075:0x000765d0:	ncalli	Widget.Show(false)
000076:0x000765d8:	movec	[0x3cd17138], m_timeout_timer
000076:0x000765e8:	call	Timer.Stop()
000077:0x000765f0:	movec	[0x3cd17188], m_fade_timer
000077:0x00076600:	call	WidgetFadeTimer.Stop()
000077:0x00076608:	rts
MissionBase::MissionBase()
000091:0x00076650:	new	@c00, Timer
000091:0x00076678:	movec	m_notificationTimer, @c00
000092:0x00076688:	movec	obj, this
000092:0x00076698:	movec	params, NULL
000092:0x000766a8:	movec	[0x3cd17138], m_notificationTimer
000092:0x000766b8:	call	Timer.Run(_f15.000000, obj, _s'CheckNotification', params, true)
000092:0x000766d0:	rts
MissionBase::~MissionBase()
000099:0x000766d8:	ncall	GetGame()
000099:0x000766e0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000099:0x000766f0:	movec	obj, this
000099:0x00076700:	call	CallQueue.RemoveCalls(obj)
000101:0x00076710:	delete	m_notificationTimer
000102:0x00076718:	movec	m_notificationTimer, NULL
000104:0x00076728:	call	DeletePlugins()
000104:0x00076730:	rts
MissionBase::CreateScriptedMenu()
000109:0x00076758:	movetm	menu, NULL
000111:0x00076768:	imove	@m00, 0x000800
000111:0x00076778:	cmpi	@m00, id
000111:0x00076788:	bne	0x076830
000114:0x00076790:	call	GetDayZGame()
000114:0x00076798:	call	DayZGame.IsMainMenu2()
000114:0x000767a0:	cmpi	ret, _i0
000114:0x000767b0:	beq	0x0767f0
000116:0x000767b8:	new	@c00, MainMenu2
000116:0x000767d8:	movetm	menu, @c00
000116:0x000767e8:	jump	0x076820
000120:0x000767f0:	new	@c00, MainMenu
000120:0x00076810:	movetm	menu, @c00
000122:0x00076820:	jump	0x076fe0
000122:0x00076828:	jump	0x076858
000122:0x00076830:	imove	@m00, 0x000080
000122:0x00076840:	cmpi	@m00, id
000122:0x00076850:	bne	0x076898
000124:0x00076858:	new	@c00, InGameMenu
000124:0x00076878:	movetm	menu, @c00
000125:0x00076888:	jump	0x076fe0
000125:0x00076890:	jump	0x0768c0
000125:0x00076898:	imove	@m00, 0x000010
000125:0x000768a8:	cmpi	@m00, id
000125:0x000768b8:	bne	0x076900
000127:0x000768c0:	new	@c00, CharacterMenu
000127:0x000768e0:	movetm	menu, @c00
000128:0x000768f0:	jump	0x076fe0
000128:0x000768f8:	jump	0x076928
000128:0x00076900:	imove	@m00, 0x001000
000128:0x00076910:	cmpi	@m00, id
000128:0x00076920:	bne	0x076968
000130:0x00076928:	new	@c00, OptionsMenu
000130:0x00076948:	movetm	menu, @c00
000131:0x00076958:	jump	0x076fe0
000131:0x00076960:	jump	0x076990
000131:0x00076968:	imove	@m00, 0x000008
000131:0x00076978:	cmpi	@m00, id
000131:0x00076988:	bne	0x0769d0
000133:0x00076990:	new	@c00, AssignmentMenu
000133:0x000769b0:	movetm	menu, @c00
000134:0x000769c0:	jump	0x076fe0
000134:0x000769c8:	jump	0x0769f8
000134:0x000769d0:	imove	@m00, 0x008000
000134:0x000769e0:	cmpi	@m00, id
000134:0x000769f0:	bne	0x076a38
000136:0x000769f8:	new	@c00, StartupMenu
000136:0x00076a18:	movetm	menu, @c00
000137:0x00076a28:	jump	0x076fe0
000137:0x00076a30:	jump	0x076a60
000137:0x00076a38:	imove	@m00, 0x000400
000137:0x00076a48:	cmpi	@m00, id
000137:0x00076a58:	bne	0x076aa0
000139:0x00076a60:	new	@c00, LoadingMenu
000139:0x00076a80:	movetm	menu, @c00
000140:0x00076a90:	jump	0x076fe0
000140:0x00076a98:	jump	0x076ac8
000140:0x00076aa0:	imove	@m00, 0x000200
000140:0x00076ab0:	cmpi	@m00, id
000140:0x00076ac0:	bne	0x076b08
000142:0x00076ac8:	new	@c00, InventoryMenu
000142:0x00076ae8:	movetm	menu, @c00
000143:0x00076af8:	jump	0x076fe0
000143:0x00076b00:	jump	0x076b30
000143:0x00076b08:	imove	@m00, 0x000100
000143:0x00076b18:	cmpi	@m00, id
000143:0x00076b28:	bne	0x076b70
000145:0x00076b30:	new	@c00, InspectMenu
000145:0x00076b50:	movetm	menu, @c00
000146:0x00076b60:	jump	0x076fe0
000146:0x00076b68:	jump	0x076b98
000146:0x00076b70:	imove	@m00, 0x000040
000146:0x00076b80:	cmpi	@m00, id
000146:0x00076b90:	bne	0x076bd8
000148:0x00076b98:	new	@c00, EarlyAccessMenu
000148:0x00076bb8:	movetm	menu, @c00
000149:0x00076bc8:	jump	0x076fe0
000149:0x00076bd0:	jump	0x076c00
000149:0x00076bd8:	imove	@m00, 0x004000
000149:0x00076be8:	cmpi	@m00, id
000149:0x00076bf8:	bne	0x076c40
000151:0x00076c00:	new	@c00, ScriptConsole
000151:0x00076c20:	movetm	menu, @c00
000152:0x00076c30:	jump	0x076fe0
000152:0x00076c38:	jump	0x076c68
000152:0x00076c40:	imove	@m00, 0x020000
000152:0x00076c50:	cmpi	@m00, id
000152:0x00076c60:	bne	0x076ca8
000154:0x00076c68:	new	@c00, ScriptConsoleNewPresetDialog
000154:0x00076c88:	movetm	menu, @c00
000155:0x00076c98:	jump	0x076fe0
000155:0x00076ca0:	jump	0x076cd0
000155:0x00076ca8:	imove	@m00, 0x040000
000155:0x00076cb8:	cmpi	@m00, id
000155:0x00076cc8:	bne	0x076d10
000157:0x00076cd0:	new	@c00, ScriptConsoleRenamePresetDialog
000157:0x00076cf0:	movetm	menu, @c00
000158:0x00076d00:	jump	0x076fe0
000158:0x00076d08:	jump	0x076d38
000158:0x00076d10:	imove	@m00, 0x010000
000158:0x00076d20:	cmpi	@m00, id
000158:0x00076d30:	bne	0x076d78
000160:0x00076d38:	new	@c00, ChatInputMenu
000160:0x00076d58:	movetm	menu, @c00
000161:0x00076d68:	jump	0x076fe0
000161:0x00076d70:	jump	0x076da0
000161:0x00076d78:	imove	@m00, 0x080000
000161:0x00076d88:	cmpi	@m00, id
000161:0x00076d98:	bne	0x076de0
000163:0x00076da0:	new	@c00, PresetsMenu
000163:0x00076dc0:	movetm	menu, @c00
000164:0x00076dd0:	jump	0x076fe0
000164:0x00076dd8:	jump	0x076e08
000164:0x00076de0:	imove	@m00, 0x100000
000164:0x00076df0:	cmpi	@m00, id
000164:0x00076e00:	bne	0x076e48
000166:0x00076e08:	new	@c00, NoteMenu
000166:0x00076e28:	movetm	menu, @c00
000167:0x00076e38:	jump	0x076fe0
000167:0x00076e40:	jump	0x076e70
000167:0x00076e48:	imove	@m00, 0x200000
000167:0x00076e58:	cmpi	@m00, id
000167:0x00076e68:	bne	0x076eb0
000169:0x00076e70:	new	@c00, MapMenu
000169:0x00076e90:	movetm	menu, @c00
000170:0x00076ea0:	jump	0x076fe0
000170:0x00076ea8:	jump	0x076ed8
000170:0x00076eb0:	imove	@m00, 0x400000
000170:0x00076ec0:	cmpi	@m00, id
000170:0x00076ed0:	bne	0x076f18
000172:0x00076ed8:	new	@c00, BookMenu
000172:0x00076ef8:	movetm	menu, @c00
000173:0x00076f08:	jump	0x076fe0
000173:0x00076f10:	jump	0x076f40
000173:0x00076f18:	imove	@m00, 0x002000
000173:0x00076f28:	cmpi	@m00, id
000173:0x00076f38:	bne	0x076f80
000175:0x00076f40:	new	@c00, SceneEditorMenu
000175:0x00076f60:	movetm	menu, @c00
000176:0x00076f70:	jump	0x076fe0
000176:0x00076f78:	jump	0x076fa8
000176:0x00076f80:	imove	@m00, 0x800000
000176:0x00076f90:	cmpi	@m00, id
000176:0x00076fa0:	bne	0x076fe0
000178:0x00076fa8:	new	@c00, HelpScreen
000178:0x00076fc8:	movetm	menu, @c00
000179:0x00076fd8:	jump	0x076fe0
000182:0x00076fe0:	cmpcm	menu, NULL
000182:0x00076ff0:	beq	0x077008
000184:0x00076ff8:	call	UIScriptedMenu.SetID(id)
000187:0x00077008:	movem	ret, menu
000187:0x00077018:	release	menu
000187:0x00077020:	rts
000187:0x00077028:	release	menu
000187:0x00077030:	rts
MissionBase::CreateScriptedWindow()
000192:0x00077058:	movec	window, NULL
000194:0x00077068:	imove	@m00, 0x000001
000194:0x00077078:	cmpi	@m00, id
000194:0x00077088:	bne	0x0770d0
000197:0x00077090:	new	@c00, MissionLoader
000197:0x000770b8:	movec	window, @c00
000198:0x000770c8:	jump	0x0770d0
000201:0x000770d0:	movec	ret, window
000201:0x000770e0:	rts
000201:0x000770e8:	rts
MissionBase::OnKeyPress()
000242:0x000770f0:	call	Mission.OnKeyPress(key)
000244:0x00077100:	ncall	GetGame()
000244:0x00077108:	ncalli	CGame.IsDebug()
000244:0x00077110:	cmpi	ret, _i0
000244:0x00077120:	beq	0x077150
000246:0x00077128:	cmpc	instance, NULL
000246:0x00077138:	beq	0x077150
000248:0x00077140:	call	PluginKeyBinding.OnKeyPress(key)
000248:0x00077150:	rts
MissionBase::OnKeyRelease()
000255:0x00077158:	call	Mission.OnKeyRelease(key)
000257:0x00077168:	ncall	GetGame()
000257:0x00077170:	ncalli	CGame.IsDebug()
000257:0x00077178:	cmpi	ret, _i0
000257:0x00077188:	beq	0x0771b8
000259:0x00077190:	cmpc	instance, NULL
000259:0x000771a0:	beq	0x0771b8
000261:0x000771a8:	call	PluginKeyBinding.OnKeyRelease(key)
000261:0x000771b8:	rts
MissionBase::OnMouseButtonPress()
000268:0x000771c0:	call	Mission.OnMouseButtonPress(button)
000270:0x000771d0:	ncall	GetGame()
000270:0x000771d8:	ncalli	CGame.IsDebug()
000270:0x000771e0:	cmpi	ret, _i0
000270:0x000771f0:	beq	0x077220
000272:0x000771f8:	cmpc	instance, NULL
000272:0x00077208:	beq	0x077220
000274:0x00077210:	call	PluginKeyBinding.OnMouseButtonPress(button)
000274:0x00077220:	rts
MissionBase::OnMouseButtonRelease()
000281:0x00077228:	call	Mission.OnMouseButtonRelease(button)
000283:0x00077238:	ncall	GetGame()
000283:0x00077240:	ncalli	CGame.IsDebug()
000283:0x00077248:	cmpi	ret, _i0
000283:0x00077258:	beq	0x077288
000285:0x00077260:	cmpc	instance, NULL
000285:0x00077270:	beq	0x077288
000287:0x00077278:	call	PluginKeyBinding.OnMouseButtonRelease(button)
000287:0x00077288:	rts
MissionBase::OnEvent()
000294:0x000772e0:	call	Mission.OnEvent(eventTypeId, params)
000297:0x000772f0:	movea	@m00, ScriptLogEventTypeID
000297:0x00077300:	cmpc	@m00, eventTypeId
000297:0x00077310:	bne	0x077378
000300:0x00077318:	ncall	GetGame()
000300:0x00077320:	ncalli	CGame.IsDebug()
000300:0x00077328:	cmpi	ret, _i0
000300:0x00077338:	beq	0x077370
000302:0x00077340:	movec	log_params, params
000303:0x00077350:	moves	msg_log, param1
000303:0x00077360:	call	MissionBase.OnLog(msg_log)
000306:0x00077370:	jump	0x077378
000306:0x00077378:	rts
MissionBase::OnLog()
000312:0x00077380:	call	GetInstance()
000312:0x00077388:	cmpc	ret, NULL
000312:0x00077398:	beq	0x077478
000314:0x000773a0:	ncall	GetGame()
000314:0x000773a8:	ncalli	CGame.IsServer()
000314:0x000773b0:	cmpi	ret, _i0
000314:0x000773c0:	beq	0x077410
000314:0x000773c8:	ncall	GetGame()
000314:0x000773d0:	ncalli	CGame.IsMultiplayer()
000314:0x000773d8:	cmpi	ret, _i0
000314:0x000773e8:	bne	0x077410
000316:0x000773f0:	call	GetInstance()
000316:0x000773f8:	call	PluginDeveloper.PrintLogClient(msg_log)
000316:0x00077408:	jump	0x077478
000318:0x00077410:	ncall	GetGame()
000318:0x00077418:	ncalli	CGame.IsMultiplayer()
000318:0x00077420:	cmpi	ret, _i0
000318:0x00077430:	beq	0x077478
000318:0x00077438:	ncall	GetGame()
000318:0x00077440:	ncalli	CGame.IsClient()
000318:0x00077448:	cmpi	ret, _i0
000318:0x00077458:	beq	0x077478
000320:0x00077460:	call	GetInstance()
000320:0x00077468:	call	PluginDeveloper.PrintLogClient(msg_log)
000320:0x00077478:	rts
MissionBase::CheckNotification()
000327:0x000775a8:	ncall	GetGame()
000327:0x000775b0:	ncalli	CGame.CheckHiveEvents()
000327:0x000775b8:	cmpi	ret, _i0
000327:0x000775c8:	beq	0x0776a8
000332:0x000775d0:	ncall	GetGame()
000332:0x000775d8:	icall	CGame.GetLastHiveEvent(notification_message, notification_value, notification_priority)
000333:0x000775e8:	adds	@s04, notification_message, _s' '
000333:0x000775f8:	moves	@s03, @s04
000333:0x00077608:	icall	ToString(notification_value)
000333:0x00077610:	adds	@s03, @s03, ret
000333:0x00077620:	moves	@s02, @s03
000333:0x00077630:	adds	@s02, @s02, _s' '
000333:0x00077640:	moves	@s01, @s02
000333:0x00077650:	icall	ToString(notification_priority)
000333:0x00077658:	adds	@s01, @s01, ret
000333:0x00077668:	moves	@s00, @s01
000333:0x00077678:	call	String(@s00)
000333:0x00077688:	moves	notification_message, ret
000334:0x00077698:	call	MissionBase.ShowNotification(_s'NOTIFICATION', notification_message, notification_priority)
000334:0x000776a8:	rts
MissionBase::ShowNotification()
000340:0x000776b0:	cmpc	m_notification_widget, NULL
000340:0x000776c0:	beq	0x0776e8
000342:0x000776c8:	movec	[0x7035990], m_notification_widget
000342:0x000776d8:	call	NotificationMessage.Show(label, text, priority)
000342:0x000776e8:	rts
MissionDummy::OnKeyPress()
000351:0x00077718:	call	MissionBase.OnKeyPress(key)
000352:0x00077728:	cmpi	key, _i16
000352:0x00077738:	bne	0x077740
000352:0x00077740:	rts
ActivityGear::~ActivityGear()
//scripts/5_Mission/mission/missionGameplay.c
000010:0x00077748:	call	ActivityGear.DestroyInventory()
000010:0x00077750:	rts
ActivityGear::OnSimulate()
000015:0x00077798:	imove	init, 0x000000
000016:0x000777a8:	ncall	GetGame()
000016:0x000777b0:	ncalli	CGame.GetUIManager()
000016:0x000777b8:	ncalli	UIManager.GetMenu()
000016:0x000777c0:	movetm	menu, ret
000018:0x000777d0:	cmpcm	menu, NULL
000018:0x000777e0:	bne	0x0778f0
000018:0x000777e8:	ncall	GetGame()
000018:0x000777f0:	ncalli	CGame.GetPlayer()
000018:0x000777f8:	ncalli	Man.CanOpenInventory()
000018:0x00077800:	cmpi	ret, _i0
000018:0x00077810:	beq	0x0778f0
000020:0x00077818:	cmpcm	m_inventory_menu, NULL
000020:0x00077828:	bne	0x077870
000022:0x00077830:	ncall	GetGame()
000022:0x00077838:	ncalli	CGame.GetUIManager()
000022:0x00077840:	movec	[0x3cd3f3e0], NULL
000022:0x00077850:	ncalli	UIManager.EnterScriptedMenu(MENU_INVENTORY, [0x3cd3f3e0])
000022:0x00077858:	movetm	m_inventory_menu, ret
000022:0x00077868:	jump	0x0778e0
000024:0x00077870:	ncall	GetGame()
000024:0x00077878:	ncalli	CGame.GetUIManager()
000024:0x00077880:	call	UIManager.FindMenu(MENU_INVENTORY)
000024:0x00077890:	cmpcm	ret, NULL
000024:0x000778a0:	bne	0x0778e0
000026:0x000778a8:	ncall	GetGame()
000026:0x000778b0:	ncalli	CGame.GetUIManager()
000026:0x000778b8:	movefm	[0x3cd3f4b0], m_inventory_menu
000026:0x000778c8:	movec	[0x3cd3f4d0], NULL
000026:0x000778d8:	ncalli	UIManager.ShowScriptedMenu([0x3cd3f4b0], [0x3cd3f4d0])
000028:0x000778e0:	imove	init, 0x000001
000031:0x000778f0:	cmpcm	menu, NULL
000031:0x00077900:	beq	0x077930
000031:0x00077908:	cmpm	menu, m_inventory_menu
000031:0x00077918:	bne	0x077930
000033:0x00077920:	imove	init, 0x000001
000036:0x00077930:	cmpcm	m_inventory_menu, NULL
000036:0x00077940:	beq	0x077998
000036:0x00077948:	cmpi	init, _i0
000036:0x00077958:	beq	0x077998
000038:0x00077960:	movec	[0x45f9f240], m_target
000038:0x00077970:	call	Link<EntityAI>.Ptr()
000038:0x00077978:	movefm	[0x7035a80], m_inventory_menu
000038:0x00077988:	call	InventoryMenu.InitContainers(ret)
000041:0x00077998:	imove	ret, 0x000000
000041:0x000779a8:	release	menu
000041:0x000779b0:	rts
000041:0x000779b8:	release	menu
000041:0x000779c0:	rts
ActivityGear::DestroyInventory()
000046:0x000779c8:	cmpcm	m_inventory_menu, NULL
000046:0x000779d8:	beq	0x077a08
000048:0x000779e0:	movefm	[0x7035a80], m_inventory_menu
000048:0x000779f0:	ncalli	InventoryMenu.Close()
000049:0x000779f8:	movetm	m_inventory_menu, NULL
000049:0x00077a08:	rts
MissionGameplay::MissionGameplay()
000078:0x00077a10:	imove	m_initialized, 0x000000
000079:0x00077a20:	movetm	m_hud_root_widget, NULL
000080:0x00077a30:	new	@c00, Chat
000080:0x00077a50:	movec	m_chat, @c00
000081:0x00077a60:	new	@c00, ActionMenu
000081:0x00077a80:	movec	m_actionMenu, @c00
000082:0x00077a90:	imove	m_life_state, 0xffffffff
000083:0x00077aa0:	new	@c00, IngameHud
000083:0x00077ac0:	movec	m_hud, @c00
000084:0x00077ad0:	new	@c00, WidgetFadeTimer
000084:0x00077af0:	movec	m_chat_channel_fade_timer, @c00
000085:0x00077b00:	new	@c00, Timer
000085:0x00077b28:	movec	m_chat_channel_hide_timer, @c00
000087:0x00077b38:	new	@c00, InventoryManager
000087:0x00077b58:	movec	m_drag_manager, @c00
000087:0x00077b68:	rts
MissionGameplay::~MissionGameplay()
000092:0x00077b70:	delete	m_chat
000093:0x00077b78:	delete	m_actionMenu
000094:0x00077b80:	delete	m_hud
000095:0x00077b88:	delete	m_hud_debug
000096:0x00077b90:	delete	m_drag_manager
000096:0x00077b98:	rts
MissionGameplay::OnInit()
000101:0x00077cc0:	cmpi	m_initialized, _i0
000101:0x00077cd0:	beq	0x077ce0
000102:0x00077cd8:	rts
000104:0x00077ce0:	imove	m_initialized, 0x000001
000107:0x00077cf0:	cmpcm	m_hud_root_widget, NULL
000107:0x00077d00:	bne	0x077f28
000109:0x00077d08:	ncall	GetGame()
000109:0x00077d10:	ncalli	CGame.GetWorkspace()
000109:0x00077d18:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_hud.layout', _c0)
000109:0x00077d20:	movetm	m_hud_root_widget, ret
000110:0x00077d30:	movefm	[0x11cf2b58], m_hud_root_widget
000110:0x00077d40:	ncalli	Widget.Show(false)
000111:0x00077d48:	movefm	[0x11cf2b58], m_hud_root_widget
000111:0x00077d58:	ncalli	Widget.FindAnyWidget(_s'ChatFrameWidget')
000111:0x00077d60:	movetm	root_widget, ret
000111:0x00077d70:	movec	[0x45f4f040], m_chat
000111:0x00077d80:	call	Chat.Init(root_widget)
000112:0x00077d90:	movefm	[0x11cf2b58], m_hud_root_widget
000112:0x00077da0:	ncalli	Widget.FindAnyWidget(_s'ActionsPanel')
000112:0x00077da8:	movetm	actions_panel_widget, ret
000112:0x00077db8:	movefm	[0x11cf2b58], m_hud_root_widget
000112:0x00077dc8:	pushc	ret
000112:0x00077dd0:	ncalli	Widget.FindAnyWidget(_s'DefaultActionWidget')
000112:0x00077dd8:	movec	@c02, ret
000112:0x00077de8:	popc	ret
000112:0x00077df0:	movetm	default_action_widget, @c02
000112:0x00077e00:	movec	[0x70358d8], m_actionMenu
000112:0x00077e10:	call	ActionMenu.Init(actions_panel_widget, default_action_widget)
000113:0x00077e20:	movefm	[0x11cf2b58], m_hud_root_widget
000113:0x00077e30:	ncalli	Widget.FindAnyWidget(_s'HudPanel')
000113:0x00077e38:	movetm	hud_panel_widget, ret
000113:0x00077e48:	movec	[0x7034e70], m_hud
000113:0x00077e58:	call	IngameHud.Init(hud_panel_widget)
000114:0x00077e68:	movefm	[0x11cf2b58], m_hud_root_widget
000114:0x00077e78:	ncalli	Widget.FindAnyWidget(_s'mic')
000114:0x00077e80:	movetm	m_microphone_icon, ret
000117:0x00077e90:	movem	root_widget, m_hud_root_widget
000117:0x00077ea0:	new	@c00, NotificationMessage
000117:0x00077ec8:	movec	m_notification_widget, @c00
000120:0x00077ed8:	movefm	[0x11cf2b58], m_hud_root_widget
000120:0x00077ee8:	ncalli	Widget.FindAnyWidget(_s'ChatChannelPanel')
000120:0x00077ef0:	movetm	m_chat_channel_area, ret
000121:0x00077f00:	movefm	[0x11cf2b58], m_hud_root_widget
000121:0x00077f10:	ncalli	Widget.FindAnyWidget(_s'ChatChannelText')
000121:0x00077f18:	movetm	m_chat_channel_text, ret
000126:0x00077f28:	ncall	GetGame()
000126:0x00077f30:	ncalli	CGame.IsDebug()
000126:0x00077f38:	cmpi	ret, _i0
000126:0x00077f48:	beq	0x078018
000128:0x00077f50:	new	@c00, HudDebug
000128:0x00077f70:	movec	m_hud_debug, @c00
000130:0x00077f80:	movec	[0x7034b00], m_hud_debug
000130:0x00077f90:	call	HudDebug.IsInitialized()
000130:0x00077f98:	cmpi	ret, _i0
000130:0x00077fa8:	bne	0x078018
000132:0x00077fb0:	ncall	GetGame()
000132:0x00077fb8:	ncalli	CGame.GetWorkspace()
000132:0x00077fc0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_hud_debug.layout', _c0)
000132:0x00077fc8:	movetm	hud_panel_widget, ret
000132:0x00077fd8:	movec	[0x7034b00], m_hud_debug
000132:0x00077fe8:	call	HudDebug.Init(hud_panel_widget)
000135:0x00077ff8:	call	GetInstance()
000135:0x00078000:	call	PluginConfigDebugProfile.GetLogsEnabled()
000135:0x00078008:	call	SetEnabledLogs(ret)
000140:0x00078018:	new	@c00, ActivityGear
000140:0x00078038:	new	@c01, Ref<ActivityGear>
000140:0x00078060:	movec	m_gear_activity, @c01
000141:0x00078070:	movec	[0x704e7c0], m_gear_activity
000141:0x00078080:	call	Ref<ActivityGear>.AddRef()
000141:0x00078088:	rts
MissionGameplay::OnMissionStart()
000146:0x00078090:	movefm	[0x11cf2b58], m_hud_root_widget
000146:0x000780a0:	ncalli	Widget.Show(true)
000147:0x000780a8:	ncalli	DayZGame.GetUIManager()
000147:0x000780b0:	ncalli	UIManager.ShowCursor(false)
000148:0x000780b8:	call	DayZGame.SetMissionState(MISSION_STATE_GAME)
000148:0x000780c8:	rts
MissionGameplay::TickScheduler()
000154:0x000780f0:	ncall	GetGame()
000154:0x000780f8:	ncalli	CGame.GetPlayer()
000154:0x00078100:	movetm	player, ret
000156:0x00078110:	cmpcm	player, NULL
000156:0x00078120:	beq	0x078130
000156:0x00078128:	call	PlayerBase.OnTick()
000156:0x00078130:	release	player
000156:0x00078138:	rts
MissionGameplay::OnMissionFinish()
000161:0x00078200:	ncall	GetGame()
000161:0x00078208:	ncalli	CGame.GetPlayer()
000161:0x00078210:	movetm	player, ret
000163:0x00078220:	cmpcm	player, NULL
000163:0x00078230:	beq	0x078298
000165:0x00078238:	call	PlayerBase.GetLastShavedSeconds()
000165:0x00078240:	move	player_last_shaved_seconds, ret
000166:0x00078250:	ncall	GetGame()
000166:0x00078258:	icall	ToString(player_last_shaved_seconds)
000166:0x00078260:	ncalli	CGame.SetProfileString(_s'lastShavedSeconds', ret)
000167:0x00078268:	call	PlayerBase.GetCachedPlaytime()
000167:0x00078270:	move	player_cached_playtime, ret
000168:0x00078280:	ncall	GetGame()
000168:0x00078288:	icall	ToString(player_cached_playtime)
000168:0x00078290:	ncalli	CGame.SetProfileString(_s'cachedPlaytime', ret)
000171:0x00078298:	ncall	GetGame()
000171:0x000782a0:	ncalli	CGame.GetUIManager()
000171:0x000782a8:	ncalli	UIManager.HideDialog()
000172:0x000782b0:	call	MissionGameplay.DestroyAllMenus()
000174:0x000782b8:	movec	[0x45f4f040], m_chat
000174:0x000782c8:	call	Chat.Destroy()
000175:0x000782d0:	movefm	[0x11cf2b58], m_hud_root_widget
000175:0x000782e0:	ncalli	Widget.Destroy()
000176:0x000782e8:	movetm	m_hud_root_widget, NULL
000177:0x000782f8:	ncalli	DayZGame.GetUIManager()
000177:0x00078300:	ncalli	UIManager.ShowCursor(false)
000178:0x00078308:	call	DayZGame.SetMissionState(MISSION_STATE_FINNISH)
000178:0x00078318:	release	player
000178:0x00078320:	rts
MissionGameplay::OnUpdate()
000183:0x00078470:	ncall	GetGame()
000183:0x00078478:	ncalli	CGame.GetPlayer()
000183:0x00078480:	movetm	player, ret
000184:0x00078490:	ncall	GetGame()
000184:0x00078498:	ncalli	CGame.GetUIManager()
000184:0x000784a0:	movec	manager, ret
000185:0x000784b0:	call	MissionGameplay.TickScheduler(timeslice)
000186:0x000784c0:	ncalli	UIManager.GetMenu()
000186:0x000784c8:	movetm	menu, ret
000187:0x000784d8:	call	UIManager.FindMenu(MENU_INVENTORY)
000187:0x000784e8:	movem	inventory, ret
000188:0x000784f8:	call	UIManager.FindMenu(MENU_INSPECT)
000188:0x00078508:	movem	inspect, ret
000189:0x00078518:	ncall	GetGame()
000189:0x00078520:	ncalli	CGame.GetInput()
000189:0x00078528:	movec	input, ret
000191:0x00078538:	cmpcm	inspect, NULL
000191:0x00078548:	beq	0x078580
000191:0x00078550:	ncalli	Man.CanOpenInventory()
000191:0x00078558:	cmpi	ret, false
000191:0x00078568:	bne	0x078580
000193:0x00078570:	call	UIManager.CloseMenu(MENU_INSPECT)
000196:0x00078580:	cmpcm	player, NULL
000196:0x00078590:	beq	0x0789b8
000196:0x00078598:	cmpi	m_life_state, LifeStateAlive
000196:0x000785a8:	bne	0x0789b8
000198:0x000785b0:	cmpcm	inventory, NULL
000198:0x000785c0:	beq	0x078610
000198:0x000785c8:	cmpm	menu, inventory
000198:0x000785d8:	bne	0x078610
000198:0x000785e0:	ncalli	Input.GetActionDown(UAGear, false, true)
000198:0x000785f0:	cmpi	ret, _i0
000198:0x00078600:	beq	0x078610
000200:0x00078608:	call	MissionGameplay.HideInventory()
000204:0x00078610:	ncalli	Input.GetActionDown(UAChat, false, true)
000204:0x00078620:	cmpi	ret, _i0
000204:0x00078630:	beq	0x0786b0
000206:0x00078638:	cmpcm	menu, NULL
000206:0x00078648:	bne	0x0786b0
000208:0x00078650:	movec	[0x3cd17138], m_chat_channel_hide_timer
000208:0x00078660:	call	Timer.Stop()
000209:0x00078668:	movec	[0x3cd17188], m_chat_channel_fade_timer
000209:0x00078678:	call	WidgetFadeTimer.Stop()
000210:0x00078680:	movefm	[0x11cf2b58], m_chat_channel_area
000210:0x00078690:	ncalli	Widget.Show(false)
000211:0x00078698:	movec	[0x3cd3f3e0], NULL
000211:0x000786a8:	ncalli	UIManager.EnterScriptedMenu(MENU_CHAT_INPUT, [0x3cd3f3e0])
000215:0x000786b0:	ncalli	Input.GetActionDown(UAUIQuickbarToggle, false, true)
000215:0x000786c0:	cmpi	ret, _i0
000215:0x000786d0:	beq	0x078770
000217:0x000786d8:	cmpcm	menu, NULL
000217:0x000786e8:	bne	0x078770
000219:0x000786f0:	cmpc	m_hud, NULL
000219:0x00078700:	beq	0x078770
000221:0x00078708:	movec	[0x7034e70], m_hud
000221:0x00078718:	cmpi	m_quickbar_state, _i0
000221:0x00078728:	beq	0x078758
000223:0x00078730:	movec	[0x7034e70], m_hud
000223:0x00078740:	call	IngameHud.HideQuickbar(_i0, _i0)
000223:0x00078750:	jump	0x078770
000227:0x00078758:	movec	[0x7034e70], m_hud
000227:0x00078768:	call	IngameHud.ShowQuickbar()
000233:0x00078770:	ncalli	DayZGame.GetInput()
000233:0x00078778:	ncalli	Input.GetActionDown(UAZeroingUp, false, _i0)
000233:0x00078788:	cmpi	ret, _i0
000233:0x00078798:	bne	0x078800
000233:0x000787a0:	ncalli	DayZGame.GetInput()
000233:0x000787a8:	ncalli	Input.GetActionDown(UAZeroingDown, false, _i0)
000233:0x000787b8:	cmpi	ret, _i0
000233:0x000787c8:	bne	0x078800
000233:0x000787d0:	ncalli	DayZGame.GetInput()
000233:0x000787d8:	ncalli	Input.GetActionDown(UAToggleWeapons, false, _i0)
000233:0x000787e8:	cmpi	ret, _i0
000233:0x000787f8:	beq	0x078818
000235:0x00078800:	movec	[0x7034e70], m_hud
000235:0x00078810:	call	IngameHud.ZeroingKeyPress()
000239:0x00078818:	ncall	GetGame()
000239:0x00078820:	ncalli	CGame.UpdateCursorTarget()
000241:0x00078828:	cmpcm	menu, NULL
000241:0x00078838:	bne	0x078998
000243:0x00078840:	ncall	GetGame()
000243:0x00078848:	ncalli	CGame.UpdateActionMenuActions()
000244:0x00078850:	movec	[0x70358d8], m_actionMenu
000244:0x00078860:	call	ActionMenu.SetEnabled(true)
000246:0x00078870:	movec	[0x70358d8], m_actionMenu
000246:0x00078880:	call	ActionMenu.HasDefaultAction()
000246:0x00078888:	cmpi	ret, _i0
000246:0x00078898:	beq	0x0788e0
000246:0x000788a0:	ncalli	Input.GetActionDown(UAAction, false, true)
000246:0x000788b0:	cmpi	ret, _i0
000246:0x000788c0:	beq	0x0788e0
000248:0x000788c8:	movec	[0x70358d8], m_actionMenu
000248:0x000788d8:	call	ActionMenu.PerformAction()
000251:0x000788e0:	movec	[0x70358d8], m_actionMenu
000251:0x000788f0:	call	ActionMenu.IsVisible()
000251:0x000788f8:	cmpi	ret, _i0
000251:0x00078908:	beq	0x078990
000253:0x00078910:	ncalli	Input.GetActionDown(UANextAction, false, true)
000253:0x00078920:	cmpi	ret, _i0
000253:0x00078930:	beq	0x078950
000255:0x00078938:	movec	[0x70358d8], m_actionMenu
000255:0x00078948:	call	ActionMenu.NextAction()
000258:0x00078950:	ncalli	Input.GetActionDown(UAPrevAction, false, true)
000258:0x00078960:	cmpi	ret, _i0
000258:0x00078970:	beq	0x078990
000260:0x00078978:	movec	[0x70358d8], m_actionMenu
000260:0x00078988:	call	ActionMenu.PrevAction()
000260:0x00078990:	jump	0x0789b8
000266:0x00078998:	movec	[0x70358d8], m_actionMenu
000266:0x000789a8:	call	ActionMenu.SetEnabled(false)
000271:0x000789b8:	cmpcm	player, NULL
000271:0x000789c8:	beq	0x078a30
000273:0x000789d0:	ncalli	Man.GetLifeState()
000273:0x000789d8:	move	life_state, ret
000276:0x000789e8:	cmpi	m_life_state, life_state
000276:0x000789f8:	beq	0x078a30
000278:0x00078a00:	move	m_life_state, life_state
000280:0x00078a10:	cmpi	m_life_state, LifeStateAlive
000280:0x00078a20:	beq	0x078a30
000282:0x00078a28:	call	MissionGameplay.DestroyAllMenus()
000287:0x00078a30:	cmpcm	menu, NULL
000287:0x00078a40:	beq	0x078be8
000287:0x00078a48:	call	UIScriptedMenu.UseKeyboard()
000287:0x00078a50:	cmpi	ret, _i0
000287:0x00078a60:	bne	0x078be8
000287:0x00078a68:	call	UIScriptedMenu.UseMouse()
000287:0x00078a70:	cmpi	ret, _i0
000287:0x00078a80:	beq	0x078be8
000290:0x00078a88:	imove	i, 0x000000
000290:0x00078a98:	jump	0x078aa8
000290:0x00078aa0:	inc	i
000290:0x00078aa8:	cmpi	i, _i5
000290:0x00078ab8:	bge	0x078b80
000292:0x00078ac0:	ori	@m01, i, INPUT_DEVICE_MOUSE
000292:0x00078ad0:	move	@m00, @m01
000292:0x00078ae0:	ncalli	Input.DisableKey(@m00)
000293:0x00078ae8:	ori	@m02, i, INPUT_ACTION_TYPE_DOWN_EVENT
000293:0x00078af8:	move	@m01, @m02
000293:0x00078b08:	ori	@m01, @m01, INPUT_DEVICE_MOUSE
000293:0x00078b18:	move	@m00, @m01
000293:0x00078b28:	ncalli	Input.DisableKey(@m00)
000294:0x00078b30:	ori	@m02, i, INPUT_ACTION_TYPE_DOUBLETAP
000294:0x00078b40:	move	@m01, @m02
000294:0x00078b50:	ori	@m01, @m01, INPUT_DEVICE_MOUSE
000294:0x00078b60:	move	@m00, @m01
000294:0x00078b70:	ncalli	Input.DisableKey(@m00)
000294:0x00078b78:	jump	0x078aa0
000297:0x00078b80:	imove	i, 0x000000
000297:0x00078b90:	jump	0x078ba0
000297:0x00078b98:	inc	i
000297:0x00078ba0:	cmpi	i, _i6
000297:0x00078bb0:	bge	0x078be8
000299:0x00078bb8:	ori	@m01, i, INPUT_DEVICE_MOUSE_AXIS
000299:0x00078bc8:	move	@m00, @m01
000299:0x00078bd8:	ncalli	Input.DisableKey(@m00)
000299:0x00078be0:	jump	0x078b98
000303:0x00078be8:	ncall	GetGame()
000303:0x00078bf0:	ncalli	CGame.IsDebug()
000303:0x00078bf8:	cmpi	ret, _i0
000303:0x00078c08:	beq	0x078c50
000305:0x00078c10:	call	GetPlugin(_T(PluginDeveloper))
000305:0x00078c20:	movec	module_dev, ret
000306:0x00078c30:	cmpc	module_dev, NULL
000306:0x00078c40:	beq	0x078c50
000308:0x00078c48:	call	PluginDeveloper.UpdateSqfDebugWatchers()
000312:0x00078c50:	ncalli	UIManager.IsDialogVisible()
000312:0x00078c58:	cmpi	ret, _i0
000312:0x00078c68:	bne	0x078dd8
000314:0x00078c70:	ncalli	UIManager.GetMenu()
000314:0x00078c78:	cmpm	ret, NULL
000314:0x00078c88:	beq	0x078da8
000316:0x00078c90:	ncalli	UIManager.GetMenu()
000316:0x00078c98:	call	UIScriptedMenu.GetID()
000316:0x00078ca0:	cmpi	ret, MENU_INGAME
000316:0x00078cb0:	bne	0x078d18
000318:0x00078cb8:	ncalli	Input.GetActionDown(UAUIBack, false, true)
000318:0x00078cc8:	cmpi	ret, _i0
000318:0x00078cd8:	bne	0x078d08
000318:0x00078ce0:	ncalli	Input.GetActionDown(UAUIMenu, false, true)
000318:0x00078cf0:	cmpi	ret, _i0
000318:0x00078d00:	beq	0x078d10
000320:0x00078d08:	call	MissionGameplay.Continue()
000320:0x00078d10:	jump	0x078da0
000323:0x00078d18:	ncalli	UIManager.GetMenu()
000323:0x00078d20:	cmpmc	ret, inventory
000323:0x00078d30:	bne	0x078d70
000325:0x00078d38:	ncalli	Input.GetActionDown(UAUIBack, false, true)
000325:0x00078d48:	cmpi	ret, _i0
000325:0x00078d58:	beq	0x078d68
000327:0x00078d60:	call	MissionGameplay.HideInventory()
000327:0x00078d68:	jump	0x078da0
000330:0x00078d70:	ncalli	Input.GetActionDown(UAUIBack, false, true)
000330:0x00078d80:	cmpi	ret, _i0
000330:0x00078d90:	beq	0x078da0
000332:0x00078d98:	call	UIManager.Back()
000332:0x00078da0:	jump	0x078dd8
000335:0x00078da8:	ncalli	Input.GetActionDown(UAUIMenu, false, true)
000335:0x00078db8:	cmpi	ret, _i0
000335:0x00078dc8:	beq	0x078dd8
000337:0x00078dd0:	call	MissionGameplay.Pause()
000337:0x00078dd8:	release	player
000337:0x00078de0:	release	menu
000337:0x00078de8:	release	inventory
000337:0x00078df0:	release	inspect
000337:0x00078df8:	rts
MissionGameplay::OnKeyPress()
000345:0x00078e00:	call	MissionBase.OnKeyPress(key)
000346:0x00078e10:	movec	[0x7034e70], m_hud
000346:0x00078e20:	call	IngameHud.KeyPress(key)
000347:0x00078e30:	ncall	GetGame()
000347:0x00078e38:	ncalli	CGame.IsDebug()
000347:0x00078e40:	cmpi	ret, _i0
000347:0x00078e50:	beq	0x078e70
000349:0x00078e58:	cmpi	key, _i16
000349:0x00078e68:	bne	0x078e70
000349:0x00078e70:	rts
Param3<Widget,float,bool>::Param3()
//scripts/1_CoreExt/param.c
000068:0x000791d8:	movem	param1, p1
000069:0x000791e8:	move	param2, p2
000070:0x000791f8:	move	param3, p3
000070:0x00079208:	rts
MissionGameplay::OnEvent()
//scripts/5_Mission/mission/missionGameplay.c
000358:0x00079260:	call	MissionBase.OnEvent(eventTypeId, params)
000360:0x00079270:	ncall	GetGame()
000360:0x00079278:	ncalli	CGame.GetPlayer()
000360:0x00079280:	movetm	player, ret
000362:0x00079290:	movea	@m00, ChatMessageEventTypeID
000362:0x000792a0:	cmpc	@m00, eventTypeId
000362:0x000792b0:	bne	0x079478
000365:0x000792b8:	movec	chat_params, params
000366:0x000792c8:	cmpi	param1, CCSystem
000366:0x000792d8:	bne	0x079310
000366:0x000792e0:	call	GetProfileValueBool(SYSTEM_CHAT_MSG, true)
000366:0x000792f0:	cmpi	ret, false
000366:0x00079300:	bne	0x079310
000366:0x00079308:	jump	0x0798b0
000367:0x00079310:	cmpi	param1, CCGlobal
000367:0x00079320:	bne	0x079358
000367:0x00079328:	call	GetProfileValueBool(GLOBAL_CHAT_MSG, true)
000367:0x00079338:	cmpi	ret, false
000367:0x00079348:	bne	0x079358
000367:0x00079350:	jump	0x0798b0
000368:0x00079358:	cmpi	param1, CCItemTransmitter
000368:0x00079368:	bne	0x0793a0
000368:0x00079370:	call	GetProfileValueBool(RADIO_CHAT_MSG, true)
000368:0x00079380:	cmpi	ret, false
000368:0x00079390:	bne	0x0793a0
000368:0x00079398:	jump	0x0798b0
000369:0x000793a0:	cmpi	param1, CCDirect
000369:0x000793b0:	bne	0x0793e8
000369:0x000793b8:	call	GetProfileValueBool(DIRECT_CHAT_MSG, true)
000369:0x000793c8:	cmpi	ret, false
000369:0x000793d8:	bne	0x0793e8
000369:0x000793e0:	jump	0x0798b0
000370:0x000793e8:	cmpi	param1, CCVehicle
000370:0x000793f8:	bne	0x079430
000370:0x00079400:	call	GetProfileValueBool(VEHICLE_CHAT_MSG, true)
000370:0x00079410:	cmpi	ret, false
000370:0x00079420:	bne	0x079430
000370:0x00079428:	jump	0x0798b0
000372:0x00079430:	cmpi	m_life_state, LifeStateAlive
000372:0x00079440:	bne	0x079468
000374:0x00079448:	movec	[0x45f4f040], m_chat
000374:0x00079458:	call	Chat.Add(chat_params)
000376:0x00079468:	jump	0x0798b0
000376:0x00079470:	jump	0x0794a0
000376:0x00079478:	movea	@m00, SQFConsoleEventTypeID
000376:0x00079488:	cmpc	@m00, eventTypeId
000376:0x00079498:	bne	0x079500
000379:0x000794a0:	movec	sqf_console_params, params
000380:0x000794b0:	cmpi	param1, _i0
000380:0x000794c0:	beq	0x0794e0
000384:0x000794c8:	ncalli	DayZGame.GetUIManager()
000384:0x000794d0:	ncalli	UIManager.ShowCursor(true)
000384:0x000794d8:	jump	0x0794f0
000389:0x000794e0:	ncalli	DayZGame.GetUIManager()
000389:0x000794e8:	ncalli	UIManager.ShowCursor(false)
000391:0x000794f0:	jump	0x0798b0
000391:0x000794f8:	jump	0x079528
000391:0x00079500:	movea	@m00, ActionMenuChangedEventTypeID
000391:0x00079510:	cmpc	@m00, eventTypeId
000391:0x00079520:	bne	0x079550
000394:0x00079528:	movec	[0x70358d8], m_actionMenu
000394:0x00079538:	call	ActionMenu.UpdateActions()
000395:0x00079540:	jump	0x0798b0
000395:0x00079548:	jump	0x079578
000395:0x00079550:	movea	@m00, InventoryActionsEventTypeID
000395:0x00079560:	cmpc	@m00, eventTypeId
000395:0x00079570:	bne	0x079648
000398:0x00079578:	movec	act_params, params
000399:0x00079588:	ncalli	DayZGame.GetUIManager()
000399:0x00079590:	call	UIManager.FindMenu(MENU_INVENTORY)
000399:0x000795a0:	movem	menu, ret
000400:0x000795b0:	cmpcm	menu, NULL
000400:0x000795c0:	beq	0x079638
000400:0x000795c8:	cmpm	param1, player
000400:0x000795d8:	bne	0x079638
000403:0x000795e0:	call	GetInstance()
000403:0x000795e8:	movec	manager, ret
000404:0x000795f8:	movem	entity1, param2
000404:0x00079608:	movem	entity2, param3
000404:0x00079618:	movem	test, param4
000404:0x00079628:	call	InventoryManager.UpdateEntityActions(entity1, entity2, test)
000406:0x00079638:	jump	0x0798b0
000406:0x00079640:	jump	0x079670
000406:0x00079648:	movea	@m00, ChatChannelEventTypeID
000406:0x00079658:	cmpc	@m00, eventTypeId
000406:0x00079668:	bne	0x0797d0
000409:0x00079670:	movec	cc_params, params
000410:0x00079680:	ncall	GetGame()
000410:0x00079688:	ncalli	CGame.GetUIManager()
000410:0x00079690:	call	UIManager.FindMenu(MENU_CHAT_INPUT)
000410:0x000796a0:	movem	chatMenu, ret
000411:0x000796b0:	cmpcm	chatMenu, NULL
000411:0x000796c0:	beq	0x0796d8
000413:0x000796c8:	call	ChatInputMenu.UpdateChannel()
000413:0x000796d0:	jump	0x0797c0
000417:0x000796d8:	move	channel, param1
000417:0x000796e8:	call	GetChannelName(channel)
000417:0x000796f8:	movefm	[0x11d09418], m_chat_channel_text
000417:0x00079708:	ncalli	TextWidget.SetText(ret)
000418:0x00079710:	movem	w, m_chat_channel_area
000418:0x00079720:	movec	[0x3cd17188], m_chat_channel_fade_timer
000418:0x00079730:	call	WidgetFadeTimer.FadeIn(w, _f0.500000, true)
000419:0x00079740:	movec	obj, m_chat_channel_fade_timer
000419:0x00079750:	movem	p1, m_chat_channel_area
000419:0x00079760:	new	@c00, Param3<Widget,float,bool>
000419:0x00079788:	movec	params, @c00
000419:0x00079798:	movec	[0x3cd17138], m_chat_channel_hide_timer
000419:0x000797a8:	call	Timer.Run(_f2.000000, obj, _s'FadeOut', params, _i0)
000421:0x000797c0:	jump	0x0798b0
000421:0x000797c8:	jump	0x0797f8
000421:0x000797d0:	movea	@m00, WindowsResizeEventTypeID
000421:0x000797e0:	cmpc	@m00, eventTypeId
000421:0x000797f0:	bne	0x079818
000424:0x000797f8:	call	MissionGameplay.CloseAllMenus()
000425:0x00079800:	call	MissionGameplay.DestroyAllMenus()
000426:0x00079808:	jump	0x0798b0
000426:0x00079810:	jump	0x079840
000426:0x00079818:	movea	@m00, VONStateEventTypeID
000426:0x00079828:	cmpc	@m00, eventTypeId
000426:0x00079838:	bne	0x0798a8
000429:0x00079840:	movec	vonStateParams, params
000430:0x00079850:	cmpi	param1, _i0
000430:0x00079860:	beq	0x079888
000432:0x00079868:	movefm	[0x11d095f8], m_microphone_icon
000432:0x00079878:	ncalli	ImageWidget.Show(true)
000432:0x00079880:	jump	0x0798a0
000436:0x00079888:	movefm	[0x11d095f8], m_microphone_icon
000436:0x00079898:	ncalli	ImageWidget.Show(false)
000438:0x000798a0:	jump	0x0798b0
000438:0x000798a8:	release	chatMenu
000438:0x000798b0:	release	menu
000438:0x000798b8:	release	player
000438:0x000798c0:	rts
MissionGameplay::OnItemUsed()
000444:0x00079938:	cmpcm	item, NULL
000444:0x00079948:	beq	0x079a78
000444:0x00079950:	ncall	GetGame()
000444:0x00079958:	ncalli	CGame.GetUIManager()
000444:0x00079960:	ncalli	UIManager.GetMenu()
000444:0x00079968:	cmpm	ret, NULL
000444:0x00079978:	bne	0x079a78
000446:0x00079980:	movefm	[0x11d0a2c8], item
000446:0x00079990:	ncall	IsInherited([0x11d0a2c8], _T(ItemBook))
000446:0x00079998:	cmpi	ret, _i0
000446:0x000799a8:	beq	0x079a20
000448:0x000799b0:	ncall	GetGame()
000448:0x000799b8:	ncalli	CGame.GetUIManager()
000448:0x000799c0:	movec	[0x3cd3f3e0], NULL
000448:0x000799d0:	ncalli	UIManager.EnterScriptedMenu(MENU_BOOK, [0x3cd3f3e0])
000448:0x000799d8:	movetm	bookMenu, ret
000449:0x000799e8:	cmpcm	bookMenu, NULL
000449:0x000799f8:	beq	0x079a10
000451:0x00079a00:	call	BookMenu.ReadBook(item)
000451:0x00079a10:	release	bookMenu
000451:0x00079a18:	jump	0x079a78
000454:0x00079a20:	movefm	[0x11d0a2c8], item
000454:0x00079a30:	ncall	IsInherited([0x11d0a2c8], _T(ItemMap))
000454:0x00079a38:	cmpi	ret, _i0
000454:0x00079a48:	beq	0x079a78
000456:0x00079a50:	ncall	GetGame()
000456:0x00079a58:	ncalli	CGame.GetUIManager()
000456:0x00079a60:	movec	[0x3cd3f3e0], NULL
000456:0x00079a70:	ncalli	UIManager.EnterScriptedMenu(MENU_MAP, [0x3cd3f3e0])
000456:0x00079a78:	rts
MissionGameplay::CloseAllMenus()
000463:0x00079a80:	call	MissionGameplay.HideInventory()
000464:0x00079a88:	ncall	GetGame()
000464:0x00079a90:	ncalli	CGame.GetUIManager()
000464:0x00079a98:	call	UIManager.CloseAll()
000464:0x00079aa0:	rts
MissionGameplay::DestroyAllMenus()
000469:0x00079aa8:	ncall	GetGame()
000469:0x00079ab0:	ncalli	CGame.GetUIManager()
000469:0x00079ab8:	ncalli	UIManager.HideDialog()
000470:0x00079ac0:	movec	[0x704e7c0], m_gear_activity
000470:0x00079ad0:	call	Ref<ActivityGear>.Ptr()
000470:0x00079ad8:	call	ActivityGear.DestroyInventory()
000471:0x00079ae0:	ncall	GetGame()
000471:0x00079ae8:	ncalli	CGame.GetUIManager()
000471:0x00079af0:	call	UIManager.CloseAll()
000472:0x00079af8:	movec	[0x45f4f040], m_chat
000472:0x00079b08:	call	Chat.Clear()
000472:0x00079b10:	rts
MissionGameplay::HideInventory()
000477:0x00079b38:	ncall	GetGame()
000477:0x00079b40:	ncalli	CGame.GetUIManager()
000477:0x00079b48:	call	UIManager.FindMenu(MENU_INVENTORY)
000477:0x00079b58:	movem	inventory, ret
000478:0x00079b68:	cmpcm	inventory, NULL
000478:0x00079b78:	beq	0x079ba8
000480:0x00079b80:	ncall	GetGame()
000480:0x00079b88:	ncalli	CGame.GetUIManager()
000480:0x00079b90:	movefm	[0x3cd3f528], inventory
000480:0x00079ba0:	ncalli	UIManager.HideScriptedMenu([0x3cd3f528])
000480:0x00079ba8:	release	inventory
000480:0x00079bb0:	rts
MissionGameplay::CreateActivity()
000486:0x00079bb8:	cmpi	activity_type, ATGear
000486:0x00079bc8:	bne	0x079cb0
000488:0x00079bd0:	movec	[0x704e7c0], m_gear_activity
000488:0x00079be0:	call	Ref<ActivityGear>.Ptr()
000488:0x00079be8:	cmpc	m_target, NULL
000488:0x00079bf8:	beq	0x079c20
000490:0x00079c00:	movec	[0x704e7c0], m_gear_activity
000490:0x00079c10:	call	Ref<ActivityGear>.Ptr()
000490:0x00079c18:	delete	m_target
000492:0x00079c20:	movec	[0x704e7c0], m_gear_activity
000492:0x00079c30:	call	Ref<ActivityGear>.Ptr()
000492:0x00079c38:	movem	init, target
000492:0x00079c48:	new	@c00, Link<EntityAI>
000492:0x00079c70:	movec	m_target, @c00
000493:0x00079c80:	movec	[0x704e7c0], m_gear_activity
000493:0x00079c90:	call	Ref<ActivityGear>.Ptr()
000493:0x00079c98:	movec	ret, ret
000493:0x00079ca8:	rts
000496:0x00079cb0:	movec	ret, NULL
000496:0x00079cc0:	rts
000496:0x00079cc8:	rts
MissionGameplay::GetHud()
000501:0x00079cd0:	movec	ret, m_hud
000501:0x00079ce0:	rts
000501:0x00079ce8:	rts
MissionGameplay::GetHudDebug()
000506:0x00079cf0:	movec	ret, m_hud_debug
000506:0x00079d00:	rts
000506:0x00079d08:	rts
MissionGameplay::RefreshCrosshairVisibility()
000511:0x00079d10:	call	MissionGameplay.GetHudDebug()
000511:0x00079d18:	call	HudDebug.RefreshCrosshairVisibility()
000511:0x00079d20:	rts
MissionGameplay::IsPaused()
000516:0x00079d28:	ncall	GetGame()
000516:0x00079d30:	ncalli	CGame.GetUIManager()
000516:0x00079d38:	call	UIManager.IsMenuOpen(MENU_INGAME)
000516:0x00079d48:	move	ret, ret
000516:0x00079d58:	rts
000516:0x00079d60:	rts
MissionGameplay::Pause()
000521:0x00079d68:	call	MissionGameplay.IsPaused()
000521:0x00079d70:	cmpi	ret, _i0
000521:0x00079d80:	beq	0x079d90
000521:0x00079d88:	rts
000523:0x00079d90:	call	MissionGameplay.CloseAllMenus()
000526:0x00079d98:	ncall	GetGame()
000526:0x00079da0:	ncalli	CGame.GetUIManager()
000526:0x00079da8:	movec	[0x3cd3f3e0], NULL
000526:0x00079db8:	ncalli	UIManager.EnterScriptedMenu(MENU_INGAME, [0x3cd3f3e0])
000526:0x00079dc0:	rts
MissionGameplay::Continue()
000531:0x00079dc8:	call	MissionGameplay.IsPaused()
000531:0x00079dd0:	cmpi	ret, _i0
000531:0x00079de0:	bne	0x079df0
000531:0x00079de8:	rts
000533:0x00079df0:	ncall	GetGame()
000533:0x00079df8:	ncalli	CGame.GetUIManager()
000533:0x00079e00:	call	UIManager.CloseMenu(MENU_INGAME)
000533:0x00079e10:	rts
MissionGameplay::IsMissionGameplay()
000538:0x00079e18:	imove	ret, 0x000001
000538:0x00079e28:	rts
000538:0x00079e30:	rts
MissionMainMenu::GetIntroScene()
//scripts/5_Mission/mission/missionMainMenu.c
000009:0x00079e38:	movem	ret, m_intro_scene
000009:0x00079e48:	rts
000009:0x00079e50:	rts
MissionMainMenu::OnInit()
000018:0x00079e58:	cmpi	m_NoCutscene, _i0
000018:0x00079e68:	bne	0x079e78
000020:0x00079e70:	call	MissionMainMenu.CreateIntroScene()
000023:0x00079e78:	cmpcm	m_mainmenu, NULL
000023:0x00079e88:	bne	0x079f20
000025:0x00079e90:	call	GetDayZGame()
000025:0x00079e98:	call	DayZGame.IsMainMenu2()
000025:0x00079ea0:	cmpi	ret, _i0
000025:0x00079eb0:	beq	0x079ef0
000027:0x00079eb8:	ncalli	DayZGame.GetUIManager()
000027:0x00079ec0:	movec	[0x3cd3f3e0], NULL
000027:0x00079ed0:	ncalli	UIManager.EnterScriptedMenu(MENU_MAIN, [0x3cd3f3e0])
000027:0x00079ed8:	movetm	m_mainmenu, ret
000027:0x00079ee8:	jump	0x079f20
000031:0x00079ef0:	ncalli	DayZGame.GetUIManager()
000031:0x00079ef8:	movec	[0x3cd3f3e0], NULL
000031:0x00079f08:	ncalli	UIManager.EnterScriptedMenu(MENU_MAIN, [0x3cd3f3e0])
000031:0x00079f10:	movetm	m_mainmenu, ret
000031:0x00079f20:	rts
MissionMainMenu::CreateIntroScene()
000038:0x00079f28:	call	MissionMainMenu.DestroyIntroScene()
000039:0x00079f30:	new	@c00, DayZIntroScene
000039:0x00079f50:	movetm	m_intro_scene, @c00
000039:0x00079f60:	rts
MissionMainMenu::DestroyIntroScene()
000045:0x00079f68:	cmpcm	m_intro_scene, NULL
000045:0x00079f78:	beq	0x079f88
000045:0x00079f80:	delete	m_intro_scene
000046:0x00079f88:	movetm	m_intro_scene, NULL
000046:0x00079f98:	rts
MissionMainMenu::OnMissionStart()
000051:0x00079fa0:	cmpcm	m_mainmenu, NULL
000051:0x00079fb0:	beq	0x079fb8
000056:0x00079fb8:	ncalli	DayZGame.GetUIManager()
000056:0x00079fc0:	ncalli	UIManager.ShowCursor(true)
000058:0x00079fc8:	call	DayZGame.SetMissionState(MISSION_STATE_MAINMENU)
000058:0x00079fd8:	rts
MissionMainMenu::OnMissionFinish()
000063:0x00079fe0:	movefm	[0x3cd18040], m_mainmenu
000063:0x00079ff0:	call	UIScriptedMenu.Cleanup()
000064:0x00079ff8:	ncall	GetGame()
000064:0x0007a000:	ncalli	CGame.GetUIManager()
000064:0x0007a008:	call	UIManager.CloseAll()
000065:0x0007a010:	movetm	m_mainmenu, NULL
000067:0x0007a020:	call	MissionMainMenu.DestroyIntroScene()
000068:0x0007a028:	ncalli	DayZGame.GetUIManager()
000068:0x0007a030:	ncalli	UIManager.ShowCursor(false)
000068:0x0007a038:	rts
Param1<UIScriptedMenu>::Param1()
//scripts/1_CoreExt/param.c
000030:0x0007a120:	movem	param1, p1
000030:0x0007a130:	rts
MissionMainMenu::OnUpdate()
//scripts/5_Mission/mission/missionMainMenu.c
000073:0x0007a138:	call	DayZGame.IsLoading()
000073:0x0007a140:	cmpi	ret, _i0
000073:0x0007a150:	beq	0x07a160
000073:0x0007a158:	rts
000075:0x0007a160:	cmpcm	m_intro_scene, NULL
000075:0x0007a170:	beq	0x07a190
000077:0x0007a178:	movefm	[0x7034fc8], m_intro_scene
000077:0x0007a188:	call	DayZIntroScene.Update()
000080:0x0007a190:	cmpcm	m_mainmenu, NULL
000080:0x0007a1a0:	beq	0x07a1c8
000082:0x0007a1a8:	movefm	[0x3cd18040], m_mainmenu
000082:0x0007a1b8:	call	UIScriptedMenu.Update(timeslice)
000085:0x0007a1c8:	ncall	GetGame()
000085:0x0007a1d0:	ncalli	CGame.GetInput()
000085:0x0007a1d8:	ncalli	Input.GetActionDown(UAUIBack, false, true)
000085:0x0007a1e8:	cmpi	ret, _i0
000085:0x0007a1f8:	beq	0x07a248
000087:0x0007a200:	ncall	GetGame()
000087:0x0007a208:	ncalli	CGame.GetUIManager()
000087:0x0007a210:	ncalli	UIManager.GetMenu()
000087:0x0007a218:	cmpmc	ret, m_mainmenu
000087:0x0007a228:	beq	0x07a248
000089:0x0007a230:	ncall	GetGame()
000089:0x0007a238:	ncalli	CGame.GetUIManager()
000089:0x0007a240:	call	UIManager.Back()
000093:0x0007a248:	ncall	GetGame()
000093:0x0007a250:	ncalli	CGame.GetUIManager()
000093:0x0007a258:	ncalli	UIManager.GetMenu()
000093:0x0007a260:	cmpmc	ret, m_mainmenu
000093:0x0007a270:	bne	0x07a360
000095:0x0007a278:	ncalli	DayZGame.GetUIManager()
000095:0x0007a280:	ncalli	UIManager.GetLoginQueueDialog()
000095:0x0007a288:	cmpi	ret, _i0
000095:0x0007a298:	bne	0x07a360
000095:0x0007a2a0:	ncalli	DayZGame.GetUIManager()
000095:0x0007a2a8:	ncalli	UIManager.GetLoginQueuePosition()
000095:0x0007a2b0:	cmpi	ret, _i0
000095:0x0007a2c0:	ble	0x07a360
000097:0x0007a2c8:	ncalli	DayZGame.GetUIManager()
000097:0x0007a2d0:	ncalli	UIManager.SetLoginQueueDialog(true)
000098:0x0007a2d8:	ncall	GetGame()
000098:0x0007a2e0:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000098:0x0007a2f0:	ncalli	DayZGame.GetUIManager()
000098:0x0007a2f8:	movec	obj, ret
000098:0x0007a308:	movem	p1, m_mainmenu
000098:0x0007a318:	new	@c00, Param1<UIScriptedMenu>
000098:0x0007a340:	movec	params, @c00
000098:0x0007a350:	call	CallQueue.Call(obj, _s'EnterLoginQueueScript', params)
000098:0x0007a360:	rts
MissionServer::MissionServer()
//scripts/5_Mission/mission/missionServer.c
000009:0x0007a388:	new	@c00, Timer
000009:0x0007a3b0:	movec	m_UpdatePlayerStatsTimer, @c00
000010:0x0007a3c0:	movec	obj, this
000010:0x0007a3d0:	movec	params, NULL
000010:0x0007a3e0:	movec	[0x3cd17138], m_UpdatePlayerStatsTimer
000010:0x0007a3f0:	call	Timer.Run(_f30.000000, obj, _s'UpdatePlayersStats', params, true)
000011:0x0007a408:	call	MissionServer.UpdatePlayersStats()
000012:0x0007a410:	new	@c00, array<Man>
000012:0x0007a430:	movetm	m_Players, @c00
000013:0x0007a440:	imove	m_currentPlayer, 0x000000
000013:0x0007a450:	rts
MissionServer::~MissionServer()
000018:0x0007a458:	delete	m_UpdatePlayerStatsTimer
000018:0x0007a460:	rts
MissionServer::TickScheduler()
000023:0x0007a4b8:	ncall	GetGame()
000023:0x0007a4c0:	ncalli	CGame.GetWorld()
000023:0x0007a4c8:	movefm	[0x3cd35d80], m_Players
000023:0x0007a4d8:	ncalli	World.GetPlayerList([0x3cd35d80])
000025:0x0007a4e0:	movefm	[0x3cd2d358], m_Players
000025:0x0007a4f0:	ncalli	array<Man>.Count()
000025:0x0007a4f8:	cmpi	m_currentPlayer, ret
000025:0x0007a508:	blt	0x07a520
000027:0x0007a510:	imove	m_currentPlayer, 0x000000
000030:0x0007a520:	movefm	[0x3cd2d358], m_Players
000030:0x0007a530:	ncalli	array<Man>.Count()
000030:0x0007a538:	cmpi	ret, _i0
000030:0x0007a548:	beq	0x07a590
000033:0x0007a550:	movefm	[0x3cd2d358], m_Players
000033:0x0007a560:	icall	array<Man>.Get(m_currentPlayer)
000033:0x0007a568:	movetm	currentPlayer, ret
000034:0x0007a578:	call	PlayerBase.OnTick()
000035:0x0007a580:	inc	m_currentPlayer
000035:0x0007a588:	release	currentPlayer
000035:0x0007a590:	rts
MissionServer::OnInit()
000043:0x0007a888:	cmpi	m_EnfTraderMod, _i0
000043:0x0007a898:	beq	0x07a8e0
000045:0x0007a8a0:	ncall	GetGame()
000045:0x0007a8a8:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\traderScript.sqf';')
000046:0x0007a8b0:	ncall	GetGame()
000046:0x0007a8b8:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\Trader_objs.sqf';')
000047:0x0007a8c0:	ncall	GetGame()
000047:0x0007a8c8:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....traderScript.sqf';')
000048:0x0007a8d0:	ncall	GetGame()
000048:0x0007a8d8:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....Trader_objs.sqf';')
000051:0x0007a8e0:	cmpi	m_EnfVIPsystem, _i0
000051:0x0007a8f0:	beq	0x07a918
000053:0x0007a8f8:	ncall	GetGame()
000053:0x0007a900:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\VIP_CoolDownSYS.sqf';')
000054:0x0007a908:	ncall	GetGame()
000054:0x0007a910:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....VIP_CoolDownSYS.sqf';')
000057:0x0007a918:	cmpi	m_CustomBuilds, _i0
000057:0x0007a928:	beq	0x07a970
000059:0x0007a930:	ncall	GetGame()
000059:0x0007a938:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\Builds_0.sqf';')
000060:0x0007a940:	ncall	GetGame()
000060:0x0007a948:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\Builds_1.sqf';')
000061:0x0007a950:	ncall	GetGame()
000061:0x0007a958:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....Builds_0.sqf';')
000062:0x0007a960:	ncall	GetGame()
000062:0x0007a968:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....Builds_1.sqf';')
000065:0x0007a970:	cmpi	m_AdminTool, _i0
000065:0x0007a980:	beq	0x07a9a8
000067:0x0007a988:	ncall	GetGame()
000067:0x0007a990:	ncalli	CGame.ExecuteSQF(_s'call compile preprocessFileLineNumbers '\dz\420Mods\PVE_subscripts\Admin_Tool.sqf';')
000068:0x0007a998:	ncall	GetGame()
000068:0x0007a9a0:	ncalli	CGame.ExecuteSQF(_s'diag_log 'MISSION: Script exec....Admin_Tool.sqf';')
000072:0x0007a9a8:	adds	@s02, _s'$profile:', _s'Admin_List'
000072:0x0007a9b8:	moves	@s01, @s02
000072:0x0007a9c8:	adds	@s01, @s01, _s'.txt'
000072:0x0007a9d8:	moves	@s00, @s01
000072:0x0007a9e8:	icall	OpenFile(@s00, _i1)
000072:0x0007a9f0:	movea	AdminList, ret
000073:0x0007aa00:	cmpc	AdminList, _i0
000073:0x0007aa10:	beq	0x07aaf0
000075:0x0007aa18:	ncall	GetGame()
000075:0x0007aa20:	ncalli	CGame.ExecuteSQF(_s'Owners = [];')
000077:0x0007aa28:	icall	FGets(AdminList, line_content)
000077:0x0007aa30:	cmpi	ret, _i0
000077:0x0007aa40:	ble	0x07aaf0
000079:0x0007aa48:	icall	array<string>.Insert(line_content)
000080:0x0007aa50:	ncall	GetGame()
000080:0x0007aa58:	adds	@s02, _s' Owners = Owners + ['', line_content
000080:0x0007aa68:	moves	@s01, @s02
000080:0x0007aa78:	adds	@s01, @s01, _s'']; '
000080:0x0007aa88:	moves	@s00, @s01
000080:0x0007aa98:	ncalli	CGame.ExecuteSQF(@s00)
000081:0x0007aaa0:	adds	@s01, _s'Admin: ', line_content
000081:0x0007aab0:	moves	@s00, @s01
000081:0x0007aac0:	adds	@s00, @s00, _s' Processing UID..'
000081:0x0007aad0:	moves	@s01, @s00
000081:0x0007aae0:	icall	Print(@s01)
000081:0x0007aae8:	jump	0x07aa28
000085:0x0007aaf0:	icall	CloseFile(AdminList)
000085:0x0007aaf8:	rts
MissionServer::OnUpdate()
000090:0x0007ab00:	call	MissionServer.TickScheduler(timeslice)
000090:0x0007ab10:	rts
MissionServer::IsServer()
000095:0x0007ab18:	imove	ret, 0x000001
000095:0x0007ab28:	rts
000095:0x0007ab30:	rts
MissionServer::UpdatePlayersStats()
000100:0x0007abb8:	new	@c00, array<Man>
000100:0x0007abd8:	movetm	players, @c00
000101:0x0007abe8:	ncalli	DayZGame.GetWorld()
000101:0x0007abf0:	movefm	[0x3cd35d80], players
000101:0x0007ac00:	ncalli	World.GetPlayerList([0x3cd35d80])
000103:0x0007ac08:	imove	i, 0x000000
000103:0x0007ac18:	jump	0x07ac28
000103:0x0007ac20:	inc	i
000103:0x0007ac28:	ncalli	array<Man>.Count()
000103:0x0007ac30:	cmpi	i, ret
000103:0x0007ac40:	bge	0x07acb0
000105:0x0007ac48:	icall	array<Man>.Get(i)
000105:0x0007ac50:	movetm	player, ret
000108:0x0007ac60:	ncalli	PlayerBase.StatUpdateByTime(_s'playtime')
000109:0x0007ac68:	ncalli	PlayerBase.StatUpdateByPosition(_s'dist')
000111:0x0007ac70:	call	GetPlugin(_T(PluginLifespan))
000111:0x0007ac80:	movec	module_lifespan, ret
000112:0x0007ac90:	call	PluginLifespan.UpdateLifespanLevelAuto(player, _i0)
000112:0x0007aca0:	release	player
000112:0x0007aca8:	jump	0x07ac20
000112:0x0007acb0:	delete	players
000112:0x0007acb8:	rts
MissionServer::OnEvent()
000121:0x0007b198:	movea	@m00, ClientNewEventTypeID
000121:0x0007b1a8:	cmpc	@m00, eventTypeId
000121:0x0007b1b8:	bne	0x07b350
000124:0x0007b1c0:	icall	Print(_s'MissionServer::OnEvent::NEW event')
000125:0x0007b1c8:	movec	newParams, params
000142:0x0007b1d8:	ncall	GetGame()
000142:0x0007b1e0:	movec	[0x3cd2b620], param1
000142:0x0007b1f0:	movev	[0x3cd2b660], param2
000142:0x0007b200:	ncalli	CGame.CreateEntity([0x3cd2b620], _s'SurvivorENFANIMSYS', [0x3cd2b660], _f0.000000, _s'NONE')
000142:0x0007b210:	movetm	playerEnt, ret
000144:0x0007b220:	movec	identity, param1
000145:0x0007b230:	movefm	@c00, playerEnt
000145:0x0007b240:	movetm	player, @c00
000152:0x0007b250:	call	PlayerBase.CreateInInventory(_s'Shirt_CheckWhiteNewAnimSystem', _s'')
000152:0x0007b260:	movem	item, ret
000153:0x0007b270:	call	PlayerBase.CreateInInventory(_s'JeansAbove', _s'')
000153:0x0007b280:	movem	item2, ret
000154:0x0007b290:	call	PlayerBase.CreateInInventory(_s'AthleticShoesAbove', _s'')
000154:0x0007b2a0:	movem	item3, ret
000155:0x0007b2b0:	call	PlayerBase.CreateInInventory(_s'BagTortillaAbove', _s'')
000155:0x0007b2c0:	movem	item4, ret
000158:0x0007b2d0:	call	PlayerBase.CreateInInventory(_s'EN5C_Rag', _s'')
000158:0x0007b2e0:	movem	item5, ret
000159:0x0007b2f0:	call	ItemBase.SetQuantity2(_f1.000000, _i1, _i0)
000160:0x0007b300:	call	PlayerBase.CreateInInventory(_s'EN5C_Roadflare', _s'')
000160:0x0007b310:	movem	item, ret
000162:0x0007b320:	ncall	GetGame()
000162:0x0007b328:	movefm	[0x3cd2b720], player
000162:0x0007b338:	ncalli	CGame.SelectPlayer(identity, [0x3cd2b720])
000164:0x0007b340:	jump	0x07b540
000164:0x0007b348:	jump	0x07b378
000164:0x0007b350:	movea	@m00, ClientRespawnEventTypeID
000164:0x0007b360:	cmpc	@m00, eventTypeId
000164:0x0007b370:	bne	0x07b3a0
000167:0x0007b378:	icall	Print(_s'MissionServer::OnEvent::RESPANW event')
000168:0x0007b380:	movec	respawnParams, params
000169:0x0007b390:	jump	0x07b540
000169:0x0007b398:	jump	0x07b3c8
000169:0x0007b3a0:	movea	@m00, ClientReadyEventTypeID
000169:0x0007b3b0:	cmpc	@m00, eventTypeId
000169:0x0007b3c0:	bne	0x07b450
000172:0x0007b3c8:	icall	Print(_s'MissionServer::OnEvent::READY event')
000173:0x0007b3d0:	movec	readyParams, params
000174:0x0007b3e0:	call	MissionServer.InvokeOnConnect(params)
000176:0x0007b3f0:	movec	identity, param1
000177:0x0007b400:	movefm	@c01, param2
000177:0x0007b410:	movetm	player, @c01
000179:0x0007b420:	ncall	GetGame()
000179:0x0007b428:	movefm	[0x3cd2b720], player
000179:0x0007b438:	ncalli	CGame.SelectPlayer(identity, [0x3cd2b720])
000180:0x0007b440:	jump	0x07b540
000180:0x0007b448:	jump	0x07b478
000180:0x0007b450:	movea	@m00, ClientDisconnectedEventTypeID
000180:0x0007b460:	cmpc	@m00, eventTypeId
000180:0x0007b470:	bne	0x07b4e0
000183:0x0007b478:	icall	Print(_s'MissionServer::OnEvent::DISCONECTED event')
000184:0x0007b480:	movec	discoParams, params
000185:0x0007b490:	call	MissionServer.InvokeOnDisconnect(params)
000186:0x0007b4a0:	move	queueTime, param3
000189:0x0007b4b0:	ncall	GetGame()
000189:0x0007b4b8:	movec	[0x3cd2b778], param1
000189:0x0007b4c8:	ncalli	CGame.SetPlayerDisconnected([0x3cd2b778])
000190:0x0007b4d0:	jump	0x07b540
000190:0x0007b4d8:	jump	0x07b508
000190:0x0007b4e0:	movea	@m00, ClientQueuedEventTypeID
000190:0x0007b4f0:	cmpc	@m00, eventTypeId
000190:0x0007b500:	bne	0x07b510
000193:0x0007b508:	jump	0x07b540
000193:0x0007b510:	release	playerEnt
000193:0x0007b518:	release	item
000193:0x0007b520:	release	item2
000193:0x0007b528:	release	item3
000193:0x0007b530:	release	item4
000193:0x0007b538:	release	item5
000193:0x0007b540:	release	player
000193:0x0007b548:	rts
MissionServer::InvokeOnConnect()
000199:0x0007b5f8:	icall	ToString(this)
000199:0x0007b600:	adds	@s01, _s'InvokeOnConnect:', ret
000199:0x0007b610:	moves	@s00, @s01
000199:0x0007b620:	call	Log(@s00, _s'Connect', _s'n/a', _s'n/a', _s'n/a')
000200:0x0007b638:	movec	prms, params
000201:0x0007b648:	movem	player, param2
000202:0x0007b658:	cmpcm	player, NULL
000202:0x0007b668:	beq	0x07b678
000202:0x0007b670:	call	PlayerBase.OnConnect()
000202:0x0007b678:	release	player
000202:0x0007b680:	rts
MissionServer::InvokeOnDisconnect()
000207:0x0007b6e8:	icall	ToString(this)
000207:0x0007b6f0:	adds	@s01, _s'InvokeOnDisconnect:', ret
000207:0x0007b700:	moves	@s00, @s01
000207:0x0007b710:	call	Log(@s00, _s'Connect', _s'n/a', _s'n/a', _s'n/a')
000208:0x0007b728:	movec	prms, params
000209:0x0007b738:	movem	player, param2
000210:0x0007b748:	cmpcm	player, NULL
000210:0x0007b758:	beq	0x07b768
000210:0x0007b760:	call	PlayerBase.OnDisconnect()
000210:0x0007b768:	release	player
000210:0x0007b770:	rts
CreateMission()
//scripts/5_Mission/someMission.c
000003:0x0007b7d8:	new	@c00, DispatcherCaller
000003:0x0007b7f8:	movec	dispatcher, @c00
000003:0x0007b808:	call	SetDispatcher(dispatcher)
000005:0x0007b818:	call	DayZGame.SetMissionPath(path)
000007:0x0007b828:	ncalli	DayZGame.IsMultiplayer()
000007:0x0007b830:	cmpi	ret, _i0
000007:0x0007b840:	beq	0x07b8a0
000007:0x0007b848:	ncalli	DayZGame.IsServer()
000007:0x0007b850:	cmpi	ret, _i0
000007:0x0007b860:	beq	0x07b8a0
000009:0x0007b868:	new	@c00, MissionServer
000009:0x0007b888:	movec	ret, @c00
000009:0x0007b898:	rts
000013:0x0007b8a0:	new	@c00, MissionDummy
000013:0x0007b8c0:	movec	ret, @c00
000013:0x0007b8d0:	rts
000016:0x0007b8d8:	moves	value, path
000016:0x0007b8e8:	call	Contains(value, _s'NoCutscene')
000016:0x0007b8f8:	moves	path, value
000016:0x0007b908:	cmpi	ret, _i0
000016:0x0007b918:	beq	0x07b978
000018:0x0007b920:	new	@c00, MissionMainMenu
000018:0x0007b940:	movec	m, @c00
000019:0x0007b950:	imove	m_NoCutscene, 0x000001
000020:0x0007b960:	movec	ret, m
000020:0x0007b970:	rts
000023:0x0007b978:	moves	value, path
000023:0x0007b988:	call	Contains(value, _s'intro')
000023:0x0007b998:	moves	path, value
000023:0x0007b9a8:	cmpi	ret, _i0
000023:0x0007b9b8:	beq	0x07ba20
000025:0x0007b9c0:	new	@c00, MissionMainMenu
000025:0x0007b9e0:	movec	m, @c00
000026:0x0007b9f0:	imove	m_NoCutscene, 0x000000
000027:0x0007ba00:	movec	ret, m
000027:0x0007ba10:	rts
000027:0x0007ba18:	jump	0x07ba58
000034:0x0007ba20:	new	@c00, MissionDummy
000034:0x0007ba40:	movec	ret, @c00
000034:0x0007ba50:	rts
000034:0x0007ba58:	rts
DestroyMission()
000041:0x0007ba60:	delete	mission
000041:0x0007ba68:	rts
#InitGlobals()
000041:0x0007bad0:	imove	@m00, 0x000000
000041:0x0007bae0:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007baf0:	inc	@m00
000041:0x0007baf8:	ftv	m_DaysInMonth[@m00], _i28
000041:0x0007bb08:	inc	@m00
000041:0x0007bb10:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bb20:	inc	@m00
000041:0x0007bb28:	ftv	m_DaysInMonth[@m00], _i30
000041:0x0007bb38:	inc	@m00
000041:0x0007bb40:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bb50:	inc	@m00
000041:0x0007bb58:	ftv	m_DaysInMonth[@m00], _i30
000041:0x0007bb68:	inc	@m00
000041:0x0007bb70:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bb80:	inc	@m00
000041:0x0007bb88:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bb98:	inc	@m00
000041:0x0007bba0:	ftv	m_DaysInMonth[@m00], _i30
000041:0x0007bbb0:	inc	@m00
000041:0x0007bbb8:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bbc8:	inc	@m00
000041:0x0007bbd0:	ftv	m_DaysInMonth[@m00], _i30
000041:0x0007bbe0:	inc	@m00
000041:0x0007bbe8:	ftv	m_DaysInMonth[@m00], _i31
000041:0x0007bbf8:	inc	@m00
000041:0x0007bc00:	imove	@m01, 0x000000
000041:0x0007bc10:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bc20:	inc	@m01
000041:0x0007bc28:	ftv	m_DaysInMonth[@m01], _i28
000041:0x0007bc38:	inc	@m01
000041:0x0007bc40:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bc50:	inc	@m01
000041:0x0007bc58:	ftv	m_DaysInMonth[@m01], _i30
000041:0x0007bc68:	inc	@m01
000041:0x0007bc70:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bc80:	inc	@m01
000041:0x0007bc88:	ftv	m_DaysInMonth[@m01], _i30
000041:0x0007bc98:	inc	@m01
000041:0x0007bca0:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bcb0:	inc	@m01
000041:0x0007bcb8:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bcc8:	inc	@m01
000041:0x0007bcd0:	ftv	m_DaysInMonth[@m01], _i30
000041:0x0007bce0:	inc	@m01
000041:0x0007bce8:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bcf8:	inc	@m01
000041:0x0007bd00:	ftv	m_DaysInMonth[@m01], _i30
000041:0x0007bd10:	inc	@m01
000041:0x0007bd18:	ftv	m_DaysInMonth[@m01], _i31
000041:0x0007bd28:	inc	@m01
000041:0x0007bd30:	rts
