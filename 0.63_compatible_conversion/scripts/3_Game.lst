array<array<string>>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x000440a0:	imove	i, 0x000000
000341:0x000440b0:	jump	0x0440c0
000341:0x000440b8:	inc	i
000341:0x000440c0:	ncalli	array<array<string>>.Count()
000341:0x000440c8:	cmpi	i, ret
000341:0x000440d8:	bge	0x0440f8
000343:0x000440e0:	icall	array<array<string>>.Get(i)
000343:0x000440e8:	icall	array<array<string>>.Insert(ret)
000343:0x000440f0:	jump	0x0440b8
000343:0x000440f8:	rts
array<array<string>>::RemoveItem()
000366:0x00044120:	movefm	@c00, value
000366:0x00044130:	icall	array<array<string>>.Find(@c00)
000366:0x00044138:	move	remove_index, ret
000368:0x00044148:	cmpi	remove_index, _i0
000368:0x00044158:	blt	0x044168
000370:0x00044160:	ncalli	array<array<string>>.Remove(remove_index)
000370:0x00044168:	rts
array<array<string>>::Debug()
000387:0x00044230:	ncalli	array<array<string>>.Count()
000387:0x00044238:	icall	ToString(ret)
000387:0x00044240:	adds	@s01, _s'Array count: ', ret
000387:0x00044250:	moves	@s00, @s01
000387:0x00044260:	call	PrintString(@s00)
000388:0x00044270:	imove	i, 0x000000
000388:0x00044280:	jump	0x044290
000388:0x00044288:	inc	i
000388:0x00044290:	ncalli	array<array<string>>.Count()
000388:0x00044298:	cmpi	i, ret
000388:0x000442a8:	bge	0x044378
000390:0x000442b0:	icall	array<array<string>>.Get(i)
000390:0x000442b8:	movetm	item, ret
000392:0x000442c8:	cmpcm	item, NULL
000392:0x000442d8:	beq	0x044368
000394:0x000442e0:	icall	ToString(i)
000394:0x000442e8:	adds	@s03, _s'[', ret
000394:0x000442f8:	moves	@s02, @s03
000394:0x00044308:	adds	@s02, @s02, _s'] => '
000394:0x00044318:	moves	@s01, @s02
000394:0x00044328:	icall	ToString(item, _i0, _i0)
000394:0x00044338:	adds	@s01, @s01, ret
000394:0x00044348:	moves	@s00, @s01
000394:0x00044358:	call	PrintString(@s00)
000394:0x00044368:	release	item
000394:0x00044370:	jump	0x044288
000394:0x00044378:	rts
array<array<string>>::GetRandomIndex()
000411:0x000443a0:	ncalli	array<array<string>>.Count()
000411:0x000443a8:	cmpi	ret, _i0
000411:0x000443b8:	ble	0x0443e8
000413:0x000443c0:	ncalli	array<array<string>>.Count()
000413:0x000443c8:	ncall	RandomInt(_i0, ret)
000413:0x000443d0:	move	ret, ret
000413:0x000443e0:	rts
000416:0x000443e8:	imove	ret, 0xffffffff
000416:0x000443f8:	rts
000416:0x00044400:	rts
array<array<string>>::GetRandomElement()
000430:0x00044408:	call	array<array<string>>.GetRandomIndex()
000430:0x00044410:	icall	array<array<string>>.Get(ret)
000430:0x00044418:	movetm	ret, ret
000430:0x00044428:	rts
000430:0x00044430:	rts
array<array<string>>::SwapItems()
000435:0x00044458:	icall	array<array<string>>.Get(item1_index)
000435:0x00044460:	movetm	item1, ret
000436:0x00044470:	icall	array<array<string>>.Get(item2_index)
000436:0x00044478:	icall	array<array<string>>.Set(item1_index, ret)
000437:0x00044480:	movefm	@c00, item1
000437:0x00044490:	icall	array<array<string>>.Set(item2_index, @c00)
000437:0x00044498:	release	item1
000437:0x000444a0:	rts
multiMap<string,string>::HasKey()
//scripts/3_Game/tools/tools.c
000842:0x00044858:	imove	index, 0xffffffff
000843:0x00044868:	cmpcm	m_keys, NULL
000843:0x00044878:	beq	0x0448a8
000845:0x00044880:	movefm	[0x11d0bb58], m_keys
000845:0x00044890:	icall	array<string>.Find(key)
000845:0x00044898:	move	index, ret
000848:0x000448a8:	cmpi	index, _i-1
000848:0x000448b8:	beq	0x0448d8
000850:0x000448c0:	imove	ret, 0x000001
000850:0x000448d0:	rts
000853:0x000448d8:	imove	ret, 0x000000
000853:0x000448e8:	rts
000853:0x000448f0:	rts
multiMap<string,string>::Get()
000858:0x00044918:	imove	index, 0xffffffff
000859:0x00044928:	cmpcm	m_keys, NULL
000859:0x00044938:	beq	0x044968
000861:0x00044940:	movefm	[0x11d0bb58], m_keys
000861:0x00044950:	icall	array<string>.Find(key)
000861:0x00044958:	move	index, ret
000864:0x00044968:	cmpi	index, _i-1
000864:0x00044978:	beq	0x0449b0
000866:0x00044980:	movefm	[0x3cd45e00], m_values
000866:0x00044990:	icall	array<array<string>>.Get(index)
000866:0x00044998:	movetm	ret, ret
000866:0x000449a8:	rts
000869:0x000449b0:	movetm	ret, NULL
000869:0x000449c0:	rts
000869:0x000449c8:	rts
multiMap<string,string>::GetByIndex()
000874:0x000449d0:	movefm	[0x3cd45e00], m_values
000874:0x000449e0:	icall	array<array<string>>.Get(index)
000874:0x000449e8:	movetm	ret, ret
000874:0x000449f8:	rts
000874:0x00044a00:	rts
multiMap<string,string>::GetKeyByIndex()
000879:0x00044a08:	movefm	[0x11d0bb58], m_keys
000879:0x00044a18:	icall	array<string>.Get(index)
000879:0x00044a20:	moves	ret, ret
000879:0x00044a30:	rts
000879:0x00044a38:	rts
multiMap<string,string>::Insert()
000884:0x00044ab0:	imove	index, 0xffffffff
000886:0x00044ac0:	cmpcm	m_keys, NULL
000886:0x00044ad0:	bne	0x044b40
000888:0x00044ad8:	new	@c00, array<string>
000888:0x00044af8:	movetm	m_keys, @c00
000889:0x00044b08:	new	@c00, array<array<string>>
000889:0x00044b28:	movetm	m_values, @c00
000889:0x00044b38:	jump	0x044b68
000893:0x00044b40:	movefm	[0x11d0bb58], m_keys
000893:0x00044b50:	icall	array<string>.Find(key)
000893:0x00044b58:	move	index, ret
000896:0x00044b68:	cmpi	index, _i-1
000896:0x00044b78:	bne	0x044c08
000898:0x00044b80:	new	@c00, array<string>
000898:0x00044ba0:	movetm	value_array, @c00
000899:0x00044bb0:	icall	array<string>.Insert(value)
000901:0x00044bb8:	movefm	[0x11d0bb58], m_keys
000901:0x00044bc8:	icall	array<string>.Insert(key)
000902:0x00044bd0:	movefm	@c00, value_array
000902:0x00044be0:	movefm	[0x3cd45e00], m_values
000902:0x00044bf0:	icall	array<array<string>>.Insert(@c00)
000902:0x00044bf8:	release	value_array
000902:0x00044c00:	jump	0x044c28
000907:0x00044c08:	movefm	[0x3cd45e00], m_values
000907:0x00044c18:	icall	array<array<string>>.Get(index)
000907:0x00044c20:	icall	array<string>.Insert(value)
000907:0x00044c28:	rts
multiMap<string,string>::RemoveByIndex()
000913:0x00044c30:	movefm	[0x3cd45e00], m_values
000913:0x00044c40:	icall	array<array<string>>.Get(index)
000913:0x00044c48:	delete	ret
000914:0x00044c50:	movefm	[0x11d0bb58], m_keys
000914:0x00044c60:	ncalli	array<string>.Remove(index)
000915:0x00044c68:	movefm	[0x3cd45e00], m_values
000915:0x00044c78:	ncalli	array<array<string>>.Remove(index)
000915:0x00044c80:	rts
multiMap<string,string>::Remove()
000920:0x00044ca8:	imove	index, 0xffffffff
000921:0x00044cb8:	cmpcm	m_keys, NULL
000921:0x00044cc8:	beq	0x044cf8
000923:0x00044cd0:	movefm	[0x11d0bb58], m_keys
000923:0x00044ce0:	icall	array<string>.Find(key)
000923:0x00044ce8:	move	index, ret
000926:0x00044cf8:	cmpi	index, _i-1
000926:0x00044d08:	beq	0x044d20
000928:0x00044d10:	call	multiMap<string,string>.RemoveByIndex(index)
000928:0x00044d20:	rts
multiMap<string,string>::Count()
000934:0x00044d28:	cmpcm	m_keys, NULL
000934:0x00044d38:	beq	0x044d70
000936:0x00044d40:	movefm	[0x11d0bb58], m_keys
000936:0x00044d50:	ncalli	array<string>.Count()
000936:0x00044d58:	move	ret, ret
000936:0x00044d68:	rts
000939:0x00044d70:	imove	ret, 0x000000
000939:0x00044d80:	rts
000939:0x00044d88:	rts
multiMap<string,string>::Clear()
000944:0x00044db0:	cmpcm	m_keys, NULL
000944:0x00044dc0:	beq	0x044e88
000944:0x00044dc8:	cmpcm	m_values, NULL
000944:0x00044dd8:	beq	0x044e88
000946:0x00044de0:	imove	i, 0x000000
000946:0x00044df0:	jump	0x044e00
000946:0x00044df8:	inc	i
000946:0x00044e00:	movefm	[0x3cd45e00], m_values
000946:0x00044e10:	ncalli	array<array<string>>.Count()
000946:0x00044e18:	cmpi	i, ret
000946:0x00044e28:	bge	0x044e58
000948:0x00044e30:	movefm	[0x3cd45e00], m_values
000948:0x00044e40:	icall	array<array<string>>.Get(i)
000948:0x00044e48:	delete	ret
000948:0x00044e50:	jump	0x044df8
000951:0x00044e58:	movefm	[0x11d0bb58], m_keys
000951:0x00044e68:	ncalli	array<string>.Clear()
000952:0x00044e70:	movefm	[0x3cd45e00], m_values
000952:0x00044e80:	ncalli	array<array<string>>.Clear()
000952:0x00044e88:	rts
multiMap<string,string>::~multiMap()
000959:0x00044e90:	call	multiMap<string,string>.Clear()
000959:0x00044e98:	rts
Param3<string,string,string>::Param3()
//scripts/1_CoreExt/param.c
000068:0x00045078:	moves	param1, p1
000069:0x00045088:	moves	param2, p2
000070:0x00045098:	moves	param3, p3
000070:0x000450a8:	rts
map<InventoryItem,vector>::ReplaceKey()
//scripts/1_CoreExt/proto\enscript.c
000584:0x000454f0:	movefm	@c00, old_key
000584:0x00045500:	icall	map<InventoryItem,vector>.Contains(@c00)
000584:0x00045508:	cmpi	ret, _i0
000584:0x00045518:	beq	0x045568
000586:0x00045520:	movefm	@c00, new_key
000586:0x00045530:	movefm	@c01, old_key
000586:0x00045540:	icall	map<InventoryItem,vector>.Get(@c01)
000586:0x00045548:	icall	map<InventoryItem,vector>.Set(@c00, ret)
000587:0x00045550:	movefm	@c00, old_key
000587:0x00045560:	icall	map<InventoryItem,vector>.Remove(@c00)
000587:0x00045568:	rts
map<InventoryItem,vector>::GetKeyByValue()
000594:0x000455b0:	imove	i, 0x000000
000594:0x000455c0:	jump	0x0455d0
000594:0x000455c8:	inc	i
000594:0x000455d0:	ncalli	map<InventoryItem,vector>.Count()
000594:0x000455d8:	cmpi	i, ret
000594:0x000455e8:	bge	0x045638
000596:0x000455f0:	icall	map<InventoryItem,vector>.GetElement(i)
000596:0x000455f8:	cmpv	ret, value
000596:0x00045608:	bne	0x045630
000598:0x00045610:	icall	map<InventoryItem,vector>.GetKey(i)
000598:0x00045618:	movetm	ret, ret
000599:0x00045628:	jump	0x045638
000599:0x00045630:	jump	0x0455c8
000603:0x00045638:	movem	ret, ret
000603:0x00045648:	release	ret
000603:0x00045650:	rts
000603:0x00045658:	release	ret
000603:0x00045660:	rts
Link<Object>::Release()
//scripts/1_CoreExt/proto\proto.c
000331:0x000457a0:	ncalli	Link<Object>.Get()
000331:0x000457a8:	movetm	obj, ret
000332:0x000457b8:	cmpcm	obj, NULL
000332:0x000457c8:	beq	0x0457d8
000333:0x000457d0:	call	Object.Release()
000333:0x000457d8:	release	obj
000333:0x000457e0:	rts
Link<Object>::Link()
000337:0x000457e8:	movefm	[0x3cd47728], init
000337:0x000457f8:	ncalli	Link<Object>.Init([0x3cd47728])
000337:0x00045800:	rts
Link<Object>::Ptr()
000342:0x00045808:	ncalli	Link<Object>.Get()
000342:0x00045810:	movetm	ret, ret
000342:0x00045820:	rts
000342:0x00045828:	rts
Link<Object>::IsNull()
000347:0x00045830:	ncalli	Link<Object>.Get()
000347:0x00045838:	cmpm	ret, NULL
000347:0x00045848:	bne	0x045868
000348:0x00045850:	imove	ret, 0x000001
000348:0x00045860:	rts
000350:0x00045868:	imove	ret, 0x000000
000350:0x00045878:	rts
000350:0x00045880:	rts
Ref<Object>::Ref()
000361:0x000459a8:	movem	ptr, p
000361:0x000459b8:	rts
Ref<Object>::Release()
000366:0x000459c0:	cmpcm	ptr, NULL
000366:0x000459d0:	beq	0x045a18
000368:0x000459d8:	movefm	[0x3cd16560], ptr
000368:0x000459e8:	call	Object.Release()
000368:0x000459f0:	cmpi	ret, _i0
000368:0x00045a00:	bne	0x045a18
000369:0x00045a08:	movetm	ptr, NULL
000369:0x00045a18:	rts
Ref<Object>::AddRef()
000374:0x00045a20:	cmpcm	ptr, NULL
000374:0x00045a30:	beq	0x045a50
000375:0x00045a38:	movefm	[0x3cd16560], ptr
000375:0x00045a48:	ncalli	Object.AddRef()
000375:0x00045a50:	rts
Ref<Object>::~Ref()
000380:0x00045a58:	cmpcm	ptr, NULL
000380:0x00045a68:	beq	0x045a88
000381:0x00045a70:	movefm	[0x3cd16560], ptr
000381:0x00045a80:	call	Object.Release()
000381:0x00045a88:	rts
Ref<Object>::Ptr()
000386:0x00045a90:	movem	ret, ptr
000386:0x00045aa0:	rts
000386:0x00045aa8:	rts
Ref<Object>::IsNull()
000391:0x00045ab0:	cmpcm	ptr, NULL
000391:0x00045ac0:	bne	0x045ae0
000392:0x00045ac8:	imove	ret, 0x000001
000392:0x00045ad8:	rts
000394:0x00045ae0:	imove	ret, 0x000000
000394:0x00045af0:	rts
000394:0x00045af8:	rts
Param1<Camera>::Param1()
//scripts/1_CoreExt/param.c
000030:0x00045b68:	movem	param1, p1
000030:0x00045b78:	rts
Param1<bool>::Param1()
000030:0x00045be8:	move	param1, p1
000030:0x00045bf8:	rts
Param3<int,int,bool>::Param3()
000068:0x00045d38:	move	param1, p1
000069:0x00045d48:	move	param2, p2
000070:0x00045d58:	move	param3, p3
000070:0x00045d68:	rts
Param3<PlayerIdentity,int,bool>::Param3()
000068:0x00045ea8:	movec	param1, p1
000069:0x00045eb8:	move	param2, p2
000070:0x00045ec8:	move	param3, p3
000070:0x00045ed8:	rts
Param3<PlayerIdentity,Man,int>::Param3()
000068:0x00046018:	movec	param1, p1
000069:0x00046028:	movem	param2, p2
000070:0x00046038:	move	param3, p3
000070:0x00046048:	rts
Param2<PlayerIdentity,Man>::Param2()
000048:0x00046120:	movec	param1, p1
000049:0x00046130:	movem	param2, p2
000049:0x00046140:	rts
Param1<PlayerIdentity>::Param1()
000030:0x000461b0:	movec	param1, p1
000030:0x000461c0:	rts
Param6<PlayerIdentity,vector,int,int,int,int>::Param6()
000132:0x00046538:	movec	param1, p1
000133:0x00046548:	movev	param2, p2
000134:0x00046558:	move	param3, p3
000135:0x00046568:	move	param4, p4
000136:0x00046578:	move	param5, p5
000137:0x00046588:	move	param6, p6
000137:0x00046598:	rts
array<Action>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x000468e0:	imove	i, 0x000000
000341:0x000468f0:	jump	0x046900
000341:0x000468f8:	inc	i
000341:0x00046900:	ncalli	array<Action>.Count()
000341:0x00046908:	cmpi	i, ret
000341:0x00046918:	bge	0x046938
000343:0x00046920:	icall	array<Action>.Get(i)
000343:0x00046928:	icall	array<Action>.Insert(ret)
000343:0x00046930:	jump	0x0468f8
000343:0x00046938:	rts
array<Action>::RemoveItem()
000366:0x00046960:	icall	array<Action>.Find(value)
000366:0x00046968:	move	remove_index, ret
000368:0x00046978:	cmpi	remove_index, _i0
000368:0x00046988:	blt	0x046998
000370:0x00046990:	ncalli	array<Action>.Remove(remove_index)
000370:0x00046998:	rts
array<Action>::Debug()
000387:0x000469e0:	ncalli	array<Action>.Count()
000387:0x000469e8:	icall	ToString(ret)
000387:0x000469f0:	adds	@s01, _s'Array count: ', ret
000387:0x00046a00:	moves	@s00, @s01
000387:0x00046a10:	call	PrintString(@s00)
000388:0x00046a20:	imove	i, 0x000000
000388:0x00046a30:	jump	0x046a40
000388:0x00046a38:	inc	i
000388:0x00046a40:	ncalli	array<Action>.Count()
000388:0x00046a48:	cmpi	i, ret
000388:0x00046a58:	bge	0x046b20
000390:0x00046a60:	icall	array<Action>.Get(i)
000390:0x00046a68:	movec	item, ret
000392:0x00046a78:	cmpc	item, NULL
000392:0x00046a88:	beq	0x046b18
000394:0x00046a90:	icall	ToString(i)
000394:0x00046a98:	adds	@s03, _s'[', ret
000394:0x00046aa8:	moves	@s02, @s03
000394:0x00046ab8:	adds	@s02, @s02, _s'] => '
000394:0x00046ac8:	moves	@s01, @s02
000394:0x00046ad8:	icall	ToString(item, _i0, _i0)
000394:0x00046ae8:	adds	@s01, @s01, ret
000394:0x00046af8:	moves	@s00, @s01
000394:0x00046b08:	call	PrintString(@s00)
000394:0x00046b18:	jump	0x046a38
000394:0x00046b20:	rts
array<Action>::GetRandomIndex()
000411:0x00046b28:	ncalli	array<Action>.Count()
000411:0x00046b30:	cmpi	ret, _i0
000411:0x00046b40:	ble	0x046b70
000413:0x00046b48:	ncalli	array<Action>.Count()
000413:0x00046b50:	ncall	RandomInt(_i0, ret)
000413:0x00046b58:	move	ret, ret
000413:0x00046b68:	rts
000416:0x00046b70:	imove	ret, 0xffffffff
000416:0x00046b80:	rts
000416:0x00046b88:	rts
array<Action>::GetRandomElement()
000430:0x00046b90:	call	array<Action>.GetRandomIndex()
000430:0x00046b98:	icall	array<Action>.Get(ret)
000430:0x00046ba0:	movec	ret, ret
000430:0x00046bb0:	rts
000430:0x00046bb8:	rts
array<Action>::SwapItems()
000435:0x00046be0:	icall	array<Action>.Get(item1_index)
000435:0x00046be8:	movec	item1, ret
000436:0x00046bf8:	icall	array<Action>.Get(item2_index)
000436:0x00046c00:	icall	array<Action>.Set(item1_index, ret)
000437:0x00046c08:	icall	array<Action>.Set(item2_index, item1)
000437:0x00046c10:	rts
Param4<Man,EntityAI,EntityAI,array<Action>>::Param4()
//scripts/1_CoreExt/param.c
000090:0x00046db8:	movem	param1, p1
000091:0x00046dc8:	movem	param2, p2
000092:0x00046dd8:	movem	param3, p3
000093:0x00046de8:	movem	param4, p4
000093:0x00046df8:	rts
Param4<int,int,float,string>::Param4()
000090:0x00046fa0:	move	param1, p1
000091:0x00046fb0:	move	param2, p2
000092:0x00046fc0:	move	param3, p3
000093:0x00046fd0:	moves	param4, p4
000093:0x00046fe0:	rts
Param1<int>::Param1()
000030:0x00047050:	move	param1, p1
000030:0x00047060:	rts
Param4<int,string,string,string>::Param4()
000090:0x00047208:	move	param1, p1
000091:0x00047218:	moves	param2, p2
000092:0x00047228:	moves	param3, p3
000093:0x00047238:	moves	param4, p4
000093:0x00047248:	rts
Param1<EntityAI>::Param1()
000030:0x000472b8:	movem	param1, p1
000030:0x000472c8:	rts
Param1<string>::Param1()
000030:0x00047338:	moves	param1, p1
000030:0x00047348:	rts
Param3<int,float,string>::Param3()
000068:0x00047488:	move	param1, p1
000069:0x00047498:	move	param2, p2
000070:0x000474a8:	moves	param3, p3
000070:0x000474b8:	rts
Param1<float>::Param1()
000030:0x00047528:	move	param1, p1
000030:0x00047538:	rts
Param2<int,int>::Param2()
000048:0x00047610:	move	param1, p1
000049:0x00047620:	move	param2, p2
000049:0x00047630:	rts
Param2<int,float>::Param2()
000048:0x00047708:	move	param1, p1
000049:0x00047718:	move	param2, p2
000049:0x00047728:	rts
Param2<int,string>::Param2()
000048:0x00047800:	move	param1, p1
000049:0x00047810:	moves	param2, p2
000049:0x00047820:	rts
Param2<string,float>::Param2()
000048:0x000478f8:	moves	param1, p1
000049:0x00047908:	move	param2, p2
000049:0x00047918:	rts
Param2<string,string>::Param2()
000048:0x000479f0:	moves	param1, p1
000049:0x00047a00:	moves	param2, p2
000049:0x00047a10:	rts
array<LOD>::InsertAll()
//scripts/1_CoreExt/proto\enscript.c
000341:0x00047d58:	imove	i, 0x000000
000341:0x00047d68:	jump	0x047d78
000341:0x00047d70:	inc	i
000341:0x00047d78:	ncalli	array<LOD>.Count()
000341:0x00047d80:	cmpi	i, ret
000341:0x00047d90:	bge	0x047db0
000343:0x00047d98:	icall	array<LOD>.Get(i)
000343:0x00047da0:	icall	array<LOD>.Insert(ret)
000343:0x00047da8:	jump	0x047d70
000343:0x00047db0:	rts
array<LOD>::RemoveItem()
000366:0x00047dd8:	icall	array<LOD>.Find(value)
000366:0x00047de0:	move	remove_index, ret
000368:0x00047df0:	cmpi	remove_index, _i0
000368:0x00047e00:	blt	0x047e10
000370:0x00047e08:	ncalli	array<LOD>.Remove(remove_index)
000370:0x00047e10:	rts
array<LOD>::Debug()
000387:0x00047e58:	ncalli	array<LOD>.Count()
000387:0x00047e60:	icall	ToString(ret)
000387:0x00047e68:	adds	@s01, _s'Array count: ', ret
000387:0x00047e78:	moves	@s00, @s01
000387:0x00047e88:	call	PrintString(@s00)
000388:0x00047e98:	imove	i, 0x000000
000388:0x00047ea8:	jump	0x047eb8
000388:0x00047eb0:	inc	i
000388:0x00047eb8:	ncalli	array<LOD>.Count()
000388:0x00047ec0:	cmpi	i, ret
000388:0x00047ed0:	bge	0x047f98
000390:0x00047ed8:	icall	array<LOD>.Get(i)
000390:0x00047ee0:	movec	item, ret
000392:0x00047ef0:	cmpc	item, NULL
000392:0x00047f00:	beq	0x047f90
000394:0x00047f08:	icall	ToString(i)
000394:0x00047f10:	adds	@s03, _s'[', ret
000394:0x00047f20:	moves	@s02, @s03
000394:0x00047f30:	adds	@s02, @s02, _s'] => '
000394:0x00047f40:	moves	@s01, @s02
000394:0x00047f50:	icall	ToString(item, _i0, _i0)
000394:0x00047f60:	adds	@s01, @s01, ret
000394:0x00047f70:	moves	@s00, @s01
000394:0x00047f80:	call	PrintString(@s00)
000394:0x00047f90:	jump	0x047eb0
000394:0x00047f98:	rts
array<LOD>::GetRandomIndex()
000411:0x00047fa0:	ncalli	array<LOD>.Count()
000411:0x00047fa8:	cmpi	ret, _i0
000411:0x00047fb8:	ble	0x047fe8
000413:0x00047fc0:	ncalli	array<LOD>.Count()
000413:0x00047fc8:	ncall	RandomInt(_i0, ret)
000413:0x00047fd0:	move	ret, ret
000413:0x00047fe0:	rts
000416:0x00047fe8:	imove	ret, 0xffffffff
000416:0x00047ff8:	rts
000416:0x00048000:	rts
array<LOD>::GetRandomElement()
000430:0x00048008:	call	array<LOD>.GetRandomIndex()
000430:0x00048010:	icall	array<LOD>.Get(ret)
000430:0x00048018:	movec	ret, ret
000430:0x00048028:	rts
000430:0x00048030:	rts
array<LOD>::SwapItems()
000435:0x00048058:	icall	array<LOD>.Get(item1_index)
000435:0x00048060:	movec	item1, ret
000436:0x00048070:	icall	array<LOD>.Get(item2_index)
000436:0x00048078:	icall	array<LOD>.Set(item1_index, ret)
000437:0x00048080:	icall	array<LOD>.Set(item2_index, item1)
000437:0x00048088:	rts
array<Param>::InsertAll()
000341:0x000483d0:	imove	i, 0x000000
000341:0x000483e0:	jump	0x0483f0
000341:0x000483e8:	inc	i
000341:0x000483f0:	ncalli	array<Param>.Count()
000341:0x000483f8:	cmpi	i, ret
000341:0x00048408:	bge	0x048428
000343:0x00048410:	icall	array<Param>.Get(i)
000343:0x00048418:	icall	array<Param>.Insert(ret)
000343:0x00048420:	jump	0x0483e8
000343:0x00048428:	rts
array<Param>::RemoveItem()
000366:0x00048450:	icall	array<Param>.Find(value)
000366:0x00048458:	move	remove_index, ret
000368:0x00048468:	cmpi	remove_index, _i0
000368:0x00048478:	blt	0x048488
000370:0x00048480:	ncalli	array<Param>.Remove(remove_index)
000370:0x00048488:	rts
array<Param>::Debug()
000387:0x000484d0:	ncalli	array<Param>.Count()
000387:0x000484d8:	icall	ToString(ret)
000387:0x000484e0:	adds	@s01, _s'Array count: ', ret
000387:0x000484f0:	moves	@s00, @s01
000387:0x00048500:	call	PrintString(@s00)
000388:0x00048510:	imove	i, 0x000000
000388:0x00048520:	jump	0x048530
000388:0x00048528:	inc	i
000388:0x00048530:	ncalli	array<Param>.Count()
000388:0x00048538:	cmpi	i, ret
000388:0x00048548:	bge	0x048610
000390:0x00048550:	icall	array<Param>.Get(i)
000390:0x00048558:	movec	item, ret
000392:0x00048568:	cmpc	item, NULL
000392:0x00048578:	beq	0x048608
000394:0x00048580:	icall	ToString(i)
000394:0x00048588:	adds	@s03, _s'[', ret
000394:0x00048598:	moves	@s02, @s03
000394:0x000485a8:	adds	@s02, @s02, _s'] => '
000394:0x000485b8:	moves	@s01, @s02
000394:0x000485c8:	icall	ToString(item, _i0, _i0)
000394:0x000485d8:	adds	@s01, @s01, ret
000394:0x000485e8:	moves	@s00, @s01
000394:0x000485f8:	call	PrintString(@s00)
000394:0x00048608:	jump	0x048528
000394:0x00048610:	rts
array<Param>::GetRandomIndex()
000411:0x00048618:	ncalli	array<Param>.Count()
000411:0x00048620:	cmpi	ret, _i0
000411:0x00048630:	ble	0x048660
000413:0x00048638:	ncalli	array<Param>.Count()
000413:0x00048640:	ncall	RandomInt(_i0, ret)
000413:0x00048648:	move	ret, ret
000413:0x00048658:	rts
000416:0x00048660:	imove	ret, 0xffffffff
000416:0x00048670:	rts
000416:0x00048678:	rts
array<Param>::GetRandomElement()
000430:0x00048680:	call	array<Param>.GetRandomIndex()
000430:0x00048688:	icall	array<Param>.Get(ret)
000430:0x00048690:	movec	ret, ret
000430:0x000486a0:	rts
000430:0x000486a8:	rts
array<Param>::SwapItems()
000435:0x000486d0:	icall	array<Param>.Get(item1_index)
000435:0x000486d8:	movec	item1, ret
000436:0x000486e8:	icall	array<Param>.Get(item2_index)
000436:0x000486f0:	icall	array<Param>.Set(item1_index, ret)
000437:0x000486f8:	icall	array<Param>.Set(item2_index, item1)
000437:0x00048700:	rts
array<TimerBase>::InsertAll()
000341:0x00048a48:	imove	i, 0x000000
000341:0x00048a58:	jump	0x048a68
000341:0x00048a60:	inc	i
000341:0x00048a68:	ncalli	array<TimerBase>.Count()
000341:0x00048a70:	cmpi	i, ret
000341:0x00048a80:	bge	0x048aa0
000343:0x00048a88:	icall	array<TimerBase>.Get(i)
000343:0x00048a90:	icall	array<TimerBase>.Insert(ret)
000343:0x00048a98:	jump	0x048a60
000343:0x00048aa0:	rts
array<TimerBase>::RemoveItem()
000366:0x00048ac8:	icall	array<TimerBase>.Find(value)
000366:0x00048ad0:	move	remove_index, ret
000368:0x00048ae0:	cmpi	remove_index, _i0
000368:0x00048af0:	blt	0x048b00
000370:0x00048af8:	ncalli	array<TimerBase>.Remove(remove_index)
000370:0x00048b00:	rts
array<TimerBase>::Debug()
000387:0x00048b48:	ncalli	array<TimerBase>.Count()
000387:0x00048b50:	icall	ToString(ret)
000387:0x00048b58:	adds	@s01, _s'Array count: ', ret
000387:0x00048b68:	moves	@s00, @s01
000387:0x00048b78:	call	PrintString(@s00)
000388:0x00048b88:	imove	i, 0x000000
000388:0x00048b98:	jump	0x048ba8
000388:0x00048ba0:	inc	i
000388:0x00048ba8:	ncalli	array<TimerBase>.Count()
000388:0x00048bb0:	cmpi	i, ret
000388:0x00048bc0:	bge	0x048c88
000390:0x00048bc8:	icall	array<TimerBase>.Get(i)
000390:0x00048bd0:	movec	item, ret
000392:0x00048be0:	cmpc	item, NULL
000392:0x00048bf0:	beq	0x048c80
000394:0x00048bf8:	icall	ToString(i)
000394:0x00048c00:	adds	@s03, _s'[', ret
000394:0x00048c10:	moves	@s02, @s03
000394:0x00048c20:	adds	@s02, @s02, _s'] => '
000394:0x00048c30:	moves	@s01, @s02
000394:0x00048c40:	icall	ToString(item, _i0, _i0)
000394:0x00048c50:	adds	@s01, @s01, ret
000394:0x00048c60:	moves	@s00, @s01
000394:0x00048c70:	call	PrintString(@s00)
000394:0x00048c80:	jump	0x048ba0
000394:0x00048c88:	rts
array<TimerBase>::GetRandomIndex()
000411:0x00048c90:	ncalli	array<TimerBase>.Count()
000411:0x00048c98:	cmpi	ret, _i0
000411:0x00048ca8:	ble	0x048cd8
000413:0x00048cb0:	ncalli	array<TimerBase>.Count()
000413:0x00048cb8:	ncall	RandomInt(_i0, ret)
000413:0x00048cc0:	move	ret, ret
000413:0x00048cd0:	rts
000416:0x00048cd8:	imove	ret, 0xffffffff
000416:0x00048ce8:	rts
000416:0x00048cf0:	rts
array<TimerBase>::GetRandomElement()
000430:0x00048cf8:	call	array<TimerBase>.GetRandomIndex()
000430:0x00048d00:	icall	array<TimerBase>.Get(ret)
000430:0x00048d08:	movec	ret, ret
000430:0x00048d18:	rts
000430:0x00048d20:	rts
array<TimerBase>::SwapItems()
000435:0x00048d48:	icall	array<TimerBase>.Get(item1_index)
000435:0x00048d50:	movec	item1, ret
000436:0x00048d60:	icall	array<TimerBase>.Get(item2_index)
000436:0x00048d68:	icall	array<TimerBase>.Set(item1_index, ret)
000437:0x00048d70:	icall	array<TimerBase>.Set(item2_index, item1)
000437:0x00048d78:	rts
array<Selection>::InsertAll()
000341:0x000490c0:	imove	i, 0x000000
000341:0x000490d0:	jump	0x0490e0
000341:0x000490d8:	inc	i
000341:0x000490e0:	ncalli	array<Selection>.Count()
000341:0x000490e8:	cmpi	i, ret
000341:0x000490f8:	bge	0x049118
000343:0x00049100:	icall	array<Selection>.Get(i)
000343:0x00049108:	icall	array<Selection>.Insert(ret)
000343:0x00049110:	jump	0x0490d8
000343:0x00049118:	rts
array<Selection>::RemoveItem()
000366:0x00049140:	icall	array<Selection>.Find(value)
000366:0x00049148:	move	remove_index, ret
000368:0x00049158:	cmpi	remove_index, _i0
000368:0x00049168:	blt	0x049178
000370:0x00049170:	ncalli	array<Selection>.Remove(remove_index)
000370:0x00049178:	rts
array<Selection>::Debug()
000387:0x000491c0:	ncalli	array<Selection>.Count()
000387:0x000491c8:	icall	ToString(ret)
000387:0x000491d0:	adds	@s01, _s'Array count: ', ret
000387:0x000491e0:	moves	@s00, @s01
000387:0x000491f0:	call	PrintString(@s00)
000388:0x00049200:	imove	i, 0x000000
000388:0x00049210:	jump	0x049220
000388:0x00049218:	inc	i
000388:0x00049220:	ncalli	array<Selection>.Count()
000388:0x00049228:	cmpi	i, ret
000388:0x00049238:	bge	0x049300
000390:0x00049240:	icall	array<Selection>.Get(i)
000390:0x00049248:	movec	item, ret
000392:0x00049258:	cmpc	item, NULL
000392:0x00049268:	beq	0x0492f8
000394:0x00049270:	icall	ToString(i)
000394:0x00049278:	adds	@s03, _s'[', ret
000394:0x00049288:	moves	@s02, @s03
000394:0x00049298:	adds	@s02, @s02, _s'] => '
000394:0x000492a8:	moves	@s01, @s02
000394:0x000492b8:	icall	ToString(item, _i0, _i0)
000394:0x000492c8:	adds	@s01, @s01, ret
000394:0x000492d8:	moves	@s00, @s01
000394:0x000492e8:	call	PrintString(@s00)
000394:0x000492f8:	jump	0x049218
000394:0x00049300:	rts
array<Selection>::GetRandomIndex()
000411:0x00049308:	ncalli	array<Selection>.Count()
000411:0x00049310:	cmpi	ret, _i0
000411:0x00049320:	ble	0x049350
000413:0x00049328:	ncalli	array<Selection>.Count()
000413:0x00049330:	ncall	RandomInt(_i0, ret)
000413:0x00049338:	move	ret, ret
000413:0x00049348:	rts
000416:0x00049350:	imove	ret, 0xffffffff
000416:0x00049360:	rts
000416:0x00049368:	rts
array<Selection>::GetRandomElement()
000430:0x00049370:	call	array<Selection>.GetRandomIndex()
000430:0x00049378:	icall	array<Selection>.Get(ret)
000430:0x00049380:	movec	ret, ret
000430:0x00049390:	rts
000430:0x00049398:	rts
array<Selection>::SwapItems()
000435:0x000493c0:	icall	array<Selection>.Get(item1_index)
000435:0x000493c8:	movec	item1, ret
000436:0x000493d8:	icall	array<Selection>.Get(item2_index)
000436:0x000493e0:	icall	array<Selection>.Set(item1_index, ret)
000437:0x000493e8:	icall	array<Selection>.Set(item2_index, item1)
000437:0x000493f0:	rts
array<EntityAI>::InsertAll()
000341:0x00049738:	imove	i, 0x000000
000341:0x00049748:	jump	0x049758
000341:0x00049750:	inc	i
000341:0x00049758:	ncalli	array<EntityAI>.Count()
000341:0x00049760:	cmpi	i, ret
000341:0x00049770:	bge	0x049790
000343:0x00049778:	icall	array<EntityAI>.Get(i)
000343:0x00049780:	icall	array<EntityAI>.Insert(ret)
000343:0x00049788:	jump	0x049750
000343:0x00049790:	rts
array<EntityAI>::RemoveItem()
000366:0x000497b8:	movefm	@c00, value
000366:0x000497c8:	icall	array<EntityAI>.Find(@c00)
000366:0x000497d0:	move	remove_index, ret
000368:0x000497e0:	cmpi	remove_index, _i0
000368:0x000497f0:	blt	0x049800
000370:0x000497f8:	ncalli	array<EntityAI>.Remove(remove_index)
000370:0x00049800:	rts
array<EntityAI>::Debug()
000387:0x00049848:	ncalli	array<EntityAI>.Count()
000387:0x00049850:	icall	ToString(ret)
000387:0x00049858:	adds	@s01, _s'Array count: ', ret
000387:0x00049868:	moves	@s00, @s01
000387:0x00049878:	call	PrintString(@s00)
000388:0x00049888:	imove	i, 0x000000
000388:0x00049898:	jump	0x0498a8
000388:0x000498a0:	inc	i
000388:0x000498a8:	ncalli	array<EntityAI>.Count()
000388:0x000498b0:	cmpi	i, ret
000388:0x000498c0:	bge	0x049990
000390:0x000498c8:	icall	array<EntityAI>.Get(i)
000390:0x000498d0:	movetm	item, ret
000392:0x000498e0:	cmpcm	item, NULL
000392:0x000498f0:	beq	0x049980
000394:0x000498f8:	icall	ToString(i)
000394:0x00049900:	adds	@s03, _s'[', ret
000394:0x00049910:	moves	@s02, @s03
000394:0x00049920:	adds	@s02, @s02, _s'] => '
000394:0x00049930:	moves	@s01, @s02
000394:0x00049940:	icall	ToString(item, _i0, _i0)
000394:0x00049950:	adds	@s01, @s01, ret
000394:0x00049960:	moves	@s00, @s01
000394:0x00049970:	call	PrintString(@s00)
000394:0x00049980:	release	item
000394:0x00049988:	jump	0x0498a0
000394:0x00049990:	rts
array<EntityAI>::GetRandomIndex()
000411:0x00049998:	ncalli	array<EntityAI>.Count()
000411:0x000499a0:	cmpi	ret, _i0
000411:0x000499b0:	ble	0x0499e0
000413:0x000499b8:	ncalli	array<EntityAI>.Count()
000413:0x000499c0:	ncall	RandomInt(_i0, ret)
000413:0x000499c8:	move	ret, ret
000413:0x000499d8:	rts
000416:0x000499e0:	imove	ret, 0xffffffff
000416:0x000499f0:	rts
000416:0x000499f8:	rts
array<EntityAI>::GetRandomElement()
000430:0x00049a00:	call	array<EntityAI>.GetRandomIndex()
000430:0x00049a08:	icall	array<EntityAI>.Get(ret)
000430:0x00049a10:	movetm	ret, ret
000430:0x00049a20:	rts
000430:0x00049a28:	rts
array<EntityAI>::SwapItems()
000435:0x00049a50:	icall	array<EntityAI>.Get(item1_index)
000435:0x00049a58:	movetm	item1, ret
000436:0x00049a68:	icall	array<EntityAI>.Get(item2_index)
000436:0x00049a70:	icall	array<EntityAI>.Set(item1_index, ret)
000437:0x00049a78:	movefm	@c00, item1
000437:0x00049a88:	icall	array<EntityAI>.Set(item2_index, @c00)
000437:0x00049a90:	release	item1
000437:0x00049a98:	rts
map<string,EntityAI>::ReplaceKey()
000584:0x00049e80:	icall	map<string,EntityAI>.Contains(old_key)
000584:0x00049e88:	cmpi	ret, _i0
000584:0x00049e98:	beq	0x049eb8
000586:0x00049ea0:	icall	map<string,EntityAI>.Get(old_key)
000586:0x00049ea8:	icall	map<string,EntityAI>.Set(new_key, ret)
000587:0x00049eb0:	icall	map<string,EntityAI>.Remove(old_key)
000587:0x00049eb8:	rts
map<string,EntityAI>::GetKeyByValue()
000594:0x00049f00:	imove	i, 0x000000
000594:0x00049f10:	jump	0x049f20
000594:0x00049f18:	inc	i
000594:0x00049f20:	ncalli	map<string,EntityAI>.Count()
000594:0x00049f28:	cmpi	i, ret
000594:0x00049f38:	bge	0x049f88
000596:0x00049f40:	icall	map<string,EntityAI>.GetElement(i)
000596:0x00049f48:	cmpmc	ret, value
000596:0x00049f58:	bne	0x049f80
000598:0x00049f60:	icall	map<string,EntityAI>.GetKey(i)
000598:0x00049f68:	moves	ret, ret
000599:0x00049f78:	jump	0x049f88
000599:0x00049f80:	jump	0x049f18
000603:0x00049f88:	moves	ret, ret
000603:0x00049f98:	rts
000603:0x00049fa0:	rts
array<Object>::InsertAll()
000341:0x0004a2e8:	imove	i, 0x000000
000341:0x0004a2f8:	jump	0x04a308
000341:0x0004a300:	inc	i
000341:0x0004a308:	ncalli	array<Object>.Count()
000341:0x0004a310:	cmpi	i, ret
000341:0x0004a320:	bge	0x04a340
000343:0x0004a328:	icall	array<Object>.Get(i)
000343:0x0004a330:	icall	array<Object>.Insert(ret)
000343:0x0004a338:	jump	0x04a300
000343:0x0004a340:	rts
array<Object>::RemoveItem()
000366:0x0004a368:	movefm	@c00, value
000366:0x0004a378:	icall	array<Object>.Find(@c00)
000366:0x0004a380:	move	remove_index, ret
000368:0x0004a390:	cmpi	remove_index, _i0
000368:0x0004a3a0:	blt	0x04a3b0
000370:0x0004a3a8:	ncalli	array<Object>.Remove(remove_index)
000370:0x0004a3b0:	rts
array<Object>::Debug()
000387:0x0004a3f8:	ncalli	array<Object>.Count()
000387:0x0004a400:	icall	ToString(ret)
000387:0x0004a408:	adds	@s01, _s'Array count: ', ret
000387:0x0004a418:	moves	@s00, @s01
000387:0x0004a428:	call	PrintString(@s00)
000388:0x0004a438:	imove	i, 0x000000
000388:0x0004a448:	jump	0x04a458
000388:0x0004a450:	inc	i
000388:0x0004a458:	ncalli	array<Object>.Count()
000388:0x0004a460:	cmpi	i, ret
000388:0x0004a470:	bge	0x04a540
000390:0x0004a478:	icall	array<Object>.Get(i)
000390:0x0004a480:	movetm	item, ret
000392:0x0004a490:	cmpcm	item, NULL
000392:0x0004a4a0:	beq	0x04a530
000394:0x0004a4a8:	icall	ToString(i)
000394:0x0004a4b0:	adds	@s03, _s'[', ret
000394:0x0004a4c0:	moves	@s02, @s03
000394:0x0004a4d0:	adds	@s02, @s02, _s'] => '
000394:0x0004a4e0:	moves	@s01, @s02
000394:0x0004a4f0:	icall	ToString(item, _i0, _i0)
000394:0x0004a500:	adds	@s01, @s01, ret
000394:0x0004a510:	moves	@s00, @s01
000394:0x0004a520:	call	PrintString(@s00)
000394:0x0004a530:	release	item
000394:0x0004a538:	jump	0x04a450
000394:0x0004a540:	rts
array<Object>::GetRandomIndex()
000411:0x0004a548:	ncalli	array<Object>.Count()
000411:0x0004a550:	cmpi	ret, _i0
000411:0x0004a560:	ble	0x04a590
000413:0x0004a568:	ncalli	array<Object>.Count()
000413:0x0004a570:	ncall	RandomInt(_i0, ret)
000413:0x0004a578:	move	ret, ret
000413:0x0004a588:	rts
000416:0x0004a590:	imove	ret, 0xffffffff
000416:0x0004a5a0:	rts
000416:0x0004a5a8:	rts
array<Object>::GetRandomElement()
000430:0x0004a5b0:	call	array<Object>.GetRandomIndex()
000430:0x0004a5b8:	icall	array<Object>.Get(ret)
000430:0x0004a5c0:	movetm	ret, ret
000430:0x0004a5d0:	rts
000430:0x0004a5d8:	rts
array<Object>::SwapItems()
000435:0x0004a600:	icall	array<Object>.Get(item1_index)
000435:0x0004a608:	movetm	item1, ret
000436:0x0004a618:	icall	array<Object>.Get(item2_index)
000436:0x0004a620:	icall	array<Object>.Set(item1_index, ret)
000437:0x0004a628:	movefm	@c00, item1
000437:0x0004a638:	icall	array<Object>.Set(item2_index, @c00)
000437:0x0004a640:	release	item1
000437:0x0004a648:	rts
array<Cargo>::InsertAll()
000341:0x0004a990:	imove	i, 0x000000
000341:0x0004a9a0:	jump	0x04a9b0
000341:0x0004a9a8:	inc	i
000341:0x0004a9b0:	ncalli	array<Cargo>.Count()
000341:0x0004a9b8:	cmpi	i, ret
000341:0x0004a9c8:	bge	0x04a9e8
000343:0x0004a9d0:	icall	array<Cargo>.Get(i)
000343:0x0004a9d8:	icall	array<Cargo>.Insert(ret)
000343:0x0004a9e0:	jump	0x04a9a8
000343:0x0004a9e8:	rts
array<Cargo>::RemoveItem()
000366:0x0004aa10:	icall	array<Cargo>.Find(value)
000366:0x0004aa18:	move	remove_index, ret
000368:0x0004aa28:	cmpi	remove_index, _i0
000368:0x0004aa38:	blt	0x04aa48
000370:0x0004aa40:	ncalli	array<Cargo>.Remove(remove_index)
000370:0x0004aa48:	rts
array<Cargo>::Debug()
000387:0x0004aa90:	ncalli	array<Cargo>.Count()
000387:0x0004aa98:	icall	ToString(ret)
000387:0x0004aaa0:	adds	@s01, _s'Array count: ', ret
000387:0x0004aab0:	moves	@s00, @s01
000387:0x0004aac0:	call	PrintString(@s00)
000388:0x0004aad0:	imove	i, 0x000000
000388:0x0004aae0:	jump	0x04aaf0
000388:0x0004aae8:	inc	i
000388:0x0004aaf0:	ncalli	array<Cargo>.Count()
000388:0x0004aaf8:	cmpi	i, ret
000388:0x0004ab08:	bge	0x04abd0
000390:0x0004ab10:	icall	array<Cargo>.Get(i)
000390:0x0004ab18:	movec	item, ret
000392:0x0004ab28:	cmpc	item, NULL
000392:0x0004ab38:	beq	0x04abc8
000394:0x0004ab40:	icall	ToString(i)
000394:0x0004ab48:	adds	@s03, _s'[', ret
000394:0x0004ab58:	moves	@s02, @s03
000394:0x0004ab68:	adds	@s02, @s02, _s'] => '
000394:0x0004ab78:	moves	@s01, @s02
000394:0x0004ab88:	icall	ToString(item, _i0, _i0)
000394:0x0004ab98:	adds	@s01, @s01, ret
000394:0x0004aba8:	moves	@s00, @s01
000394:0x0004abb8:	call	PrintString(@s00)
000394:0x0004abc8:	jump	0x04aae8
000394:0x0004abd0:	rts
array<Cargo>::GetRandomIndex()
000411:0x0004abd8:	ncalli	array<Cargo>.Count()
000411:0x0004abe0:	cmpi	ret, _i0
000411:0x0004abf0:	ble	0x04ac20
000413:0x0004abf8:	ncalli	array<Cargo>.Count()
000413:0x0004ac00:	ncall	RandomInt(_i0, ret)
000413:0x0004ac08:	move	ret, ret
000413:0x0004ac18:	rts
000416:0x0004ac20:	imove	ret, 0xffffffff
000416:0x0004ac30:	rts
000416:0x0004ac38:	rts
array<Cargo>::GetRandomElement()
000430:0x0004ac40:	call	array<Cargo>.GetRandomIndex()
000430:0x0004ac48:	icall	array<Cargo>.Get(ret)
000430:0x0004ac50:	movec	ret, ret
000430:0x0004ac60:	rts
000430:0x0004ac68:	rts
array<Cargo>::SwapItems()
000435:0x0004ac90:	icall	array<Cargo>.Get(item1_index)
000435:0x0004ac98:	movec	item1, ret
000436:0x0004aca8:	icall	array<Cargo>.Get(item2_index)
000436:0x0004acb0:	icall	array<Cargo>.Set(item1_index, ret)
000437:0x0004acb8:	icall	array<Cargo>.Set(item2_index, item1)
000437:0x0004acc0:	rts
array<Man>::InsertAll()
000341:0x0004b008:	imove	i, 0x000000
000341:0x0004b018:	jump	0x04b028
000341:0x0004b020:	inc	i
000341:0x0004b028:	ncalli	array<Man>.Count()
000341:0x0004b030:	cmpi	i, ret
000341:0x0004b040:	bge	0x04b060
000343:0x0004b048:	icall	array<Man>.Get(i)
000343:0x0004b050:	icall	array<Man>.Insert(ret)
000343:0x0004b058:	jump	0x04b020
000343:0x0004b060:	rts
array<Man>::RemoveItem()
000366:0x0004b088:	movefm	@c00, value
000366:0x0004b098:	icall	array<Man>.Find(@c00)
000366:0x0004b0a0:	move	remove_index, ret
000368:0x0004b0b0:	cmpi	remove_index, _i0
000368:0x0004b0c0:	blt	0x04b0d0
000370:0x0004b0c8:	ncalli	array<Man>.Remove(remove_index)
000370:0x0004b0d0:	rts
array<Man>::Debug()
000387:0x0004b118:	ncalli	array<Man>.Count()
000387:0x0004b120:	icall	ToString(ret)
000387:0x0004b128:	adds	@s01, _s'Array count: ', ret
000387:0x0004b138:	moves	@s00, @s01
000387:0x0004b148:	call	PrintString(@s00)
000388:0x0004b158:	imove	i, 0x000000
000388:0x0004b168:	jump	0x04b178
000388:0x0004b170:	inc	i
000388:0x0004b178:	ncalli	array<Man>.Count()
000388:0x0004b180:	cmpi	i, ret
000388:0x0004b190:	bge	0x04b260
000390:0x0004b198:	icall	array<Man>.Get(i)
000390:0x0004b1a0:	movetm	item, ret
000392:0x0004b1b0:	cmpcm	item, NULL
000392:0x0004b1c0:	beq	0x04b250
000394:0x0004b1c8:	icall	ToString(i)
000394:0x0004b1d0:	adds	@s03, _s'[', ret
000394:0x0004b1e0:	moves	@s02, @s03
000394:0x0004b1f0:	adds	@s02, @s02, _s'] => '
000394:0x0004b200:	moves	@s01, @s02
000394:0x0004b210:	icall	ToString(item, _i0, _i0)
000394:0x0004b220:	adds	@s01, @s01, ret
000394:0x0004b230:	moves	@s00, @s01
000394:0x0004b240:	call	PrintString(@s00)
000394:0x0004b250:	release	item
000394:0x0004b258:	jump	0x04b170
000394:0x0004b260:	rts
array<Man>::GetRandomIndex()
000411:0x0004b268:	ncalli	array<Man>.Count()
000411:0x0004b270:	cmpi	ret, _i0
000411:0x0004b280:	ble	0x04b2b0
000413:0x0004b288:	ncalli	array<Man>.Count()
000413:0x0004b290:	ncall	RandomInt(_i0, ret)
000413:0x0004b298:	move	ret, ret
000413:0x0004b2a8:	rts
000416:0x0004b2b0:	imove	ret, 0xffffffff
000416:0x0004b2c0:	rts
000416:0x0004b2c8:	rts
array<Man>::GetRandomElement()
000430:0x0004b2d0:	call	array<Man>.GetRandomIndex()
000430:0x0004b2d8:	icall	array<Man>.Get(ret)
000430:0x0004b2e0:	movetm	ret, ret
000430:0x0004b2f0:	rts
000430:0x0004b2f8:	rts
array<Man>::SwapItems()
000435:0x0004b320:	icall	array<Man>.Get(item1_index)
000435:0x0004b328:	movetm	item1, ret
000436:0x0004b338:	icall	array<Man>.Get(item2_index)
000436:0x0004b340:	icall	array<Man>.Set(item1_index, ret)
000437:0x0004b348:	movefm	@c00, item1
000437:0x0004b358:	icall	array<Man>.Set(item2_index, @c00)
000437:0x0004b360:	release	item1
000437:0x0004b368:	rts
array<PlayerIdentity>::InsertAll()
000341:0x0004b6b0:	imove	i, 0x000000
000341:0x0004b6c0:	jump	0x04b6d0
000341:0x0004b6c8:	inc	i
000341:0x0004b6d0:	ncalli	array<PlayerIdentity>.Count()
000341:0x0004b6d8:	cmpi	i, ret
000341:0x0004b6e8:	bge	0x04b708
000343:0x0004b6f0:	icall	array<PlayerIdentity>.Get(i)
000343:0x0004b6f8:	icall	array<PlayerIdentity>.Insert(ret)
000343:0x0004b700:	jump	0x04b6c8
000343:0x0004b708:	rts
array<PlayerIdentity>::RemoveItem()
000366:0x0004b730:	icall	array<PlayerIdentity>.Find(value)
000366:0x0004b738:	move	remove_index, ret
000368:0x0004b748:	cmpi	remove_index, _i0
000368:0x0004b758:	blt	0x04b768
000370:0x0004b760:	ncalli	array<PlayerIdentity>.Remove(remove_index)
000370:0x0004b768:	rts
array<PlayerIdentity>::Debug()
000387:0x0004b7b0:	ncalli	array<PlayerIdentity>.Count()
000387:0x0004b7b8:	icall	ToString(ret)
000387:0x0004b7c0:	adds	@s01, _s'Array count: ', ret
000387:0x0004b7d0:	moves	@s00, @s01
000387:0x0004b7e0:	call	PrintString(@s00)
000388:0x0004b7f0:	imove	i, 0x000000
000388:0x0004b800:	jump	0x04b810
000388:0x0004b808:	inc	i
000388:0x0004b810:	ncalli	array<PlayerIdentity>.Count()
000388:0x0004b818:	cmpi	i, ret
000388:0x0004b828:	bge	0x04b8f0
000390:0x0004b830:	icall	array<PlayerIdentity>.Get(i)
000390:0x0004b838:	movec	item, ret
000392:0x0004b848:	cmpc	item, NULL
000392:0x0004b858:	beq	0x04b8e8
000394:0x0004b860:	icall	ToString(i)
000394:0x0004b868:	adds	@s03, _s'[', ret
000394:0x0004b878:	moves	@s02, @s03
000394:0x0004b888:	adds	@s02, @s02, _s'] => '
000394:0x0004b898:	moves	@s01, @s02
000394:0x0004b8a8:	icall	ToString(item, _i0, _i0)
000394:0x0004b8b8:	adds	@s01, @s01, ret
000394:0x0004b8c8:	moves	@s00, @s01
000394:0x0004b8d8:	call	PrintString(@s00)
000394:0x0004b8e8:	jump	0x04b808
000394:0x0004b8f0:	rts
array<PlayerIdentity>::GetRandomIndex()
000411:0x0004b8f8:	ncalli	array<PlayerIdentity>.Count()
000411:0x0004b900:	cmpi	ret, _i0
000411:0x0004b910:	ble	0x04b940
000413:0x0004b918:	ncalli	array<PlayerIdentity>.Count()
000413:0x0004b920:	ncall	RandomInt(_i0, ret)
000413:0x0004b928:	move	ret, ret
000413:0x0004b938:	rts
000416:0x0004b940:	imove	ret, 0xffffffff
000416:0x0004b950:	rts
000416:0x0004b958:	rts
array<PlayerIdentity>::GetRandomElement()
000430:0x0004b960:	call	array<PlayerIdentity>.GetRandomIndex()
000430:0x0004b968:	icall	array<PlayerIdentity>.Get(ret)
000430:0x0004b970:	movec	ret, ret
000430:0x0004b980:	rts
000430:0x0004b988:	rts
array<PlayerIdentity>::SwapItems()
000435:0x0004b9b0:	icall	array<PlayerIdentity>.Get(item1_index)
000435:0x0004b9b8:	movec	item1, ret
000436:0x0004b9c8:	icall	array<PlayerIdentity>.Get(item2_index)
000436:0x0004b9d0:	icall	array<PlayerIdentity>.Set(item1_index, ret)
000437:0x0004b9d8:	icall	array<PlayerIdentity>.Set(item2_index, item1)
000437:0x0004b9e0:	rts
map<int,UIScriptedWindow>::ReplaceKey()
000584:0x0004bfc8:	icall	map<int,UIScriptedWindow>.Contains(old_key)
000584:0x0004bfd0:	cmpi	ret, _i0
000584:0x0004bfe0:	beq	0x04c000
000586:0x0004bfe8:	icall	map<int,UIScriptedWindow>.Get(old_key)
000586:0x0004bff0:	icall	map<int,UIScriptedWindow>.Set(new_key, ret)
000587:0x0004bff8:	icall	map<int,UIScriptedWindow>.Remove(old_key)
000587:0x0004c000:	rts
map<int,UIScriptedWindow>::GetKeyByValue()
000594:0x0004c048:	imove	i, 0x000000
000594:0x0004c058:	jump	0x04c068
000594:0x0004c060:	inc	i
000594:0x0004c068:	ncalli	map<int,UIScriptedWindow>.Count()
000594:0x0004c070:	cmpi	i, ret
000594:0x0004c080:	bge	0x04c0d0
000596:0x0004c088:	icall	map<int,UIScriptedWindow>.GetElement(i)
000596:0x0004c090:	cmpc	ret, value
000596:0x0004c0a0:	bne	0x04c0c8
000598:0x0004c0a8:	icall	map<int,UIScriptedWindow>.GetKey(i)
000598:0x0004c0b0:	move	ret, ret
000599:0x0004c0c0:	jump	0x04c0d0
000599:0x0004c0c8:	jump	0x04c060
000603:0x0004c0d0:	move	ret, ret
000603:0x0004c0e0:	rts
000603:0x0004c0e8:	rts
array<CallQueueContext>::InsertAll()
000341:0x0004c430:	imove	i, 0x000000
000341:0x0004c440:	jump	0x04c450
000341:0x0004c448:	inc	i
000341:0x0004c450:	ncalli	array<CallQueueContext>.Count()
000341:0x0004c458:	cmpi	i, ret
000341:0x0004c468:	bge	0x04c488
000343:0x0004c470:	icall	array<CallQueueContext>.Get(i)
000343:0x0004c478:	icall	array<CallQueueContext>.Insert(ret)
000343:0x0004c480:	jump	0x04c448
000343:0x0004c488:	rts
array<CallQueueContext>::RemoveItem()
000366:0x0004c4b0:	icall	array<CallQueueContext>.Find(value)
000366:0x0004c4b8:	move	remove_index, ret
000368:0x0004c4c8:	cmpi	remove_index, _i0
000368:0x0004c4d8:	blt	0x04c4e8
000370:0x0004c4e0:	ncalli	array<CallQueueContext>.Remove(remove_index)
000370:0x0004c4e8:	rts
array<CallQueueContext>::Debug()
000387:0x0004c530:	ncalli	array<CallQueueContext>.Count()
000387:0x0004c538:	icall	ToString(ret)
000387:0x0004c540:	adds	@s01, _s'Array count: ', ret
000387:0x0004c550:	moves	@s00, @s01
000387:0x0004c560:	call	PrintString(@s00)
000388:0x0004c570:	imove	i, 0x000000
000388:0x0004c580:	jump	0x04c590
000388:0x0004c588:	inc	i
000388:0x0004c590:	ncalli	array<CallQueueContext>.Count()
000388:0x0004c598:	cmpi	i, ret
000388:0x0004c5a8:	bge	0x04c670
000390:0x0004c5b0:	icall	array<CallQueueContext>.Get(i)
000390:0x0004c5b8:	movec	item, ret
000392:0x0004c5c8:	cmpc	item, NULL
000392:0x0004c5d8:	beq	0x04c668
000394:0x0004c5e0:	icall	ToString(i)
000394:0x0004c5e8:	adds	@s03, _s'[', ret
000394:0x0004c5f8:	moves	@s02, @s03
000394:0x0004c608:	adds	@s02, @s02, _s'] => '
000394:0x0004c618:	moves	@s01, @s02
000394:0x0004c628:	icall	ToString(item, _i0, _i0)
000394:0x0004c638:	adds	@s01, @s01, ret
000394:0x0004c648:	moves	@s00, @s01
000394:0x0004c658:	call	PrintString(@s00)
000394:0x0004c668:	jump	0x04c588
000394:0x0004c670:	rts
array<CallQueueContext>::GetRandomIndex()
000411:0x0004c678:	ncalli	array<CallQueueContext>.Count()
000411:0x0004c680:	cmpi	ret, _i0
000411:0x0004c690:	ble	0x04c6c0
000413:0x0004c698:	ncalli	array<CallQueueContext>.Count()
000413:0x0004c6a0:	ncall	RandomInt(_i0, ret)
000413:0x0004c6a8:	move	ret, ret
000413:0x0004c6b8:	rts
000416:0x0004c6c0:	imove	ret, 0xffffffff
000416:0x0004c6d0:	rts
000416:0x0004c6d8:	rts
array<CallQueueContext>::GetRandomElement()
000430:0x0004c6e0:	call	array<CallQueueContext>.GetRandomIndex()
000430:0x0004c6e8:	icall	array<CallQueueContext>.Get(ret)
000430:0x0004c6f0:	movec	ret, ret
000430:0x0004c700:	rts
000430:0x0004c708:	rts
array<CallQueueContext>::SwapItems()
000435:0x0004c730:	icall	array<CallQueueContext>.Get(item1_index)
000435:0x0004c738:	movec	item1, ret
000436:0x0004c748:	icall	array<CallQueueContext>.Get(item2_index)
000436:0x0004c750:	icall	array<CallQueueContext>.Set(item1_index, ret)
000437:0x0004c758:	icall	array<CallQueueContext>.Set(item2_index, item1)
000437:0x0004c760:	rts
array<Shape>::InsertAll()
000341:0x0004caa8:	imove	i, 0x000000
000341:0x0004cab8:	jump	0x04cac8
000341:0x0004cac0:	inc	i
000341:0x0004cac8:	ncalli	array<Shape>.Count()
000341:0x0004cad0:	cmpi	i, ret
000341:0x0004cae0:	bge	0x04cb00
000343:0x0004cae8:	icall	array<Shape>.Get(i)
000343:0x0004caf0:	icall	array<Shape>.Insert(ret)
000343:0x0004caf8:	jump	0x04cac0
000343:0x0004cb00:	rts
array<Shape>::RemoveItem()
000366:0x0004cb28:	icall	array<Shape>.Find(value)
000366:0x0004cb30:	move	remove_index, ret
000368:0x0004cb40:	cmpi	remove_index, _i0
000368:0x0004cb50:	blt	0x04cb60
000370:0x0004cb58:	ncalli	array<Shape>.Remove(remove_index)
000370:0x0004cb60:	rts
array<Shape>::Debug()
000387:0x0004cba8:	ncalli	array<Shape>.Count()
000387:0x0004cbb0:	icall	ToString(ret)
000387:0x0004cbb8:	adds	@s01, _s'Array count: ', ret
000387:0x0004cbc8:	moves	@s00, @s01
000387:0x0004cbd8:	call	PrintString(@s00)
000388:0x0004cbe8:	imove	i, 0x000000
000388:0x0004cbf8:	jump	0x04cc08
000388:0x0004cc00:	inc	i
000388:0x0004cc08:	ncalli	array<Shape>.Count()
000388:0x0004cc10:	cmpi	i, ret
000388:0x0004cc20:	bge	0x04cce8
000390:0x0004cc28:	icall	array<Shape>.Get(i)
000390:0x0004cc30:	movec	item, ret
000392:0x0004cc40:	cmpc	item, NULL
000392:0x0004cc50:	beq	0x04cce0
000394:0x0004cc58:	icall	ToString(i)
000394:0x0004cc60:	adds	@s03, _s'[', ret
000394:0x0004cc70:	moves	@s02, @s03
000394:0x0004cc80:	adds	@s02, @s02, _s'] => '
000394:0x0004cc90:	moves	@s01, @s02
000394:0x0004cca0:	icall	ToString(item, _i0, _i0)
000394:0x0004ccb0:	adds	@s01, @s01, ret
000394:0x0004ccc0:	moves	@s00, @s01
000394:0x0004ccd0:	call	PrintString(@s00)
000394:0x0004cce0:	jump	0x04cc00
000394:0x0004cce8:	rts
array<Shape>::GetRandomIndex()
000411:0x0004ccf0:	ncalli	array<Shape>.Count()
000411:0x0004ccf8:	cmpi	ret, _i0
000411:0x0004cd08:	ble	0x04cd38
000413:0x0004cd10:	ncalli	array<Shape>.Count()
000413:0x0004cd18:	ncall	RandomInt(_i0, ret)
000413:0x0004cd20:	move	ret, ret
000413:0x0004cd30:	rts
000416:0x0004cd38:	imove	ret, 0xffffffff
000416:0x0004cd48:	rts
000416:0x0004cd50:	rts
array<Shape>::GetRandomElement()
000430:0x0004cd58:	call	array<Shape>.GetRandomIndex()
000430:0x0004cd60:	icall	array<Shape>.Get(ret)
000430:0x0004cd68:	movec	ret, ret
000430:0x0004cd78:	rts
000430:0x0004cd80:	rts
array<Shape>::SwapItems()
000435:0x0004cda8:	icall	array<Shape>.Get(item1_index)
000435:0x0004cdb0:	movec	item1, ret
000436:0x0004cdc0:	icall	array<Shape>.Get(item2_index)
000436:0x0004cdc8:	icall	array<Shape>.Set(item1_index, ret)
000437:0x0004cdd0:	icall	array<Shape>.Set(item2_index, item1)
000437:0x0004cdd8:	rts
map<string,bool>::ReplaceKey()
000584:0x0004d1c0:	icall	map<string,bool>.Contains(old_key)
000584:0x0004d1c8:	cmpi	ret, _i0
000584:0x0004d1d8:	beq	0x04d1f8
000586:0x0004d1e0:	icall	map<string,bool>.Get(old_key)
000586:0x0004d1e8:	icall	map<string,bool>.Set(new_key, ret)
000587:0x0004d1f0:	icall	map<string,bool>.Remove(old_key)
000587:0x0004d1f8:	rts
map<string,bool>::GetKeyByValue()
000594:0x0004d240:	imove	i, 0x000000
000594:0x0004d250:	jump	0x04d260
000594:0x0004d258:	inc	i
000594:0x0004d260:	ncalli	map<string,bool>.Count()
000594:0x0004d268:	cmpi	i, ret
000594:0x0004d278:	bge	0x04d2c8
000596:0x0004d280:	icall	map<string,bool>.GetElement(i)
000596:0x0004d288:	cmpi	ret, value
000596:0x0004d298:	bne	0x04d2c0
000598:0x0004d2a0:	icall	map<string,bool>.GetKey(i)
000598:0x0004d2a8:	moves	ret, ret
000599:0x0004d2b8:	jump	0x04d2c8
000599:0x0004d2c0:	jump	0x04d258
000603:0x0004d2c8:	moves	ret, ret
000603:0x0004d2d8:	rts
000603:0x0004d2e0:	rts
map<string,Vector2>::ReplaceKey()
000584:0x0004d6c8:	icall	map<string,Vector2>.Contains(old_key)
000584:0x0004d6d0:	cmpi	ret, _i0
000584:0x0004d6e0:	beq	0x04d700
000586:0x0004d6e8:	icall	map<string,Vector2>.Get(old_key)
000586:0x0004d6f0:	icall	map<string,Vector2>.Set(new_key, ret)
000587:0x0004d6f8:	icall	map<string,Vector2>.Remove(old_key)
000587:0x0004d700:	rts
map<string,Vector2>::GetKeyByValue()
000594:0x0004d748:	imove	i, 0x000000
000594:0x0004d758:	jump	0x04d768
000594:0x0004d760:	inc	i
000594:0x0004d768:	ncalli	map<string,Vector2>.Count()
000594:0x0004d770:	cmpi	i, ret
000594:0x0004d780:	bge	0x04d7d0
000596:0x0004d788:	icall	map<string,Vector2>.GetElement(i)
000596:0x0004d790:	cmpc	ret, value
000596:0x0004d7a0:	bne	0x04d7c8
000598:0x0004d7a8:	icall	map<string,Vector2>.GetKey(i)
000598:0x0004d7b0:	moves	ret, ret
000599:0x0004d7c0:	jump	0x04d7d0
000599:0x0004d7c8:	jump	0x04d760
000603:0x0004d7d0:	moves	ret, ret
000603:0x0004d7e0:	rts
000603:0x0004d7e8:	rts
map<LogTemplateID,Param3<string,string,string>>::ReplaceKey()
000584:0x0004dbd0:	icall	map<LogTemplateID,Param3<string,string,string>>.Contains(old_key)
000584:0x0004dbd8:	cmpi	ret, _i0
000584:0x0004dbe8:	beq	0x04dc08
000586:0x0004dbf0:	icall	map<LogTemplateID,Param3<string,string,string>>.Get(old_key)
000586:0x0004dbf8:	icall	map<LogTemplateID,Param3<string,string,string>>.Set(new_key, ret)
000587:0x0004dc00:	icall	map<LogTemplateID,Param3<string,string,string>>.Remove(old_key)
000587:0x0004dc08:	rts
map<LogTemplateID,Param3<string,string,string>>::GetKeyByValue()
000594:0x0004dc50:	imove	i, 0x000000
000594:0x0004dc60:	jump	0x04dc70
000594:0x0004dc68:	inc	i
000594:0x0004dc70:	ncalli	map<LogTemplateID,Param3<string,string,string>>.Count()
000594:0x0004dc78:	cmpi	i, ret
000594:0x0004dc88:	bge	0x04dcd8
000596:0x0004dc90:	icall	map<LogTemplateID,Param3<string,string,string>>.GetElement(i)
000596:0x0004dc98:	cmpc	ret, value
000596:0x0004dca8:	bne	0x04dcd0
000598:0x0004dcb0:	icall	map<LogTemplateID,Param3<string,string,string>>.GetKey(i)
000598:0x0004dcb8:	move	ret, ret
000599:0x0004dcc8:	jump	0x04dcd8
000599:0x0004dcd0:	jump	0x04dc68
000603:0x0004dcd8:	move	ret, ret
000603:0x0004dce8:	rts
000603:0x0004dcf0:	rts
LoadingScreen::LoadingScreen()
//scripts/3_Game/DayZGame.c
000016:0x0004e098:	ncalli	DayZGame.GetWorkspace()
000016:0x0004e0a0:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/loading.layout', _c0)
000016:0x0004e0a8:	movetm	m_WidgetRoot, ret
000017:0x0004e0b8:	movefm	[0x11cf2b58], m_WidgetRoot
000017:0x0004e0c8:	ncalli	Widget.FindAnyWidget(_s'ProgressBarFrameSmall')
000017:0x0004e0d0:	movetm	m_FrameWidgetSmall, ret
000018:0x0004e0e0:	movefm	[0x11cf2b58], m_WidgetRoot
000018:0x0004e0f0:	ncalli	Widget.FindAnyWidget(_s'ProgressBarFrameLarge')
000018:0x0004e0f8:	movetm	m_FrameWidgetLarge, ret
000019:0x0004e108:	movefm	[0x11cf2b58], m_WidgetRoot
000019:0x0004e118:	ncalli	Widget.FindAnyWidget(_s'ProgressBarWidgetSmall')
000019:0x0004e120:	movetm	m_ProgressBarSmall, ret
000020:0x0004e130:	movefm	[0x11cf2b58], m_WidgetRoot
000020:0x0004e140:	ncalli	Widget.FindAnyWidget(_s'ProgressBarWidgetLarge')
000020:0x0004e148:	movetm	m_ProgressBarLarge, ret
000021:0x0004e158:	movefm	[0x11cf2b58], m_WidgetRoot
000021:0x0004e168:	ncalli	Widget.FindAnyWidget(_s'TextWidget')
000021:0x0004e170:	movetm	m_TextWidgetTitle, ret
000022:0x0004e180:	movefm	[0x11cf2b58], m_WidgetRoot
000022:0x0004e190:	ncalli	Widget.FindAnyWidget(_s'ImageBackground')
000022:0x0004e198:	movetm	m_ImageWidgetBackground, ret
000024:0x0004e1a8:	movem	m_ProgressBar, m_ProgressBarLarge
000025:0x0004e1b8:	movefm	[0x11cf2b58], m_FrameWidgetSmall
000025:0x0004e1c8:	ncalli	Widget.Show(false)
000026:0x0004e1d0:	call	GetRandomLoadingBackground()
000026:0x0004e1d8:	movefm	[0x11d095f8], m_ImageWidgetBackground
000026:0x0004e1e8:	ncalli	ImageWidget.LoadImageFile(_i0, ret, _i0)
000027:0x0004e1f8:	movefm	[0x11d095f8], m_ImageWidgetBackground
000027:0x0004e208:	ncalli	ImageWidget.Show(false)
000028:0x0004e210:	movefm	[0x11d0a118], m_ProgressBar
000028:0x0004e220:	ncalli	ProgressBarWidget.SetCurrent(_f0.000000)
000029:0x0004e228:	imove	m_Counter, 0x000000
000029:0x0004e238:	rts
LoadingScreen::Inc()
000034:0x0004e240:	inc	m_Counter
000036:0x0004e248:	cmpi	m_Counter, _i1
000036:0x0004e258:	bne	0x04e268
000038:0x0004e260:	call	LoadingScreen.Show()
000038:0x0004e268:	rts
LoadingScreen::Dec()
000044:0x0004e2b0:	subi	@m00, m_Counter, _i1
000044:0x0004e2c0:	move	m_Counter, @m00
000046:0x0004e2d0:	cmpi	m_Counter, _i0
000046:0x0004e2e0:	bgt	0x04e348
000048:0x0004e2e8:	movefm	[0x11cf2b58], m_WidgetRoot
000048:0x0004e2f8:	ncalli	Widget.Show(false)
000049:0x0004e300:	imove	m_Counter, 0x000000
000050:0x0004e310:	ncall	GetGame()
000050:0x0004e318:	call	CGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000050:0x0004e328:	movec	obj, g_Game
000050:0x0004e338:	call	CallQueue.Call(obj, _s'CheckDialogs', _c0)
000050:0x0004e348:	rts
LoadingScreen::IsLoading()
000056:0x0004e350:	movefm	[0x11cf2b58], m_WidgetRoot
000056:0x0004e360:	ncalli	Widget.IsVisible()
000056:0x0004e368:	cmpi	ret, _i0
000056:0x0004e378:	beq	0x04e398
000058:0x0004e380:	imove	ret, 0x000001
000058:0x0004e390:	rts
000061:0x0004e398:	imove	ret, 0x000000
000061:0x0004e3a8:	rts
000061:0x0004e3b0:	rts
LoadingScreen::SetTitle()
000066:0x0004e3b8:	movefm	[0x11d09418], m_TextWidgetTitle
000066:0x0004e3c8:	ncalli	TextWidget.SetText(title)
000066:0x0004e3d0:	rts
LoadingScreen::SetProgress()
000071:0x0004e3f8:	cmpi	m_Counter, _i0
000071:0x0004e408:	ble	0x04e448
000073:0x0004e410:	mulf	@f01, val, _f100.000000
000073:0x0004e420:	move	@f00, @f01
000073:0x0004e430:	movefm	[0x11d0a118], m_ProgressBar
000073:0x0004e440:	ncalli	ProgressBarWidget.SetCurrent(@f00)
000073:0x0004e448:	rts
LoadingScreen::Show()
000084:0x0004e450:	movefm	[0x11cf2b58], m_WidgetRoot
000084:0x0004e460:	ncalli	Widget.IsVisible()
000084:0x0004e468:	cmpi	ret, _i0
000084:0x0004e478:	bne	0x04e5d8
000086:0x0004e480:	ncalli	DayZGame.GetUIManager()
000086:0x0004e488:	ncalli	UIManager.IsDialogVisible()
000086:0x0004e490:	cmpi	ret, _i0
000086:0x0004e4a0:	beq	0x04e4b8
000088:0x0004e4a8:	ncalli	DayZGame.GetUIManager()
000088:0x0004e4b0:	ncalli	UIManager.HideDialog()
000091:0x0004e4b8:	call	DayZGame.GetMissionState()
000091:0x0004e4c0:	cmpi	ret, MISSION_STATE_MAINMENU
000091:0x0004e4d0:	bne	0x04e538
000093:0x0004e4d8:	movem	m_ProgressBar, m_ProgressBarSmall
000094:0x0004e4e8:	movefm	[0x11cf2b58], m_FrameWidgetSmall
000094:0x0004e4f8:	ncalli	Widget.Show(true)
000095:0x0004e500:	movefm	[0x11cf2b58], m_FrameWidgetLarge
000095:0x0004e510:	ncalli	Widget.Show(false)
000096:0x0004e518:	movefm	[0x11d095f8], m_ImageWidgetBackground
000096:0x0004e528:	ncalli	ImageWidget.Show(true)
000096:0x0004e530:	jump	0x04e590
000100:0x0004e538:	movem	m_ProgressBar, m_ProgressBarLarge
000101:0x0004e548:	movefm	[0x11cf2b58], m_FrameWidgetSmall
000101:0x0004e558:	ncalli	Widget.Show(false)
000102:0x0004e560:	movefm	[0x11cf2b58], m_FrameWidgetLarge
000102:0x0004e570:	ncalli	Widget.Show(true)
000103:0x0004e578:	movefm	[0x11d095f8], m_ImageWidgetBackground
000103:0x0004e588:	ncalli	ImageWidget.Show(false)
000106:0x0004e590:	movefm	[0x11cf2b58], m_WidgetRoot
000106:0x0004e5a0:	ncalli	Widget.Show(true)
000107:0x0004e5a8:	movefm	[0x11d0a118], m_ProgressBar
000107:0x0004e5b8:	ncalli	ProgressBarWidget.SetCurrent(_f0.000000)
000108:0x0004e5c0:	movefm	[0x11d09418], m_TextWidgetTitle
000108:0x0004e5d0:	ncalli	TextWidget.SetText(_s'')
000108:0x0004e5d8:	rts
LoadingScreen::Hide()
000114:0x0004e5e0:	cmpi	m_Counter, _i0
000114:0x0004e5f0:	bgt	0x04e640
000114:0x0004e5f8:	movefm	[0x11cf2b58], m_WidgetRoot
000114:0x0004e608:	ncalli	Widget.IsVisible()
000114:0x0004e610:	cmpi	ret, _i0
000114:0x0004e620:	beq	0x04e640
000116:0x0004e628:	movefm	[0x11cf2b58], m_WidgetRoot
000116:0x0004e638:	ncalli	Widget.Show(false)
000116:0x0004e640:	rts
TileEffect::TileEffect()
000131:0x0004e688:	ncalli	DayZGame.GetWorkspace()
000131:0x0004e690:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/tileEffect.layout', _c0)
000131:0x0004e698:	movetm	m_root_widget, ret
000132:0x0004e6a8:	movefm	[0x11cf2b58], m_root_widget
000132:0x0004e6b8:	ncalli	Widget.FindAnyWidget(_s'TextWidget')
000132:0x0004e6c0:	movetm	m_titleWidget, ret
000133:0x0004e6d0:	movefm	[0x11cf2b58], m_root_widget
000133:0x0004e6e0:	ncalli	Widget.FindAnyWidget(_s'BackgroundWidget')
000133:0x0004e6e8:	movetm	m_backgroundWidget, ret
000134:0x0004e6f8:	movefm	[0x11cf2b58], m_root_widget
000134:0x0004e708:	ncalli	Widget.Show(false)
000134:0x0004e710:	rts
TileEffect::SetText()
000146:0x0004e718:	movefm	[0x11d09418], m_titleWidget
000146:0x0004e728:	ncalli	TextWidget.SetText(text)
000146:0x0004e730:	rts
TileEffect::Show()
000152:0x0004e7c8:	cmpc	m_fade_timer, NULL
000152:0x0004e7d8:	bne	0x04e810
000152:0x0004e7e0:	new	@c00, WidgetFadeTimer
000152:0x0004e800:	movec	m_fade_timer, @c00
000153:0x0004e810:	cmpf	duration, _f3.000000
000153:0x0004e820:	ble	0x04e838
000153:0x0004e828:	imove	duration, 3.00000
000155:0x0004e838:	imove	fadedTime, 5.00000
000157:0x0004e848:	movec	[0x3cd17188], m_fade_timer
000157:0x0004e858:	call	WidgetFadeTimer.IsRunning()
000157:0x0004e860:	cmpi	ret, _i0
000157:0x0004e870:	beq	0x04e8c8
000157:0x0004e878:	movec	[0x3cd17188], m_fade_timer
000157:0x0004e888:	cmpi	m_fadeIn, _i0
000157:0x0004e898:	beq	0x04e8c8
000159:0x0004e8a0:	movec	[0x3cd17188], m_fade_timer
000159:0x0004e8b0:	call	WidgetFadeTimer.GetRemaining()
000159:0x0004e8b8:	move	fadedTime, ret
000162:0x0004e8c8:	movec	[0x3cd17188], m_fade_timer
000162:0x0004e8d8:	call	WidgetFadeTimer.Stop()
000163:0x0004e8e0:	movefm	[0x11d09418], m_titleWidget
000163:0x0004e8f0:	ncalli	TextWidget.SetText(text)
000165:0x0004e8f8:	cmpi	show, _i0
000165:0x0004e908:	bne	0x04e930
000167:0x0004e910:	movefm	[0x11cf2b58], m_root_widget
000167:0x0004e920:	ncalli	Widget.Show(false)
000167:0x0004e928:	jump	0x04eac8
000171:0x0004e930:	cmpi	type, TitBlackIn
000171:0x0004e940:	bne	0x04e998
000173:0x0004e948:	movefm	[0x11cf2b58], m_backgroundWidget
000173:0x0004e958:	ncalli	Widget.Show(true)
000174:0x0004e960:	movem	w, m_root_widget
000174:0x0004e970:	movec	[0x3cd17188], m_fade_timer
000174:0x0004e980:	call	WidgetFadeTimer.FadeOut(w, duration, true)
000174:0x0004e990:	jump	0x04eac8
000176:0x0004e998:	cmpi	type, TitBlackFaded
000176:0x0004e9a8:	bne	0x04ea18
000178:0x0004e9b0:	movefm	[0x11cf2b58], m_backgroundWidget
000178:0x0004e9c0:	ncalli	Widget.Show(true)
000179:0x0004e9c8:	cmpf	fadedTime, _f0.000000
000179:0x0004e9d8:	ble	0x04ea10
000179:0x0004e9e0:	movem	w, m_root_widget
000179:0x0004e9f0:	movec	[0x3cd17188], m_fade_timer
000179:0x0004ea00:	call	WidgetFadeTimer.FadeIn(w, fadedTime, true)
000179:0x0004ea10:	jump	0x04eac8
000181:0x0004ea18:	cmpi	type, TitBlackOut
000181:0x0004ea28:	bne	0x04ea80
000183:0x0004ea30:	movefm	[0x11cf2b58], m_backgroundWidget
000183:0x0004ea40:	ncalli	Widget.Show(true)
000184:0x0004ea48:	movem	w, m_root_widget
000184:0x0004ea58:	movec	[0x3cd17188], m_fade_timer
000184:0x0004ea68:	call	WidgetFadeTimer.FadeIn(w, duration, true)
000184:0x0004ea78:	jump	0x04eac8
000188:0x0004ea80:	movefm	[0x11cf2b58], m_backgroundWidget
000188:0x0004ea90:	ncalli	Widget.Show(false)
000189:0x0004ea98:	movem	w, m_root_widget
000189:0x0004eaa8:	movec	[0x3cd17188], m_fade_timer
000189:0x0004eab8:	call	WidgetFadeTimer.FadeOut(w, duration, false)
000189:0x0004eac8:	rts
TileEffect::IsVisible()
000197:0x0004ead0:	movefm	[0x11cf2b58], m_root_widget
000197:0x0004eae0:	ncalli	Widget.IsVisible()
000197:0x0004eae8:	move	ret, ret
000197:0x0004eaf8:	rts
000197:0x0004eb00:	rts
DayZGame::DayZGame()
000226:0x0004ec30:	imove	m_MissionState, 0x000001
000228:0x0004ec40:	movetm	m_keyboard_handler, NULL
000229:0x0004ec50:	ncalli	DayZGame.IsDebug()
000229:0x0004ec58:	move	m_early_access_dialog_accepted, ret
000231:0x0004ec68:	imove	i, 0x000000
000231:0x0004ec78:	jump	0x04ec88
000231:0x0004ec80:	inc	i
000231:0x0004ec88:	cmpi	i, CALL_CATEGORY_COUNT
000231:0x0004ec98:	bge	0x04ed08
000233:0x0004eca0:	new	@c00, CallQueue
000233:0x0004ecc0:	ctv	m_callQueue[i], @c00
000234:0x0004ecd0:	new	@c00, TimerQueue
000234:0x0004ecf0:	ctv	m_timerQueue[i], @c00
000234:0x0004ed00:	jump	0x04ec80
000237:0x0004ed08:	new	@c00, DragQueue
000237:0x0004ed28:	movetm	m_dragQueue, @c00
000239:0x0004ed38:	imove	m_ParamUserActions, 0x000000
000240:0x0004ed48:	imove	m_ParamNewPlayer, 0x000000
000241:0x0004ed58:	imove	m_ParamNewInventory, 0x000000
000242:0x0004ed68:	imove	m_ParamNoLogs, 0x000000
000243:0x0004ed78:	imove	m_DebugActions, 0x000000
000244:0x0004ed88:	imove	m_MainMenu2, 0x000000
000247:0x0004ed98:	ncalli	DayZGame.IsDebug()
000247:0x0004eda0:	cmpi	ret, _i0
000247:0x0004edb0:	beq	0x04eed8
000249:0x0004edb8:	icall	DayZGame.CommandlineGetParam(_s'enUserActions', tmp)
000249:0x0004edc0:	cmpi	ret, _i0
000249:0x0004edd0:	beq	0x04ede8
000251:0x0004edd8:	imove	m_ParamUserActions, 0x000001
000254:0x0004ede8:	icall	DayZGame.CommandlineGetParam(_s'enDebugActions', tmp)
000254:0x0004edf0:	cmpi	ret, _i0
000254:0x0004ee00:	beq	0x04ee18
000256:0x0004ee08:	imove	m_DebugActions, 0x000001
000259:0x0004ee18:	icall	DayZGame.CommandlineGetParam(_s'enNewPlayer', tmp)
000259:0x0004ee20:	cmpi	ret, _i0
000259:0x0004ee30:	beq	0x04ee48
000261:0x0004ee38:	imove	m_ParamNewPlayer, 0x000001
000264:0x0004ee48:	icall	DayZGame.CommandlineGetParam(_s'enNewInventory', tmp)
000264:0x0004ee50:	cmpi	ret, _i0
000264:0x0004ee60:	beq	0x04ee78
000266:0x0004ee68:	imove	m_ParamNewInventory, 0x000001
000269:0x0004ee78:	icall	DayZGame.CommandlineGetParam(_s'enNoLogs', tmp)
000269:0x0004ee80:	cmpi	ret, _i0
000269:0x0004ee90:	beq	0x04eea8
000271:0x0004ee98:	imove	m_ParamNoLogs, 0x000001
000274:0x0004eea8:	icall	DayZGame.CommandlineGetParam(_s'enMainMenu2', tmp)
000274:0x0004eeb0:	cmpi	ret, _i0
000274:0x0004eec0:	beq	0x04eed8
000276:0x0004eec8:	imove	m_MainMenu2, 0x000001
000287:0x0004eed8:	call	Init()
000288:0x0004eee0:	call	Init()
000289:0x0004eee8:	call	Init()
000296:0x0004eef0:	call	DayZGame.InitializeSingletons()
000296:0x0004eef8:	rts
DayZGame::~DayZGame()
000302:0x0004ef40:	movec	dispatcher, NULL
000302:0x0004ef50:	call	SetDispatcher(dispatcher)
000304:0x0004ef60:	imove	i, 0x000000
000304:0x0004ef70:	jump	0x04ef80
000304:0x0004ef78:	inc	i
000304:0x0004ef80:	cmpi	i, CALL_CATEGORY_COUNT
000304:0x0004ef90:	bge	0x04efd0
000306:0x0004ef98:	cfv	@c00, m_callQueue[i]
000306:0x0004efa8:	delete	@c00
000307:0x0004efb0:	cfv	@c00, m_timerQueue[i]
000307:0x0004efc0:	delete	@c00
000307:0x0004efc8:	jump	0x04ef78
000310:0x0004efd0:	call	OnDestroy()
000312:0x0004efd8:	call	OnDestroy()
000314:0x0004efe0:	call	DayZGame.DestroySingletons()
000316:0x0004efe8:	icall	Print(_s'~DayZGame()')
000316:0x0004eff0:	rts
DayZGame::SetMissionPath()
000321:0x0004eff8:	moves	m_mission_path, path
000321:0x0004f008:	rts
DayZGame::GetCallQueue()
000326:0x0004f010:	cfv	@c01, m_callQueue[call_category]
000326:0x0004f020:	movetm	ret, @c01
000326:0x0004f030:	rts
000326:0x0004f038:	rts
DayZGame::GetTimerQueue()
000331:0x0004f040:	cfv	@c01, m_timerQueue[call_category]
000331:0x0004f050:	movetm	ret, @c01
000331:0x0004f060:	rts
000331:0x0004f068:	rts
DayZGame::GetDragQueue()
000336:0x0004f070:	movem	ret, m_dragQueue
000336:0x0004f080:	rts
000336:0x0004f088:	rts
DayZGame::InitializeSingletons()
000342:0x0004f090:	new	@c00, CashedObjectsParams
000342:0x0004f0b0:	movec	m_CashedObjectsParams, @c00
000343:0x0004f0c0:	new	@c00, CashedObjectsArrays
000343:0x0004f0e0:	movec	m_CashedObjectsArrays, @c00
000343:0x0004f0f0:	rts
DayZGame::DestroySingletons()
000350:0x0004f0f8:	delete	m_CashedObjectsParams
000351:0x0004f100:	delete	m_CashedObjectsArrays
000351:0x0004f108:	rts
DayZGame::GetMissionState()
000356:0x0004f110:	move	ret, m_MissionState
000356:0x0004f120:	rts
000356:0x0004f128:	rts
DayZGame::SetMissionState()
000362:0x0004f130:	move	m_MissionState, state
000362:0x0004f140:	rts
DayZGame::IsInventoryOpen()
000368:0x0004f148:	ncalli	DayZGame.GetUIManager()
000368:0x0004f150:	call	UIManager.FindMenu(MENU_INVENTORY)
000368:0x0004f160:	cmpcm	ret, NULL
000368:0x0004f170:	beq	0x04f190
000370:0x0004f178:	imove	ret, 0x000001
000370:0x0004f188:	rts
000373:0x0004f190:	imove	ret, 0x000000
000373:0x0004f1a0:	rts
000373:0x0004f1a8:	rts
DayZGame::EarlyAccessDialog()
000379:0x0004f1b0:	cmpi	m_early_access_dialog_accepted, _i0
000379:0x0004f1c0:	bne	0x04f1f8
000381:0x0004f1c8:	ncalli	DayZGame.GetUIManager()
000381:0x0004f1d0:	movefm	[0x3cd3f3e0], parent
000381:0x0004f1e0:	ncalli	UIManager.EnterScriptedMenu(MENU_EARLYACCESS, [0x3cd3f3e0])
000382:0x0004f1e8:	imove	m_early_access_dialog_accepted, 0x000001
000382:0x0004f1f8:	rts
DayZGame::CreateScriptedMenu()
000397:0x0004f200:	movetm	ret, NULL
000397:0x0004f210:	rts
000397:0x0004f218:	rts
DayZGame::CreateActivity()
000412:0x0004f220:	movec	ret, NULL
000412:0x0004f230:	rts
000412:0x0004f238:	rts
DayZGame::OnEvent()
000427:0x0004f4b8:	movea	@m00, StartupEventTypeID
000427:0x0004f4c8:	cmpc	@m00, eventTypeId
000427:0x0004f4d8:	bne	0x04f4f0
000430:0x0004f4e0:	jump	0x04f920
000430:0x0004f4e8:	jump	0x04f518
000430:0x0004f4f0:	movea	@m00, MPSessionStartEventTypeID
000430:0x0004f500:	cmpc	@m00, eventTypeId
000430:0x0004f510:	bne	0x04f530
000433:0x0004f518:	call	DayZGame.LoadingShow()
000434:0x0004f520:	jump	0x04f920
000434:0x0004f528:	jump	0x04f558
000434:0x0004f530:	movea	@m00, MPSessionEndEventTypeID
000434:0x0004f540:	cmpc	@m00, eventTypeId
000434:0x0004f550:	bne	0x04f568
000437:0x0004f558:	jump	0x04f920
000437:0x0004f560:	jump	0x04f590
000437:0x0004f568:	movea	@m00, MPSessionFailEventTypeID
000437:0x0004f578:	cmpc	@m00, eventTypeId
000437:0x0004f588:	bne	0x04f5a8
000440:0x0004f590:	call	DayZGame.LoadingHide()
000441:0x0004f598:	jump	0x04f920
000441:0x0004f5a0:	jump	0x04f5d0
000441:0x0004f5a8:	movea	@m00, WorldCleaupEventTypeID
000441:0x0004f5b8:	cmpc	@m00, eventTypeId
000441:0x0004f5c8:	bne	0x04f5e8
000444:0x0004f5d0:	call	DayZGame.LoadingShow()
000445:0x0004f5d8:	jump	0x04f920
000445:0x0004f5e0:	jump	0x04f610
000445:0x0004f5e8:	movea	@m00, DialogQueuedEventTypeID
000445:0x0004f5f8:	cmpc	@m00, eventTypeId
000445:0x0004f608:	bne	0x04f658
000448:0x0004f610:	ncall	GetGame()
000448:0x0004f618:	call	CGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000448:0x0004f628:	movec	obj, g_Game
000448:0x0004f638:	call	CallQueue.Call(obj, _s'CheckDialogs', _c0)
000449:0x0004f648:	jump	0x04f920
000449:0x0004f650:	jump	0x04f680
000449:0x0004f658:	movea	@m00, ChatMessageEventTypeID
000449:0x0004f668:	cmpc	@m00, eventTypeId
000449:0x0004f678:	bne	0x04f6a0
000452:0x0004f680:	movec	chat_params, params
000460:0x0004f690:	jump	0x04f920
000460:0x0004f698:	jump	0x04f6c8
000460:0x0004f6a0:	movea	@m00, ProgressEventTypeID
000460:0x0004f6b0:	cmpc	@m00, eventTypeId
000460:0x0004f6c0:	bne	0x04f728
000463:0x0004f6c8:	movec	prog_params, params
000464:0x0004f6d8:	move	progressState, param1
000464:0x0004f6e8:	move	progress, param2
000464:0x0004f6f8:	moves	title, param3
000464:0x0004f708:	call	DayZGame.LoadProgressUpdate(progressState, progress, title)
000465:0x0004f718:	jump	0x04f920
000465:0x0004f720:	jump	0x04f750
000465:0x0004f728:	movea	@m00, EntityNetworkUpdateEventTypeID
000465:0x0004f738:	cmpc	@m00, eventTypeId
000465:0x0004f748:	bne	0x04f770
000468:0x0004f750:	movec	ent_params, params
000470:0x0004f760:	jump	0x04f920
000470:0x0004f768:	jump	0x04f798
000470:0x0004f770:	movea	@m00, TileEffectEventTypeID
000470:0x0004f780:	cmpc	@m00, eventTypeId
000470:0x0004f790:	bne	0x04f7b8
000473:0x0004f798:	movec	tile_params, params
000477:0x0004f7a8:	jump	0x04f920
000477:0x0004f7b0:	jump	0x04f7e0
000477:0x0004f7b8:	movea	@m00, ClientNewEventTypeID
000477:0x0004f7c8:	cmpc	@m00, eventTypeId
000477:0x0004f7d8:	bne	0x04f7f8
000480:0x0004f7e0:	icall	Print(_s'DayZGame::OnEvent::NEW event')
000481:0x0004f7e8:	jump	0x04f920
000481:0x0004f7f0:	jump	0x04f820
000481:0x0004f7f8:	movea	@m00, ClientRespawnEventTypeID
000481:0x0004f808:	cmpc	@m00, eventTypeId
000481:0x0004f818:	bne	0x04f838
000484:0x0004f820:	icall	Print(_s'DayZGame::OnEvent::RESPAWN event')
000485:0x0004f828:	jump	0x04f920
000485:0x0004f830:	jump	0x04f860
000485:0x0004f838:	movea	@m00, ClientReadyEventTypeID
000485:0x0004f848:	cmpc	@m00, eventTypeId
000485:0x0004f858:	bne	0x04f878
000488:0x0004f860:	icall	Print(_s'DayZGame::OnEvent::READY event')
000489:0x0004f868:	jump	0x04f920
000489:0x0004f870:	jump	0x04f8a0
000489:0x0004f878:	movea	@m00, ClientDisconnectedEventTypeID
000489:0x0004f888:	cmpc	@m00, eventTypeId
000489:0x0004f898:	bne	0x04f8b8
000492:0x0004f8a0:	icall	Print(_s'DayZGame::OnEvent::DISC event')
000493:0x0004f8a8:	jump	0x04f920
000493:0x0004f8b0:	jump	0x04f8e0
000493:0x0004f8b8:	movea	@m00, ClientQueuedEventTypeID
000493:0x0004f8c8:	cmpc	@m00, eventTypeId
000493:0x0004f8d8:	bne	0x04f920
000496:0x0004f8e0:	icall	Print(_s'DayZGame::OnEvent::Queued event')
000497:0x0004f8e8:	movec	newParams, params
000499:0x0004f8f8:	ncall	GetGame()
000499:0x0004f900:	ncalli	CGame.SetPlayerWaited()
000500:0x0004f908:	ncall	GetGame()
000500:0x0004f910:	ncalli	CGame.SetEVUser(_f0.000000)
000501:0x0004f918:	jump	0x04f920
000504:0x0004f920:	ncalli	DayZGame.GetMission()
000504:0x0004f928:	movec	mission, ret
000505:0x0004f938:	cmpc	mission, NULL
000505:0x0004f948:	beq	0x04f960
000507:0x0004f950:	call	Mission.OnEvent(eventTypeId, params)
000507:0x0004f960:	rts
DayZGame::OnAfterCreate()
000549:0x0004f968:	ncall	Randomize(_i-1)
000549:0x0004f970:	rts
DayZGame::IsLeftCtrlDown()
000554:0x0004f978:	move	ret, m_IsCtrlHolding
000554:0x0004f988:	rts
000554:0x0004f990:	rts
DayZGame::OnKeyPress()
000561:0x0004fa48:	cmpi	key, _i29
000561:0x0004fa58:	bne	0x04fa70
000563:0x0004fa60:	imove	m_IsCtrlHolding, 0x000001
000566:0x0004fa70:	cmpi	key, _i56
000566:0x0004fa80:	bne	0x04fa98
000568:0x0004fa88:	imove	m_IsLeftAltHolding, 0x000001
000571:0x0004fa98:	cmpi	key, _i184
000571:0x0004faa8:	bne	0x04fac0
000573:0x0004fab0:	imove	m_IsRightAltHolding, 0x000001
000576:0x0004fac0:	cmpcm	m_keyboard_handler, NULL
000576:0x0004fad0:	beq	0x04fb08
000578:0x0004fad8:	movetm	w, NULL
000578:0x0004fae8:	movefm	[0x3cd18040], m_keyboard_handler
000578:0x0004faf8:	call	UIScriptedMenu.OnKeyDown(w, _i0, _i0, key)
000581:0x0004fb08:	ncalli	DayZGame.GetMission()
000581:0x0004fb10:	movec	mission, ret
000582:0x0004fb20:	cmpc	mission, NULL
000582:0x0004fb30:	beq	0x04fb48
000584:0x0004fb38:	call	Mission.OnKeyPress(key)
000584:0x0004fb48:	rts
DayZGame::OnKeyRelease()
000601:0x0004fb98:	cmpi	key, _i29
000601:0x0004fba8:	bne	0x04fbc0
000603:0x0004fbb0:	imove	m_IsCtrlHolding, 0x000000
000606:0x0004fbc0:	cmpi	key, _i219
000606:0x0004fbd0:	bne	0x04fbe8
000608:0x0004fbd8:	imove	m_IsWinHolding, 0x000000
000611:0x0004fbe8:	cmpi	key, _i56
000611:0x0004fbf8:	bne	0x04fc10
000613:0x0004fc00:	imove	m_IsLeftAltHolding, 0x000000
000616:0x0004fc10:	cmpi	key, _i184
000616:0x0004fc20:	bne	0x04fc38
000618:0x0004fc28:	imove	m_IsRightAltHolding, 0x000000
000621:0x0004fc38:	cmpcm	m_keyboard_handler, NULL
000621:0x0004fc48:	beq	0x04fc80
000623:0x0004fc50:	movetm	w, NULL
000623:0x0004fc60:	movefm	[0x3cd18040], m_keyboard_handler
000623:0x0004fc70:	call	UIScriptedMenu.OnKeyUp(w, _i0, _i0, key)
000626:0x0004fc80:	ncalli	DayZGame.GetMission()
000626:0x0004fc88:	movec	mission, ret
000627:0x0004fc98:	cmpc	mission, NULL
000627:0x0004fca8:	beq	0x04fcc0
000629:0x0004fcb0:	call	Mission.OnKeyRelease(key)
000629:0x0004fcc0:	rts
DayZGame::OnMouseButtonPress()
000636:0x0004fce8:	ncalli	DayZGame.GetMission()
000636:0x0004fcf0:	movec	mission, ret
000637:0x0004fd00:	cmpc	mission, NULL
000637:0x0004fd10:	beq	0x04fd28
000639:0x0004fd18:	call	Mission.OnMouseButtonPress(button)
000639:0x0004fd28:	rts
DayZGame::OnMouseButtonRelease()
000646:0x0004fd50:	ncalli	DayZGame.GetMission()
000646:0x0004fd58:	movec	mission, ret
000647:0x0004fd68:	cmpc	mission, NULL
000647:0x0004fd78:	beq	0x04fd90
000649:0x0004fd80:	call	Mission.OnMouseButtonRelease(button)
000649:0x0004fd90:	rts
DayZGame::OnUpdate()
000656:0x0004fe08:	ncalli	DayZGame.GetMission()
000656:0x0004fe10:	movec	mission, ret
000657:0x0004fe20:	imove	gameIsRunning, 0x000000
000659:0x0004fe30:	cmpi	doSim, _i0
000659:0x0004fe40:	beq	0x04fe90
000659:0x0004fe48:	cmpc	mission, NULL
000659:0x0004fe58:	beq	0x04fe90
000659:0x0004fe60:	call	Mission.IsPaused()
000659:0x0004fe68:	cmpi	ret, _i0
000659:0x0004fe78:	bne	0x04fe90
000661:0x0004fe80:	imove	gameIsRunning, 0x000001
000664:0x0004fe90:	cmpi	doSim, _i0
000664:0x0004fea0:	beq	0x04fed0
000664:0x0004fea8:	cmpc	mission, NULL
000664:0x0004feb8:	beq	0x04fed0
000666:0x0004fec0:	call	Mission.OnUpdate(timeslice)
000670:0x0004fed0:	call	DayZGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000670:0x0004fee0:	call	CallQueue.Tick()
000671:0x0004fee8:	call	DayZGame.GetTimerQueue(CALL_CATEGORY_SYSTEM)
000671:0x0004fef8:	call	TimerQueue.Tick(timeslice)
000686:0x0004ff08:	cmpi	gameIsRunning, _i0
000686:0x0004ff18:	beq	0x04ff58
000688:0x0004ff20:	call	DayZGame.GetCallQueue(CALL_CATEGORY_GAMEPLAY)
000688:0x0004ff30:	call	CallQueue.Tick()
000689:0x0004ff38:	call	DayZGame.GetTimerQueue(CALL_CATEGORY_GAMEPLAY)
000689:0x0004ff48:	call	TimerQueue.Tick(timeslice)
000689:0x0004ff58:	rts
DayZGame::OnRPC()
000697:0x0004ff60:	cmpcm	target, NULL
000697:0x0004ff70:	beq	0x04ff90
000700:0x0004ff78:	call	Object.OnRPC(rpc_type, ctx)
000700:0x0004ff88:	jump	0x04ff90
000700:0x0004ff90:	rts
DayZGame::IsLoading()
000724:0x0004ff98:	cmpc	m_loading, NULL
000724:0x0004ffa8:	beq	0x04fff8
000724:0x0004ffb0:	movec	[0x3cd179e8], m_loading
000724:0x0004ffc0:	call	LoadingScreen.IsLoading()
000724:0x0004ffc8:	cmpi	ret, _i0
000724:0x0004ffd8:	beq	0x04fff8
000726:0x0004ffe0:	imove	ret, 0x000001
000726:0x0004fff0:	rts
000729:0x0004fff8:	imove	ret, 0x000000
000729:0x00050008:	rts
000729:0x00050010:	rts
DayZGame::SetKeyboardHandle()
000735:0x00050018:	movem	m_keyboard_handler, handler
000735:0x00050028:	rts
GetDayZGame()
000761:0x00050030:	movec	ret, g_Game
000761:0x00050040:	rts
000761:0x00050048:	rts
GetDate()
//Scripts/DataBase/DataBase.c
000006:0x00050240:	icall	GetYearMonthDay(year, month, day)
000008:0x00050250:	icall	GetHourMinuteSecond(hour, minute, second)
000010:0x00050260:	move	value, month
000010:0x00050270:	call	ToStringLen(value, _i2)
000010:0x00050280:	move	month, value
000010:0x00050290:	adds	@s05, ret, _s'-'
000010:0x000502a0:	moves	@s03, @s05
000010:0x000502b0:	move	value, day
000010:0x000502c0:	pushs	ret
000010:0x000502c8:	call	ToStringLen(value, _i2)
000010:0x000502d8:	moves	@s05, ret
000010:0x000502e8:	pops	ret
000010:0x000502f0:	move	day, value
000010:0x00050300:	adds	@s03, @s03, @s05
000010:0x00050310:	moves	@s02, @s03
000010:0x00050320:	adds	@s02, @s02, _s'-'
000010:0x00050330:	moves	@s01, @s02
000010:0x00050340:	move	value, hour
000010:0x00050350:	pushs	ret
000010:0x00050358:	call	ToStringLen(value, _i2)
000010:0x00050368:	moves	@s02, ret
000010:0x00050378:	pops	ret
000010:0x00050380:	move	hour, value
000010:0x00050390:	adds	@s01, @s01, @s02
000010:0x000503a0:	moves	@s00, @s01
000010:0x000503b0:	move	value, minute
000010:0x000503c0:	pushs	ret
000010:0x000503c8:	call	ToStringLen(value, _i2)
000010:0x000503d8:	moves	@s01, ret
000010:0x000503e8:	pops	ret
000010:0x000503f0:	move	minute, value
000010:0x00050400:	adds	date, @s00, @s01
000012:0x00050410:	moves	ret, date
000012:0x00050420:	rts
000012:0x00050428:	rts
VIPConvertList()
000019:0x00050dd8:	moves	outParam1, _s'['
000020:0x00050de8:	moves	outParam2, _s'['
000021:0x00050df8:	moves	outParam3, _s'['
000025:0x00050e08:	new	@c00, array<string>
000025:0x00050e28:	movetm	List_1, @c00
000026:0x00050e38:	new	@c00, array<string>
000026:0x00050e58:	movetm	List_2, @c00
000027:0x00050e68:	new	@c00, array<string>
000027:0x00050e88:	movetm	List_3, @c00
000029:0x00050e98:	adds	@s03, _s'$profile:', _s'\VIP\'
000029:0x00050ea8:	moves	@s02, @s03
000029:0x00050eb8:	adds	@s02, @s02, _s'VIP_List1'
000029:0x00050ec8:	moves	@s01, @s02
000029:0x00050ed8:	adds	@s01, @s01, _s'.sqf'
000029:0x00050ee8:	moves	@s00, @s01
000029:0x00050ef8:	icall	OpenFile(@s00, _i1)
000029:0x00050f00:	movea	file_1, ret
000030:0x00050f10:	adds	@s03, _s'$profile:', _s'\VIP\'
000030:0x00050f20:	moves	@s02, @s03
000030:0x00050f30:	adds	@s02, @s02, _s'VIP_List2'
000030:0x00050f40:	moves	@s01, @s02
000030:0x00050f50:	adds	@s01, @s01, _s'.sqf'
000030:0x00050f60:	moves	@s00, @s01
000030:0x00050f70:	icall	OpenFile(@s00, _i1)
000030:0x00050f78:	movea	file_2, ret
000031:0x00050f88:	adds	@s03, _s'$profile:', _s'\VIP\'
000031:0x00050f98:	moves	@s02, @s03
000031:0x00050fa8:	adds	@s02, @s02, _s'VIP_List3'
000031:0x00050fb8:	moves	@s01, @s02
000031:0x00050fc8:	adds	@s01, @s01, _s'.sqf'
000031:0x00050fd8:	moves	@s00, @s01
000031:0x00050fe8:	icall	OpenFile(@s00, _i1)
000031:0x00050ff0:	movea	file_3, ret
000033:0x00051000:	cmpc	file_1, _i0
000033:0x00051010:	bne	0x051048
000033:0x00051018:	cmpc	file_2, _i0
000033:0x00051028:	bne	0x051048
000033:0x00051030:	cmpc	file_3, _i0
000033:0x00051040:	beq	0x051390
000037:0x00051048:	icall	FGets(file_1, line_content)
000037:0x00051050:	cmpi	ret, _i0
000037:0x00051060:	ble	0x051078
000039:0x00051068:	icall	array<string>.Insert(line_content)
000039:0x00051070:	jump	0x051048
000041:0x00051078:	icall	CloseFile(file_1)
000043:0x00051080:	icall	FGets(file_2, line_content)
000043:0x00051088:	cmpi	ret, _i0
000043:0x00051098:	ble	0x0510b0
000045:0x000510a0:	icall	array<string>.Insert(line_content)
000045:0x000510a8:	jump	0x051080
000047:0x000510b0:	icall	CloseFile(file_2)
000049:0x000510b8:	icall	FGets(file_3, line_content)
000049:0x000510c0:	cmpi	ret, _i0
000049:0x000510d0:	ble	0x0510e8
000051:0x000510d8:	icall	array<string>.Insert(line_content)
000051:0x000510e0:	jump	0x0510b8
000053:0x000510e8:	icall	CloseFile(file_3)
000056:0x000510f0:	imove	i, 0x000000
000056:0x00051100:	jump	0x051110
000056:0x00051108:	inc	i
000056:0x00051110:	ncalli	array<string>.Count()
000056:0x00051118:	cmpi	i, ret
000056:0x00051128:	bge	0x0511d0
000058:0x00051130:	icall	array<string>.Get(i)
000058:0x00051138:	moves	key_code_1, ret
000059:0x00051148:	icall	Substring(key_code_1, _i0, _i17)
000059:0x00051158:	moves	strSub1, ret
000060:0x00051168:	adds	@s01, _s''', strSub1
000060:0x00051178:	moves	@s00, @s01
000060:0x00051188:	adds	final_1A, @s00, _s'''
000061:0x00051198:	adds	final_2A, final_1A, _s','
000062:0x000511a8:	moves	@s00, final_2A
000062:0x000511b8:	adds	outParam1, outParam1, @s00
000062:0x000511c8:	jump	0x051108
000065:0x000511d0:	imove	ii, 0x000000
000065:0x000511e0:	jump	0x0511f0
000065:0x000511e8:	inc	ii
000065:0x000511f0:	ncalli	array<string>.Count()
000065:0x000511f8:	cmpi	ii, ret
000065:0x00051208:	bge	0x0512b0
000067:0x00051210:	icall	array<string>.Get(ii)
000067:0x00051218:	moves	key_code_2, ret
000068:0x00051228:	icall	Substring(key_code_2, _i0, _i17)
000068:0x00051238:	moves	strSub2, ret
000069:0x00051248:	adds	@s01, _s''', strSub2
000069:0x00051258:	moves	@s00, @s01
000069:0x00051268:	adds	final_1B, @s00, _s'''
000070:0x00051278:	adds	final_2B, final_1B, _s','
000071:0x00051288:	moves	@s00, final_2B
000071:0x00051298:	adds	outParam2, outParam2, @s00
000071:0x000512a8:	jump	0x0511e8
000074:0x000512b0:	imove	iii, 0x000000
000074:0x000512c0:	jump	0x0512d0
000074:0x000512c8:	inc	iii
000074:0x000512d0:	ncalli	array<string>.Count()
000074:0x000512d8:	cmpi	iii, ret
000074:0x000512e8:	bge	0x051390
000076:0x000512f0:	icall	array<string>.Get(iii)
000076:0x000512f8:	moves	key_code_3, ret
000077:0x00051308:	icall	Substring(key_code_3, _i0, _i17)
000077:0x00051318:	moves	strSub, ret
000078:0x00051328:	adds	@s01, _s''', strSub
000078:0x00051338:	moves	@s00, @s01
000078:0x00051348:	adds	final_1C, @s00, _s'''
000079:0x00051358:	adds	final_2C, final_1C, _s','
000080:0x00051368:	moves	@s00, final_2C
000080:0x00051378:	adds	outParam3, outParam3, @s00
000080:0x00051388:	jump	0x0512c8
000084:0x00051390:	moves	@s00, _s''End-List1'],'
000084:0x000513a0:	adds	outParam1, outParam1, @s00
000085:0x000513b0:	moves	@s00, _s''End-List2'],'
000085:0x000513c0:	adds	outParam2, outParam2, @s00
000086:0x000513d0:	moves	@s00, _s''End-List3']'
000086:0x000513e0:	adds	outParam3, outParam3, @s00
000088:0x000513f0:	adds	@s03, _s'[', outParam1
000088:0x00051400:	moves	@s02, @s03
000088:0x00051410:	adds	@s02, @s02, outParam2
000088:0x00051420:	moves	@s01, @s02
000088:0x00051430:	adds	@s01, @s01, outParam3
000088:0x00051440:	moves	@s00, @s01
000088:0x00051450:	adds	outParamFinal, @s00, _s'];'
000091:0x00051460:	moves	ret, outParamFinal
000091:0x00051470:	release	List_1
000091:0x00051478:	release	List_2
000091:0x00051480:	release	List_3
000091:0x00051488:	rts
000091:0x00051490:	release	List_1
000091:0x00051498:	release	List_2
000091:0x000514a0:	release	List_3
000091:0x000514a8:	rts
EnfBankSystem()
000103:0x00051860:	adds	@s04, _s'$profile:', _s'\420Bank\'
000103:0x00051870:	moves	@s03, @s04
000103:0x00051880:	adds	@s03, @s03, _s'acc_'
000103:0x00051890:	moves	@s02, @s03
000103:0x000518a0:	adds	@s02, @s02, playerUID
000103:0x000518b0:	moves	@s01, @s02
000103:0x000518c0:	adds	@s01, @s01, _s'.dsv'
000103:0x000518d0:	moves	@s00, @s01
000103:0x000518e0:	icall	OpenFile(@s00, _i1)
000103:0x000518e8:	movea	Check_file, ret
000104:0x000518f8:	cmpc	Check_file, _i0
000104:0x00051908:	bne	0x0519e0
000106:0x00051910:	adds	@s04, _s'$profile:', _s'\420Bank\'
000106:0x00051920:	moves	@s03, @s04
000106:0x00051930:	adds	@s03, @s03, _s'acc_'
000106:0x00051940:	moves	@s02, @s03
000106:0x00051950:	adds	@s02, @s02, playerUID
000106:0x00051960:	moves	@s01, @s02
000106:0x00051970:	adds	@s01, @s01, _s'.dsv'
000106:0x00051980:	moves	@s00, @s01
000106:0x00051990:	icall	OpenFile(@s00, _i4)
000106:0x00051998:	movea	New_file, ret
000107:0x000519a8:	icall	FPrintln(New_file, _s'Deposit_Amnt:0')
000108:0x000519b0:	icall	CloseFile(New_file)
000109:0x000519b8:	adds	@s01, _s'created new Bank Acc for ', playerUID
000109:0x000519c8:	moves	@s00, @s01
000109:0x000519d8:	icall	Print(@s00)
000111:0x000519e0:	icall	CloseFile(Check_file)
000113:0x000519e8:	moves	@s00, _s'Read'
000113:0x000519f8:	cmps	@s00, Task
000113:0x00051a08:	bne	0x051b60
000117:0x00051a10:	adds	@s04, _s'$profile:', _s'\420Bank\'
000117:0x00051a20:	moves	@s03, @s04
000117:0x00051a30:	adds	@s03, @s03, _s'acc_'
000117:0x00051a40:	moves	@s02, @s03
000117:0x00051a50:	adds	@s02, @s02, playerUID
000117:0x00051a60:	moves	@s01, @s02
000117:0x00051a70:	adds	@s01, @s01, _s'.dsv'
000117:0x00051a80:	moves	@s00, @s01
000117:0x00051a90:	icall	OpenFile(@s00, _i1)
000117:0x00051a98:	movea	Read_file, ret
000118:0x00051aa8:	cmpc	Read_file, _i0
000118:0x00051ab8:	beq	0x051b20
000120:0x00051ac0:	icall	FGets(Read_file, line_content)
000120:0x00051ac8:	cmpi	ret, _i0
000120:0x00051ad8:	ble	0x051b18
000122:0x00051ae0:	icall	Replace(line_content, _s'Deposit_Amnt:', _s'')
000122:0x00051af0:	move	count, ret
000123:0x00051b00:	moves	outParam, line_content
000123:0x00051b10:	jump	0x051ac0
000125:0x00051b18:	icall	CloseFile(Read_file)
000129:0x00051b20:	ncall	ToFloat(outParam)
000129:0x00051b28:	move	FoutParam, ret
000130:0x00051b38:	move	ret, FoutParam
000130:0x00051b48:	rts
000132:0x00051b50:	jump	0x051c60
000132:0x00051b58:	jump	0x051b88
000132:0x00051b60:	moves	@s00, _s'Edit'
000132:0x00051b70:	cmps	@s00, Task
000132:0x00051b80:	bne	0x051c60
000134:0x00051b88:	adds	@s04, _s'$profile:', _s'\420Bank\'
000134:0x00051b98:	moves	@s03, @s04
000134:0x00051ba8:	adds	@s03, @s03, _s'acc_'
000134:0x00051bb8:	moves	@s02, @s03
000134:0x00051bc8:	adds	@s02, @s02, playerUID
000134:0x00051bd8:	moves	@s01, @s02
000134:0x00051be8:	adds	@s01, @s01, _s'.dsv'
000134:0x00051bf8:	moves	@s00, @s01
000134:0x00051c08:	icall	OpenFile(@s00, _i4)
000134:0x00051c10:	movea	Edit_file, ret
000135:0x00051c20:	cmpc	Edit_file, _i0
000135:0x00051c30:	beq	0x051c58
000137:0x00051c38:	adds	ToPrint, _s'Deposit_Amnt:', UpdateAmnt
000138:0x00051c48:	icall	FPrintln(Edit_file, ToPrint)
000139:0x00051c50:	icall	CloseFile(Edit_file)
000141:0x00051c58:	jump	0x051c60
000141:0x00051c60:	rts
VIPCooldownArr()
000149:0x00051e10:	moves	outParam, _s'['
000152:0x00051e20:	new	@c00, array<string>
000152:0x00051e40:	movetm	New_codes, @c00
000153:0x00051e50:	adds	@s03, _s'$profile:', _s'\VIP\'
000153:0x00051e60:	moves	@s02, @s03
000153:0x00051e70:	adds	@s02, @s02, _s'VIP_Cooldown'
000153:0x00051e80:	moves	@s01, @s02
000153:0x00051e90:	adds	@s01, @s01, _s'.sqf'
000153:0x00051ea0:	moves	@s00, @s01
000153:0x00051eb0:	icall	OpenFile(@s00, _i1)
000153:0x00051eb8:	movea	file, ret
000154:0x00051ec8:	cmpc	file, _i0
000154:0x00051ed8:	beq	0x051fb8
000156:0x00051ee0:	icall	FGets(file, line_content)
000156:0x00051ee8:	cmpi	ret, _i0
000156:0x00051ef8:	ble	0x051f10
000158:0x00051f00:	icall	array<string>.Insert(line_content)
000158:0x00051f08:	jump	0x051ee0
000160:0x00051f10:	icall	CloseFile(file)
000161:0x00051f18:	imove	i, 0x000000
000161:0x00051f28:	jump	0x051f38
000161:0x00051f30:	inc	i
000161:0x00051f38:	ncalli	array<string>.Count()
000161:0x00051f40:	cmpi	i, ret
000161:0x00051f50:	bge	0x051fb8
000163:0x00051f58:	icall	array<string>.Get(i)
000163:0x00051f60:	moves	key_code, ret
000166:0x00051f70:	adds	@s00, key_code, _s','
000166:0x00051f80:	moves	final_2, @s00
000167:0x00051f90:	moves	@s00, final_2
000167:0x00051fa0:	adds	outParam, outParam, @s00
000167:0x00051fb0:	jump	0x051f30
000171:0x00051fb8:	moves	@s00, _s'['0',0]];'
000171:0x00051fc8:	adds	outParam, outParam, @s00
000173:0x00051fd8:	moves	ret, outParam
000173:0x00051fe8:	release	New_codes
000173:0x00051ff0:	rts
000173:0x00051ff8:	release	New_codes
000173:0x00052000:	rts
CLArrayUpdate()
000181:0x00052240:	new	@c00, array<string>
000181:0x00052260:	movetm	List_Info, @c00
000182:0x00052270:	adds	@s03, _s'$profile:', _s'\VIP\'
000182:0x00052280:	moves	@s02, @s03
000182:0x00052290:	adds	@s02, @s02, _s'VIP_Cooldown'
000182:0x000522a0:	moves	@s01, @s02
000182:0x000522b0:	adds	@s01, @s01, _s'.sqf'
000182:0x000522c0:	moves	@s00, @s01
000182:0x000522d0:	icall	OpenFile(@s00, _i1)
000182:0x000522d8:	movea	file, ret
000183:0x000522e8:	cmpc	file, _i0
000183:0x000522f8:	beq	0x052330
000185:0x00052300:	icall	FGets(file, line_content)
000185:0x00052308:	cmpi	ret, _i0
000185:0x00052318:	ble	0x052330
000187:0x00052320:	icall	array<string>.Insert(line_content)
000187:0x00052328:	jump	0x052300
000190:0x00052330:	icall	CloseFile(file)
000192:0x00052338:	adds	@s03, _s'$profile:', _s'\VIP\'
000192:0x00052348:	moves	@s02, @s03
000192:0x00052358:	adds	@s02, @s02, _s'VIP_Cooldown'
000192:0x00052368:	moves	@s01, @s02
000192:0x00052378:	adds	@s01, @s01, _s'.sqf'
000192:0x00052388:	moves	@s00, @s01
000192:0x00052398:	icall	OpenFile(@s00, _i4)
000192:0x000523a0:	movea	VIPfile, ret
000194:0x000523b0:	cmpc	VIPfile, _i0
000194:0x000523c0:	beq	0x0524c0
000196:0x000523c8:	adds	@s03, _s'['', UID
000196:0x000523d8:	moves	@s02, @s03
000196:0x000523e8:	adds	@s02, @s02, _s'','
000196:0x000523f8:	moves	@s01, @s02
000196:0x00052408:	icall	ToString(SentText)
000196:0x00052410:	adds	@s01, @s01, ret
000196:0x00052420:	moves	@s00, @s01
000196:0x00052430:	adds	New_sub, @s00, _s']'
000197:0x00052440:	imove	i, 0x000000
000197:0x00052450:	jump	0x052460
000197:0x00052458:	inc	i
000197:0x00052460:	ncalli	array<string>.Count()
000197:0x00052468:	cmpi	i, ret
000197:0x00052478:	bge	0x0524b8
000199:0x00052480:	icall	array<string>.Get(i)
000199:0x00052488:	moves	UID_sub, ret
000200:0x00052498:	moves	UID_subFnl, UID_sub
000201:0x000524a8:	icall	FPrintln(VIPfile, UID_subFnl)
000201:0x000524b0:	jump	0x052458
000203:0x000524b8:	icall	FPrintln(VIPfile, New_sub)
000205:0x000524c0:	icall	CloseFile(VIPfile)
000206:0x000524c8:	ncalli	array<string>.Clear()
000206:0x000524d0:	release	List_Info
000206:0x000524d8:	rts
UpdateVIPCLList()
000214:0x000526d0:	new	@c00, array<string>
000214:0x000526f0:	movetm	New_codes, @c00
000215:0x00052700:	adds	@s03, _s'$profile:', _s'\VIP\'
000215:0x00052710:	moves	@s02, @s03
000215:0x00052720:	adds	@s02, @s02, _s'VIP_Cooldown'
000215:0x00052730:	moves	@s01, @s02
000215:0x00052740:	adds	@s01, @s01, _s'.sqf'
000215:0x00052750:	moves	@s00, @s01
000215:0x00052760:	icall	OpenFile(@s00, _i1)
000215:0x00052768:	movea	file, ret
000216:0x00052778:	cmpc	file, _i0
000216:0x00052788:	beq	0x052870
000218:0x00052790:	icall	FGets(file, line_content)
000218:0x00052798:	cmpi	ret, _i0
000218:0x000527a8:	ble	0x0527c0
000220:0x000527b0:	icall	array<string>.Insert(line_content)
000220:0x000527b8:	jump	0x052790
000222:0x000527c0:	icall	CloseFile(file)
000224:0x000527c8:	imove	ij, 0x000000
000224:0x000527d8:	jump	0x0527e8
000224:0x000527e0:	inc	ij
000224:0x000527e8:	ncalli	array<string>.Count()
000224:0x000527f0:	cmpi	ij, ret
000224:0x00052800:	bge	0x052870
000226:0x00052808:	icall	array<string>.Get(ij)
000226:0x00052810:	moves	nigger_code, ret
000228:0x00052820:	icall	Substring(nigger_code, _i2, _i17)
000228:0x00052830:	moves	strSub, ret
000232:0x00052840:	cmps	strSub, UID
000232:0x00052850:	bne	0x052868
000234:0x00052858:	call	array<string>.RemoveItem(nigger_code)
000234:0x00052868:	jump	0x0527e0
000239:0x00052870:	adds	@s03, _s'$profile:', _s'\VIP\'
000239:0x00052880:	moves	@s02, @s03
000239:0x00052890:	adds	@s02, @s02, _s'VIP_Cooldown'
000239:0x000528a0:	moves	@s01, @s02
000239:0x000528b0:	adds	@s01, @s01, _s'.sqf'
000239:0x000528c0:	moves	@s00, @s01
000239:0x000528d0:	icall	OpenFile(@s00, _i4)
000239:0x000528d8:	movea	VIPCodefile, ret
000240:0x000528e8:	cmpc	VIPCodefile, _i0
000240:0x000528f8:	beq	0x052968
000242:0x00052900:	imove	i, 0x000000
000242:0x00052910:	jump	0x052920
000242:0x00052918:	inc	i
000242:0x00052920:	ncalli	array<string>.Count()
000242:0x00052928:	cmpi	i, ret
000242:0x00052938:	bge	0x052968
000244:0x00052940:	icall	array<string>.Get(i)
000244:0x00052948:	moves	key_code, ret
000245:0x00052958:	icall	FPrintln(VIPCodefile, key_code)
000245:0x00052960:	jump	0x052918
000248:0x00052968:	icall	CloseFile(VIPCodefile)
000248:0x00052970:	release	New_codes
000248:0x00052978:	rts
ScriptedLock()
000253:0x000529a0:	cmps	task, _s'lock'
000253:0x000529b0:	bne	0x0529c8
000255:0x000529b8:	ncalli	EntityAI.LockInventory(LOCK_FROM_SCRIPT)
000255:0x000529c0:	jump	0x0529d0
000257:0x000529c8:	ncalli	EntityAI.UnlockInventory(LOCK_FROM_SCRIPT)
000257:0x000529d0:	rts
WallFill()
000263:0x000529f8:	cmpcm	Obj, NULL
000263:0x00052a08:	beq	0x052a20
000265:0x00052a10:	call	EntityAI.SetAnimationPhase(_s'filled', _f0.000000)
000265:0x00052a20:	rts
DataBaseDelete()
000273:0x00052c18:	adds	@s02, _s'$profile:db', _s'\dead\'
000273:0x00052c28:	moves	@s01, @s02
000273:0x00052c38:	adds	@s01, @s01, in2
000273:0x00052c48:	moves	@s00, @s01
000273:0x00052c58:	ncall	MakeDirectory(@s00)
000275:0x00052c60:	moves	file_name, _s'$FILENAME$.sqf'
000277:0x00052c70:	icall	Replace(file_name, _s'$FILENAME$', in1)
000279:0x00052c80:	call	GetDate()
000279:0x00052c88:	moves	date, ret
000281:0x00052c98:	adds	@s03, _s'$profile:db', _s'\alive\'
000281:0x00052ca8:	moves	@s02, @s03
000281:0x00052cb8:	adds	@s02, @s02, in2
000281:0x00052cc8:	moves	@s01, @s02
000281:0x00052cd8:	adds	@s01, @s01, _s'\'
000281:0x00052ce8:	moves	@s00, @s01
000281:0x00052cf8:	adds	@s00, @s00, file_name
000281:0x00052d08:	moves	player_alive, @s00
000283:0x00052d18:	adds	@s03, _s'$profile:db', _s'\dead\'
000283:0x00052d28:	moves	@s02, @s03
000283:0x00052d38:	adds	@s02, @s02, in2
000283:0x00052d48:	moves	@s01, @s02
000283:0x00052d58:	adds	@s01, @s01, _s'\'
000283:0x00052d68:	moves	@s00, @s01
000283:0x00052d78:	adds	@s00, @s00, file_name
000283:0x00052d88:	moves	player_dead, @s00
000285:0x00052d98:	icall	OpenFile(player_alive, _i1)
000285:0x00052da0:	movea	file, ret
000287:0x00052db0:	cmpc	file, _i0
000287:0x00052dc0:	beq	0x052de0
000289:0x00052dc8:	icall	CloseFile(file)
000291:0x00052dd0:	ncall	CopyFile(player_alive, player_dead)
000293:0x00052dd8:	ncall	DeleteFile(player_alive)
000293:0x00052de0:	rts
DataBaseWrite()
000303:0x00052e68:	moves	file_name, _s'$FILENAME$.sqf'
000305:0x00052e78:	icall	Replace(file_name, _s'$FILENAME$', in1)
000307:0x00052e88:	adds	@s03, _s'$profile:db', _s'\alive\'
000307:0x00052e98:	moves	@s02, @s03
000307:0x00052ea8:	adds	@s02, @s02, in2
000307:0x00052eb8:	moves	@s01, @s02
000307:0x00052ec8:	adds	@s01, @s01, _s'\'
000307:0x00052ed8:	moves	@s00, @s01
000307:0x00052ee8:	adds	@s00, @s00, file_name
000307:0x00052ef8:	moves	player_alive, @s00
000309:0x00052f08:	icall	OpenFile(player_alive, _i4)
000309:0x00052f10:	movea	file, ret
000312:0x00052f20:	cmpc	file, _i0
000312:0x00052f30:	beq	0x052f80
000315:0x00052f38:	adds	@s01, _s''', _s'''
000315:0x00052f48:	moves	@s00, @s01
000315:0x00052f58:	icall	Replace(in3, _s'<null>', @s00)
000318:0x00052f68:	icall	FPrintln(file, in3)
000320:0x00052f70:	icall	CloseFile(file)
000320:0x00052f78:	jump	0x052fc8
000324:0x00052f80:	adds	@s02, _s'$profile:db', _s'\alive\'
000324:0x00052f90:	moves	@s01, @s02
000324:0x00052fa0:	adds	@s01, @s01, in2
000324:0x00052fb0:	moves	@s00, @s01
000324:0x00052fc0:	ncall	MakeDirectory(@s00)
000324:0x00052fc8:	rts
DataBaseRead()
000335:0x00053080:	moves	file_content, _s''
000337:0x00053090:	moves	file_name, _s'$FILENAME$.sqf'
000339:0x000530a0:	icall	Replace(file_name, _s'$FILENAME$', in1)
000341:0x000530b0:	adds	@s03, _s'$profile:db', _s'\alive\'
000341:0x000530c0:	moves	@s02, @s03
000341:0x000530d0:	adds	@s02, @s02, in2
000341:0x000530e0:	moves	@s01, @s02
000341:0x000530f0:	adds	@s01, @s01, _s'\'
000341:0x00053100:	moves	@s00, @s01
000341:0x00053110:	adds	@s00, @s00, file_name
000341:0x00053120:	moves	player_alive, @s00
000343:0x00053130:	icall	OpenFile(player_alive, _i1)
000343:0x00053138:	movea	file, ret
000345:0x00053148:	cmpc	file, _i0
000345:0x00053158:	beq	0x053170
000347:0x00053160:	icall	FGets(file, file_content)
000349:0x00053168:	icall	CloseFile(file)
000352:0x00053170:	moves	ret, file_content
000352:0x00053180:	rts
000352:0x00053188:	rts
ObjSPAWNER()
000361:0x00054810:	new	@c00, array<string>
000361:0x00054830:	movetm	GunsArray, @c00
000362:0x00054840:	new	@c00, array<string>
000362:0x00054860:	movetm	GunAttArray, @c00
000363:0x00054870:	new	@c00, array<string>
000363:0x00054890:	movetm	LootTypesArray, @c00
000364:0x000548a0:	new	@c00, array<string>
000364:0x000548c0:	movetm	PosInfoArray, @c00
000365:0x000548d0:	new	@c00, array<string>
000365:0x000548f0:	movetm	PosInfoArray2, @c00
000369:0x00054900:	icall	array<string>.Insert(_s'4762.793457 6.099970 2316.068359')
000370:0x00054908:	icall	array<string>.Insert(_s'4758.556641 6.200021 2308.567627')
000371:0x00054910:	icall	array<string>.Insert(_s'4802.966797 7.749805 2316.358398')
000372:0x00054918:	icall	array<string>.Insert(_s'4798.738770 6.712040 2315.999512')
000373:0x00054920:	icall	array<string>.Insert(_s'4784.833008 6.784499 2246.108643')
000374:0x00054928:	icall	array<string>.Insert(_s'4744.493164 6.104955 2273.625488')
000375:0x00054930:	icall	array<string>.Insert(_s'4804.373535 6.104955 2299.403564')
000376:0x00054938:	icall	array<string>.Insert(_s'4822.549805 6.104955 2308.516602')
000377:0x00054940:	icall	array<string>.Insert(_s'4817.850098 6.104955 2287.674561')
000378:0x00054948:	icall	array<string>.Insert(_s'4779.334473 6.104955 2249.357422')
000381:0x00054950:	icall	array<string>.Insert(_s'4800.355469 6.278176 2334.071289')
000382:0x00054958:	icall	array<string>.Insert(_s'4802.644531 6.327882 2337.799316')
000383:0x00054960:	icall	array<string>.Insert(_s'4789.492188 7.495245 2343.456055')
000384:0x00054968:	icall	array<string>.Insert(_s'4792.945801 8.846541 2343.040283')
000385:0x00054970:	icall	array<string>.Insert(_s'4804.352539 6.948731 2319.307861')
000386:0x00054978:	icall	array<string>.Insert(_s'4801.165527 7.209975 2319.144043')
000387:0x00054980:	icall	array<string>.Insert(_s'4809.425293 6.000032 2313.088867')
000388:0x00054988:	icall	array<string>.Insert(_s'4820.582031 6.000047 2308.849609')
000389:0x00054990:	icall	array<string>.Insert(_s'4826.907715 6.000022 2302.472656')
000390:0x00054998:	icall	array<string>.Insert(_s'4821.824707 6.000019 2287.667480')
000391:0x000549a0:	icall	array<string>.Insert(_s'4817.327148 5.999990 2287.731689')
000392:0x000549a8:	icall	array<string>.Insert(_s'4812.862793 5.999990 2293.880859')
000393:0x000549b0:	icall	array<string>.Insert(_s'4804.345703 6.000010 2299.309082')
000394:0x000549b8:	icall	array<string>.Insert(_s'4808.794922 5.999992 2279.977051')
000395:0x000549c0:	icall	array<string>.Insert(_s'4807.247559 5.999982 2276.353271')
000396:0x000549c8:	icall	array<string>.Insert(_s'4812.742676 5.999934 2276.714844')
000397:0x000549d0:	icall	array<string>.Insert(_s'4807.881348 5.999994 2267.421631')
000398:0x000549d8:	icall	array<string>.Insert(_s'4809.761230 6.000013 2270.438965')
000399:0x000549e0:	icall	array<string>.Insert(_s'4805.098145 5.999961 2270.301025')
000400:0x000549e8:	icall	array<string>.Insert(_s'4800.354492 5.999944 2262.840576')
000401:0x000549f0:	icall	array<string>.Insert(_s'4799.298828 5.999967 2254.023682')
000402:0x000549f8:	icall	array<string>.Insert(_s'4795.028320 5.999934 2257.242188')
000403:0x00054a00:	icall	array<string>.Insert(_s'4778.057129 6.000003 2251.091309')
000404:0x00054a08:	icall	array<string>.Insert(_s'4786.417969 5.999975 2262.324463')
000405:0x00054a10:	icall	array<string>.Insert(_s'4783.838379 6.000010 2266.322998')
000406:0x00054a18:	icall	array<string>.Insert(_s'4788.031738 6.000043 2275.195068')
000407:0x00054a20:	icall	array<string>.Insert(_s'4785.403320 5.999990 2271.974121')
000408:0x00054a28:	icall	array<string>.Insert(_s'4790.168457 6.000025 2271.014404')
000409:0x00054a30:	icall	array<string>.Insert(_s'4794.530762 5.999974 2275.638184')
000410:0x00054a38:	icall	array<string>.Insert(_s'4792.513672 5.999979 2279.250000')
000411:0x00054a40:	icall	array<string>.Insert(_s'4795.377930 6.000009 2287.896240')
000412:0x00054a48:	icall	array<string>.Insert(_s'4793.218262 6.000007 2284.801025')
000413:0x00054a50:	icall	array<string>.Insert(_s'4797.827148 6.000076 2285.359619')
000414:0x00054a58:	icall	array<string>.Insert(_s'4774.482422 6.000036 2301.083984')
000415:0x00054a60:	icall	array<string>.Insert(_s'4774.999512 6.000021 2297.041504')
000416:0x00054a68:	icall	array<string>.Insert(_s'4767.992188 5.999993 2296.720215')
000417:0x00054a70:	icall	array<string>.Insert(_s'4769.837402 6.000005 2293.404053')
000418:0x00054a78:	icall	array<string>.Insert(_s'4766.720215 5.999986 2294.021973')
000419:0x00054a80:	icall	array<string>.Insert(_s'4763.961914 6.000021 2290.127686')
000420:0x00054a88:	icall	array<string>.Insert(_s'4761.955566 6.000004 2287.153564')
000421:0x00054a90:	icall	array<string>.Insert(_s'4765.123047 6.000072 2286.091553')
000422:0x00054a98:	icall	array<string>.Insert(_s'4759.996094 6.000016 2283.058350')
000423:0x00054aa0:	icall	array<string>.Insert(_s'4761.303223 6.000005 2280.541992')
000424:0x00054aa8:	icall	array<string>.Insert(_s'4753.386230 5.999958 2266.124268')
000425:0x00054ab0:	icall	array<string>.Insert(_s'4752.881348 6.000028 2292.245361')
000426:0x00054ab8:	icall	array<string>.Insert(_s'4759.089844 6.000000 2302.164551')
000427:0x00054ac0:	icall	array<string>.Insert(_s'4757.989746 6.000000 2310.395752')
000428:0x00054ac8:	icall	array<string>.Insert(_s'4764.637207 6.000047 2315.027344')
000431:0x00054ad0:	icall	array<string>.Insert(_s'AKM')
000432:0x00054ad8:	icall	array<string>.Insert(_s'M4A1')
000433:0x00054ae0:	icall	array<string>.Insert(_s'AK101')
000434:0x00054ae8:	icall	array<string>.Insert(_s'B95')
000435:0x00054af0:	icall	array<string>.Insert(_s'SKS')
000436:0x00054af8:	icall	array<string>.Insert(_s'Winchester70_Black')
000437:0x00054b00:	icall	array<string>.Insert(_s'FAL')
000438:0x00054b08:	icall	array<string>.Insert(_s'SVD')
000441:0x00054b10:	icall	array<string>.Insert(_s'Ammo_556_20Rnd')
000442:0x00054b18:	icall	array<string>.Insert(_s'Ammo_357_20Rnd')
000443:0x00054b20:	icall	array<string>.Insert(_s'CLIP_762_5Rnd')
000444:0x00054b28:	icall	array<string>.Insert(_s'M_CMAG_10Rnd')
000445:0x00054b30:	icall	array<string>.Insert(_s'clip_762x39_10rnd')
000446:0x00054b38:	icall	array<string>.Insert(_s'Optics_Binoculars')
000447:0x00054b40:	icall	array<string>.Insert(_s'M_STANAG_30Rnd_COUPLED')
000448:0x00054b48:	icall	array<string>.Insert(_s'CargoPants_Black')
000449:0x00054b50:	icall	array<string>.Insert(_s'BagHunting')
000450:0x00054b58:	icall	array<string>.Insert(_s'WorkingGloves_Black')
000451:0x00054b60:	icall	array<string>.Insert(_s'BallisticHelmet_Black')
000452:0x00054b68:	icall	array<string>.Insert(_s'rocketaviators')
000453:0x00054b70:	icall	array<string>.Insert(_s'BalaclavaMask_Blackskull')
000454:0x00054b78:	icall	array<string>.Insert(_s'HighCapacityVest_Black')
000455:0x00054b80:	icall	array<string>.Insert(_s'm65_jacket_olive')
000456:0x00054b88:	icall	array<string>.Insert(_s'm65_jacket_black')
000457:0x00054b90:	icall	array<string>.Insert(_s'm65_jacket_kahki')
000458:0x00054b98:	icall	array<string>.Insert(_s'cargopants_green')
000459:0x00054ba0:	icall	array<string>.Insert(_s'workinggloves_brown')
000460:0x00054ba8:	icall	array<string>.Insert(_s'BallisticHelmet_Green')
000461:0x00054bb0:	icall	array<string>.Insert(_s'BalaclavaMask_greenpattern')
000462:0x00054bb8:	icall	array<string>.Insert(_s'SmershVestBackpack')
000463:0x00054bc0:	icall	array<string>.Insert(_s'BagTortilla')
000464:0x00054bc8:	icall	array<string>.Insert(_s'GorkaHelmet_complete_Green')
000465:0x00054bd0:	icall	array<string>.Insert(_s'GorkaHelmet_complete_Black')
000466:0x00054bd8:	icall	array<string>.Insert(_s'PlateCarrierComplete')
000467:0x00054be0:	icall	array<string>.Insert(_s'M_ak101_30Rnd')
000468:0x00054be8:	icall	array<string>.Insert(_s'M_Saiga_5Rnd')
000469:0x00054bf0:	icall	array<string>.Insert(_s'M_ak74_30Rnd')
000470:0x00054bf8:	icall	array<string>.Insert(_s'M_Vss_10Rnd')
000471:0x00054c00:	icall	array<string>.Insert(_s'M_svd_10Rnd')
000472:0x00054c08:	icall	array<string>.Insert(_s'M_Fal_20Rnd')
000473:0x00054c10:	icall	array<string>.Insert(_s'Att_Suppressor_AK')
000474:0x00054c18:	icall	array<string>.Insert(_s'Att_Optic_PSO1')
000475:0x00054c20:	icall	array<string>.Insert(_s'ammobox_556_20rnd')
000476:0x00054c28:	icall	array<string>.Insert(_s'AmmoBox_9x39_20Rnd')
000477:0x00054c30:	icall	array<string>.Insert(_s'AmmoBox_308Win_20Rnd')
000478:0x00054c38:	icall	array<string>.Insert(_s'AmmoBox_762_20Rnd')
000479:0x00054c40:	icall	array<string>.Insert(_s'fnx45')
000480:0x00054c48:	icall	array<string>.Insert(_s'Att_Suppressor_Pistol')
000481:0x00054c50:	icall	array<string>.Insert(_s'1911_engraved')
000482:0x00054c58:	icall	array<string>.Insert(_s'Att_Optic_FNP45_MRD')
000483:0x00054c60:	icall	array<string>.Insert(_s'm_fnx45_15rnd')
000484:0x00054c68:	icall	array<string>.Insert(_s'Glock19')
000485:0x00054c70:	icall	array<string>.Insert(_s'M_Glock_15Rnd')
000486:0x00054c78:	icall	array<string>.Insert(_s'Att_Optic_Reflex')
000487:0x00054c80:	icall	array<string>.Insert(_s'Att_Optic_ACOG')
000488:0x00054c88:	icall	array<string>.Insert(_s'Att_Optic_M4T3NRDS')
000492:0x00054c90:	icall	array<string>.Insert(_s'M_ak101_30Rnd')
000493:0x00054c98:	icall	array<string>.Insert(_s'Att_Optic_PSO1')
000494:0x00054ca0:	icall	array<string>.Insert(_s'Att_Handguard_AK74_Camo')
000495:0x00054ca8:	icall	array<string>.Insert(_s'Att_Buttstock_AK_Wood_Camo')
000496:0x00054cb0:	icall	array<string>.Insert(_s'M_Saiga_5Rnd')
000497:0x00054cb8:	icall	array<string>.Insert(_s'M_Saiga_8Rnd')
000498:0x00054cc0:	icall	array<string>.Insert(_s'M_SaigaDrum_20Rnd')
000499:0x00054cc8:	icall	array<string>.Insert(_s'Att_Buttstock_Saiga')
000500:0x00054cd0:	icall	array<string>.Insert(_s'M_ak74_30Rnd')
000501:0x00054cd8:	icall	array<string>.Insert(_s'M_akm_drum')
000502:0x00054ce0:	icall	array<string>.Insert(_s'M_STANAG_30Rnd_Coupled')
000503:0x00054ce8:	icall	array<string>.Insert(_s'Att_Optic_Reflex')
000504:0x00054cf0:	icall	array<string>.Insert(_s'Att_Handguard_M4RIS')
000505:0x00054cf8:	icall	array<string>.Insert(_s'Att_Buttstock_M4MP')
000506:0x00054d00:	icall	array<string>.Insert(_s'Att_Optic_ACOG')
000507:0x00054d08:	icall	array<string>.Insert(_s'Att_Optic_M4T3NRDS')
000508:0x00054d10:	icall	array<string>.Insert(_s'Att_Suppressor_M4')
000509:0x00054d18:	icall	array<string>.Insert(_s'Att_Suppressor_AK')
000510:0x00054d20:	icall	array<string>.Insert(_s'M_Vss_10Rnd')
000511:0x00054d28:	icall	array<string>.Insert(_s'M_svd_10Rnd')
000512:0x00054d30:	icall	array<string>.Insert(_s'Att_Optic_Hunting')
000513:0x00054d38:	icall	array<string>.Insert(_s'M_Fal_20Rnd')
000514:0x00054d40:	icall	array<string>.Insert(_s'Att_Buttstock_FalFolding')
000515:0x00054d48:	icall	array<string>.Insert(_s'Clip_762x39_10Rnd')
000516:0x00054d50:	icall	array<string>.Insert(_s'Att_Bayonet_SKS')
000517:0x00054d58:	icall	array<string>.Insert(_s'Att_Optic_PUScope')
000518:0x00054d60:	icall	array<string>.Insert(_s'CLIP_308Win_Snaploader')
000519:0x00054d68:	icall	array<string>.Insert(_s'M_cz527_5rnd')
000520:0x00054d70:	icall	array<string>.Insert(_s'CLIP_762_5Rnd')
000521:0x00054d78:	icall	array<string>.Insert(_s'Att_Compensator_Mosin')
000523:0x00054d80:	imove	ig, 0x000000
000523:0x00054d90:	jump	0x054da0
000523:0x00054d98:	inc	ig
000523:0x00054da0:	cfti	@m01, SQF_RandomGUNS
000523:0x00054db0:	cmpi	ig, @m01
000523:0x00054dc0:	bge	0x054f10
000525:0x00054dc8:	ncall	RandomFloat(_f0.000000, _f0.500000)
000525:0x00054dd0:	move	random_indexGUN, ret
000528:0x00054de0:	call	array<string>.GetRandomElement()
000528:0x00054de8:	moves	RandomPOS, ret
000529:0x00054df8:	ncall	GetGame()
000529:0x00054e00:	icall	array<string>.Get(ig)
000529:0x00054e08:	icall	ToVector(RandomPOS)
000529:0x00054e10:	ncalli	CGame.CreateObject(ret, ret, false, _i0)
000529:0x00054e20:	movetm	Gun, ret
000530:0x00054e30:	movev	ObjOrienation, _v<-0.000003,86.498024,-2.499981>
000531:0x00054e40:	ncalli	EntityAI.SetOrientation(ObjOrienation)
000532:0x00054e48:	ncalli	EntityAI.SetDamage(random_indexGUN)
000533:0x00054e50:	imove	att, 0x000000
000533:0x00054e60:	jump	0x054e70
000533:0x00054e68:	inc	att
000533:0x00054e70:	ncalli	array<string>.Count()
000533:0x00054e78:	cmpi	att, ret
000533:0x00054e88:	bge	0x054f00
000536:0x00054e90:	ncall	RandomFloat(_f0.000000, _f0.800000)
000536:0x00054e98:	move	random_damage, ret
000537:0x00054ea8:	ncall	GetGame()
000537:0x00054eb0:	icall	array<string>.Get(att)
000537:0x00054eb8:	ncalli	CGame.CreateObject(ret, _v<0.000000,0.000000,0.000000>, false, _i0)
000537:0x00054ec8:	movetm	GunAtts, ret
000538:0x00054ed8:	ncalli	EntityAI.SetDamage(random_damage)
000539:0x00054ee0:	call	EntityAI.TakeEntityAsAttachment(GunAtts)
000539:0x00054ef0:	release	GunAtts
000539:0x00054ef8:	jump	0x054e68
000539:0x00054f00:	release	Gun
000539:0x00054f08:	jump	0x054d98
000543:0x00054f10:	imove	ld, 0x000000
000543:0x00054f20:	jump	0x054f30
000543:0x00054f28:	inc	ld
000543:0x00054f30:	cfti	@m01, SQF_Random
000543:0x00054f40:	cmpi	ld, @m01
000543:0x00054f50:	bge	0x055000
000545:0x00054f58:	ncall	RandomFloat(_f0.000000, _f0.800000)
000545:0x00054f60:	move	random_index, ret
000548:0x00054f70:	call	array<string>.GetRandomElement()
000548:0x00054f78:	moves	RandomLootPOS, ret
000549:0x00054f88:	ncall	GetGame()
000549:0x00054f90:	call	array<string>.GetRandomElement()
000549:0x00054f98:	icall	ToVector(RandomLootPOS)
000549:0x00054fa0:	ncalli	CGame.CreateObject(ret, ret, false, _i0)
000549:0x00054fb0:	movetm	Item, ret
000550:0x00054fc0:	cmpcm	Item, NULL
000550:0x00054fd0:	beq	0x054ff0
000552:0x00054fd8:	ncalli	EntityAI.SetOrientation(_v<121.303909,0.000000,-0.000000>)
000553:0x00054fe0:	ncalli	EntityAI.SetDamage(random_index)
000553:0x00054fe8:	jump	0x054ff0
000553:0x00054ff0:	release	Item
000553:0x00054ff8:	jump	0x054f28
000553:0x00055000:	release	GunsArray
000553:0x00055008:	release	GunAttArray
000553:0x00055010:	release	LootTypesArray
000553:0x00055018:	release	PosInfoArray
000553:0x00055020:	release	PosInfoArray2
000553:0x00055028:	rts
CreateGame()
//scripts/3_Game/game.c
000007:0x00055050:	icall	Print(_s'CreateGame()')
000008:0x00055058:	new	@c00, DayZGame
000008:0x00055078:	movec	g_Game, @c00
000009:0x00055088:	movec	ret, g_Game
000009:0x00055098:	rts
000009:0x000550a0:	rts
TActionRefArray::AddRef()
//scripts/3_Game/gameplay.c
000043:0x000550e8:	imove	i, 0x000000
000043:0x000550f8:	jump	0x055108
000043:0x00055100:	inc	i
000043:0x00055108:	ncalli	TActionRefArray.Count()
000043:0x00055110:	cmpi	i, ret
000043:0x00055120:	bge	0x055150
000045:0x00055128:	icall	TActionRefArray.Get(i)
000045:0x00055130:	movec	item, ret
000046:0x00055140:	ncalli	Action.AddRef()
000046:0x00055148:	jump	0x055100
000046:0x00055150:	rts
TActionRefArray::Release()
000052:0x00055198:	imove	i, 0x000000
000052:0x000551a8:	jump	0x0551b8
000052:0x000551b0:	inc	i
000052:0x000551b8:	ncalli	TActionRefArray.Count()
000052:0x000551c0:	cmpi	i, ret
000052:0x000551d0:	bge	0x055200
000054:0x000551d8:	icall	TActionRefArray.Get(i)
000054:0x000551e0:	movec	item, ret
000055:0x000551f0:	ncalli	Action.Release()
000055:0x000551f8:	jump	0x0551b0
000058:0x00055200:	ncalli	TActionRefArray.Clear()
000058:0x00055208:	rts
TActionRefArray::~TActionRefArray()
000063:0x00055210:	call	TActionRefArray.Release()
000063:0x00055218:	rts
Selection::GetVertexPosition()
000093:0x00055270:	ncalli	Selection.GetLODVertexIndex(index)
000093:0x00055278:	move	lodIndex, ret
000094:0x00055288:	ncalli	LOD.GetVertexPosition(lodIndex)
000094:0x00055290:	movev	ret, ret
000094:0x000552a0:	rts
000094:0x000552a8:	rts
LOD::GetSelectionByName()
000111:0x00055340:	new	@c00, array<Selection>
000111:0x00055360:	movetm	selections, @c00
000112:0x00055370:	movefm	[0x3cd260c0], selections
000112:0x00055380:	ncalli	LOD.GetSelections([0x3cd260c0])
000114:0x00055388:	imove	i, 0x000000
000114:0x00055398:	jump	0x0553a8
000114:0x000553a0:	inc	i
000114:0x000553a8:	ncalli	array<Selection>.Count()
000114:0x000553b0:	cmpi	i, ret
000114:0x000553c0:	bge	0x055460
000116:0x000553c8:	icall	array<Selection>.Get(i)
000116:0x000553d0:	ncalli	Selection.GetName()
000116:0x000553d8:	moves	selection_name, ret
000117:0x000553e8:	icall	ToLower(selection_name)
000117:0x000553f0:	push	ret
000117:0x000553f8:	icall	ToLower(name)
000117:0x00055400:	move	@m01, ret
000117:0x00055410:	pop	ret
000117:0x00055418:	cmpi	ret, @m01
000117:0x00055428:	bne	0x055458
000117:0x00055430:	icall	array<Selection>.Get(i)
000117:0x00055438:	movec	ret, ret
000117:0x00055448:	release	selections
000117:0x00055450:	rts
000117:0x00055458:	jump	0x0553a0
000120:0x00055460:	movec	ret, NULL
000120:0x00055470:	release	selections
000120:0x00055478:	rts
000120:0x00055480:	release	selections
000120:0x00055488:	rts
Object::GetLODByName()
000140:0x00055548:	new	@c00, array<LOD>
000140:0x00055568:	movetm	lods, @c00
000141:0x00055578:	movefm	[0x3cd1e748], lods
000141:0x00055588:	ncalli	Object.GetLODS([0x3cd1e748])
000143:0x00055590:	imove	i, 0x000000
000143:0x000555a0:	jump	0x0555b0
000143:0x000555a8:	inc	i
000143:0x000555b0:	ncalli	array<LOD>.Count()
000143:0x000555b8:	cmpi	i, ret
000143:0x000555c8:	bge	0x055668
000145:0x000555d0:	icall	array<LOD>.Get(i)
000145:0x000555d8:	ncalli	Object.GetLODName(ret)
000145:0x000555e0:	moves	lod_name, ret
000146:0x000555f0:	icall	ToLower(lod_name)
000146:0x000555f8:	push	ret
000146:0x00055600:	icall	ToLower(name)
000146:0x00055608:	move	@m01, ret
000146:0x00055618:	pop	ret
000146:0x00055620:	cmpi	ret, @m01
000146:0x00055630:	bne	0x055660
000146:0x00055638:	icall	array<LOD>.Get(i)
000146:0x00055640:	movec	ret, ret
000146:0x00055650:	release	lods
000146:0x00055658:	rts
000146:0x00055660:	jump	0x0555a8
000149:0x00055668:	movec	ret, NULL
000149:0x00055678:	release	lods
000149:0x00055680:	rts
000149:0x00055688:	release	lods
000149:0x00055690:	rts
Param1<Object>::Param1()
//scripts/1_CoreExt/param.c
000030:0x000557d8:	movem	param1, p1
000030:0x000557e8:	rts
Object::AddDamage()
//scripts/3_Game/gameplay.c
000240:0x000557f0:	ncalli	Object.GetDamage()
000240:0x000557f8:	move	obj_dmg, ret
000241:0x00055808:	addf	@f00, obj_dmg, damage
000241:0x00055818:	move	obj_dmg, @f00
000243:0x00055828:	ncalli	Object.SetDamage(obj_dmg)
000245:0x00055830:	cmpi	auto_delete, _i0
000245:0x00055840:	beq	0x055908
000245:0x00055848:	cmpf	obj_dmg, _f1.000000
000245:0x00055858:	blt	0x055908
000247:0x00055860:	ncall	GetGame()
000247:0x00055868:	call	CGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000247:0x00055878:	pushc	ret
000247:0x00055880:	ncall	GetGame()
000247:0x00055888:	movec	@c00, ret
000247:0x00055898:	popc	ret
000247:0x000558a0:	movec	obj, @c00
000247:0x000558b0:	movetm	p1, this
000247:0x000558c0:	new	@c00, Param1<Object>
000247:0x000558e8:	movec	params, @c00
000247:0x000558f8:	call	CallQueue.Call(obj, _s'ObjectDelete', params)
000250:0x00055908:	move	ret, obj_dmg
000250:0x00055918:	rts
000250:0x00055920:	rts
Object::HasSelection()
000258:0x00055968:	new	@c00, array<string>
000258:0x00055988:	movetm	selections, @c00
000259:0x00055998:	movefm	[0x3cd1f078], selections
000259:0x000559a8:	ncalli	Object.GetSelectionList([0x3cd1f078])
000261:0x000559b0:	imove	i, 0x000000
000261:0x000559c0:	jump	0x0559d0
000261:0x000559c8:	inc	i
000261:0x000559d0:	ncalli	array<string>.Count()
000261:0x000559d8:	cmpi	i, ret
000261:0x000559e8:	bge	0x055a38
000263:0x000559f0:	icall	array<string>.Get(i)
000263:0x000559f8:	cmps	ret, selection
000263:0x00055a08:	bne	0x055a30
000265:0x00055a10:	imove	ret, 0x000001
000265:0x00055a20:	delete	selections
000265:0x00055a28:	rts
000265:0x00055a30:	jump	0x0559c8
000269:0x00055a38:	imove	ret, 0x000000
000269:0x00055a48:	delete	selections
000269:0x00055a50:	rts
000269:0x00055a58:	delete	selections
000269:0x00055a60:	rts
Object::HasAnimation()
000275:0x00055c10:	call	Object.GetType()
000275:0x00055c18:	adds	@s01, _s'CfgVehicles ', ret
000275:0x00055c28:	moves	@s00, @s01
000275:0x00055c38:	adds	cfg_path_vehicles, @s00, _s' '
000276:0x00055c48:	ncall	GetGame()
000276:0x00055c50:	ncalli	CGame.ConfigIsExisting(cfg_path_vehicles)
000276:0x00055c58:	cmpi	ret, _i0
000276:0x00055c68:	beq	0x055cf0
000276:0x00055c70:	ncall	GetGame()
000276:0x00055c78:	adds	@s02, cfg_path_vehicles, _s'AnimationSources '
000276:0x00055c88:	moves	@s01, @s02
000276:0x00055c98:	adds	@s01, @s01, anim_name
000276:0x00055ca8:	moves	@s00, @s01
000276:0x00055cb8:	ncalli	CGame.ConfigIsExisting(@s00)
000276:0x00055cc0:	cmpi	ret, _i0
000276:0x00055cd0:	beq	0x055cf0
000278:0x00055cd8:	imove	ret, 0x000001
000278:0x00055ce8:	rts
000281:0x00055cf0:	call	Object.GetType()
000281:0x00055cf8:	adds	@s01, _s'CfgWeapons ', ret
000281:0x00055d08:	moves	@s00, @s01
000281:0x00055d18:	adds	cfg_path_weapons, @s00, _s' '
000282:0x00055d28:	ncall	GetGame()
000282:0x00055d30:	ncalli	CGame.ConfigIsExisting(cfg_path_weapons)
000282:0x00055d38:	cmpi	ret, _i0
000282:0x00055d48:	beq	0x055dd0
000282:0x00055d50:	ncall	GetGame()
000282:0x00055d58:	adds	@s02, cfg_path_weapons, _s'AnimationSources '
000282:0x00055d68:	moves	@s01, @s02
000282:0x00055d78:	adds	@s01, @s01, anim_name
000282:0x00055d88:	moves	@s00, @s01
000282:0x00055d98:	ncalli	CGame.ConfigIsExisting(@s00)
000282:0x00055da0:	cmpi	ret, _i0
000282:0x00055db0:	beq	0x055dd0
000284:0x00055db8:	imove	ret, 0x000001
000284:0x00055dc8:	rts
000287:0x00055dd0:	call	Object.GetType()
000287:0x00055dd8:	adds	@s01, _s'CfgMagazines ', ret
000287:0x00055de8:	moves	@s00, @s01
000287:0x00055df8:	adds	cfg_path_magazines, @s00, _s' '
000288:0x00055e08:	ncall	GetGame()
000288:0x00055e10:	ncalli	CGame.ConfigIsExisting(cfg_path_magazines)
000288:0x00055e18:	cmpi	ret, _i0
000288:0x00055e28:	beq	0x055eb0
000288:0x00055e30:	ncall	GetGame()
000288:0x00055e38:	adds	@s02, cfg_path_magazines, _s'AnimationSources '
000288:0x00055e48:	moves	@s01, @s02
000288:0x00055e58:	adds	@s01, @s01, anim_name
000288:0x00055e68:	moves	@s00, @s01
000288:0x00055e78:	ncalli	CGame.ConfigIsExisting(@s00)
000288:0x00055e80:	cmpi	ret, _i0
000288:0x00055e90:	beq	0x055eb0
000290:0x00055e98:	imove	ret, 0x000001
000290:0x00055ea8:	rts
000293:0x00055eb0:	imove	ret, 0x000000
000293:0x00055ec0:	rts
000293:0x00055ec8:	rts
Object::HasEnergyManager()
000299:0x00055ed0:	imove	ret, 0x000000
000299:0x00055ee0:	rts
000299:0x00055ee8:	rts
Object::GetType()
000364:0x00055f10:	ncall	GetGame()
000364:0x00055f18:	icall	CGame.ObjectGetType(this, ret)
000366:0x00055f20:	moves	ret, ret
000366:0x00055f30:	rts
000366:0x00055f38:	rts
Object::GetName()
000373:0x00055f60:	ncall	GetGame()
000373:0x00055f68:	icall	CGame.ObjectGetDisplayName(this, tmp)
000374:0x00055f70:	moves	ret, tmp
000374:0x00055f80:	rts
000374:0x00055f88:	rts
Object::Release()
000380:0x00055f90:	ncall	GetGame()
000380:0x00055f98:	ncalli	CGame.ObjectRelease(this)
000380:0x00055fa0:	move	ret, ret
000380:0x00055fb0:	rts
000380:0x00055fb8:	rts
Object::IsKindOf()
000388:0x00055fc0:	ncall	GetGame()
000388:0x00055fc8:	movetm	object, this
000388:0x00055fd8:	call	CGame.ObjectIsKindOf(object, type)
000388:0x00055fe8:	move	ret, ret
000388:0x00055ff8:	rts
000388:0x00056000:	rts
Object::IsAlive()
000394:0x00056008:	ncalli	Object.GetDamage()
000394:0x00056010:	cmpf	ret, _f1.000000
000394:0x00056020:	blt	0x056040
000396:0x00056028:	imove	ret, 0x000000
000396:0x00056038:	rts
000398:0x00056040:	imove	ret, 0x000001
000398:0x00056050:	rts
000398:0x00056058:	rts
Object::IsMan()
000405:0x00056060:	imove	ret, 0x000000
000405:0x00056070:	rts
000405:0x00056078:	rts
Object::IsEntityAI()
000411:0x00056080:	imove	ret, 0x000000
000411:0x00056090:	rts
000411:0x00056098:	rts
Object::IsStaticTransmitter()
000417:0x000560a0:	imove	ret, 0x000000
000417:0x000560b0:	rts
000417:0x000560b8:	rts
Object::IsItemBase()
000423:0x000560c0:	imove	ret, 0x000000
000423:0x000560d0:	rts
000423:0x000560d8:	rts
Object::IsContainer()
000428:0x000560e0:	imove	ret, 0x000000
000428:0x000560f0:	rts
000428:0x000560f8:	rts
Object::IsMagazine()
000434:0x00056100:	imove	ret, 0x000000
000434:0x00056110:	rts
000434:0x00056118:	rts
Object::IsInventoryItem()
000440:0x00056120:	imove	ret, 0x000000
000440:0x00056130:	rts
000440:0x00056138:	rts
Object::IsClothing()
000446:0x00056140:	imove	ret, 0x000000
000446:0x00056150:	rts
000446:0x00056158:	rts
Object::IsFireplace()
000452:0x00056160:	imove	ret, 0x000000
000452:0x00056170:	rts
000452:0x00056178:	rts
Object::IsTree()
000458:0x00056180:	imove	ret, 0x000000
000458:0x00056190:	rts
000458:0x00056198:	rts
Object::IsRock()
000464:0x000561a0:	imove	ret, 0x000000
000464:0x000561b0:	rts
000464:0x000561b8:	rts
Object::IsWoodBase()
000470:0x000561c0:	imove	ret, 0x000000
000470:0x000561d0:	rts
000470:0x000561d8:	rts
Object::IsBush()
000476:0x000561e0:	imove	ret, 0x000000
000476:0x000561f0:	rts
000476:0x000561f8:	rts
Object::IsPeltBase()
000482:0x00056200:	imove	ret, 0x000000
000482:0x00056210:	rts
000482:0x00056218:	rts
Object::IsWeapon()
000488:0x00056220:	imove	ret, 0x000000
000488:0x00056230:	rts
000488:0x00056238:	rts
Object::RPC()
000493:0x00056240:	ncall	GetGame()
000493:0x00056248:	movefm	[0x3cd2db80], params
000493:0x00056258:	movefm	[0x3cd2dba0], recipient
000493:0x00056268:	ncalli	CGame.RPC(this, rpc_type, [0x3cd2db80], [0x3cd2dba0])
000493:0x00056278:	rts
Object::RPCSingleParam()
000499:0x00056280:	ncall	GetGame()
000499:0x00056288:	movetm	target, this
000499:0x00056298:	call	CGame.RPCSingleParam(target, rpc_type, param, recipient)
000499:0x000562a8:	rts
Object::GetSelectionPosition()
000511:0x000562b0:	ncall	GetGame()
000511:0x000562b8:	ncalli	CGame.ObjectGetSelectionPosition(this, name)
000511:0x000562c0:	movev	ret, ret
000511:0x000562d0:	rts
000511:0x000562d8:	rts
Object::ModelToWorld()
000516:0x000562e0:	ncall	GetGame()
000516:0x000562e8:	ncalli	CGame.ObjectModelToWorld(this, modelPos)
000516:0x000562f0:	movev	ret, ret
000516:0x00056300:	rts
000516:0x00056308:	rts
Object::WorldToModel()
000521:0x00056310:	ncall	GetGame()
000521:0x00056318:	ncalli	CGame.ObjectWorldToModel(this, worldPos)
000521:0x00056320:	movev	ret, ret
000521:0x00056330:	rts
000521:0x00056338:	rts
Object::ConfigGetBool()
000530:0x00056340:	icall	Object.ConfigGetInt(entryName)
000530:0x00056348:	cmpi	ret, _i1
000530:0x00056358:	bne	0x056378
000532:0x00056360:	imove	ret, 0x000001
000532:0x00056370:	rts
000535:0x00056378:	imove	ret, 0x000000
000535:0x00056388:	rts
000535:0x00056390:	rts
Object::KindOf()
000627:0x00056530:	imove	found, 0x000000
000628:0x00056540:	call	Object.GetType()
000628:0x00056548:	moves	item_name, ret
000629:0x00056558:	new	@c00, array<string>
000629:0x00056578:	movetm	item_tag_array, @c00
000630:0x00056588:	adds	@s02, _s'cfgVehicles ', item_name
000630:0x00056598:	moves	@s01, @s02
000630:0x000565a8:	adds	@s01, @s01, _s' itemInfo'
000630:0x000565b8:	moves	@s00, @s01
000630:0x000565c8:	movefm	[0x3cd201b0], item_tag_array
000630:0x000565d8:	ncalli	Object.ConfigGetTextArray(@s00, [0x3cd201b0])
000632:0x000565e0:	ncalli	array<string>.Count()
000632:0x000565e8:	move	array_size, ret
000633:0x000565f8:	imove	i, 0x000000
000633:0x00056608:	jump	0x056618
000633:0x00056610:	inc	i
000633:0x00056618:	cmpi	i, array_size
000633:0x00056628:	bge	0x056670
000635:0x00056630:	icall	array<string>.Get(i)
000635:0x00056638:	cmps	ret, tag
000635:0x00056648:	bne	0x056668
000637:0x00056650:	imove	found, 0x000001
000638:0x00056660:	jump	0x056670
000638:0x00056668:	jump	0x056610
000641:0x00056670:	move	ret, found
000641:0x00056680:	delete	item_tag_array
000641:0x00056688:	rts
000641:0x00056690:	delete	item_tag_array
000641:0x00056698:	rts
EventParams1::EventParams1()
000744:0x000566a0:	movem	obj, o
000744:0x000566b0:	rts
EntityAnimEndEventHandler::EntityAnimEndEventHandler()
000764:0x000566b8:	moves	m_anim_name, anim_name
000765:0x000566c8:	new	@c00, CallQueueContext
000765:0x000566f0:	movec	m_call, @c00
000765:0x00056700:	rts
EntityAnimEndEventHandler::OnEvent()
000770:0x00056728:	cmpi	entity_event_type, EEAnimDone
000770:0x00056738:	beq	0x056748
000770:0x00056740:	rts
000771:0x00056748:	cmpc	m_call, NULL
000771:0x00056758:	bne	0x056768
000771:0x00056760:	rts
000773:0x00056768:	movec	param, params
000774:0x00056778:	cmps	m_anim_name, _s''
000774:0x00056788:	beq	0x0567a8
000774:0x00056790:	cmps	param1, m_anim_name
000774:0x000567a0:	bne	0x0567c0
000776:0x000567a8:	movec	[0x3cd172c0], m_call
000776:0x000567b8:	call	CallQueueContext.Call()
000776:0x000567c0:	rts
EntityAI::CreateComponent()
000819:0x000567c8:	call	EntityAI.GetComponent(comp_type, extended_class_name)
000819:0x000567d8:	movec	ret, ret
000819:0x000567e8:	rts
000819:0x000567f0:	rts
EntityAI::GetComponent()
000825:0x000567f8:	cmpc	m_ComponentsBank, NULL
000825:0x00056808:	bne	0x056858
000827:0x00056810:	movetm	entity_parent, this
000827:0x00056820:	new	@c00, ComponentsBank
000827:0x00056848:	movec	m_ComponentsBank, @c00
000830:0x00056858:	movec	[0x3cd16428], m_ComponentsBank
000830:0x00056868:	call	ComponentsBank.GetComponent(comp_type, extended_class_name)
000830:0x00056878:	movec	ret, ret
000830:0x00056888:	rts
000830:0x00056890:	rts
EntityAI::DeleteComponent()
000836:0x00056898:	movec	[0x3cd16428], m_ComponentsBank
000836:0x000568a8:	call	ComponentsBank.DeleteComponent(comp_type)
000836:0x000568b8:	move	ret, ret
000836:0x000568c8:	rts
000836:0x000568d0:	rts
EntityAI::HasComponent()
000842:0x000568d8:	cmpc	m_ComponentsBank, NULL
000842:0x000568e8:	beq	0x056928
000844:0x000568f0:	movec	[0x3cd16428], m_ComponentsBank
000844:0x00056900:	call	ComponentsBank.IsComponentAlreadyExist(comp_type)
000844:0x00056910:	move	ret, ret
000844:0x00056920:	rts
000847:0x00056928:	imove	ret, 0x000000
000847:0x00056938:	rts
000847:0x00056940:	rts
EntityAI::Log()
000853:0x00056988:	call	EntityAI.GetType()
000853:0x00056990:	call	Log(msg, _s'Object', _s'n/a', fnc_name, ret)
000853:0x000569a8:	rts
EntityAI::LogWarning()
000859:0x000569b0:	call	EntityAI.GetType()
000859:0x000569b8:	call	LogWarning(msg, _s'Object', _s'n/a', fnc_name, ret)
000859:0x000569d0:	rts
EntityAI::LogError()
000865:0x000569d8:	call	EntityAI.GetType()
000865:0x000569e0:	call	LogError(msg, _s'Object', _s'n/a', fnc_name, ret)
000865:0x000569f8:	rts
EntityAI::EntityAI()
000873:0x00056b90:	call	EntityAI.GetType()
000873:0x00056b98:	moves	type, ret
000874:0x00056ba8:	adds	@s01, _s'CfgVehicles ', type
000874:0x00056bb8:	moves	@s00, @s01
000874:0x00056bc8:	adds	param_access_energy_sys, @s00, _s' EnergyManager '
000875:0x00056bd8:	ncall	GetGame()
000875:0x00056be0:	ncalli	CGame.ConfigIsExisting(param_access_energy_sys)
000875:0x00056be8:	move	is_electic_device, ret
000877:0x00056bf8:	cmpi	is_electic_device, _i0
000877:0x00056c08:	beq	0x056cb0
000879:0x00056c10:	moves	@s00, _s'EN5C_PowerGenerator'
000879:0x00056c20:	cmps	@s00, type
000879:0x00056c30:	bne	0x056c58
000882:0x00056c38:	call	EntityAI.CreateComponent(COMP_TYPE_ENERGY_MANAGER, _s'ComponentEnergyPowerGenerator')
000883:0x00056c48:	jump	0x056cb0
000883:0x00056c50:	jump	0x056c80
000883:0x00056c58:	moves	@s00, _s'EN5C_Spotlight'
000883:0x00056c68:	cmps	@s00, type
000883:0x00056c78:	bne	0x056c98
000886:0x00056c80:	call	EntityAI.CreateComponent(COMP_TYPE_ENERGY_MANAGER, _s'ComponentEnergySpotlight')
000887:0x00056c90:	jump	0x056cb0
000890:0x00056c98:	call	EntityAI.CreateComponent(COMP_TYPE_ENERGY_MANAGER, _s'')
000891:0x00056ca8:	jump	0x056cb0
000891:0x00056cb0:	rts
EntityAI::~EntityAI()
000898:0x00056cb8:	delete	m_ComponentsBank
000898:0x00056cc0:	rts
EntityAI::IsEmpty()
000904:0x00056cc8:	call	EntityAI.HasAnyCargo()
000904:0x00056cd0:	cmpi	ret, _i0
000904:0x00056ce0:	bne	0x056d20
000904:0x00056ce8:	ncalli	EntityAI.AttachmentsCount()
000904:0x00056cf0:	cmpi	ret, _i0
000904:0x00056d00:	bne	0x056d20
000904:0x00056d08:	imove	ret, 0x000001
000904:0x00056d18:	jump	0x056d30
000904:0x00056d20:	imove	ret, 0x000000
000904:0x00056d30:	rts
000904:0x00056d38:	rts
EntityAI::HasAnyCargo()
000910:0x00056d60:	ncalli	EntityAI.GetCargo()
000910:0x00056d68:	movec	cargo, ret
000912:0x00056d78:	cmpc	cargo, NULL
000912:0x00056d88:	bne	0x056da8
000912:0x00056d90:	imove	ret, 0x000000
000912:0x00056da0:	rts
000914:0x00056da8:	ncalli	Cargo.GetItemCount()
000914:0x00056db0:	cmpi	ret, _i0
000914:0x00056dc0:	ble	0x056de8
000916:0x00056dc8:	imove	ret, 0x000001
000916:0x00056dd8:	rts
000916:0x00056de0:	jump	0x056e00
000920:0x00056de8:	imove	ret, 0x000000
000920:0x00056df8:	rts
000920:0x00056e00:	rts
EntityAI::GetEventHandler()
000926:0x00056e08:	movec	ret, m_event_handler
000926:0x00056e18:	rts
000926:0x00056e20:	rts
EntityAI::SetEventHandler()
000931:0x00056e28:	movec	m_event_handler, event_handler
000931:0x00056e38:	rts
EntityAI::GetAgents()
000936:0x00056e40:	imove	ret, 0x000000
000936:0x00056e50:	rts
000936:0x00056e58:	rts
EntityAI::IsEntityAI()
000944:0x00056e60:	imove	ret, 0x000001
000944:0x00056e70:	rts
000944:0x00056e78:	rts
EntityAI::Delete()
000958:0x00056e80:	ncall	GetGame()
000958:0x00056e88:	call	CGame.GetCallQueue(CALL_CATEGORY_SYSTEM)
000958:0x00056e98:	pushc	ret
000958:0x00056ea0:	ncall	GetGame()
000958:0x00056ea8:	movec	@c00, ret
000958:0x00056eb8:	popc	ret
000958:0x00056ec0:	movec	obj, @c00
000958:0x00056ed0:	movetm	p1, this
000958:0x00056ee0:	new	@c00, Param1<Object>
000958:0x00056f08:	movec	params, @c00
000958:0x00056f18:	call	CallQueue.Call(obj, _s'ObjectDelete', params)
000958:0x00056f28:	rts
EntityAI::GetVariableString()
000977:0x00056f50:	moves	ret, _s''
000978:0x00056f60:	icall	EntityAI.GetVariable(varName, ret)
000979:0x00056f68:	moves	ret, ret
000979:0x00056f78:	rts
000979:0x00056f80:	rts
EntityAI::GetVariableInt()
000983:0x00056fa8:	imove	ret, 0x000000
000984:0x00056fb8:	icall	EntityAI.GetVariable(varName, ret)
000985:0x00056fc0:	move	ret, ret
000985:0x00056fd0:	rts
000985:0x00056fd8:	rts
EntityAI::GetVariableFloat()
000989:0x00057000:	imove	ret, 0.00000
000990:0x00057010:	icall	EntityAI.GetVariable(varName, ret)
000991:0x00057018:	move	ret, ret
000991:0x00057028:	rts
000991:0x00057030:	rts
EntityAI::GetVariableObject()
000995:0x00057058:	movetm	ret, NULL
000996:0x00057068:	icall	EntityAI.GetVariable(varName, ret)
000997:0x00057070:	movem	ret, ret
000997:0x00057080:	release	ret
000997:0x00057088:	rts
000997:0x00057090:	release	ret
000997:0x00057098:	rts
EntityAI::EEAnimDone()
001011:0x000570c0:	cmpc	m_event_handler, NULL
001011:0x000570d0:	beq	0x057148
001013:0x000570d8:	new	@c00, Param1<string>
001013:0x00057100:	movec	param, @c00
001014:0x00057110:	movetm	entity, this
001014:0x00057120:	movec	[0x3cd17ae0], m_event_handler
001014:0x00057130:	call	EntityEventHandler.OnEvent(entity, EEAnimDone, param)
001015:0x00057140:	delete	param
001015:0x00057148:	rts
EntityAI::EEItemAttached()
001102:0x000571a0:	cmpc	m_ComponentsBank, NULL
001102:0x000571b0:	beq	0x057260
001104:0x000571b8:	imove	comp_key, 0x000000
001104:0x000571c8:	jump	0x0571d8
001104:0x000571d0:	inc	comp_key
001104:0x000571d8:	cmpi	comp_key, COMP_TYPE_COUNT
001104:0x000571e8:	bge	0x057260
001106:0x000571f0:	movec	[0x3cd16428], m_ComponentsBank
001106:0x00057200:	call	ComponentsBank.IsComponentAlreadyExist(comp_key)
001106:0x00057210:	cmpi	ret, _i0
001106:0x00057220:	beq	0x057258
001108:0x00057228:	movec	[0x3cd16428], m_ComponentsBank
001108:0x00057238:	call	ComponentsBank.GetComponent(comp_key, _s'')
001108:0x00057248:	call	Component.Event_OnItemAttached(item, slot_name)
001108:0x00057258:	jump	0x0571d0
001114:0x00057260:	ncall	GetGame()
001114:0x00057268:	ncalli	CGame.IsServer()
001114:0x00057270:	cmpi	ret, _i0
001114:0x00057280:	beq	0x0572e0
001116:0x00057288:	call	EntityAI.HasEnergyManager()
001116:0x00057290:	cmpi	ret, _i0
001116:0x000572a0:	beq	0x0572e0
001116:0x000572a8:	call	EntityAI.HasEnergyManager()
001116:0x000572b0:	cmpi	ret, _i0
001116:0x000572c0:	beq	0x0572e0
001118:0x000572c8:	call	EntityAI.GetCompEM()
001118:0x000572d0:	call	ComponentEnergyManager.OnAttachmentAdded(item)
001118:0x000572e0:	rts
EntityAI::EEItemDetached()
001128:0x00057308:	cmpc	m_ComponentsBank, NULL
001128:0x00057318:	beq	0x0573c8
001130:0x00057320:	imove	comp_key, 0x000000
001130:0x00057330:	jump	0x057340
001130:0x00057338:	inc	comp_key
001130:0x00057340:	cmpi	comp_key, COMP_TYPE_COUNT
001130:0x00057350:	bge	0x0573c8
001132:0x00057358:	movec	[0x3cd16428], m_ComponentsBank
001132:0x00057368:	call	ComponentsBank.IsComponentAlreadyExist(comp_key)
001132:0x00057378:	cmpi	ret, _i0
001132:0x00057388:	beq	0x0573c0
001134:0x00057390:	movec	[0x3cd16428], m_ComponentsBank
001134:0x000573a0:	call	ComponentsBank.GetComponent(comp_key, _s'')
001134:0x000573b0:	call	Component.Event_OnItemDetached(item, slot_name)
001134:0x000573c0:	jump	0x057338
001140:0x000573c8:	ncall	GetGame()
001140:0x000573d0:	ncalli	CGame.IsServer()
001140:0x000573d8:	cmpi	ret, _i0
001140:0x000573e8:	beq	0x057448
001142:0x000573f0:	call	EntityAI.HasEnergyManager()
001142:0x000573f8:	cmpi	ret, _i0
001142:0x00057408:	beq	0x057448
001142:0x00057410:	call	EntityAI.HasEnergyManager()
001142:0x00057418:	cmpi	ret, _i0
001142:0x00057428:	beq	0x057448
001144:0x00057430:	call	EntityAI.GetCompEM()
001144:0x00057438:	call	ComponentEnergyManager.OnAttachmentRemoved(item)
001144:0x00057448:	rts
EntityAI::EEOnAfterLoad()
001184:0x00057588:	call	EntityAI.HasEnergyManager()
001184:0x00057590:	cmpi	ret, _i0
001184:0x000575a0:	beq	0x057738
001184:0x000575a8:	call	EntityAI.GetCompEM()
001184:0x000575b0:	call	ComponentEnergyManager.GetRestorePlugState()
001184:0x000575b8:	cmpi	ret, _i0
001184:0x000575c8:	beq	0x057738
001186:0x000575d0:	call	EntityAI.GetCompEM()
001186:0x000575d8:	call	ComponentEnergyManager.GetEnergySourceIDLow()
001186:0x000575e0:	move	low, ret
001187:0x000575f0:	call	EntityAI.GetCompEM()
001187:0x000575f8:	call	ComponentEnergyManager.GetEnergySourceIDHigh()
001187:0x00057600:	move	high, ret
001190:0x00057610:	ncall	GetGame()
001190:0x00057618:	ncalli	CGame.GetEntityByPersitentID(low, high)
001190:0x00057620:	movetm	potential_energy_source, ret
001197:0x00057630:	imove	IsAttachment, 0x000000
001199:0x00057640:	cmpcm	potential_energy_source, NULL
001199:0x00057650:	beq	0x057680
001200:0x00057658:	movefm	[0x3cd22698], potential_energy_source
001200:0x00057668:	ncalli	EntityAI.HasAttachment([0x3cd22698])
001200:0x00057670:	move	IsAttachment, ret
001202:0x00057680:	cmpi	IsAttachment, _i0
001202:0x00057690:	bne	0x0576c8
001202:0x00057698:	cmpcm	potential_energy_source, NULL
001202:0x000576a8:	beq	0x0576c8
001203:0x000576b0:	ncalli	EntityAI.HasAttachment(this)
001203:0x000576b8:	move	IsAttachment, ret
001205:0x000576c8:	cmpcm	potential_energy_source, NULL
001205:0x000576d8:	beq	0x057730
001205:0x000576e0:	call	EntityAI.HasEnergyManager()
001205:0x000576e8:	cmpi	ret, _i0
001205:0x000576f8:	beq	0x057730
001205:0x00057700:	cmpi	IsAttachment, _i0
001205:0x00057710:	bne	0x057730
001207:0x00057718:	call	EntityAI.GetCompEM()
001207:0x00057720:	call	ComponentEnergyManager.PlugThisInto(potential_energy_source)
001207:0x00057730:	release	potential_energy_source
001207:0x00057738:	rts
EntityAI::GetSlotsCountCorrect()
001304:0x00057740:	ncalli	EntityAI.GetSlotsCount()
001304:0x00057748:	move	ret, ret
001304:0x00057758:	rts
001304:0x00057760:	rts
EntityAI::FindAttachmentBySlotName()
001335:0x000577b0:	ncall	GetGame()
001335:0x000577b8:	cmpc	ret, NULL
001335:0x000577c8:	beq	0x057810
001337:0x000577d0:	ncall	GetGame()
001337:0x000577d8:	ncalli	CGame.GetInventorySlot(slot_name)
001337:0x000577e0:	move	slot_id, ret
001338:0x000577f0:	ncalli	EntityAI.FindAttachment(slot_id)
001338:0x000577f8:	movetm	ret, ret
001338:0x00057808:	rts
001338:0x00057810:	rts
EntityAI::CanTakeEntityAsOwned()
001373:0x000578d8:	movefm	[0x3cd23308], item
001373:0x000578e8:	ncalli	EntityAI.CanAddAttachment([0x3cd23308])
001373:0x000578f0:	cmpi	ret, _i0
001373:0x00057900:	beq	0x057920
001375:0x00057908:	imove	ret, 0x000001
001375:0x00057918:	rts
001378:0x00057920:	movefm	[0x3cd238f8], item
001378:0x00057930:	ncalli	EntityAI.CanAddEntityInCargo([0x3cd238f8])
001378:0x00057938:	cmpi	ret, _i0
001378:0x00057948:	beq	0x057968
001380:0x00057950:	imove	ret, 0x000001
001380:0x00057960:	rts
001384:0x00057968:	ncalli	EntityAI.AttachmentsCount()
001384:0x00057970:	move	attachments, ret
001385:0x00057980:	imove	i, 0x000000
001385:0x00057990:	jump	0x0579a0
001385:0x00057998:	inc	i
001385:0x000579a0:	cmpi	i, attachments
001385:0x000579b0:	bge	0x057a50
001387:0x000579b8:	ncalli	EntityAI.GetAttachmentFromIndex(i)
001387:0x000579c0:	movetm	attachment, ret
001388:0x000579d0:	cmpcm	attachment, NULL
001388:0x000579e0:	bne	0x0579f0
001388:0x000579e8:	jump	0x057998
001390:0x000579f0:	movefm	[0x3cd238f8], item
001390:0x00057a00:	ncalli	EntityAI.CanAddEntityInCargo([0x3cd238f8])
001390:0x00057a08:	cmpi	ret, _i0
001390:0x00057a18:	beq	0x057a40
001392:0x00057a20:	imove	ret, 0x000001
001392:0x00057a30:	release	attachment
001392:0x00057a38:	rts
001392:0x00057a40:	release	attachment
001392:0x00057a48:	jump	0x057998
001396:0x00057a50:	imove	ret, 0x000000
001396:0x00057a60:	rts
001396:0x00057a68:	rts
EntityAI::TakeEntityAsOwned()
001403:0x00057a70:	movefm	[0x3cd45158], item
001403:0x00057a80:	ncall	TryTakeEntityAsOwned(this, [0x3cd45158])
001403:0x00057a88:	move	ret, ret
001403:0x00057a98:	rts
001403:0x00057aa0:	rts
EntityAI::TakeEntityToCargo()
001410:0x00057aa8:	movefm	[0x3cd451f0], item
001410:0x00057ab8:	ncall	TryTakeEntityToCargo(this, [0x3cd451f0])
001410:0x00057ac0:	move	ret, ret
001410:0x00057ad0:	rts
001410:0x00057ad8:	rts
EntityAI::TakeEntityToCargoAtPos()
001417:0x00057b48:	ncalli	EntityAI.HasProxyCargo()
001417:0x00057b50:	cmpi	ret, _i0
001417:0x00057b60:	beq	0x057c38
001417:0x00057b68:	ncalli	EntityAI.GetCargo()
001417:0x00057b70:	cmpc	cargo, ret
001417:0x00057b80:	beq	0x057c38
001420:0x00057b88:	ncalli	EntityAI.GetProxyCargoCount()
001420:0x00057b90:	move	c, ret
001421:0x00057ba0:	imove	i, 0x000000
001421:0x00057bb0:	jump	0x057bc0
001421:0x00057bb8:	inc	i
001421:0x00057bc0:	cmpi	i, c
001421:0x00057bd0:	bge	0x057c38
001423:0x00057bd8:	ncalli	EntityAI.GetProxyCargo(i)
001423:0x00057be0:	cmpc	cargo, ret
001423:0x00057bf0:	bne	0x057c30
001425:0x00057bf8:	movefm	[0x3cd45368], item
001425:0x00057c08:	ncall	TryTakeEntityToProxyCargoEx(this, [0x3cd45368], i, row, col)
001425:0x00057c18:	move	ret, ret
001425:0x00057c28:	rts
001425:0x00057c30:	jump	0x057bb8
001429:0x00057c38:	movefm	[0x3cd45288], item
001429:0x00057c48:	ncall	TryTakeEntityToCargoEx(this, [0x3cd45288], row, col)
001429:0x00057c58:	move	ret, ret
001429:0x00057c68:	rts
001429:0x00057c70:	rts
EntityAI::CanTakeEntityAsAttachmentToSlot()
001436:0x00057c78:	movefm	[0x3cd23380], item
001436:0x00057c88:	ncalli	EntityAI.CanAddAttachmentEx([0x3cd23380], slot)
001436:0x00057c90:	move	ret, ret
001436:0x00057ca0:	rts
001436:0x00057ca8:	rts
EntityAI::TakeEntityAsAttachmentToSlot()
001443:0x00057cb0:	movefm	[0x3cd45468], item
001443:0x00057cc0:	ncall	TryTakeEntityAsAttachment(this, [0x3cd45468], slot)
001443:0x00057cd0:	move	ret, ret
001443:0x00057ce0:	rts
001443:0x00057ce8:	rts
EntityAI::CanTakeEntityAsAttachment()
001450:0x00057cf0:	movefm	[0x3cd23380], item
001450:0x00057d00:	ncalli	EntityAI.GetSlotId()
001450:0x00057d08:	ncalli	EntityAI.CanAddAttachmentEx([0x3cd23380], ret)
001450:0x00057d10:	move	ret, ret
001450:0x00057d20:	rts
001450:0x00057d28:	rts
EntityAI::TakeEntityAsAttachment()
001457:0x00057d30:	movefm	[0x3cd45468], item
001457:0x00057d40:	ncalli	EntityAI.GetSlotId()
001457:0x00057d48:	ncall	TryTakeEntityAsAttachment(this, [0x3cd45468], ret)
001457:0x00057d58:	move	ret, ret
001457:0x00057d68:	rts
001457:0x00057d70:	rts
EntityAI::GetAttachmentByType()
001464:0x00057db8:	imove	i, 0x000000
001464:0x00057dc8:	jump	0x057dd8
001464:0x00057dd0:	inc	i
001464:0x00057dd8:	ncalli	EntityAI.AttachmentsCount()
001464:0x00057de0:	cmpi	i, ret
001464:0x00057df0:	bge	0x057e88
001466:0x00057df8:	ncalli	EntityAI.GetAttachmentFromIndex(i)
001466:0x00057e00:	movetm	attachment, ret
001467:0x00057e10:	cmpcm	attachment, NULL
001467:0x00057e20:	beq	0x057e78
001467:0x00057e28:	movefm	[0x11d0a2c8], attachment
001467:0x00057e38:	ncall	IsInherited([0x11d0a2c8], type)
001467:0x00057e40:	cmpi	ret, _i0
001467:0x00057e50:	beq	0x057e78
001469:0x00057e58:	movem	ret, attachment
001469:0x00057e68:	release	attachment
001469:0x00057e70:	rts
001469:0x00057e78:	release	attachment
001469:0x00057e80:	jump	0x057dd0
001473:0x00057e88:	movetm	ret, NULL
001473:0x00057e98:	rts
001473:0x00057ea0:	rts
EntityAI::GetAttachmentByConfigTypeName()
001480:0x00057ee8:	imove	i, 0x000000
001480:0x00057ef8:	jump	0x057f08
001480:0x00057f00:	inc	i
001480:0x00057f08:	ncalli	EntityAI.AttachmentsCount()
001480:0x00057f10:	cmpi	i, ret
001480:0x00057f20:	bge	0x057f98
001482:0x00057f28:	ncalli	EntityAI.GetAttachmentFromIndex(i)
001482:0x00057f30:	movetm	attachment, ret
001483:0x00057f40:	call	EntityAI.IsKindOf(type)
001483:0x00057f50:	cmpi	ret, _i0
001483:0x00057f60:	beq	0x057f88
001485:0x00057f68:	movem	ret, attachment
001485:0x00057f78:	release	attachment
001485:0x00057f80:	rts
001485:0x00057f88:	release	attachment
001485:0x00057f90:	jump	0x057f00
001489:0x00057f98:	movetm	ret, NULL
001489:0x00057fa8:	rts
001489:0x00057fb0:	rts
EntityAI::CanDropEntity()
001497:0x00057fb8:	imove	ret, 0x000001
001497:0x00057fc8:	rts
001497:0x00057fd0:	rts
EntityAI::DropEntity()
001504:0x00057fd8:	movec	[0x3cd450a0], this
001504:0x00057fe8:	movefm	[0x3cd450c0], item
001504:0x00057ff8:	ncall	TryDropEntity([0x3cd450a0], [0x3cd450c0])
001504:0x00058000:	move	ret, ret
001504:0x00058010:	rts
001504:0x00058018:	rts
EntityAI::SetAnimationPhase()
001563:0x00058020:	ncall	GetGame()
001563:0x00058028:	movec	[0x3cd2c4b8], this
001563:0x00058038:	ncalli	CGame.ObjectSetAnimationPhase([0x3cd2c4b8], animation, phase)
001563:0x00058048:	rts
EntityAI::OnStoreSave()
001609:0x000582c0:	call	EntityAI.HasEnergyManager()
001609:0x000582c8:	cmpi	ret, _i0
001609:0x000582d8:	beq	0x058538
001616:0x000582e0:	call	EntityAI.GetCompEM()
001616:0x000582e8:	call	ComponentEnergyManager.GetEnergy()
001616:0x000582f0:	new	@c00, Param1<float>
001616:0x00058318:	movec	par_f_energy, @c00
001617:0x00058328:	icall	Serializer.Write(par_f_energy)
001620:0x00058330:	call	EntityAI.GetCompEM()
001620:0x00058338:	call	ComponentEnergyManager.IsPassive()
001620:0x00058340:	new	@c00, Param1<bool>
001620:0x00058368:	movec	par_b_is_passive, @c00
001621:0x00058378:	icall	Serializer.Write(par_b_is_passive)
001624:0x00058380:	call	EntityAI.GetCompEM()
001624:0x00058388:	call	ComponentEnergyManager.IsSwitchedOn()
001624:0x00058390:	new	@c00, Param1<bool>
001624:0x000583b8:	movec	par_b_is_on, @c00
001625:0x000583c8:	icall	Serializer.Write(par_b_is_on)
001628:0x000583d0:	call	EntityAI.GetCompEM()
001628:0x000583d8:	call	ComponentEnergyManager.IsPlugged()
001628:0x000583e0:	new	@c00, Param1<bool>
001628:0x00058408:	movec	par_b_is_plugged, @c00
001629:0x00058418:	icall	Serializer.Write(par_b_is_plugged)
001638:0x00058420:	call	EntityAI.GetCompEM()
001638:0x00058428:	call	ComponentEnergyManager.GetEnergySource()
001638:0x00058430:	movem	energy_source, ret
001639:0x00058440:	imove	ID_low, 0x000000
001640:0x00058450:	imove	ID_high, 0x000000
001642:0x00058460:	cmpcm	energy_source, NULL
001642:0x00058470:	beq	0x058480
001644:0x00058478:	icall	EntityAI.GetPersistentID(ID_low, ID_high)
001648:0x00058480:	new	@c00, Param1<int>
001648:0x000584a8:	movec	p_i_energy_source_ID_low, @c00
001649:0x000584b8:	icall	Serializer.Write(p_i_energy_source_ID_low)
001652:0x000584c0:	new	@c00, Param1<int>
001652:0x000584e8:	movec	p_i_energy_source_ID_high, @c00
001653:0x000584f8:	icall	Serializer.Write(p_i_energy_source_ID_high)
001653:0x00058500:	delete	par_f_energy
001653:0x00058508:	delete	par_b_is_passive
001653:0x00058510:	delete	par_b_is_on
001653:0x00058518:	delete	par_b_is_plugged
001653:0x00058520:	delete	p_i_energy_source_ID_low
001653:0x00058528:	delete	p_i_energy_source_ID_high
001653:0x00058530:	release	energy_source
001653:0x00058538:	rts
EntityAI::OnStoreLoad()
001697:0x00058600:	call	EntityAI.HasEnergyManager()
001697:0x00058608:	cmpi	ret, _i0
001697:0x00058618:	beq	0x0588c0
001704:0x00058620:	new	@c00, Param1<float>
001704:0x00058648:	movec	par_f_energy, @c00
001705:0x00058658:	icall	Serializer.Read(par_f_energy)
001706:0x00058660:	call	EntityAI.GetCompEM()
001706:0x00058668:	move	new_energy, param1
001706:0x00058678:	call	ComponentEnergyManager.SetEnergy(new_energy)
001709:0x00058688:	imove	p1, 0x000000
001709:0x00058698:	new	@c00, Param1<bool>
001709:0x000586c0:	movec	par_b_is_passive, @c00
001710:0x000586d0:	icall	Serializer.Read(par_b_is_passive)
001711:0x000586d8:	call	EntityAI.GetCompEM()
001711:0x000586e0:	move	state, param1
001711:0x000586f0:	call	ComponentEnergyManager.SetPassiveState(state)
001714:0x00058700:	new	@c00, Param1<bool>
001714:0x00058728:	movec	par_b_is_on, @c00
001715:0x00058738:	icall	Serializer.Read(par_b_is_on)
001718:0x00058740:	new	@c00, Param1<bool>
001718:0x00058768:	movec	par_b_is_plugged, @c00
001719:0x00058778:	icall	Serializer.Read(par_b_is_plugged)
001728:0x00058780:	new	@c00, Param1<int>
001728:0x000587a8:	movec	p_i_energy_source_ID_low, @c00
001729:0x000587b8:	icall	Serializer.Read(p_i_energy_source_ID_low)
001732:0x000587c0:	new	@c00, Param1<int>
001732:0x000587e8:	movec	p_i_energy_source_ID_high, @c00
001733:0x000587f8:	icall	Serializer.Read(p_i_energy_source_ID_high)
001735:0x00058800:	cmpi	param1, _i0
001735:0x00058810:	beq	0x058868
001738:0x00058818:	call	EntityAI.GetCompEM()
001738:0x00058820:	move	ID_low, param1
001738:0x00058830:	move	ID_high, param1
001738:0x00058840:	call	ComponentEnergyManager.StoreEnergySourceIDs(ID_low, ID_high)
001739:0x00058850:	call	EntityAI.GetCompEM()
001739:0x00058858:	call	ComponentEnergyManager.RestorePlugState(true)
001742:0x00058868:	cmpi	param1, _i0
001742:0x00058878:	beq	0x058890
001744:0x00058880:	call	EntityAI.GetCompEM()
001744:0x00058888:	call	ComponentEnergyManager.SwitchOn()
001744:0x00058890:	delete	par_f_energy
001744:0x00058898:	delete	par_b_is_passive
001744:0x000588a0:	delete	par_b_is_on
001744:0x000588a8:	delete	par_b_is_plugged
001744:0x000588b0:	delete	p_i_energy_source_ID_low
001744:0x000588b8:	delete	p_i_energy_source_ID_high
001744:0x000588c0:	rts
EntityAI::EOnFrame()
001794:0x000588e8:	cmpc	m_ComponentsBank, NULL
001794:0x000588f8:	beq	0x0589a8
001796:0x00058900:	imove	comp_key, 0x000000
001796:0x00058910:	jump	0x058920
001796:0x00058918:	inc	comp_key
001796:0x00058920:	cmpi	comp_key, COMP_TYPE_COUNT
001796:0x00058930:	bge	0x0589a8
001798:0x00058938:	movec	[0x3cd16428], m_ComponentsBank
001798:0x00058948:	call	ComponentsBank.IsComponentAlreadyExist(comp_key)
001798:0x00058958:	cmpi	ret, _i0
001798:0x00058968:	beq	0x0589a0
001800:0x00058970:	movec	[0x3cd16428], m_ComponentsBank
001800:0x00058980:	call	ComponentsBank.GetComponent(comp_key, _s'')
001800:0x00058990:	call	Component.Event_OnFrame(other, timeSlice)
001800:0x000589a0:	jump	0x058918
001800:0x000589a8:	rts
EntityAI::DebugBBoxDraw()
001809:0x000589b0:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001809:0x000589c0:	call	Component.DebugBBoxDraw()
001809:0x000589c8:	movec	ret, ret
001809:0x000589d8:	rts
001809:0x000589e0:	rts
EntityAI::DebugBBoxSetColor()
001815:0x000589e8:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001815:0x000589f8:	call	Component.DebugBBoxSetColor(color)
001815:0x00058a08:	rts
EntityAI::DebugBBoxDelete()
001821:0x00058a10:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001821:0x00058a20:	call	Component.DebugBBoxDelete()
001821:0x00058a28:	rts
EntityAI::DebugDirectionDraw()
001827:0x00058a30:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001827:0x00058a40:	call	Component.DebugDirectionDraw(distance)
001827:0x00058a50:	movec	ret, ret
001827:0x00058a60:	rts
001827:0x00058a68:	rts
EntityAI::DebugDirectionSetColor()
001833:0x00058a70:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001833:0x00058a80:	call	Component.DebugDirectionSetColor(color)
001833:0x00058a90:	rts
EntityAI::DebugDirectionDelete()
001839:0x00058a98:	call	EntityAI.GetComponent(COMP_TYPE_ETITY_DEBUG, _s'')
001839:0x00058aa8:	call	Component.DebugDirectionDelete()
001839:0x00058ab0:	rts
EntityAI::HideSelection()
001845:0x00058ab8:	call	EntityAI.SetAnimationPhase(selection_name, _f1.000000)
001845:0x00058ac8:	rts
EntityAI::ShowSelection()
001851:0x00058ad0:	call	EntityAI.SetAnimationPhase(selection_name, _f0.000000)
001851:0x00058ae0:	rts
EntityAI::GetCompEM()
001871:0x00058ae8:	call	EntityAI.HasComponent(COMP_TYPE_ENERGY_MANAGER)
001871:0x00058af8:	cmpi	ret, _i0
001871:0x00058b08:	beq	0x058b38
001873:0x00058b10:	call	EntityAI.GetComponent(COMP_TYPE_ENERGY_MANAGER, _s'')
001873:0x00058b20:	movec	ret, ret
001873:0x00058b30:	rts
001876:0x00058b38:	movec	ret, NULL
001876:0x00058b48:	rts
001876:0x00058b50:	rts
EntityAI::HasEnergyManager()
001882:0x00058b58:	call	EntityAI.HasComponent(COMP_TYPE_ENERGY_MANAGER)
001882:0x00058b68:	move	ret, ret
001882:0x00058b78:	rts
001882:0x00058b80:	rts
Car::Car()
002092:0x00058bb0:	ncalli	Car.SetFlags(_i2, false)
002092:0x00058bb8:	rts
Man::IsMan()
002159:0x00058bc0:	imove	ret, 0x000001
002159:0x00058bd0:	rts
002159:0x00058bd8:	rts
Man::SetEntityShortcut()
002173:0x00058be0:	movefm	[0x3cd45010], item
002173:0x00058bf0:	ncall	TrySetEntityToQuickBar(this, [0x3cd45010], index)
002173:0x00058c00:	move	ret, ret
002173:0x00058c10:	rts
002173:0x00058c18:	rts
Man::CanDropEntity()
002180:0x00058c20:	imove	ret, 0x000001
002180:0x00058c30:	rts
002180:0x00058c38:	rts
Man::DropEntity()
002186:0x00058c40:	movefm	[0x3cd450c0], item
002186:0x00058c50:	ncall	TryDropEntity(this, [0x3cd450c0])
002186:0x00058c58:	move	ret, ret
002186:0x00058c68:	rts
002186:0x00058c70:	rts
Man::TakeEntityToHands()
002192:0x00058cc8:	ncalli	Man.GetEntityInHands()
002192:0x00058cd0:	movetm	in_hands, ret
002193:0x00058ce0:	cmpcm	in_hands, NULL
002193:0x00058cf0:	beq	0x058d08
002195:0x00058cf8:	call	Man.MoveItemFromHandsToInventory(in_hands)
002198:0x00058d08:	movefm	[0x3cd45520], item
002198:0x00058d18:	ncall	TryTakeEntityToHands(this, [0x3cd45520])
002198:0x00058d20:	move	ret, ret
002198:0x00058d30:	release	in_hands
002198:0x00058d38:	rts
002198:0x00058d40:	release	in_hands
002198:0x00058d48:	rts
Man::MoveItemFromHandsToInventory()
002204:0x00058d50:	movefm	[0x3cd455c0], item
002204:0x00058d60:	ncall	TryMoveItemFromHandsToInventory(this, [0x3cd455c0])
002204:0x00058d68:	move	ret, ret
002204:0x00058d78:	rts
002204:0x00058d80:	rts
Man::RemoveItemFromHands()
002210:0x00058d88:	movefm	[0x3cd45658], item
002210:0x00058d98:	ncall	TryRemoveItemFromHands(this, [0x3cd45658])
002210:0x00058da0:	move	ret, ret
002210:0x00058db0:	rts
002210:0x00058db8:	rts
Man::SwapEntities()
002216:0x00058dc0:	movefm	[0x3cd456e8], item1
002216:0x00058dd0:	movefm	[0x3cd45708], item2
002216:0x00058de0:	ncall	TrySwapEntities(this, [0x3cd456e8], [0x3cd45708])
002216:0x00058df0:	move	ret, ret
002216:0x00058e00:	rts
002216:0x00058e08:	rts
Man::TestSQF()
002277:0x00058e10:	icall	Print(number)
002278:0x00058e18:	icall	Print(text)
002279:0x00058e20:	icall	Print(vec)
002279:0x00058e28:	rts
Man::PerformAction()
002284:0x00058e30:	ncall	GetGame()
002284:0x00058e38:	ncalli	CGame.PerformAction(this, action)
002284:0x00058e40:	rts
Man::Man()
002289:0x00058e78:	ncalli	Man.SetFlags(_i8, false)
002289:0x00058e80:	rts
InventoryItem::EEUsed()
002304:0x00058e88:	ncall	GetGame()
002304:0x00058e90:	ncalli	CGame.GetMission()
002304:0x00058e98:	cmpc	ret, NULL
002304:0x00058ea8:	beq	0x058ee0
002306:0x00058eb0:	ncall	GetGame()
002306:0x00058eb8:	ncalli	CGame.GetMission()
002306:0x00058ec0:	movetm	item, this
002306:0x00058ed0:	call	Mission.OnItemUsed(item, owner)
002306:0x00058ee0:	rts
InventoryItem::OnUseFromInventory()
002317:0x00058ee8:	imove	ret, 0x000000
002317:0x00058ef8:	rts
002317:0x00058f00:	rts
InventoryItem::GetTooltip()
002323:0x00058f28:	icall	InventoryItem.ConfigGetString(_s'descriptionShort')
002323:0x00058f30:	moves	ret, ret
002323:0x00058f40:	rts
002323:0x00058f48:	rts
InventoryItem::IsInventoryItem()
002328:0x00058f50:	imove	ret, 0x000001
002328:0x00058f60:	rts
002328:0x00058f68:	rts
EntityScriptedActivity::OnSimulate()
002406:0x00058f70:	imove	ret, 0x000000
002406:0x00058f80:	rts
002406:0x00058f88:	rts
CGame::CGame()
002622:0x00058f90:	new	@c00, array<Param>
002622:0x00058fb0:	movetm	m_ParamCache, @c00
002623:0x00058fc0:	movefm	[0x3cd1fb10], m_ParamCache
002623:0x00058fd0:	icall	array<Param>.Insert(NULL)
002623:0x00058fd8:	rts
CGame::ConfigGetTextOut()
002827:0x00059028:	icall	CGame.ConfigGetText(path, ret_s)
002828:0x00059030:	moves	ret, ret_s
002828:0x00059040:	rts
002828:0x00059048:	rts
CGame::ConfigPathToString()
002926:0x000590e0:	moves	return_path, _s''
002927:0x000590f0:	ncalli	array<string>.Count()
002927:0x000590f8:	move	count, ret
002929:0x00059108:	imove	i, 0x000000
002929:0x00059118:	jump	0x059128
002929:0x00059120:	inc	i
002929:0x00059128:	cmpi	i, count
002929:0x00059138:	bge	0x0591c8
002931:0x00059140:	icall	array<string>.Get(i)
002931:0x00059148:	moves	@s00, ret
002931:0x00059158:	adds	return_path, return_path, @s00
002933:0x00059168:	subi	@m01, count, _i1
002933:0x00059178:	move	@m00, @m01
002933:0x00059188:	cmpi	i, @m00
002933:0x00059198:	bge	0x0591c0
002935:0x000591a0:	moves	@s00, _s' '
002935:0x000591b0:	adds	return_path, return_path, @s00
002935:0x000591c0:	jump	0x059120
002939:0x000591c8:	moves	ret, return_path
002939:0x000591d8:	rts
002939:0x000591e0:	rts
CGame::CreateActivity()
003067:0x000591e8:	icall	Print(activity_type)
003068:0x000591f0:	movec	ret, NULL
003068:0x00059200:	rts
003068:0x00059208:	rts
CGame::RPCSingleParam()
003151:0x00059210:	movefm	[0x3cd1fb10], m_ParamCache
003151:0x00059220:	icall	array<Param>.Set(_i0, param)
003152:0x00059228:	movefm	[0x3cd2db40], target
003152:0x00059238:	movefm	[0x3cd2db80], m_ParamCache
003152:0x00059248:	movefm	[0x3cd2dba0], recipient
003152:0x00059258:	ncalli	CGame.RPC([0x3cd2db40], rpc_type, [0x3cd2db80], [0x3cd2dba0])
003152:0x00059268:	rts
CGame::IsParamUserActions()
003239:0x00059270:	move	ret, m_ParamUserActions
003239:0x00059280:	rts
003239:0x00059288:	rts
CGame::IsNewPlayer()
003244:0x00059290:	move	ret, m_ParamNewPlayer
003244:0x000592a0:	rts
003244:0x000592a8:	rts
CGame::IsNewInventory()
003249:0x000592b0:	move	ret, m_ParamNewInventory
003249:0x000592c0:	rts
003249:0x000592c8:	rts
CGame::IsNoLogs()
003254:0x000592d0:	move	ret, m_ParamNoLogs
003254:0x000592e0:	rts
003254:0x000592e8:	rts
CGame::IsDebugActions()
003259:0x000592f0:	move	ret, m_DebugActions
003259:0x00059300:	rts
003259:0x00059308:	rts
CGame::IsNewUI()
003264:0x00059310:	imove	ret, 0x000001
003264:0x00059320:	rts
003264:0x00059328:	rts
CGame::IsPlayerDiag()
003269:0x00059330:	move	ret, m_ParamPlayerDiag
003269:0x00059340:	rts
003269:0x00059348:	rts
CGame::IsMainMenu2()
003274:0x00059350:	move	ret, m_MainMenu2
003274:0x00059360:	rts
003274:0x00059368:	rts
CGame::UpdatePathgraphRegionByObject()
003291:0x000594a8:	ncalli	Object.GetPosition()
003291:0x000594b0:	movev	pos, ret
003293:0x000594c0:	icall	Object.ClippingInfo(min_max)
003293:0x000594c8:	move	radius, ret
003294:0x000594d8:	ifv	@f02, pos[0x000000]
003294:0x000594e8:	subf	@f02, @f02, radius
003294:0x000594f8:	move	@f00, @f02
003294:0x00059508:	ifv	@f03, pos[0x000001]
003294:0x00059518:	ifv	@f06, pos[0x000002]
003294:0x00059528:	subf	@f06, @f06, radius
003294:0x00059538:	move	@f04, @f06
003294:0x00059548:	ncall	Vector(@f00, @f03, @f04)
003294:0x00059558:	movev	min, ret
003295:0x00059568:	ifv	@f02, pos[0x000000]
003295:0x00059578:	addf	@f02, @f02, radius
003295:0x00059588:	move	@f00, @f02
003295:0x00059598:	ifv	@f03, pos[0x000001]
003295:0x000595a8:	ifv	@f06, pos[0x000002]
003295:0x000595b8:	addf	@f06, @f06, radius
003295:0x000595c8:	move	@f04, @f06
003295:0x000595d8:	ncall	Vector(@f00, @f03, @f04)
003295:0x000595e8:	movev	max, ret
003296:0x000595f8:	ncalli	CGame.UpdatePathgraphRegion(min, max)
003296:0x00059600:	rts
CGame::IsKindOf()
003499:0x000596f8:	new	@c00, array<string>
003499:0x00059718:	movetm	full_path, @c00
003501:0x00059728:	adds	@s01, _s'CfgVehicles ', cfg_class_name
003501:0x00059738:	moves	@s00, @s01
003501:0x00059748:	movefm	[0x3cd2bda8], full_path
003501:0x00059758:	ncalli	CGame.ConfigGetFullPath(@s00, [0x3cd2bda8])
003503:0x00059760:	ncalli	array<string>.Count()
003503:0x00059768:	cmpi	ret, _i0
003503:0x00059778:	bne	0x0597b8
003505:0x00059780:	adds	@s01, _s'CfgAmmo ', cfg_class_name
003505:0x00059790:	moves	@s00, @s01
003505:0x000597a0:	movefm	[0x3cd2bda8], full_path
003505:0x000597b0:	ncalli	CGame.ConfigGetFullPath(@s00, [0x3cd2bda8])
003508:0x000597b8:	ncalli	array<string>.Count()
003508:0x000597c0:	cmpi	ret, _i0
003508:0x000597d0:	bne	0x059810
003510:0x000597d8:	adds	@s01, _s'CfgMagazines ', cfg_class_name
003510:0x000597e8:	moves	@s00, @s01
003510:0x000597f8:	movefm	[0x3cd2bda8], full_path
003510:0x00059808:	ncalli	CGame.ConfigGetFullPath(@s00, [0x3cd2bda8])
003513:0x00059810:	ncalli	array<string>.Count()
003513:0x00059818:	cmpi	ret, _i0
003513:0x00059828:	bne	0x059868
003515:0x00059830:	adds	@s01, _s'cfgWeapons ', cfg_class_name
003515:0x00059840:	moves	@s00, @s01
003515:0x00059850:	movefm	[0x3cd2bda8], full_path
003515:0x00059860:	ncalli	CGame.ConfigGetFullPath(@s00, [0x3cd2bda8])
003518:0x00059868:	ncalli	array<string>.Count()
003518:0x00059870:	cmpi	ret, _i0
003518:0x00059880:	bne	0x0598c0
003520:0x00059888:	adds	@s01, _s'CfgNonAIVehicles ', cfg_class_name
003520:0x00059898:	moves	@s00, @s01
003520:0x000598a8:	movefm	[0x3cd2bda8], full_path
003520:0x000598b8:	ncalli	CGame.ConfigGetFullPath(@s00, [0x3cd2bda8])
003523:0x000598c0:	icall	ToLower(cfg_parent_name)
003524:0x000598c8:	imove	i, 0x000000
003524:0x000598d8:	jump	0x0598e8
003524:0x000598e0:	inc	i
003524:0x000598e8:	ncalli	array<string>.Count()
003524:0x000598f0:	cmpi	i, ret
003524:0x00059900:	bge	0x059970
003526:0x00059908:	icall	array<string>.Get(i)
003526:0x00059910:	moves	tmp, ret
003527:0x00059920:	icall	ToLower(tmp)
003528:0x00059928:	cmps	tmp, cfg_parent_name
003528:0x00059938:	bne	0x059968
003530:0x00059940:	delete	full_path
003531:0x00059948:	imove	ret, 0x000001
003531:0x00059958:	release	full_path
003531:0x00059960:	rts
003531:0x00059968:	jump	0x0598e0
003535:0x00059970:	delete	full_path
003536:0x00059978:	imove	ret, 0x000000
003536:0x00059988:	release	full_path
003536:0x00059990:	rts
003536:0x00059998:	release	full_path
003536:0x000599a0:	rts
CGame::ObjectIsKindOf()
003553:0x00059a08:	new	@c00, array<string>
003553:0x00059a28:	movetm	full_path, @c00
003554:0x00059a38:	movefm	[0x3cd2be00], object
003554:0x00059a48:	movefm	[0x3cd2be20], full_path
003554:0x00059a58:	ncalli	CGame.ConfigGetObjectFullPath([0x3cd2be00], [0x3cd2be20])
003556:0x00059a60:	icall	ToLower(cfg_parent_name)
003558:0x00059a68:	imove	i, 0x000000
003558:0x00059a78:	jump	0x059a88
003558:0x00059a80:	inc	i
003558:0x00059a88:	ncalli	array<string>.Count()
003558:0x00059a90:	cmpi	i, ret
003558:0x00059aa0:	bge	0x059b10
003560:0x00059aa8:	icall	array<string>.Get(i)
003560:0x00059ab0:	moves	tmp, ret
003561:0x00059ac0:	icall	ToLower(tmp)
003562:0x00059ac8:	cmps	tmp, cfg_parent_name
003562:0x00059ad8:	bne	0x059b08
003564:0x00059ae0:	delete	full_path
003565:0x00059ae8:	imove	ret, 0x000001
003565:0x00059af8:	release	full_path
003565:0x00059b00:	rts
003565:0x00059b08:	jump	0x059a80
003569:0x00059b10:	delete	full_path
003570:0x00059b18:	imove	ret, 0x000000
003570:0x00059b28:	release	full_path
003570:0x00059b30:	rts
003570:0x00059b38:	release	full_path
003570:0x00059b40:	rts
CGame::ConfigFindClassIndex()
003583:0x00059c08:	ncalli	CGame.ConfigGetChildrenCount(config_path)
003583:0x00059c10:	move	class_count, ret
003584:0x00059c20:	imove	index, 0x000000
003584:0x00059c30:	jump	0x059c40
003584:0x00059c38:	inc	index
003584:0x00059c40:	cmpi	index, class_count
003584:0x00059c50:	bge	0x059cb0
003586:0x00059c58:	moves	found_class, _s''
003587:0x00059c68:	icall	CGame.ConfigGetChildName(config_path, index, found_class)
003588:0x00059c78:	cmps	found_class, searched_member
003588:0x00059c88:	bne	0x059ca8
003590:0x00059c90:	move	ret, index
003590:0x00059ca0:	rts
003590:0x00059ca8:	jump	0x059c38
003593:0x00059cb0:	imove	ret, 0xffffffff
003593:0x00059cc0:	rts
003593:0x00059cc8:	rts
Mission::GetHud()
003685:0x00059cd0:	movec	ret, NULL
003685:0x00059ce0:	rts
003685:0x00059ce8:	rts
Mission::CreateActivity()
003690:0x00059cf0:	movec	ret, NULL
003690:0x00059d00:	rts
003690:0x00059d08:	rts
Mission::CreateScriptedMenu()
003695:0x00059d10:	movetm	ret, NULL
003695:0x00059d20:	rts
003695:0x00059d28:	rts
Mission::CreateScriptedWindow()
003700:0x00059d30:	movec	ret, NULL
003700:0x00059d40:	rts
003700:0x00059d48:	rts
Mission::IsPaused()
003705:0x00059d50:	imove	ret, 0x000000
003705:0x00059d60:	rts
003705:0x00059d68:	rts
Mission::IsGame()
003710:0x00059d70:	imove	ret, 0x000000
003710:0x00059d80:	rts
003710:0x00059d88:	rts
Mission::IsServer()
003715:0x00059d90:	imove	ret, 0x000000
003715:0x00059da0:	rts
003715:0x00059da8:	rts
Mission::IsMissionGameplay()
003725:0x00059db0:	imove	ret, 0x000000
003725:0x00059dc0:	rts
003725:0x00059dc8:	rts
World::SetAperture()
003835:0x00059e40:	cmpf	invDiameter, _f0.000000
003835:0x00059e50:	bgt	0x059e68
003837:0x00059e58:	ncalli	World.SetEyeAccom(_f-1.000000)
003837:0x00059e60:	jump	0x059ea0
003841:0x00059e68:	divf	apertureArea, _f1.000000, invDiameter
003842:0x00059e78:	mulf	@f01, apertureArea, apertureArea
003842:0x00059e88:	move	@f00, @f01
003842:0x00059e98:	ncalli	World.SetEyeAccom(@f00)
003842:0x00059ea0:	rts
ScrollBarContainer::~ScrollBarContainer()
//scripts/3_Game/GUI/Containers/ScrollBarContainer.c
000019:0x00059ea8:	ncall	GetGame()
000019:0x00059eb0:	call	CGame.GetDragQueue()
000019:0x00059eb8:	movec	obj, this
000019:0x00059ec8:	call	DragQueue.RemoveCalls(obj)
000019:0x00059ed8:	rts
ScrollBarContainer::Update()
000029:0x00059fb0:	movefm	[0x11cf2b58], m_root
000029:0x00059fc0:	icall	Widget.GetScreenSize(width, m_root_height)
000030:0x00059fc8:	movefm	[0x11cf2b58], Content
000030:0x00059fd8:	icall	Widget.GetScreenSize(width, m_content_height)
000032:0x00059fe0:	subf	@f00, m_content_height, m_root_height
000032:0x00059ff0:	move	diff, @f00
000033:0x0005a000:	cmpf	diff, _f0.000000
000033:0x0005a010:	bgt	0x05a080
000035:0x0005a018:	movefm	[0x11cf2b58], Content
000035:0x0005a028:	ncalli	Widget.SetPos(_f0.000000, _f0.000000, _i1)
000036:0x0005a038:	movefm	[0x11cf2b58], Scroller
000036:0x0005a048:	ncalli	Widget.Show(false)
000037:0x0005a050:	movefm	[0x11cf2b58], ScrollBar
000037:0x0005a060:	ncalli	Widget.Show(false)
000038:0x0005a068:	imove	m_position, 0.00000
000039:0x0005a078:	rts
000042:0x0005a080:	divf	@f01, m_root_height, m_content_height
000042:0x0005a090:	move	@f00, @f01
000042:0x0005a0a0:	mulf	@f00, @f00, m_root_height
000042:0x0005a0b0:	move	scroller_height, @f00
000044:0x0005a0c0:	movefm	[0x11cf2b58], ScrollBar
000044:0x0005a0d0:	ncalli	Widget.Show(true)
000045:0x0005a0d8:	movefm	[0x11cf2b58], Scroller
000045:0x0005a0e8:	ncalli	Widget.Show(true)
000046:0x0005a0f0:	movefm	[0x11cf2b58], Scroller
000046:0x0005a100:	icall	Widget.GetSize(width, height)
000047:0x0005a108:	movefm	[0x11cf2b58], Scroller
000047:0x0005a118:	ncalli	Widget.SetSize(width, scroller_height, _i1)
000048:0x0005a128:	subf	@f02, m_root_height, scroller_height
000048:0x0005a138:	move	@f01, @f02
000048:0x0005a148:	mulf	@f01, m_position, @f01
000048:0x0005a158:	move	@f00, @f01
000048:0x0005a168:	movefm	[0x11cf2b58], Scroller
000048:0x0005a178:	ncalli	Widget.SetPos(_f0.000000, @f00, _i1)
000050:0x0005a188:	subf	@f02, _f0.000000, diff
000050:0x0005a198:	mulf	@f02, @f02, m_position
000050:0x0005a1a8:	move	@f00, @f02
000050:0x0005a1b8:	movefm	[0x11cf2b58], Content
000050:0x0005a1c8:	ncalli	Widget.SetPos(_f0.000000, @f00, _i1)
000050:0x0005a1d8:	rts
ScrollBarContainer::OnWidgetScriptInit()
000055:0x0005a210:	movem	m_root, w
000056:0x0005a220:	movec	[0x11d0f728], this
000056:0x0005a230:	movefm	[0x11cf2b58], m_root
000056:0x0005a240:	ncalli	Widget.SetHandler([0x11d0f728])
000057:0x0005a248:	movefm	[0x11cf2b58], m_root
000057:0x0005a258:	ncalli	Widget.SetFlags(_i8, _i1)
000058:0x0005a260:	imove	m_scrolling, 0x000000
000059:0x0005a270:	call	ScrollBarContainer.Update()
000059:0x0005a278:	rts
ScrollBarContainer::StopScrolling()
000064:0x0005a280:	cmpi	m_scrolling, _i0
000064:0x0005a290:	beq	0x05a2d8
000066:0x0005a298:	ncall	GetGame()
000066:0x0005a2a0:	call	CGame.GetDragQueue()
000066:0x0005a2a8:	movec	obj, this
000066:0x0005a2b8:	call	DragQueue.RemoveCalls(obj)
000067:0x0005a2c8:	imove	m_scrolling, 0x000000
000067:0x0005a2d8:	rts
ScrollBarContainer::UpdateScroll()
000073:0x0005a320:	cmpi	m_scrolling, _i0
000073:0x0005a330:	beq	0x05a480
000075:0x0005a338:	cmpi	is_dragging, _i0
000075:0x0005a348:	beq	0x05a468
000077:0x0005a350:	citf	@f00, mouse_y
000077:0x0005a360:	citf	@f01, m_scrolling_mouse_pos
000077:0x0005a370:	subf	diff, @f00, @f01
000078:0x0005a380:	divf	@f01, m_root_height, m_content_height
000078:0x0005a390:	move	@f00, @f01
000078:0x0005a3a0:	mulf	scroller_height, @f00, m_root_height
000079:0x0005a3b0:	subf	@f02, m_root_height, scroller_height
000079:0x0005a3c0:	move	@f01, @f02
000079:0x0005a3d0:	divf	@f01, diff, @f01
000079:0x0005a3e0:	move	@f00, @f01
000079:0x0005a3f0:	addf	@f00, m_scrolling_start_pos, @f00
000079:0x0005a400:	move	m_position, @f00
000080:0x0005a410:	cmpf	m_position, _f0.000000
000080:0x0005a420:	bge	0x05a438
000080:0x0005a428:	imove	m_position, 0.00000
000081:0x0005a438:	cmpf	m_position, _f1.000000
000081:0x0005a448:	ble	0x05a460
000081:0x0005a450:	imove	m_position, 1.00000
000081:0x0005a460:	jump	0x05a480
000085:0x0005a468:	imove	m_scrolling, 0x000000
000086:0x0005a478:	call	ScrollBarContainer.StopScrolling()
000090:0x0005a480:	call	ScrollBarContainer.Update()
000090:0x0005a488:	rts
ScrollBarContainer::OnMouseButtonDown()
000099:0x0005a4f8:	cmpi	button, _i0
000099:0x0005a508:	bne	0x05a5b0
000099:0x0005a510:	cmpm	w, Scroller
000099:0x0005a520:	bne	0x05a5b0
000099:0x0005a528:	cmpi	m_scrolling, _i0
000099:0x0005a538:	bne	0x05a5b0
000101:0x0005a540:	imove	m_scrolling, 0x000001
000102:0x0005a550:	move	m_scrolling_start_pos, m_position
000104:0x0005a560:	icall	GetMousePos(mouse_x, m_scrolling_mouse_pos)
000105:0x0005a568:	ncall	GetGame()
000105:0x0005a570:	call	CGame.GetDragQueue()
000105:0x0005a578:	movec	obj, this
000105:0x0005a588:	call	DragQueue.Call(obj, _s'UpdateScroll', _c0)
000106:0x0005a598:	imove	ret, 0x000001
000106:0x0005a5a8:	rts
000109:0x0005a5b0:	imove	ret, 0x000000
000109:0x0005a5c0:	rts
000109:0x0005a5c8:	rts
ScrollBarContainer::OnMouseButtonUp()
000115:0x0005a5d0:	call	ScrollBarContainer.StopScrolling()
000115:0x0005a5d8:	rts
ScrollBarContainer::OnMouseWheel()
000121:0x0005a600:	cmpi	m_scrolling, _i0
000121:0x0005a610:	bne	0x05a630
000121:0x0005a618:	cmpf	m_content_height, m_root_height
000121:0x0005a628:	bgt	0x05a648
000121:0x0005a630:	imove	ret, 0x000000
000121:0x0005a640:	rts
000123:0x0005a648:	subf	@f02, m_content_height, m_root_height
000123:0x0005a658:	move	@f01, @f02
000123:0x0005a668:	divf	@f01, _f1.000000, @f01
000123:0x0005a678:	move	@f00, @f01
000123:0x0005a688:	citf	@f01, WHEEL_STEP
000123:0x0005a698:	mulf	step, @f00, @f01
000124:0x0005a6a8:	citf	@f01, wheel
000124:0x0005a6b8:	mulf	@f00, @f01, step
000124:0x0005a6c8:	subf	m_position, m_position, @f00
000126:0x0005a6d8:	cmpf	m_position, _f0.000000
000126:0x0005a6e8:	bge	0x05a700
000126:0x0005a6f0:	imove	m_position, 0.00000
000127:0x0005a700:	cmpf	m_position, _f1.000000
000127:0x0005a710:	ble	0x05a728
000127:0x0005a718:	imove	m_position, 1.00000
000128:0x0005a728:	call	ScrollBarContainer.Update()
000129:0x0005a730:	imove	ret, 0x000001
000129:0x0005a740:	rts
000129:0x0005a748:	rts
ScrollBarContainer::OnResize()
000133:0x0005a750:	cmpm	w, m_root
000133:0x0005a760:	beq	0x05a780
000133:0x0005a768:	cmpm	w, Content
000133:0x0005a778:	bne	0x05a788
000135:0x0005a780:	call	ScrollBarContainer.Update()
000137:0x0005a788:	imove	ret, 0x000000
000137:0x0005a798:	rts
000137:0x0005a7a0:	rts
ScrollBarContainer::OnUpdate()
000142:0x0005a7a8:	cmpm	w, m_root
000142:0x0005a7b8:	bne	0x05a7c8
000144:0x0005a7c0:	call	ScrollBarContainer.Update()
000144:0x0005a7c8:	rts
ContextMenu::ContextMenu()
//scripts/3_Game/GUI/ContextMenu.c
000013:0x0005a7d0:	new	@c00, array<CallQueueContext>
000013:0x0005a7f0:	movetm	m_commands, @c00
000014:0x0005a800:	imove	m_count, 0x000000
000014:0x0005a810:	rts
ContextMenu::~ContextMenu()
000019:0x0005a818:	call	ContextMenu.Clear()
000021:0x0005a820:	cmpcm	m_context_menu_root_widget, NULL
000021:0x0005a830:	beq	0x05a860
000023:0x0005a838:	movefm	[0x11cf2b58], m_context_menu_root_widget
000023:0x0005a848:	ncalli	Widget.Destroy()
000024:0x0005a850:	movetm	m_context_menu_root_widget, NULL
000024:0x0005a860:	rts
ContextMenu::Init()
000030:0x0005a8a8:	ncall	GetGame()
000030:0x0005a8b0:	ncalli	CGame.GetWorkspace()
000030:0x0005a8b8:	movefm	[0x11d18388], layoutRoot
000030:0x0005a8c8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/day_z_inventory_context_menu.layout', [0x11d18388])
000030:0x0005a8d0:	movetm	m_context_menu_root_widget, ret
000031:0x0005a8e0:	movefm	[0x11cf2b58], m_context_menu_root_widget
000031:0x0005a8f0:	ncalli	Widget.FindAnyWidget(_s'PanelWidget')
000031:0x0005a8f8:	movetm	m_context_menu_panel_widget, ret
000032:0x0005a908:	movefm	[0x11cf2b58], m_context_menu_root_widget
000032:0x0005a918:	ncalli	Widget.Show(false)
000033:0x0005a920:	movec	[0x11d0f728], this
000033:0x0005a930:	movefm	[0x11cf2b58], m_context_menu_root_widget
000033:0x0005a940:	ncalli	Widget.SetHandler([0x11d0f728])
000033:0x0005a948:	rts
ContextMenu::Show()
000039:0x0005ae20:	cmpi	m_count, _i0
000039:0x0005ae30:	bne	0x05ae40
000039:0x0005ae38:	rts
000043:0x0005ae40:	imove	offset_x, 0xffffffec
000044:0x0005ae50:	imove	offset_y, 0xfffffff6
000046:0x0005ae60:	icall	GetScreenSize(screen_w, screen_h)
000049:0x0005ae68:	imove	button_height_percent, 0.04000
000050:0x0005ae78:	citf	@f00, screen_h
000050:0x0005ae88:	mulf	button_height, @f00, button_height_percent
000051:0x0005ae98:	imove	i, 0x000000
000051:0x0005aea8:	jump	0x05aeb8
000051:0x0005aeb0:	inc	i
000051:0x0005aeb8:	cmpi	i, m_count
000051:0x0005aec8:	bge	0x05af70
000053:0x0005aed0:	addi	@m01, i, _i1
000053:0x0005aee0:	move	@m00, @m01
000053:0x0005aef0:	icall	ToString(@m00)
000053:0x0005aef8:	adds	@s01, _s'Button', ret
000053:0x0005af08:	moves	@s00, @s01
000053:0x0005af18:	call	String(@s00)
000053:0x0005af28:	movefm	[0x11cf2b58], m_context_menu_root_widget
000053:0x0005af38:	ncalli	Widget.FindAnyWidget(ret)
000053:0x0005af40:	movetm	menu_button, ret
000054:0x0005af50:	ncalli	ButtonWidget.SetSize(_f0.920000, button_height, _i1)
000054:0x0005af60:	release	menu_button
000054:0x0005af68:	jump	0x05aeb0
000059:0x0005af70:	movefm	[0x11cf2b58], m_context_menu_panel_widget
000059:0x0005af80:	icall	Widget.GetScript(spacer)
000060:0x0005af88:	cmpcm	spacer, NULL
000060:0x0005af98:	beq	0x05afa8
000062:0x0005afa0:	call	AutoHeightSpacer.Update()
000065:0x0005afa8:	movefm	[0x11cf2b58], m_context_menu_root_widget
000065:0x0005afb8:	icall	Widget.GetSize(w, h)
000066:0x0005afc0:	movefm	[0x11cf2b58], m_context_menu_panel_widget
000066:0x0005afd0:	icall	Widget.GetSize(sx, sy)
000067:0x0005afd8:	movefm	[0x11cf2b58], m_context_menu_root_widget
000067:0x0005afe8:	ncalli	Widget.SetSize(w, sy, _i1)
000070:0x0005aff8:	movefm	[0x11cf2b58], m_context_menu_root_widget
000070:0x0005b008:	icall	Widget.GetScreenSize(w, h)
000071:0x0005b010:	imove	@m00, 0x00000a
000071:0x0005b020:	subi	screen_w, screen_w, @m00
000072:0x0005b030:	imove	@m00, 0x00000a
000072:0x0005b040:	subi	screen_h, screen_h, @m00
000074:0x0005b050:	citf	@f01, x
000074:0x0005b060:	addf	@f01, @f01, w
000074:0x0005b070:	move	@f00, @f01
000074:0x0005b080:	citf	@f02, offset_x
000074:0x0005b090:	subf	@f01, @f00, @f02
000074:0x0005b0a0:	cfti	right_edge, @f01
000075:0x0005b0b0:	cmpi	right_edge, screen_w
000075:0x0005b0c0:	ble	0x05b140
000077:0x0005b0c8:	citf	@f01, screen_w
000077:0x0005b0d8:	subf	@f01, @f01, w
000077:0x0005b0e8:	move	@f00, @f01
000077:0x0005b0f8:	citf	@f02, offset_x
000077:0x0005b108:	subf	@f01, @f00, @f02
000077:0x0005b118:	cfti	@m00, @f01
000077:0x0005b128:	move	x, @m00
000077:0x0005b138:	jump	0x05b160
000081:0x0005b140:	addi	@m00, x, offset_x
000081:0x0005b150:	move	x, @m00
000084:0x0005b160:	citf	@f01, y
000084:0x0005b170:	addf	@f01, @f01, h
000084:0x0005b180:	move	@f00, @f01
000084:0x0005b190:	citf	@f02, offset_y
000084:0x0005b1a0:	subf	@f01, @f00, @f02
000084:0x0005b1b0:	cfti	bottom_edge, @f01
000085:0x0005b1c0:	cmpi	bottom_edge, screen_h
000085:0x0005b1d0:	ble	0x05b250
000087:0x0005b1d8:	citf	@f01, y
000087:0x0005b1e8:	subf	@f01, @f01, h
000087:0x0005b1f8:	move	@f00, @f01
000087:0x0005b208:	citf	@f02, offset_y
000087:0x0005b218:	subf	@f01, @f00, @f02
000087:0x0005b228:	cfti	@m00, @f01
000087:0x0005b238:	move	y, @m00
000087:0x0005b248:	jump	0x05b270
000091:0x0005b250:	addi	@m00, y, offset_y
000091:0x0005b260:	move	y, @m00
000094:0x0005b270:	citf	[0x11d0ee50], x
000094:0x0005b280:	citf	[0x11d0ee70], y
000094:0x0005b290:	movefm	[0x11cf2b58], m_context_menu_root_widget
000094:0x0005b2a0:	ncalli	Widget.SetPos([0x11d0ee50], [0x11d0ee70], _i1)
000095:0x0005b2b0:	movefm	[0x11cf2b58], m_context_menu_root_widget
000095:0x0005b2c0:	ncalli	Widget.Show(true)
000095:0x0005b2c8:	release	spacer
000095:0x0005b2d0:	rts
ContextMenu::Hide()
000101:0x0005b2d8:	movefm	[0x11cf2b58], m_context_menu_root_widget
000101:0x0005b2e8:	ncalli	Widget.Show(false)
000102:0x0005b2f0:	call	ContextMenu.Clear()
000102:0x0005b2f8:	rts
ContextMenu::IsVisible()
000108:0x0005b300:	movefm	[0x11cf2b58], m_context_menu_root_widget
000108:0x0005b310:	ncalli	Widget.IsVisible()
000108:0x0005b318:	move	ret, ret
000108:0x0005b328:	rts
000108:0x0005b330:	rts
ContextMenu::OnMouseLeave()
000114:0x0005b338:	call	ScriptedWidgetEventHandler.OnMouseLeave(w, enterW, x, y)
000116:0x0005b348:	cmpcm	enterW, NULL
000116:0x0005b358:	beq	0x05b3d0
000116:0x0005b360:	cmpcm	m_context_menu_panel_widget, NULL
000116:0x0005b370:	beq	0x05b3d0
000116:0x0005b378:	cmpm	enterW, m_context_menu_panel_widget
000116:0x0005b388:	beq	0x05b3d0
000116:0x0005b390:	ncalli	Widget.GetParent()
000116:0x0005b398:	cmpmc	ret, m_context_menu_panel_widget
000116:0x0005b3a8:	beq	0x05b3d0
000118:0x0005b3b0:	call	ContextMenu.Hide()
000119:0x0005b3b8:	imove	ret, 0x000001
000119:0x0005b3c8:	rts
000121:0x0005b3d0:	imove	ret, 0x000000
000121:0x0005b3e0:	rts
000121:0x0005b3e8:	rts
ContextMenu::OnMouseButtonDown()
000127:0x0005b478:	call	ScriptedWidgetEventHandler.OnMouseButtonDown(w, x, y, button)
000129:0x0005b488:	cmpi	button, _i0
000129:0x0005b498:	bne	0x05b5d8
000129:0x0005b4a0:	ncalli	Widget.GetUserID()
000129:0x0005b4a8:	cmpi	ret, _i-1
000129:0x0005b4b8:	ble	0x05b5d8
000129:0x0005b4c0:	ncalli	Widget.GetUserID()
000129:0x0005b4c8:	movefm	[0x3cd386b8], m_commands
000129:0x0005b4d8:	ncalli	array<CallQueueContext>.Count()
000129:0x0005b4e0:	cmpi	ret, ret
000129:0x0005b4f0:	bge	0x05b5d8
000131:0x0005b4f8:	ncalli	Widget.GetUserID()
000131:0x0005b500:	movefm	[0x3cd386b8], m_commands
000131:0x0005b510:	icall	array<CallQueueContext>.Get(ret)
000131:0x0005b518:	movec	ctx, ret
000132:0x0005b528:	call	CallQueueContext.Call()
000133:0x0005b530:	call	ContextMenu.Hide()
000135:0x0005b538:	ncall	GetGame()
000135:0x0005b540:	ncalli	CGame.GetUIManager()
000135:0x0005b548:	ncalli	UIManager.GetMenu()
000135:0x0005b550:	movetm	menu, ret
000136:0x0005b560:	cmpcm	menu, NULL
000136:0x0005b570:	beq	0x05b5b0
000136:0x0005b578:	ncall	GetGame()
000136:0x0005b580:	call	CGame.GetCallQueue(CALL_CATEGORY_GUI)
000136:0x0005b590:	movefm	obj, menu
000136:0x0005b5a0:	call	CallQueue.Call(obj, _s'Refresh', _c0)
000137:0x0005b5b0:	imove	ret, 0x000001
000137:0x0005b5c0:	release	menu
000137:0x0005b5c8:	rts
000137:0x0005b5d0:	release	menu
000139:0x0005b5d8:	imove	ret, 0x000000
000139:0x0005b5e8:	rts
000139:0x0005b5f0:	rts
ContextMenu::Add()
000145:0x0005b688:	call	ContextMenu.Count()
000145:0x0005b690:	move	count, ret
000146:0x0005b6a0:	addi	@m01, count, _i1
000146:0x0005b6b0:	move	@m00, @m01
000146:0x0005b6c0:	icall	ToString(@m00)
000146:0x0005b6c8:	adds	@s01, _s'Button', ret
000146:0x0005b6d8:	moves	@s00, @s01
000146:0x0005b6e8:	call	String(@s00)
000146:0x0005b6f8:	movefm	[0x11cf2b58], m_context_menu_root_widget
000146:0x0005b708:	ncalli	Widget.FindAnyWidget(ret)
000146:0x0005b710:	movetm	menu_button, ret
000147:0x0005b720:	cmpcm	menu_button, NULL
000147:0x0005b730:	beq	0x05b790
000149:0x0005b738:	icall	ToUpper(label)
000150:0x0005b740:	ncalli	ButtonWidget.SetText(label)
000151:0x0005b748:	ncalli	ButtonWidget.Show(true)
000153:0x0005b750:	ncall	Length(label)
000153:0x0005b758:	move	item_width, ret
000154:0x0005b768:	cmpi	m_max_item_width, item_width
000154:0x0005b778:	bge	0x05b790
000156:0x0005b780:	move	m_max_item_width, item_width
000159:0x0005b790:	addi	@m00, m_count, _i1
000159:0x0005b7a0:	move	m_count, @m00
000161:0x0005b7b0:	new	@c00, CallQueueContext
000161:0x0005b7d8:	movefm	[0x3cd386b8], m_commands
000161:0x0005b7e8:	icall	array<CallQueueContext>.Insert(@c00)
000161:0x0005b7f0:	release	menu_button
000161:0x0005b7f8:	rts
ContextMenu::Remove()
000167:0x0005b820:	movefm	[0x3cd386b8], m_commands
000167:0x0005b830:	ncalli	array<CallQueueContext>.Count()
000167:0x0005b838:	cmpi	index, ret
000167:0x0005b848:	bge	0x05b920
000169:0x0005b850:	movefm	[0x3cd386b8], m_commands
000169:0x0005b860:	ncalli	array<CallQueueContext>.RemoveOrdered(index)
000170:0x0005b868:	addi	@m01, index, _i1
000170:0x0005b878:	move	@m00, @m01
000170:0x0005b888:	icall	ToString(@m00)
000170:0x0005b890:	adds	@s01, _s'Button', ret
000170:0x0005b8a0:	moves	@s00, @s01
000170:0x0005b8b0:	call	String(@s00)
000170:0x0005b8c0:	movefm	[0x11cf2b58], m_context_menu_root_widget
000170:0x0005b8d0:	ncalli	Widget.FindAnyWidget(ret)
000170:0x0005b8d8:	movetm	menu_button, ret
000171:0x0005b8e8:	ncalli	ButtonWidget.Show(false)
000172:0x0005b8f0:	ncalli	ButtonWidget.SetText(_s'')
000173:0x0005b8f8:	subi	@m00, m_count, _i1
000173:0x0005b908:	move	m_count, @m00
000173:0x0005b918:	release	menu_button
000173:0x0005b920:	rts
ContextMenu::Count()
000180:0x0005b928:	movefm	[0x3cd386b8], m_commands
000180:0x0005b938:	ncalli	array<CallQueueContext>.Count()
000180:0x0005b940:	move	ret, ret
000180:0x0005b950:	rts
000180:0x0005b958:	rts
ContextMenu::Clear()
000187:0x0005b9c0:	imove	i, 0x000000
000187:0x0005b9d0:	jump	0x05b9e0
000187:0x0005b9d8:	inc	i
000187:0x0005b9e0:	movefm	[0x3cd386b8], m_commands
000187:0x0005b9f0:	ncalli	array<CallQueueContext>.Count()
000187:0x0005b9f8:	cmpi	i, ret
000187:0x0005ba08:	bge	0x05ba48
000189:0x0005ba10:	movefm	[0x3cd386b8], m_commands
000189:0x0005ba20:	icall	array<CallQueueContext>.Get(i)
000189:0x0005ba28:	movec	ctx, ret
000190:0x0005ba38:	delete	ctx
000190:0x0005ba40:	jump	0x05b9d8
000192:0x0005ba48:	movefm	[0x3cd386b8], m_commands
000192:0x0005ba58:	ncalli	array<CallQueueContext>.Clear()
000194:0x0005ba60:	imove	i, 0x000000
000194:0x0005ba70:	jump	0x05ba80
000194:0x0005ba78:	inc	i
000194:0x0005ba80:	cmpi	i, ITEMS_COUNT
000194:0x0005ba90:	bge	0x05bb38
000196:0x0005ba98:	addi	@m01, i, _i1
000196:0x0005baa8:	move	@m00, @m01
000196:0x0005bab8:	icall	ToString(@m00)
000196:0x0005bac0:	adds	@s01, _s'Button', ret
000196:0x0005bad0:	moves	@s00, @s01
000196:0x0005bae0:	call	String(@s00)
000196:0x0005baf0:	movefm	[0x11cf2b58], m_context_menu_root_widget
000196:0x0005bb00:	ncalli	Widget.FindAnyWidget(ret)
000196:0x0005bb08:	movetm	menu_button, ret
000197:0x0005bb18:	ncalli	ButtonWidget.Show(false)
000198:0x0005bb20:	ncalli	ButtonWidget.SetText(_s'')
000198:0x0005bb28:	release	menu_button
000198:0x0005bb30:	jump	0x05ba78
000200:0x0005bb38:	imove	m_count, 0x000000
000201:0x0005bb48:	imove	m_max_item_width, 0x000000
000201:0x0005bb58:	rts
Bouncer::Bouncer()
//scripts/3_Game/GUI/Effects/Bouncer.c
000015:0x0005bb80:	movec	target, this
000015:0x0005bb90:	new	@c00, AnimatorTimer
000015:0x0005bbb8:	movec	m_anim, @c00
000015:0x0005bbc8:	rts
Bouncer::Update()
000021:0x0005bbf0:	cmpcm	m_root, NULL
000021:0x0005bc00:	beq	0x05bcd0
000023:0x0005bc08:	movec	[0x3cd16878], m_anim
000023:0x0005bc18:	call	AnimatorTimer.GetValue()
000023:0x0005bc20:	mulf	p, amount, ret
000024:0x0005bc30:	mulf	@f02, m_orginal_width, p
000024:0x0005bc40:	move	@f01, @f02
000024:0x0005bc50:	addf	@f01, m_orginal_width, @f01
000024:0x0005bc60:	move	@f00, @f01
000024:0x0005bc70:	mulf	@f03, m_orginal_height, p
000024:0x0005bc80:	move	@f02, @f03
000024:0x0005bc90:	subf	@f02, m_orginal_height, @f02
000024:0x0005bca0:	move	@f01, @f02
000024:0x0005bcb0:	movefm	[0x11cf2b58], m_root
000024:0x0005bcc0:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000024:0x0005bcd0:	rts
Bouncer::OnWidgetScriptInit()
000031:0x0005bcd8:	movem	m_root, w
000032:0x0005bce8:	movefm	[0x11cf2b58], m_root
000032:0x0005bcf8:	icall	Widget.GetSize(m_orginal_width, m_orginal_height)
000033:0x0005bd00:	move	speed, speed
000033:0x0005bd10:	movec	[0x3cd16878], m_anim
000033:0x0005bd20:	call	AnimatorTimer.AnimateLoop(speed)
000033:0x0005bd30:	rts
HoverEffect::HoverEffect()
//scripts/3_Game/GUI/Effects/HoverEffect.c
000013:0x0005bd38:	movec	target, this
000013:0x0005bd48:	new	@c00, AnimatorTimer
000013:0x0005bd70:	movec	m_anim, @c00
000013:0x0005bd80:	rts
HoverEffect::OnWidgetScriptInit()
000019:0x0005bd88:	movem	m_root, w
000020:0x0005bd98:	movec	[0x11d0f728], this
000020:0x0005bda8:	movefm	[0x11cf2b58], m_root
000020:0x0005bdb8:	ncalli	Widget.SetHandler([0x11d0f728])
000020:0x0005bdc0:	rts
HoverEffect::Update()
000026:0x0005be08:	movec	[0x3cd16878], m_anim
000026:0x0005be18:	call	AnimatorTimer.GetValue()
000026:0x0005be20:	mulf	p, amount, ret
000027:0x0005be30:	mulf	@f02, m_orginal_width, p
000027:0x0005be40:	move	@f01, @f02
000027:0x0005be50:	addf	@f01, m_orginal_width, @f01
000027:0x0005be60:	move	@f00, @f01
000027:0x0005be70:	mulf	@f03, m_orginal_height, p
000027:0x0005be80:	move	@f02, @f03
000027:0x0005be90:	addf	@f02, m_orginal_height, @f02
000027:0x0005bea0:	move	@f01, @f02
000027:0x0005beb0:	movefm	[0x11cf2b58], m_root
000027:0x0005bec0:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000029:0x0005bed0:	movec	[0x3cd16878], m_anim
000029:0x0005bee0:	call	AnimatorTimer.GetValue()
000029:0x0005bee8:	mulf	@f02, _f0.500000, ret
000029:0x0005bef8:	move	@f00, @f02
000029:0x0005bf08:	subf	c, _f1.000000, @f00
000030:0x0005bf18:	call	ARGBF(_f1.000000, _f1.000000, c, c)
000030:0x0005bf28:	movefm	[0x11cf2b58], m_root
000030:0x0005bf38:	ncalli	Widget.SetColor(ret)
000030:0x0005bf40:	rts
HoverEffect::OnMouseEnter()
000036:0x0005bf48:	movec	[0x3cd16878], m_anim
000036:0x0005bf58:	call	AnimatorTimer.IsRunning()
000036:0x0005bf60:	cmpi	ret, _i0
000036:0x0005bf70:	bne	0x05bf90
000036:0x0005bf78:	movefm	[0x11cf2b58], m_root
000036:0x0005bf88:	icall	Widget.GetSize(m_orginal_width, m_orginal_height)
000037:0x0005bf90:	move	speed, speed
000037:0x0005bfa0:	movec	[0x3cd16878], m_anim
000037:0x0005bfb0:	call	AnimatorTimer.Animate(_f1.000000, speed)
000037:0x0005bfc0:	rts
HoverEffect::OnMouseLeave()
000043:0x0005bfe8:	move	speed, speed
000043:0x0005bff8:	movec	[0x3cd16878], m_anim
000043:0x0005c008:	call	AnimatorTimer.Animate(_f0.000000, speed)
000043:0x0005c018:	rts
MainMenuButtonEffect::MainMenuButtonEffect()
//scripts/3_Game/GUI/Effects/MainMenuButtonEffect.c
000013:0x0005c020:	movec	target, this
000013:0x0005c030:	new	@c00, AnimatorTimer
000013:0x0005c058:	movec	m_anim, @c00
000013:0x0005c068:	rts
MainMenuButtonEffect::OnWidgetScriptInit()
000019:0x0005c070:	movem	m_root, w
000020:0x0005c080:	movec	[0x11d0f728], this
000020:0x0005c090:	movefm	[0x11d09c98], m_root
000020:0x0005c0a0:	ncalli	ButtonWidget.SetHandler([0x11d0f728])
000020:0x0005c0a8:	rts
MainMenuButtonEffect::Update()
000026:0x0005c110:	movec	[0x3cd16878], m_anim
000026:0x0005c120:	call	AnimatorTimer.GetValue()
000026:0x0005c128:	mulf	p, amount, ret
000028:0x0005c138:	mulf	@f01, p, _f4.000000
000028:0x0005c148:	move	@f00, @f01
000028:0x0005c158:	movefm	[0x11d09c98], m_root
000028:0x0005c168:	ncalli	ButtonWidget.SetTextOffset(@f00, _f0.000000)
000030:0x0005c170:	movec	[0x3cd16878], m_anim
000030:0x0005c180:	call	AnimatorTimer.GetValue()
000030:0x0005c188:	subf	c, _f1.000000, ret
000031:0x0005c198:	call	ARGBF(_f1.000000, _f1.000000, c, c)
000031:0x0005c1a8:	movefm	[0x11d09c98], m_root
000031:0x0005c1b8:	ncalli	ButtonWidget.SetTextColor(ret)
000031:0x0005c1c0:	rts
MainMenuButtonEffect::OnFocus()
000038:0x0005c1c8:	movec	[0x3cd16878], m_anim
000038:0x0005c1d8:	call	AnimatorTimer.IsRunning()
000038:0x0005c1e0:	cmpi	ret, _i0
000038:0x0005c1f0:	bne	0x05c210
000040:0x0005c1f8:	movefm	[0x11d09c98], m_root
000040:0x0005c208:	icall	ButtonWidget.GetPos(m_textProportion, m_textProportion2)
000042:0x0005c210:	move	speed, speed
000042:0x0005c220:	movec	[0x3cd16878], m_anim
000042:0x0005c230:	call	AnimatorTimer.Animate(_f1.000000, speed)
000042:0x0005c240:	rts
MainMenuButtonEffect::OnFocusLost()
000048:0x0005c248:	move	speed, speed
000048:0x0005c258:	movec	[0x3cd16878], m_anim
000048:0x0005c268:	call	AnimatorTimer.Animate(_f0.000000, speed)
000048:0x0005c278:	rts
Rotator::Rotator()
//scripts/3_Game/GUI/Effects/Rotator.c
000012:0x0005c280:	movec	target, this
000012:0x0005c290:	new	@c00, AnimatorTimer
000012:0x0005c2b8:	movec	m_anim, @c00
000012:0x0005c2c8:	rts
Rotator::Update()
000018:0x0005c2d0:	cmpcm	m_root, NULL
000018:0x0005c2e0:	beq	0x05c340
000020:0x0005c2e8:	movec	[0x3cd16878], m_anim
000020:0x0005c2f8:	call	AnimatorTimer.GetTargetValue()
000020:0x0005c300:	mulf	@f03, ret, RAD2DEG
000020:0x0005c310:	move	@f00, @f03
000020:0x0005c320:	movefm	[0x11cf2b58], m_root
000020:0x0005c330:	ncalli	Widget.SetRotation(_f0.000000, _f0.000000, @f00, _i1)
000020:0x0005c340:	rts
Rotator::OnWidgetScriptInit()
000027:0x0005c348:	movem	m_root, w
000028:0x0005c358:	move	speed, speed
000028:0x0005c368:	movec	[0x3cd16878], m_anim
000028:0x0005c378:	call	AnimatorTimer.AnimateLoop(speed)
000028:0x0005c388:	rts
InventoryGridController::GetItemColor()
//scripts/3_Game/GUI/InventoryGrid.c
000020:0x0005c390:	imove	ret, 0x000000
000020:0x0005c3a0:	rts
000020:0x0005c3a8:	rts
InventoryGridController::GetItemSize()
000025:0x0005c3b0:	ncall	Vector(_f0.000000, _f1.000000, _f1.000000)
000025:0x0005c3c0:	movev	ret, ret
000025:0x0005c3d0:	rts
000025:0x0005c3d8:	rts
InventoryGrid::InventoryGrid()
000070:0x0005c3e0:	new	@c00, map<InventoryItem,vector>
000070:0x0005c400:	movetm	m_items, @c00
000070:0x0005c410:	rts
InventoryGrid::OnWidgetScriptInit()
000075:0x0005c498:	movem	m_root, w
000076:0x0005c4a8:	imove	m_count, 0x000000
000078:0x0005c4b8:	movefm	[0x11cf2b58], m_root
000078:0x0005c4c8:	ncalli	Widget.GetChildren()
000078:0x0005c4d0:	movetm	child, ret
000079:0x0005c4e0:	cmpcm	child, NULL
000079:0x0005c4f0:	beq	0x05c548
000081:0x0005c4f8:	inc	m_count
000082:0x0005c500:	imove	@m01, 0x00003c
000082:0x0005c510:	move	@m00, @m01
000082:0x0005c520:	ncalli	Widget.SetFlags(@m00, false)
000083:0x0005c528:	ncalli	Widget.GetSibling()
000083:0x0005c530:	movetm	child, ret
000083:0x0005c540:	jump	0x05c4e0
000086:0x0005c548:	movec	[0x11d0f728], this
000086:0x0005c558:	movefm	[0x11cf2b58], m_root
000086:0x0005c568:	ncalli	Widget.SetHandler([0x11d0f728])
000086:0x0005c570:	release	child
000086:0x0005c578:	rts
InventoryGrid::ShowBackground()
000091:0x0005c5e0:	move	@m00, col
000091:0x0005c5f0:	addi	w, w, @m00
000092:0x0005c600:	move	@m00, row
000092:0x0005c610:	addi	h, h, @m00
000094:0x0005c620:	move	r, row
000094:0x0005c630:	jump	0x05c640
000094:0x0005c638:	inc	r
000094:0x0005c640:	cmpi	r, h
000094:0x0005c650:	bge	0x05c720
000096:0x0005c658:	move	c, col
000096:0x0005c668:	jump	0x05c678
000096:0x0005c670:	inc	c
000096:0x0005c678:	cmpi	c, w
000096:0x0005c688:	bge	0x05c718
000098:0x0005c690:	cmpi	r, row
000098:0x0005c6a0:	bne	0x05c6c8
000098:0x0005c6a8:	cmpi	c, col
000098:0x0005c6b8:	bne	0x05c6c8
000098:0x0005c6c0:	jump	0x05c670
000099:0x0005c6c8:	call	InventoryGrid.GetItemAt(r, c)
000099:0x0005c6d8:	movem	item_w, ret
000100:0x0005c6e8:	cmpcm	item_w, NULL
000100:0x0005c6f8:	beq	0x05c708
000100:0x0005c700:	ncalli	Widget.Show(visible)
000100:0x0005c708:	release	item_w
000100:0x0005c710:	jump	0x05c670
000100:0x0005c718:	jump	0x05c638
000100:0x0005c720:	rts
InventoryGrid::UpdateLayout()
000107:0x0005c838:	movefm	[0x11cf2b58], m_root
000107:0x0005c848:	icall	Widget.GetScreenPos(m_screen_x, m_screen_y)
000108:0x0005c850:	citf	@f04, ItemsHorizontal
000108:0x0005c860:	citf	@f05, ItemSizeWidth
000108:0x0005c870:	mulf	@f04, @f04, @f05
000108:0x0005c880:	move	@f03, @f04
000108:0x0005c890:	citf	@f04, Border
000108:0x0005c8a0:	addf	@f03, @f04, @f03
000108:0x0005c8b0:	move	@f02, @f03
000108:0x0005c8c0:	citf	@f05, ItemsHorizontal
000108:0x0005c8d0:	subf	@f05, @f05, _f1.000000
000108:0x0005c8e0:	move	@f04, @f05
000108:0x0005c8f0:	citf	@f05, Gap
000108:0x0005c900:	mulf	@f04, @f04, @f05
000108:0x0005c910:	move	@f03, @f04
000108:0x0005c920:	addf	@f02, @f02, @f03
000108:0x0005c930:	move	@f01, @f02
000108:0x0005c940:	citf	@f02, Border
000108:0x0005c950:	addf	@f01, @f01, @f02
000108:0x0005c960:	move	@f00, @f01
000108:0x0005c970:	citf	@f05, ItemsVertical
000108:0x0005c980:	citf	@f06, ItemSizeHeight
000108:0x0005c990:	mulf	@f05, @f05, @f06
000108:0x0005c9a0:	move	@f04, @f05
000108:0x0005c9b0:	citf	@f05, Border
000108:0x0005c9c0:	addf	@f04, @f05, @f04
000108:0x0005c9d0:	move	@f03, @f04
000108:0x0005c9e0:	citf	@f06, ItemsVertical
000108:0x0005c9f0:	subf	@f06, @f06, _f1.000000
000108:0x0005ca00:	move	@f05, @f06
000108:0x0005ca10:	citf	@f06, Gap
000108:0x0005ca20:	mulf	@f05, @f05, @f06
000108:0x0005ca30:	move	@f04, @f05
000108:0x0005ca40:	addf	@f03, @f03, @f04
000108:0x0005ca50:	move	@f02, @f03
000108:0x0005ca60:	citf	@f03, Border
000108:0x0005ca70:	addf	@f02, @f02, @f03
000108:0x0005ca80:	move	@f01, @f02
000108:0x0005ca90:	movefm	[0x11cf2b58], m_root
000108:0x0005caa0:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000110:0x0005cab0:	cmpi	m_count, _i0
000110:0x0005cac0:	bne	0x05cad0
000110:0x0005cac8:	rts
000112:0x0005cad0:	movefm	[0x11cf2b58], m_root
000112:0x0005cae0:	ncalli	Widget.GetChildren()
000112:0x0005cae8:	movetm	child, ret
000114:0x0005caf8:	imove	index, 0x000000
000115:0x0005cb08:	cmpcm	child, NULL
000115:0x0005cb18:	beq	0x05ccc8
000117:0x0005cb20:	modi	col, index, ItemsHorizontal
000118:0x0005cb30:	divi	row, index, ItemsHorizontal
000119:0x0005cb40:	citf	@f02, ItemSizeWidth
000119:0x0005cb50:	citf	@f03, Gap
000119:0x0005cb60:	addf	@f02, @f02, @f03
000119:0x0005cb70:	move	@f01, @f02
000119:0x0005cb80:	citf	@f02, col
000119:0x0005cb90:	mulf	@f01, @f02, @f01
000119:0x0005cba0:	move	@f00, @f01
000119:0x0005cbb0:	citf	@f01, Border
000119:0x0005cbc0:	addf	itemX, @f01, @f00
000120:0x0005cbd0:	citf	@f02, ItemSizeHeight
000120:0x0005cbe0:	citf	@f03, Gap
000120:0x0005cbf0:	addf	@f02, @f02, @f03
000120:0x0005cc00:	move	@f01, @f02
000120:0x0005cc10:	citf	@f02, row
000120:0x0005cc20:	mulf	@f01, @f02, @f01
000120:0x0005cc30:	move	@f00, @f01
000120:0x0005cc40:	citf	@f01, Border
000120:0x0005cc50:	addf	itemY, @f01, @f00
000122:0x0005cc60:	ncalli	Widget.SetPos(itemX, itemY, _i1)
000123:0x0005cc70:	citf	[0x11d0eed8], ItemSizeWidth
000123:0x0005cc80:	citf	[0x11d0eef8], ItemSizeHeight
000123:0x0005cc90:	ncalli	Widget.SetSize([0x11d0eed8], [0x11d0eef8], _i1)
000125:0x0005cca0:	inc	index
000126:0x0005cca8:	ncalli	Widget.GetSibling()
000126:0x0005ccb0:	movetm	child, ret
000126:0x0005ccc0:	jump	0x05cb08
000126:0x0005ccc8:	release	child
000126:0x0005ccd0:	rts
InventoryGrid::OnUpdate()
000133:0x0005ccd8:	movefm	[0x11cf2b58], m_root
000133:0x0005cce8:	icall	Widget.GetScreenPos(m_screen_x, m_screen_y)
000134:0x0005ccf0:	imove	ret, 0x000000
000134:0x0005cd00:	rts
000134:0x0005cd08:	rts
InventoryGrid::OnChildAdd()
000140:0x0005cd10:	cmpm	w, m_root
000140:0x0005cd20:	bne	0x05cd58
000142:0x0005cd28:	inc	m_count
000143:0x0005cd30:	imove	@m01, 0x00003c
000143:0x0005cd40:	move	@m00, @m01
000143:0x0005cd50:	ncalli	Widget.SetFlags(@m00, false)
000145:0x0005cd58:	imove	ret, 0x000000
000145:0x0005cd68:	rts
000145:0x0005cd70:	rts
InventoryGrid::OnChildRemove()
000151:0x0005cd78:	cmpm	w, m_root
000151:0x0005cd88:	bne	0x05cd98
000153:0x0005cd90:	dec	m_count
000155:0x0005cd98:	imove	ret, 0x000000
000155:0x0005cda8:	rts
000155:0x0005cdb0:	rts
InventoryGrid::OnMouseEnter()
000161:0x0005ce38:	citf	x, x
000161:0x0005ce48:	call	InventoryGrid.GetCol(x)
000161:0x0005ce58:	move	col, ret
000162:0x0005ce68:	citf	y, y
000162:0x0005ce78:	call	InventoryGrid.GetRow(y)
000162:0x0005ce88:	move	row, ret
000163:0x0005ce98:	call	InventoryGrid.IsValidPos(row, col)
000163:0x0005cea8:	cmpi	ret, _i0
000163:0x0005ceb8:	bne	0x05ced8
000163:0x0005cec0:	imove	ret, 0x000000
000163:0x0005ced0:	rts
000165:0x0005ced8:	cmpi	DebugOutput, _i0
000165:0x0005cee8:	beq	0x05cfc8
000167:0x0005cef0:	movefm	[0x11cf2b58], m_root
000167:0x0005cf00:	ncalli	Widget.GetName()
000167:0x0005cf08:	adds	@s06, ret, _s'::OnMouseEnter('
000167:0x0005cf18:	moves	@s04, @s06
000167:0x0005cf28:	icall	ToString(row)
000167:0x0005cf30:	adds	@s04, @s04, ret
000167:0x0005cf40:	moves	@s03, @s04
000167:0x0005cf50:	adds	@s03, @s03, _s','
000167:0x0005cf60:	moves	@s02, @s03
000167:0x0005cf70:	icall	ToString(col)
000167:0x0005cf78:	adds	@s02, @s02, ret
000167:0x0005cf88:	moves	@s01, @s02
000167:0x0005cf98:	adds	@s01, @s01, _s')'
000167:0x0005cfa8:	moves	@s00, @s01
000167:0x0005cfb8:	call	PrintString(@s00)
000170:0x0005cfc8:	cmpcm	m_controller, NULL
000170:0x0005cfd8:	beq	0x05d010
000170:0x0005cfe0:	movetm	grid, this
000170:0x0005cff0:	movefm	[0x3cd17728], m_controller
000170:0x0005d000:	call	InventoryGridController.OnItemEnter(grid, w, row, col)
000172:0x0005d010:	imove	ret, 0x000001
000172:0x0005d020:	rts
000172:0x0005d028:	rts
InventoryGrid::OnMouseLeave()
000178:0x0005d030:	cmpcm	m_controller, NULL
000178:0x0005d040:	beq	0x05d078
000178:0x0005d048:	movetm	grid, this
000178:0x0005d058:	movefm	[0x3cd17728], m_controller
000178:0x0005d068:	call	InventoryGridController.OnItemLeave(grid, w)
000180:0x0005d078:	imove	ret, 0x000001
000180:0x0005d088:	rts
000180:0x0005d090:	rts
InventoryGrid::OnMouseButtonDown()
000186:0x0005d120:	cmpi	button, _i1
000186:0x0005d130:	beq	0x05d150
000186:0x0005d138:	cmpi	button, _i0
000186:0x0005d148:	bne	0x05d360
000188:0x0005d150:	citf	x, x
000188:0x0005d160:	call	InventoryGrid.GetCol(x)
000188:0x0005d170:	move	col, ret
000189:0x0005d180:	citf	y, y
000189:0x0005d190:	call	InventoryGrid.GetRow(y)
000189:0x0005d1a0:	move	row, ret
000191:0x0005d1b0:	call	InventoryGrid.IsValidPos(row, col)
000191:0x0005d1c0:	cmpi	ret, _i0
000191:0x0005d1d0:	bne	0x05d1f0
000191:0x0005d1d8:	imove	ret, 0x000000
000191:0x0005d1e8:	rts
000193:0x0005d1f0:	cmpi	DebugOutput, _i0
000193:0x0005d200:	beq	0x05d2e0
000195:0x0005d208:	movefm	[0x11cf2b58], m_root
000195:0x0005d218:	ncalli	Widget.GetName()
000195:0x0005d220:	adds	@s06, ret, _s'::OnMouseButtonDown('
000195:0x0005d230:	moves	@s04, @s06
000195:0x0005d240:	icall	ToString(row)
000195:0x0005d248:	adds	@s04, @s04, ret
000195:0x0005d258:	moves	@s03, @s04
000195:0x0005d268:	adds	@s03, @s03, _s','
000195:0x0005d278:	moves	@s02, @s03
000195:0x0005d288:	icall	ToString(col)
000195:0x0005d290:	adds	@s02, @s02, ret
000195:0x0005d2a0:	moves	@s01, @s02
000195:0x0005d2b0:	adds	@s01, @s01, _s')'
000195:0x0005d2c0:	moves	@s00, @s01
000195:0x0005d2d0:	call	PrintString(@s00)
000198:0x0005d2e0:	cmpcm	m_controller, NULL
000198:0x0005d2f0:	beq	0x05d340
000200:0x0005d2f8:	cmpi	button, _i1
000200:0x0005d308:	bne	0x05d340
000202:0x0005d310:	movetm	grid, this
000202:0x0005d320:	movefm	[0x3cd17728], m_controller
000202:0x0005d330:	call	InventoryGridController.OnItemRightClick(grid, w, row, col)
000205:0x0005d340:	imove	ret, 0x000001
000205:0x0005d350:	rts
000205:0x0005d358:	jump	0x05d378
000209:0x0005d360:	imove	ret, 0x000000
000209:0x0005d370:	rts
000209:0x0005d378:	rts
InventoryGrid::OnMouseButtonUp()
000216:0x0005d3e0:	cmpi	button, _i1
000216:0x0005d3f0:	beq	0x05d410
000216:0x0005d3f8:	cmpi	button, _i0
000216:0x0005d408:	bne	0x05d620
000218:0x0005d410:	citf	x, x
000218:0x0005d420:	call	InventoryGrid.GetCol(x)
000218:0x0005d430:	move	col, ret
000219:0x0005d440:	citf	y, y
000219:0x0005d450:	call	InventoryGrid.GetRow(y)
000219:0x0005d460:	move	row, ret
000221:0x0005d470:	call	InventoryGrid.IsValidPos(row, col)
000221:0x0005d480:	cmpi	ret, _i0
000221:0x0005d490:	bne	0x05d4b0
000221:0x0005d498:	imove	ret, 0x000000
000221:0x0005d4a8:	rts
000223:0x0005d4b0:	cmpi	DebugOutput, _i0
000223:0x0005d4c0:	beq	0x05d5a0
000225:0x0005d4c8:	movefm	[0x11cf2b58], m_root
000225:0x0005d4d8:	ncalli	Widget.GetName()
000225:0x0005d4e0:	adds	@s06, ret, _s'::OnMouseButtonUp('
000225:0x0005d4f0:	moves	@s04, @s06
000225:0x0005d500:	icall	ToString(row)
000225:0x0005d508:	adds	@s04, @s04, ret
000225:0x0005d518:	moves	@s03, @s04
000225:0x0005d528:	adds	@s03, @s03, _s','
000225:0x0005d538:	moves	@s02, @s03
000225:0x0005d548:	icall	ToString(col)
000225:0x0005d550:	adds	@s02, @s02, ret
000225:0x0005d560:	moves	@s01, @s02
000225:0x0005d570:	adds	@s01, @s01, _s')'
000225:0x0005d580:	moves	@s00, @s01
000225:0x0005d590:	call	PrintString(@s00)
000228:0x0005d5a0:	cmpcm	m_controller, NULL
000228:0x0005d5b0:	beq	0x05d600
000230:0x0005d5b8:	cmpi	button, _i0
000230:0x0005d5c8:	bne	0x05d600
000232:0x0005d5d0:	movetm	grid, this
000232:0x0005d5e0:	movefm	[0x3cd17728], m_controller
000232:0x0005d5f0:	call	InventoryGridController.OnItemLeftClick(grid, w, row, col)
000235:0x0005d600:	imove	ret, 0x000001
000235:0x0005d610:	rts
000235:0x0005d618:	jump	0x05d638
000239:0x0005d620:	imove	ret, 0x000000
000239:0x0005d630:	rts
000239:0x0005d638:	rts
InventoryGrid::OnDoubleClick()
000246:0x0005d6a0:	cmpi	button, _i0
000246:0x0005d6b0:	beq	0x05d6d0
000246:0x0005d6b8:	imove	ret, 0x000000
000246:0x0005d6c8:	rts
000248:0x0005d6d0:	citf	x, x
000248:0x0005d6e0:	call	InventoryGrid.GetCol(x)
000248:0x0005d6f0:	move	col, ret
000249:0x0005d700:	citf	y, y
000249:0x0005d710:	call	InventoryGrid.GetRow(y)
000249:0x0005d720:	move	row, ret
000251:0x0005d730:	call	InventoryGrid.IsValidPos(row, col)
000251:0x0005d740:	cmpi	ret, _i0
000251:0x0005d750:	bne	0x05d770
000251:0x0005d758:	imove	ret, 0x000000
000251:0x0005d768:	rts
000253:0x0005d770:	cmpi	DebugOutput, _i0
000253:0x0005d780:	beq	0x05d860
000255:0x0005d788:	movefm	[0x11cf2b58], m_root
000255:0x0005d798:	ncalli	Widget.GetName()
000255:0x0005d7a0:	adds	@s06, ret, _s'::OnDoubleClick('
000255:0x0005d7b0:	moves	@s04, @s06
000255:0x0005d7c0:	icall	ToString(row)
000255:0x0005d7c8:	adds	@s04, @s04, ret
000255:0x0005d7d8:	moves	@s03, @s04
000255:0x0005d7e8:	adds	@s03, @s03, _s','
000255:0x0005d7f8:	moves	@s02, @s03
000255:0x0005d808:	icall	ToString(col)
000255:0x0005d810:	adds	@s02, @s02, ret
000255:0x0005d820:	moves	@s01, @s02
000255:0x0005d830:	adds	@s01, @s01, _s')'
000255:0x0005d840:	moves	@s00, @s01
000255:0x0005d850:	call	PrintString(@s00)
000258:0x0005d860:	cmpcm	m_controller, NULL
000258:0x0005d870:	beq	0x05d8a8
000258:0x0005d878:	movetm	grid, this
000258:0x0005d888:	movefm	[0x3cd17728], m_controller
000258:0x0005d898:	call	InventoryGridController.OnItemDoubleClick(grid, w, row, col)
000260:0x0005d8a8:	imove	ret, 0x000001
000260:0x0005d8b8:	rts
000260:0x0005d8c0:	rts
InventoryGrid::OnDrop()
000266:0x0005d958:	cmpi	DebugOutput, _i0
000266:0x0005d968:	beq	0x05d9b8
000268:0x0005d970:	movefm	[0x11cf2b58], m_root
000268:0x0005d980:	ncalli	Widget.GetName()
000268:0x0005d988:	adds	@s02, ret, _s'::OnDrop()'
000268:0x0005d998:	moves	@s00, @s02
000268:0x0005d9a8:	call	PrintString(@s00)
000271:0x0005d9b8:	cmpcm	m_controller, NULL
000271:0x0005d9c8:	beq	0x05da00
000271:0x0005d9d0:	movetm	grid, this
000271:0x0005d9e0:	movefm	[0x3cd17728], m_controller
000271:0x0005d9f0:	call	InventoryGridController.OnItemDrop(grid, w)
000273:0x0005da00:	call	InventoryGrid.IsIcon()
000273:0x0005da08:	cmpi	ret, _i0
000273:0x0005da18:	beq	0x05da68
000275:0x0005da20:	ncalli	Widget.FindAnyWidget(_s'Preview')
000275:0x0005da28:	movetm	item_preview, ret
000276:0x0005da38:	cmpcm	item_preview, NULL
000276:0x0005da48:	beq	0x05da60
000278:0x0005da50:	call	InventoryGrid.IsIcon()
000278:0x0005da58:	ncalli	ItemPreviewWidget.SetCloseup(ret)
000278:0x0005da60:	release	item_preview
000282:0x0005da68:	imove	ret, 0x000001
000282:0x0005da78:	rts
000282:0x0005da80:	rts
InventoryGrid::OnDrag()
000288:0x0005db08:	citf	x, x
000288:0x0005db18:	call	InventoryGrid.GetCol(x)
000288:0x0005db28:	move	col, ret
000289:0x0005db38:	citf	y, y
000289:0x0005db48:	call	InventoryGrid.GetRow(y)
000289:0x0005db58:	move	row, ret
000291:0x0005db68:	call	InventoryGrid.IsValidPos(row, col)
000291:0x0005db78:	cmpi	ret, _i0
000291:0x0005db88:	bne	0x05dba8
000291:0x0005db90:	imove	ret, 0x000000
000291:0x0005dba0:	rts
000293:0x0005dba8:	cmpi	DebugOutput, _i0
000293:0x0005dbb8:	beq	0x05dc98
000295:0x0005dbc0:	movefm	[0x11cf2b58], m_root
000295:0x0005dbd0:	ncalli	Widget.GetName()
000295:0x0005dbd8:	adds	@s06, ret, _s'::OnDrag('
000295:0x0005dbe8:	moves	@s04, @s06
000295:0x0005dbf8:	icall	ToString(row)
000295:0x0005dc00:	adds	@s04, @s04, ret
000295:0x0005dc10:	moves	@s03, @s04
000295:0x0005dc20:	adds	@s03, @s03, _s','
000295:0x0005dc30:	moves	@s02, @s03
000295:0x0005dc40:	icall	ToString(col)
000295:0x0005dc48:	adds	@s02, @s02, ret
000295:0x0005dc58:	moves	@s01, @s02
000295:0x0005dc68:	adds	@s01, @s01, _s')'
000295:0x0005dc78:	moves	@s00, @s01
000295:0x0005dc88:	call	PrintString(@s00)
000298:0x0005dc98:	cmpcm	m_controller, NULL
000298:0x0005dca8:	beq	0x05dce0
000298:0x0005dcb0:	movetm	grid, this
000298:0x0005dcc0:	movefm	[0x3cd17728], m_controller
000298:0x0005dcd0:	call	InventoryGridController.OnItemDrag(grid, w, row, col)
000300:0x0005dce0:	call	InventoryGrid.IsIcon()
000300:0x0005dce8:	cmpi	ret, _i0
000300:0x0005dcf8:	beq	0x05dd40
000302:0x0005dd00:	ncalli	Widget.FindAnyWidget(_s'Preview')
000302:0x0005dd08:	movetm	item_preview, ret
000303:0x0005dd18:	cmpcm	item_preview, NULL
000303:0x0005dd28:	beq	0x05dd38
000305:0x0005dd30:	ncalli	ItemPreviewWidget.SetCloseup(false)
000305:0x0005dd38:	release	item_preview
000308:0x0005dd40:	imove	ret, 0x000001
000308:0x0005dd50:	rts
000308:0x0005dd58:	rts
InventoryGrid::OnDraggingOver()
000315:0x0005ddc0:	citf	x, x
000315:0x0005ddd0:	call	InventoryGrid.GetCol(x)
000315:0x0005dde0:	move	col, ret
000316:0x0005ddf0:	citf	y, y
000316:0x0005de00:	call	InventoryGrid.GetRow(y)
000316:0x0005de10:	move	row, ret
000318:0x0005de20:	call	InventoryGrid.IsValidPos(row, col)
000318:0x0005de30:	cmpi	ret, _i0
000318:0x0005de40:	bne	0x05de60
000318:0x0005de48:	imove	ret, 0x000000
000318:0x0005de58:	rts
000320:0x0005de60:	cmpi	DebugOutput, _i0
000320:0x0005de70:	beq	0x05df50
000322:0x0005de78:	movefm	[0x11cf2b58], m_root
000322:0x0005de88:	ncalli	Widget.GetName()
000322:0x0005de90:	adds	@s06, ret, _s'::OnDraggingOver('
000322:0x0005dea0:	moves	@s04, @s06
000322:0x0005deb0:	icall	ToString(row)
000322:0x0005deb8:	adds	@s04, @s04, ret
000322:0x0005dec8:	moves	@s03, @s04
000322:0x0005ded8:	adds	@s03, @s03, _s','
000322:0x0005dee8:	moves	@s02, @s03
000322:0x0005def8:	icall	ToString(col)
000322:0x0005df00:	adds	@s02, @s02, ret
000322:0x0005df10:	moves	@s01, @s02
000322:0x0005df20:	adds	@s01, @s01, _s')'
000322:0x0005df30:	moves	@s00, @s01
000322:0x0005df40:	call	PrintString(@s00)
000325:0x0005df50:	cmpcm	m_controller, NULL
000325:0x0005df60:	beq	0x05df98
000325:0x0005df68:	movetm	grid, this
000325:0x0005df78:	movefm	[0x3cd17728], m_controller
000325:0x0005df88:	call	InventoryGridController.OnItemDraggingOver(grid, w, row, col)
000328:0x0005df98:	imove	ret, 0x000001
000328:0x0005dfa8:	rts
000328:0x0005dfb0:	rts
InventoryGrid::OnDropReceived()
000335:0x0005e018:	citf	x, x
000335:0x0005e028:	call	InventoryGrid.GetCol(x)
000335:0x0005e038:	move	col, ret
000336:0x0005e048:	citf	y, y
000336:0x0005e058:	call	InventoryGrid.GetRow(y)
000336:0x0005e068:	move	row, ret
000338:0x0005e078:	call	InventoryGrid.IsValidPos(row, col)
000338:0x0005e088:	cmpi	ret, _i0
000338:0x0005e098:	bne	0x05e0b8
000338:0x0005e0a0:	imove	ret, 0x000000
000338:0x0005e0b0:	rts
000340:0x0005e0b8:	cmpi	DebugOutput, _i0
000340:0x0005e0c8:	beq	0x05e1a8
000342:0x0005e0d0:	movefm	[0x11cf2b58], m_root
000342:0x0005e0e0:	ncalli	Widget.GetName()
000342:0x0005e0e8:	adds	@s06, ret, _s'::OnDropReceived('
000342:0x0005e0f8:	moves	@s04, @s06
000342:0x0005e108:	icall	ToString(row)
000342:0x0005e110:	adds	@s04, @s04, ret
000342:0x0005e120:	moves	@s03, @s04
000342:0x0005e130:	adds	@s03, @s03, _s','
000342:0x0005e140:	moves	@s02, @s03
000342:0x0005e150:	icall	ToString(col)
000342:0x0005e158:	adds	@s02, @s02, ret
000342:0x0005e168:	moves	@s01, @s02
000342:0x0005e178:	adds	@s01, @s01, _s')'
000342:0x0005e188:	moves	@s00, @s01
000342:0x0005e198:	call	PrintString(@s00)
000345:0x0005e1a8:	cmpcm	m_controller, NULL
000345:0x0005e1b8:	beq	0x05e1f0
000345:0x0005e1c0:	movetm	grid, this
000345:0x0005e1d0:	movefm	[0x3cd17728], m_controller
000345:0x0005e1e0:	call	InventoryGridController.OnItemDropReceived(grid, w, row, col)
000348:0x0005e1f0:	imove	ret, 0x000001
000348:0x0005e200:	rts
000348:0x0005e208:	rts
InventoryGrid::GetCol()
000356:0x0005e210:	subf	@f01, x, m_screen_x
000356:0x0005e220:	move	@f00, @f01
000356:0x0005e230:	citf	@f02, Border
000356:0x0005e240:	subf	@f00, @f00, @f02
000356:0x0005e250:	move	@f01, @f00
000356:0x0005e260:	addi	@m01, ItemSizeWidth, Gap
000356:0x0005e270:	move	@m00, @m01
000356:0x0005e280:	citf	@f02, @m00
000356:0x0005e290:	divf	@f00, @f01, @f02
000356:0x0005e2a0:	cfti	ret, @f00
000356:0x0005e2b0:	rts
000356:0x0005e2b8:	rts
InventoryGrid::GetRow()
000362:0x0005e2c0:	subf	@f01, y, m_screen_y
000362:0x0005e2d0:	move	@f00, @f01
000362:0x0005e2e0:	citf	@f02, Border
000362:0x0005e2f0:	subf	@f00, @f00, @f02
000362:0x0005e300:	move	@f01, @f00
000362:0x0005e310:	addi	@m01, ItemSizeHeight, Gap
000362:0x0005e320:	move	@m00, @m01
000362:0x0005e330:	citf	@f02, @m00
000362:0x0005e340:	divf	@f00, @f01, @f02
000362:0x0005e350:	cfti	ret, @f00
000362:0x0005e360:	rts
000362:0x0005e368:	rts
InventoryGrid::GetIndex()
000367:0x0005e370:	muli	@m01, row, ItemsHorizontal
000367:0x0005e380:	move	@m00, @m01
000367:0x0005e390:	addi	ret, @m00, col
000367:0x0005e3a0:	rts
000367:0x0005e3a8:	rts
InventoryGrid::GetItems()
000371:0x0005e3b0:	movem	ret, m_items
000371:0x0005e3c0:	rts
000371:0x0005e3c8:	rts
InventoryGrid::IsIcon()
000376:0x0005e3d0:	imove	ret, 0x000000
000376:0x0005e3e0:	rts
000376:0x0005e3e8:	rts
InventoryGrid::GetItemAt()
000381:0x0005e410:	call	InventoryGrid.GetIndex(row, col)
000381:0x0005e420:	move	index, ret
000383:0x0005e430:	call	InventoryGrid.GetItem(index)
000383:0x0005e440:	movem	ret, ret
000383:0x0005e450:	rts
000383:0x0005e458:	rts
InventoryGrid::IsValidPos()
000389:0x0005e460:	cmpi	row, ItemsVertical
000389:0x0005e470:	blt	0x05e490
000389:0x0005e478:	imove	ret, 0x000000
000389:0x0005e488:	rts
000390:0x0005e490:	cmpi	col, ItemsHorizontal
000390:0x0005e4a0:	blt	0x05e4c0
000390:0x0005e4a8:	imove	ret, 0x000000
000390:0x0005e4b8:	rts
000391:0x0005e4c0:	call	InventoryGrid.GetIndex(row, col)
000391:0x0005e4d0:	cmpi	ret, m_count
000391:0x0005e4e0:	blt	0x05e500
000391:0x0005e4e8:	imove	ret, 0x000000
000391:0x0005e4f8:	rts
000392:0x0005e500:	imove	ret, 0x000001
000392:0x0005e510:	rts
000392:0x0005e518:	rts
InventoryGrid::GetItem()
000398:0x0005e540:	movefm	[0x11cf2b58], m_root
000398:0x0005e550:	ncalli	Widget.GetChildren()
000398:0x0005e558:	movetm	child, ret
000399:0x0005e568:	cmpcm	child, NULL
000399:0x0005e578:	beq	0x05e5c0
000399:0x0005e580:	cmpi	index, _i0
000399:0x0005e590:	beq	0x05e5c0
000401:0x0005e598:	dec	index
000402:0x0005e5a0:	ncalli	Widget.GetSibling()
000402:0x0005e5a8:	movetm	child, ret
000402:0x0005e5b8:	jump	0x05e568
000405:0x0005e5c0:	movem	ret, child
000405:0x0005e5d0:	release	child
000405:0x0005e5d8:	rts
000405:0x0005e5e0:	release	child
000405:0x0005e5e8:	rts
InventoryGrid::GetItemBackground()
000411:0x0005e630:	call	InventoryGrid.GetItem(index)
000411:0x0005e640:	movem	w, ret
000413:0x0005e650:	cmpcm	w, NULL
000413:0x0005e660:	bne	0x05e688
000413:0x0005e668:	movetm	ret, NULL
000413:0x0005e678:	release	w
000413:0x0005e680:	rts
000415:0x0005e688:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000415:0x0005e690:	movetm	ret, ret
000415:0x0005e6a0:	release	w
000415:0x0005e6a8:	rts
000415:0x0005e6b0:	release	w
000415:0x0005e6b8:	rts
InventoryGrid::GetItemBackgroundAt()
000421:0x0005e6c0:	call	InventoryGrid.GetIndex(row, col)
000421:0x0005e6d0:	call	InventoryGrid.GetItemBackground(ret)
000421:0x0005e6e0:	movem	ret, ret
000421:0x0005e6f0:	rts
000421:0x0005e6f8:	rts
InventoryGrid::GetRoot()
000426:0x0005e700:	movem	ret, m_root
000426:0x0005e710:	rts
000426:0x0005e718:	rts
InventoryGrid::SetItemColor()
000431:0x0005e790:	movefm	@c00, item
000431:0x0005e7a0:	movefm	[0x3cd18618], m_items
000431:0x0005e7b0:	icall	map<InventoryItem,vector>.Contains(@c00)
000431:0x0005e7b8:	cmpi	ret, _i0
000431:0x0005e7c8:	beq	0x05e878
000433:0x0005e7d0:	movefm	@c00, item
000433:0x0005e7e0:	movefm	[0x3cd18618], m_items
000433:0x0005e7f0:	icall	map<InventoryItem,vector>.Get(@c00)
000433:0x0005e7f8:	movev	data, ret
000434:0x0005e808:	ifv	@f01, data[0x000000]
000434:0x0005e818:	ncall	Round(@f01)
000434:0x0005e820:	cfti	index, ret
000436:0x0005e830:	call	InventoryGrid.GetItemBackground(index)
000436:0x0005e840:	movem	w, ret
000437:0x0005e850:	cmpcm	w, NULL
000437:0x0005e860:	beq	0x05e870
000437:0x0005e868:	ncalli	Widget.SetColor(color)
000437:0x0005e870:	release	w
000437:0x0005e878:	rts
InventoryGrid::SetItemSize()
000443:0x0005e8f0:	movefm	@c00, item
000443:0x0005e900:	movefm	[0x3cd18618], m_items
000443:0x0005e910:	icall	map<InventoryItem,vector>.Contains(@c00)
000443:0x0005e918:	cmpi	ret, _i0
000443:0x0005e928:	beq	0x05ea00
000445:0x0005e930:	movefm	@c00, item
000445:0x0005e940:	movefm	[0x3cd18618], m_items
000445:0x0005e950:	icall	map<InventoryItem,vector>.Get(@c00)
000445:0x0005e958:	movev	data, ret
000446:0x0005e968:	ifv	@f01, data[0x000000]
000446:0x0005e978:	ncall	Round(@f01)
000446:0x0005e980:	cfti	index, ret
000448:0x0005e990:	call	InventoryGrid.GetItemBackground(index)
000448:0x0005e9a0:	movem	w, ret
000449:0x0005e9b0:	cmpcm	w, NULL
000449:0x0005e9c0:	beq	0x05e9f8
000449:0x0005e9c8:	citf	[0x11d0eed8], pixels_w
000449:0x0005e9d8:	citf	[0x11d0eef8], pixels_h
000449:0x0005e9e8:	ncalli	Widget.SetSize([0x11d0eed8], [0x11d0eef8], _i1)
000449:0x0005e9f8:	release	w
000449:0x0005ea00:	rts
InventoryGrid::SetController()
000454:0x0005ea08:	movem	m_controller, controller
000454:0x0005ea18:	rts
InventoryGrid::GetController()
000458:0x0005ea20:	movem	ret, m_controller
000458:0x0005ea30:	rts
000458:0x0005ea38:	rts
InventoryGrid::GenerateBackgroundTiles()
000464:0x0005eb40:	imove	i, 0x000000
000464:0x0005eb50:	jump	0x05eb60
000464:0x0005eb58:	inc	i
000464:0x0005eb60:	cmpi	i, count
000464:0x0005eb70:	bge	0x05ebe0
000466:0x0005eb78:	ncall	GetGame()
000466:0x0005eb80:	ncalli	CGame.GetWorkspace()
000466:0x0005eb88:	movefm	[0x11d18388], m_root
000466:0x0005eb98:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridBackground.layout', [0x11d18388])
000466:0x0005eba0:	movetm	root_widget, ret
000467:0x0005ebb0:	ncalli	Widget.FindAnyWidget(_s'Label')
000467:0x0005ebb8:	movetm	label_widget, ret
000467:0x0005ebc8:	release	root_widget
000467:0x0005ebd0:	release	label_widget
000467:0x0005ebd8:	jump	0x05eb58
000469:0x0005ebe0:	call	InventoryGrid.UpdateLayout()
000469:0x0005ebe8:	rts
InventoryGrid::GenerateQuickBarBackgroundTiles()
000475:0x0005ec50:	imove	i, 0x000000
000475:0x0005ec60:	jump	0x05ec70
000475:0x0005ec68:	inc	i
000475:0x0005ec70:	cmpi	i, count
000475:0x0005ec80:	bge	0x05ed28
000477:0x0005ec88:	ncall	GetGame()
000477:0x0005ec90:	ncalli	CGame.GetWorkspace()
000477:0x0005ec98:	movefm	[0x11d18388], m_root
000477:0x0005eca8:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridBackground.layout', [0x11d18388])
000477:0x0005ecb0:	movetm	root_widget, ret
000478:0x0005ecc0:	ncalli	Widget.FindAnyWidget(_s'Label')
000478:0x0005ecc8:	movetm	label_widget, ret
000479:0x0005ecd8:	addi	@m01, i, _i1
000479:0x0005ece8:	move	@m00, @m01
000479:0x0005ecf8:	icall	ToString(@m00)
000479:0x0005ed00:	ncalli	TextWidget.SetText(ret)
000480:0x0005ed08:	ncalli	TextWidget.Show(true)
000480:0x0005ed10:	release	root_widget
000480:0x0005ed18:	release	label_widget
000480:0x0005ed20:	jump	0x05ec68
000482:0x0005ed28:	call	InventoryGrid.UpdateLayout()
000482:0x0005ed30:	rts
InventoryGrid::UpdateQuickbarItems()
000502:0x0005ef40:	movefm	[0x3cd18618], m_items
000502:0x0005ef50:	ncalli	map<InventoryItem,vector>.Count()
000502:0x0005ef58:	move	c, ret
000503:0x0005ef68:	imove	i, 0x000000
000503:0x0005ef78:	jump	0x05ef88
000503:0x0005ef80:	inc	i
000503:0x0005ef88:	cmpi	i, c
000503:0x0005ef98:	bge	0x05f110
000505:0x0005efa0:	movefm	[0x3cd18618], m_items
000505:0x0005efb0:	icall	map<InventoryItem,vector>.GetKey(i)
000505:0x0005efb8:	movetm	item, ret
000507:0x0005efc8:	imove	remove_item, 0x000000
000509:0x0005efd8:	movefm	@c00, item
000509:0x0005efe8:	icall	map<InventoryItem,vector>.Contains(@c00)
000509:0x0005eff0:	cmpi	ret, false
000509:0x0005f000:	bne	0x05f020
000511:0x0005f008:	imove	remove_item, 0x000001
000511:0x0005f018:	jump	0x05f0d0
000516:0x0005f020:	movefm	@c00, item
000516:0x0005f030:	movefm	[0x3cd18618], m_items
000516:0x0005f040:	icall	map<InventoryItem,vector>.Get(@c00)
000516:0x0005f048:	movefm	@c01, item
000516:0x0005f058:	pushv	ret
000516:0x0005f060:	icall	map<InventoryItem,vector>.Get(@c01)
000516:0x0005f068:	movev	@v00, ret
000516:0x0005f078:	popv	ret
000516:0x0005f080:	subv	@v00, ret, @v00
000516:0x0005f090:	movev	@v01, @v00
000516:0x0005f0a0:	ncall	LengthSq(@v01)
000516:0x0005f0a8:	cmpf	ret, _f0.010000
000516:0x0005f0b8:	ble	0x05f0d0
000519:0x0005f0c0:	imove	remove_item, 0x000001
000523:0x0005f0d0:	cmpi	remove_item, _i0
000523:0x0005f0e0:	beq	0x05f108
000525:0x0005f0e8:	call	InventoryGrid.RemoveItem(item)
000526:0x0005f0f8:	dec	c
000527:0x0005f100:	dec	i
000527:0x0005f108:	jump	0x05ef80
000532:0x0005f110:	imove	i, 0x000000
000532:0x0005f120:	jump	0x05f130
000532:0x0005f128:	inc	i
000532:0x0005f130:	ncalli	map<InventoryItem,vector>.Count()
000532:0x0005f138:	cmpi	i, ret
000532:0x0005f148:	bge	0x05f1f8
000534:0x0005f150:	icall	map<InventoryItem,vector>.GetKey(i)
000534:0x0005f158:	movetm	item, ret
000535:0x0005f168:	movefm	@c00, item
000535:0x0005f178:	icall	map<InventoryItem,vector>.Get(@c00)
000535:0x0005f180:	movev	data, ret
000537:0x0005f190:	movefm	@c00, item
000537:0x0005f1a0:	movefm	[0x3cd18618], m_items
000537:0x0005f1b0:	icall	map<InventoryItem,vector>.Contains(@c00)
000537:0x0005f1b8:	cmpi	ret, false
000537:0x0005f1c8:	bne	0x05f1f0
000539:0x0005f1d0:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000539:0x0005f1e0:	call	InventoryGrid.AddItem(item, data, ret)
000539:0x0005f1f0:	jump	0x05f128
000544:0x0005f1f8:	imove	i, 0x000000
000544:0x0005f208:	jump	0x05f218
000544:0x0005f210:	inc	i
000544:0x0005f218:	ncalli	map<InventoryItem,vector>.Count()
000544:0x0005f220:	cmpi	i, ret
000544:0x0005f230:	bge	0x05f290
000546:0x0005f238:	icall	map<InventoryItem,vector>.GetKey(i)
000546:0x0005f240:	movetm	item, ret
000547:0x0005f250:	movefm	@c00, item
000547:0x0005f260:	icall	map<InventoryItem,vector>.Get(@c00)
000547:0x0005f268:	movev	data, ret
000548:0x0005f278:	call	InventoryGrid.RefreshQuickbarItemVariables(item, data)
000548:0x0005f288:	jump	0x05f210
000548:0x0005f290:	release	item
000548:0x0005f298:	release	bck
000548:0x0005f2a0:	release	item_w
000548:0x0005f2a8:	rts
InventoryGrid::UpdateItems()
000569:0x0005f440:	movefm	[0x3cd18618], m_items
000569:0x0005f450:	ncalli	map<InventoryItem,vector>.Count()
000569:0x0005f458:	move	c, ret
000570:0x0005f468:	imove	i, 0x000000
000570:0x0005f478:	jump	0x05f488
000570:0x0005f480:	inc	i
000570:0x0005f488:	cmpi	i, c
000570:0x0005f498:	bge	0x05f628
000572:0x0005f4a0:	movefm	[0x3cd18618], m_items
000572:0x0005f4b0:	icall	map<InventoryItem,vector>.GetKey(i)
000572:0x0005f4b8:	movetm	item, ret
000573:0x0005f4c8:	cmpcm	item, NULL
000573:0x0005f4d8:	beq	0x05f620
000575:0x0005f4e0:	imove	remove_item, 0x000000
000577:0x0005f4f0:	movefm	@c00, item
000577:0x0005f500:	icall	map<InventoryItem,vector>.Contains(@c00)
000577:0x0005f508:	cmpi	ret, false
000577:0x0005f518:	bne	0x05f538
000579:0x0005f520:	imove	remove_item, 0x000001
000579:0x0005f530:	jump	0x05f5e8
000584:0x0005f538:	movefm	@c00, item
000584:0x0005f548:	movefm	[0x3cd18618], m_items
000584:0x0005f558:	icall	map<InventoryItem,vector>.Get(@c00)
000584:0x0005f560:	movefm	@c01, item
000584:0x0005f570:	pushv	ret
000584:0x0005f578:	icall	map<InventoryItem,vector>.Get(@c01)
000584:0x0005f580:	movev	@v00, ret
000584:0x0005f590:	popv	ret
000584:0x0005f598:	subv	@v00, ret, @v00
000584:0x0005f5a8:	movev	@v01, @v00
000584:0x0005f5b8:	ncall	LengthSq(@v01)
000584:0x0005f5c0:	cmpf	ret, _f0.010000
000584:0x0005f5d0:	ble	0x05f5e8
000587:0x0005f5d8:	imove	remove_item, 0x000001
000591:0x0005f5e8:	cmpi	remove_item, _i0
000591:0x0005f5f8:	beq	0x05f620
000593:0x0005f600:	call	InventoryGrid.RemoveItem(item)
000594:0x0005f610:	dec	c
000595:0x0005f618:	dec	i
000595:0x0005f620:	jump	0x05f480
000601:0x0005f628:	imove	i, 0x000000
000601:0x0005f638:	jump	0x05f648
000601:0x0005f640:	inc	i
000601:0x0005f648:	ncalli	map<InventoryItem,vector>.Count()
000601:0x0005f650:	cmpi	i, ret
000601:0x0005f660:	bge	0x05f7a8
000603:0x0005f668:	icall	map<InventoryItem,vector>.GetKey(i)
000603:0x0005f670:	movetm	item, ret
000604:0x0005f680:	movefm	@c00, item
000604:0x0005f690:	icall	map<InventoryItem,vector>.Get(@c00)
000604:0x0005f698:	movev	data, ret
000606:0x0005f6a8:	movefm	@c00, item
000606:0x0005f6b8:	movefm	[0x3cd18618], m_items
000606:0x0005f6c8:	icall	map<InventoryItem,vector>.Contains(@c00)
000606:0x0005f6d0:	cmpi	ret, false
000606:0x0005f6e0:	bne	0x05f7a0
000608:0x0005f6e8:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000608:0x0005f6f8:	call	InventoryGrid.AddItem(item, data, ret)
000610:0x0005f708:	ifv	@f01, data[0x000000]
000610:0x0005f718:	ncall	Round(@f01)
000610:0x0005f720:	cfti	index, ret
000611:0x0005f730:	call	InventoryGrid.GetItem(index)
000611:0x0005f740:	movem	bck, ret
000612:0x0005f750:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000612:0x0005f758:	movetm	item_w, ret
000613:0x0005f768:	movetm	grid, this
000613:0x0005f778:	movefm	[0x3cd17728], m_controller
000613:0x0005f788:	call	InventoryGridController.GetItemColor(grid, item)
000613:0x0005f798:	ncalli	Widget.SetColor(ret)
000613:0x0005f7a0:	jump	0x05f640
000618:0x0005f7a8:	imove	i, 0x000000
000618:0x0005f7b8:	jump	0x05f7c8
000618:0x0005f7c0:	inc	i
000618:0x0005f7c8:	ncalli	map<InventoryItem,vector>.Count()
000618:0x0005f7d0:	cmpi	i, ret
000618:0x0005f7e0:	bge	0x05f840
000620:0x0005f7e8:	icall	map<InventoryItem,vector>.GetKey(i)
000620:0x0005f7f0:	movetm	item, ret
000621:0x0005f800:	movefm	@c00, item
000621:0x0005f810:	icall	map<InventoryItem,vector>.Get(@c00)
000621:0x0005f818:	movev	data, ret
000623:0x0005f828:	call	InventoryGrid.RefreshItemVariables(item, data, show_quantity, show_temperature)
000623:0x0005f838:	jump	0x05f7c0
000623:0x0005f840:	release	item
000623:0x0005f848:	release	bck
000623:0x0005f850:	release	item_w
000623:0x0005f858:	rts
InventoryGrid::UpdateQuantityItems()
000634:0x0005f8f0:	imove	i, 0x000000
000634:0x0005f900:	jump	0x05f910
000634:0x0005f908:	inc	i
000634:0x0005f910:	movefm	[0x3cd18618], m_items
000634:0x0005f920:	ncalli	map<InventoryItem,vector>.Count()
000634:0x0005f928:	cmpi	i, ret
000634:0x0005f938:	bge	0x05f9e0
000636:0x0005f940:	movefm	[0x3cd18618], m_items
000636:0x0005f950:	icall	map<InventoryItem,vector>.GetKey(i)
000636:0x0005f958:	movetm	item, ret
000637:0x0005f968:	movefm	@c00, item
000637:0x0005f978:	movefm	[0x3cd18618], m_items
000637:0x0005f988:	icall	map<InventoryItem,vector>.Get(@c00)
000637:0x0005f990:	movev	data, ret
000638:0x0005f9a0:	ifv	@f01, data[0x000000]
000638:0x0005f9b0:	ncall	Round(@f01)
000638:0x0005f9b8:	cfti	index, ret
000639:0x0005f9c8:	call	InventoryGrid.RefreshItemVariables(item, data, true, false)
000639:0x0005f9d8:	jump	0x05f908
000639:0x0005f9e0:	release	item
000639:0x0005f9e8:	rts
InventoryGrid::UpdateTemperatureItems()
000650:0x0005fa80:	imove	i, 0x000000
000650:0x0005fa90:	jump	0x05faa0
000650:0x0005fa98:	inc	i
000650:0x0005faa0:	movefm	[0x3cd18618], m_items
000650:0x0005fab0:	ncalli	map<InventoryItem,vector>.Count()
000650:0x0005fab8:	cmpi	i, ret
000650:0x0005fac8:	bge	0x05fb70
000652:0x0005fad0:	movefm	[0x3cd18618], m_items
000652:0x0005fae0:	icall	map<InventoryItem,vector>.GetKey(i)
000652:0x0005fae8:	movetm	item, ret
000653:0x0005faf8:	movefm	@c00, item
000653:0x0005fb08:	movefm	[0x3cd18618], m_items
000653:0x0005fb18:	icall	map<InventoryItem,vector>.Get(@c00)
000653:0x0005fb20:	movev	data, ret
000654:0x0005fb30:	ifv	@f01, data[0x000000]
000654:0x0005fb40:	ncall	Round(@f01)
000654:0x0005fb48:	cfti	index, ret
000655:0x0005fb58:	call	InventoryGrid.RefreshItemVariables(item, data, false, true)
000655:0x0005fb68:	jump	0x05fa98
000655:0x0005fb70:	release	item
000655:0x0005fb78:	rts
InventoryGrid::RefreshQuickbarItemVariables()
000662:0x0005fc00:	ifv	@f01, data[0x000000]
000662:0x0005fc10:	ncall	Round(@f01)
000662:0x0005fc18:	cfti	index, ret
000663:0x0005fc28:	call	InventoryGrid.GetItem(index)
000663:0x0005fc38:	movem	bck, ret
000665:0x0005fc48:	cmpcm	bck, NULL
000665:0x0005fc58:	beq	0x05fcd8
000667:0x0005fc60:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000667:0x0005fc68:	movetm	item_w, ret
000668:0x0005fc78:	cmpcm	item_w, NULL
000668:0x0005fc88:	beq	0x05fcd8
000670:0x0005fc90:	movetm	grid, this
000670:0x0005fca0:	movefm	[0x3cd17728], m_controller
000670:0x0005fcb0:	call	InventoryGridController.GetQuickbarItemColor(grid, item)
000670:0x0005fcc0:	move	color, ret
000671:0x0005fcd0:	ncalli	Widget.SetColor(color)
000674:0x0005fcd8:	call	InventoryGrid.RefreshItemVariables(item, data, true, false)
000674:0x0005fce8:	release	bck
000674:0x0005fcf0:	release	item_w
000674:0x0005fcf8:	rts
InventoryGrid::RefreshItemVariables()
000680:0x000600f8:	ifv	@f01, data[0x000000]
000680:0x00060108:	ncall	Round(@f01)
000680:0x00060110:	cfti	index, ret
000681:0x00060120:	call	InventoryGrid.GetItem(index)
000681:0x00060130:	movem	bck, ret
000684:0x00060140:	cmpcm	bck, NULL
000684:0x00060150:	beq	0x0604d0
000686:0x00060158:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000686:0x00060160:	movetm	item_w, ret
000687:0x00060170:	cmpcm	item_w, NULL
000687:0x00060180:	beq	0x0604d0
000691:0x00060188:	movefm	[0x3cd17728], m_controller
000691:0x00060198:	call	InventoryGridController.HasItemQuantity(item)
000691:0x000601a8:	move	has_quantity, ret
000692:0x000601b8:	ncalli	Widget.FindAnyWidget(_s'QuantityPanel')
000692:0x000601c0:	movetm	quantity_panel, ret
000693:0x000601d0:	ncalli	Widget.FindAnyWidget(_s'Quantity')
000693:0x000601d8:	movetm	item_quantity, ret
000694:0x000601e8:	ncalli	Widget.FindAnyWidget(_s'QuantityBar')
000694:0x000601f0:	movetm	quantity_progress, ret
000695:0x00060200:	ncalli	Widget.FindAnyWidget(_s'QuantityStackPanel')
000695:0x00060208:	movetm	quantity_stack, ret
000696:0x00060218:	cmpi	has_quantity, QUANTITY_HIDDEN
000696:0x00060228:	bne	0x060240
000698:0x00060230:	ncalli	Widget.Show(false)
000698:0x00060238:	jump	0x0603f0
000702:0x00060240:	ncalli	Widget.Show(true)
000703:0x00060248:	cmpi	has_quantity, QUANTITY_COUNT
000703:0x00060258:	bne	0x0602a0
000705:0x00060260:	movefm	[0x3cd17728], m_controller
000705:0x00060270:	call	InventoryGridController.GetItemQuantityText(item)
000705:0x00060280:	ncalli	TextWidget.SetText(ret)
000706:0x00060288:	ncalli	Widget.Show(true)
000707:0x00060290:	ncalli	ProgressBarWidget.Show(false)
000707:0x00060298:	jump	0x0603f0
000709:0x000602a0:	cmpi	has_quantity, QUANTITY_PROGRESS
000709:0x000602b0:	bne	0x0603f0
000713:0x000602b8:	ncalli	ProgressBarWidget.GetMax()
000713:0x000602c0:	move	progress_max, ret
000714:0x000602d0:	icall	InventoryItem.ConfigGetInt(_s'stackedMax')
000714:0x000602d8:	move	max, ret
000715:0x000602e8:	icall	InventoryItem.ConfigGetInt(_s'count')
000715:0x000602f0:	move	count, ret
000716:0x00060300:	movefm	[0x3cd17728], m_controller
000716:0x00060310:	call	InventoryGridController.GetItemQuantity(item)
000716:0x00060320:	move	quantity, ret
000721:0x00060330:	cmpi	count, _i0
000721:0x00060340:	ble	0x060358
000723:0x00060348:	move	max, count
000725:0x00060358:	cmpi	max, _i0
000725:0x00060368:	ble	0x0603e0
000728:0x00060370:	citf	@f03, max
000728:0x00060380:	divf	@f03, quantity, @f03
000728:0x00060390:	move	@f02, @f03
000728:0x000603a0:	mulf	@f02, @f02, _f100.000000
000728:0x000603b0:	move	@f01, @f02
000728:0x000603c0:	ncall	Round(@f01)
000728:0x000603c8:	move	value, ret
000730:0x000603d8:	ncalli	ProgressBarWidget.SetCurrent(value)
000732:0x000603e0:	ncalli	Widget.Show(false)
000733:0x000603e8:	ncalli	ProgressBarWidget.Show(true)
000737:0x000603f0:	cmpi	show_temperature, _i0
000737:0x00060400:	beq	0x0604b0
000739:0x00060408:	cmpcm	item, NULL
000739:0x00060418:	beq	0x0604b0
000739:0x00060420:	movefm	[0x11d0a2c8], item
000739:0x00060430:	ncall	IsInherited([0x11d0a2c8], _T(InventoryItem))
000739:0x00060438:	cmpi	ret, _i0
000739:0x00060448:	beq	0x0604b0
000741:0x00060450:	movetm	grid, this
000741:0x00060460:	movefm	[0x3cd17728], m_controller
000741:0x00060470:	call	InventoryGridController.GetItemColor(grid, item)
000741:0x00060480:	move	color, ret
000742:0x00060490:	cmpi	color, _i0
000742:0x000604a0:	beq	0x0604b0
000744:0x000604a8:	ncalli	Widget.SetColor(color)
000744:0x000604b0:	release	quantity_panel
000744:0x000604b8:	release	item_quantity
000744:0x000604c0:	release	quantity_progress
000744:0x000604c8:	release	quantity_stack
000744:0x000604d0:	release	bck
000744:0x000604d8:	release	item_w
000744:0x000604e0:	rts
InventoryGrid::SetQuantityPanelSize()
000755:0x000604e8:	move	m_quantity_panel_size, size
000755:0x000604f8:	rts
InventoryGrid::AddItem()
000761:0x000606f0:	movefm	@c00, item
000761:0x00060700:	movefm	[0x3cd18618], m_items
000761:0x00060710:	icall	map<InventoryItem,vector>.Set(@c00, data)
000763:0x00060718:	ifv	@f01, data[0x000000]
000763:0x00060728:	ncall	Round(@f01)
000763:0x00060730:	cfti	index, ret
000764:0x00060740:	ifv	@f01, data[0x000001]
000764:0x00060750:	ncall	Round(@f01)
000764:0x00060758:	cfti	width, ret
000765:0x00060768:	ifv	@f01, data[0x000002]
000765:0x00060778:	ncall	Round(@f01)
000765:0x00060780:	cfti	height, ret
000767:0x00060790:	modi	col, index, ItemsHorizontal
000768:0x000607a0:	divi	row, index, ItemsHorizontal
000769:0x000607b0:	call	InventoryGrid.ShowBackground(row, col, width, height, false)
000771:0x000607c8:	call	InventoryGrid.GetItem(index)
000771:0x000607d8:	movem	bck, ret
000772:0x000607e8:	ncall	GetGame()
000772:0x000607f0:	ncalli	CGame.GetWorkspace()
000772:0x000607f8:	movefm	[0x11d18388], bck
000772:0x00060808:	ncalli	WorkspaceWidget.CreateWidgets(_s'gui/layouts/inventory/inventoryGridItem.layout', [0x11d18388])
000772:0x00060810:	movetm	item_w_bck, ret
000773:0x00060820:	imove	@m02, 0x00000d
000773:0x00060830:	move	@m01, @m02
000773:0x00060840:	ori	@m01, @m01, _i48
000773:0x00060850:	move	@m00, @m01
000773:0x00060860:	ncalli	Widget.SetFlags(@m00, _i1)
000774:0x00060868:	ncalli	Widget.SetPos(_f0.000000, _f0.000000, _i1)
000775:0x00060878:	citf	@f02, ItemSizeWidth
000775:0x00060888:	citf	@f03, width
000775:0x00060898:	mulf	@f02, @f02, @f03
000775:0x000608a8:	move	@f01, @f02
000775:0x000608b8:	citf	@f04, width
000775:0x000608c8:	subf	@f04, @f04, _f1.000000
000775:0x000608d8:	move	@f03, @f04
000775:0x000608e8:	citf	@f04, Gap
000775:0x000608f8:	mulf	@f03, @f04, @f03
000775:0x00060908:	move	@f02, @f03
000775:0x00060918:	addf	@f01, @f01, @f02
000775:0x00060928:	move	@f00, @f01
000775:0x00060938:	citf	@f03, ItemSizeHeight
000775:0x00060948:	citf	@f04, height
000775:0x00060958:	mulf	@f03, @f03, @f04
000775:0x00060968:	move	@f02, @f03
000775:0x00060978:	citf	@f05, height
000775:0x00060988:	subf	@f05, @f05, _f1.000000
000775:0x00060998:	move	@f04, @f05
000775:0x000609a8:	citf	@f05, Gap
000775:0x000609b8:	mulf	@f04, @f05, @f04
000775:0x000609c8:	move	@f03, @f04
000775:0x000609d8:	addf	@f02, @f02, @f03
000775:0x000609e8:	move	@f01, @f02
000775:0x000609f8:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000777:0x00060a08:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000777:0x00060a10:	movetm	item_w, ret
000778:0x00060a20:	call	InventoryGrid.ResetItemWidget(item_w, width, height)
000780:0x00060a30:	ncalli	Widget.FindAnyWidget(_s'Preview')
000780:0x00060a38:	movetm	item_preview, ret
000781:0x00060a48:	movefm	[0x3cd324b0], item
000781:0x00060a58:	ncalli	ItemPreviewWidget.SetItem([0x3cd324b0])
000782:0x00060a60:	ncalli	ItemPreviewWidget.SetModelOrientation(rotation)
000783:0x00060a68:	call	InventoryGrid.IsIcon()
000783:0x00060a70:	ncalli	ItemPreviewWidget.SetCloseup(ret)
000785:0x00060a78:	ncalli	Widget.FindAnyWidget(_s'QuantityStackPanel')
000785:0x00060a80:	movetm	quantity_stack_panel, ret
000786:0x00060a90:	citf	[0x11d0eed8], m_quantity_panel_size
000786:0x00060aa0:	citf	[0x11d0eef8], m_quantity_panel_size
000786:0x00060ab0:	ncalli	Widget.SetSize([0x11d0eed8], [0x11d0eef8], _i1)
000788:0x00060ac0:	call	InventoryGrid.RefreshItemVariables(item, data, true, true)
000788:0x00060ad0:	release	bck
000788:0x00060ad8:	release	item_w_bck
000788:0x00060ae0:	release	item_w
000788:0x00060ae8:	release	item_preview
000788:0x00060af0:	release	quantity_stack_panel
000788:0x00060af8:	rts
InventoryGrid::ResetItemWidget()
000794:0x00060b30:	cmpcm	item_w, NULL
000794:0x00060b40:	bne	0x060b50
000794:0x00060b48:	rts
000795:0x00060b50:	citf	@f02, ItemSizeWidth
000795:0x00060b60:	citf	@f03, width
000795:0x00060b70:	mulf	@f02, @f02, @f03
000795:0x00060b80:	move	@f01, @f02
000795:0x00060b90:	citf	@f04, width
000795:0x00060ba0:	subf	@f04, @f04, _f1.000000
000795:0x00060bb0:	move	@f03, @f04
000795:0x00060bc0:	citf	@f04, Gap
000795:0x00060bd0:	mulf	@f03, @f04, @f03
000795:0x00060be0:	move	@f02, @f03
000795:0x00060bf0:	addf	@f01, @f01, @f02
000795:0x00060c00:	move	@f00, @f01
000795:0x00060c10:	citf	@f03, ItemSizeHeight
000795:0x00060c20:	citf	@f04, height
000795:0x00060c30:	mulf	@f03, @f03, @f04
000795:0x00060c40:	move	@f02, @f03
000795:0x00060c50:	citf	@f05, height
000795:0x00060c60:	subf	@f05, @f05, _f1.000000
000795:0x00060c70:	move	@f04, @f05
000795:0x00060c80:	citf	@f05, Gap
000795:0x00060c90:	mulf	@f04, @f05, @f04
000795:0x00060ca0:	move	@f03, @f04
000795:0x00060cb0:	addf	@f02, @f02, @f03
000795:0x00060cc0:	move	@f01, @f02
000795:0x00060cd0:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000796:0x00060ce0:	imove	@m02, 0x00000d
000796:0x00060cf0:	move	@m01, @m02
000796:0x00060d00:	ori	@m01, @m01, _i48
000796:0x00060d10:	move	@m02, @m01
000796:0x00060d20:	ori	@m01, @m02, _i524288
000796:0x00060d30:	move	@m00, @m01
000796:0x00060d40:	ncalli	Widget.SetFlags(@m00, _i1)
000797:0x00060d48:	ncalli	Widget.SetColor(ITEM_COLOR_NORMAL)
000797:0x00060d50:	rts
InventoryGrid::ResetItem()
000803:0x00060e28:	movefm	@c00, item
000803:0x00060e38:	movefm	[0x3cd18618], m_items
000803:0x00060e48:	icall	map<InventoryItem,vector>.Contains(@c00)
000803:0x00060e50:	cmpi	ret, _i0
000803:0x00060e60:	beq	0x060f80
000805:0x00060e68:	movefm	@c00, item
000805:0x00060e78:	movefm	[0x3cd18618], m_items
000805:0x00060e88:	icall	map<InventoryItem,vector>.Get(@c00)
000805:0x00060e90:	movev	data, ret
000806:0x00060ea0:	ifv	@f01, data[0x000000]
000806:0x00060eb0:	ncall	Round(@f01)
000806:0x00060eb8:	cfti	index, ret
000807:0x00060ec8:	ifv	@f01, data[0x000001]
000807:0x00060ed8:	ncall	Round(@f01)
000807:0x00060ee0:	cfti	width, ret
000808:0x00060ef0:	ifv	@f01, data[0x000002]
000808:0x00060f00:	ncall	Round(@f01)
000808:0x00060f08:	cfti	height, ret
000809:0x00060f18:	call	InventoryGrid.GetItem(index)
000809:0x00060f28:	movem	bck, ret
000810:0x00060f38:	ncalli	Widget.FindAnyWidget(_s'GridItem')
000810:0x00060f40:	movetm	item_w, ret
000811:0x00060f50:	call	InventoryGrid.ResetItemWidget(item_w, width, height)
000812:0x00060f60:	call	InventoryGrid.RefreshItemVariables(item, data, true, true)
000812:0x00060f70:	release	bck
000812:0x00060f78:	release	item_w
000812:0x00060f80:	rts
InventoryGrid::HasItem()
000819:0x00060f88:	movefm	@c00, item
000819:0x00060f98:	movefm	[0x3cd18618], m_items
000819:0x00060fa8:	icall	map<InventoryItem,vector>.Contains(@c00)
000819:0x00060fb0:	move	ret, ret
000819:0x00060fc0:	rts
000819:0x00060fc8:	rts
InventoryGrid::RemoveItem()
000825:0x00061128:	movefm	@c00, item
000825:0x00061138:	movefm	[0x3cd18618], m_items
000825:0x00061148:	icall	map<InventoryItem,vector>.Contains(@c00)
000825:0x00061150:	cmpi	ret, _i0
000825:0x00061160:	beq	0x0612e0
000827:0x00061168:	movefm	@c00, item
000827:0x00061178:	movefm	[0x3cd18618], m_items
000827:0x00061188:	icall	map<InventoryItem,vector>.Get(@c00)
000827:0x00061190:	movev	data, ret
000828:0x000611a0:	ifv	@f01, data[0x000000]
000828:0x000611b0:	ncall	Round(@f01)
000828:0x000611b8:	cfti	index, ret
000829:0x000611c8:	ifv	@f01, data[0x000001]
000829:0x000611d8:	ncall	Round(@f01)
000829:0x000611e0:	cfti	width, ret
000830:0x000611f0:	ifv	@f01, data[0x000002]
000830:0x00061200:	ncall	Round(@f01)
000830:0x00061208:	cfti	height, ret
000831:0x00061218:	call	InventoryGrid.GetItem(index)
000831:0x00061228:	movem	bck, ret
000832:0x00061238:	ncalli	Widget.FindAnyWidget(_s'GridItemBck')
000832:0x00061240:	movetm	itemW, ret
000833:0x00061250:	cmpcm	itemW, NULL
000833:0x00061260:	beq	0x061270
000835:0x00061268:	ncalli	Widget.Destroy()
000838:0x00061270:	movefm	@c00, item
000838:0x00061280:	movefm	[0x3cd18618], m_items
000838:0x00061290:	icall	map<InventoryItem,vector>.Remove(@c00)
000839:0x00061298:	modi	col, index, ItemsHorizontal
000840:0x000612a8:	divi	row, index, ItemsHorizontal
000842:0x000612b8:	call	InventoryGrid.ShowBackground(row, col, width, height, true)
000842:0x000612d0:	release	bck
000842:0x000612d8:	release	itemW
000842:0x000612e0:	rts
InventoryGrid::SetGridSize()
000849:0x000612e8:	move	ItemsHorizontal, items_horizontal
000850:0x000612f8:	move	ItemsVertical, items_vertical
000850:0x00061308:	rts
InventoryGrid::SetGridItemsSize()
000855:0x00061310:	move	ItemSizeWidth, item_size_width
000856:0x00061320:	move	ItemSizeHeight, item_size_height
000856:0x00061330:	rts
InventoryGrid::GetGridItemsHeight()
000862:0x00061338:	move	ret, ItemSizeHeight
000862:0x00061348:	rts
000862:0x00061350:	rts
InventoryGrid::SetGridGapSize()
000868:0x00061358:	move	Gap, gap_size
000868:0x00061368:	rts
InventoryGridIcon::ResetItemWidget()
000878:0x00061370:	cmpcm	item_w, NULL
000878:0x00061380:	bne	0x061390
000878:0x00061388:	rts
000879:0x00061390:	citf	@f02, ItemSizeWidth
000879:0x000613a0:	citf	@f03, width
000879:0x000613b0:	mulf	@f02, @f02, @f03
000879:0x000613c0:	move	@f01, @f02
000879:0x000613d0:	citf	@f04, width
000879:0x000613e0:	subf	@f04, @f04, _f1.000000
000879:0x000613f0:	move	@f03, @f04
000879:0x00061400:	citf	@f04, Gap
000879:0x00061410:	mulf	@f03, @f04, @f03
000879:0x00061420:	move	@f02, @f03
000879:0x00061430:	addf	@f01, @f01, @f02
000879:0x00061440:	move	@f00, @f01
000879:0x00061450:	citf	@f03, ItemSizeHeight
000879:0x00061460:	citf	@f04, height
000879:0x00061470:	mulf	@f03, @f03, @f04
000879:0x00061480:	move	@f02, @f03
000879:0x00061490:	citf	@f05, height
000879:0x000614a0:	subf	@f05, @f05, _f1.000000
000879:0x000614b0:	move	@f04, @f05
000879:0x000614c0:	citf	@f05, Gap
000879:0x000614d0:	mulf	@f04, @f05, @f04
000879:0x000614e0:	move	@f03, @f04
000879:0x000614f0:	addf	@f02, @f02, @f03
000879:0x00061500:	move	@f01, @f02
000879:0x00061510:	ncalli	Widget.SetSize(@f00, @f01, _i1)
000880:0x00061520:	imove	@m02, 0x00000d
000880:0x00061530:	move	@m01, @m02
000880:0x00061540:	ori	@m01, @m01, _i48
000880:0x00061550:	move	@m02, @m01
000880:0x00061560:	ori	@m01, @m02, _i524288
000880:0x00061570:	move	@m00, @m01
000880:0x00061580:	ncalli	Widget.SetFlags(@m00, _i1)
000881:0x00061588:	ncalli	Widget.SetColor(ITEM_COLOR_TRANSPARENT)
000881:0x00061590:	rts
InventoryGridIcon::IsIcon()
000886:0x00061598:	imove	ret, 0x000001
000886:0x000615a8:	rts
000886:0x000615b0:	rts
AutoHeightSpacer::Update()
//scripts/3_Game/GUI/Spacers/AutoHeightSpacer.c
000012:0x00061800:	imove	x, 0.00000
000013:0x00061810:	imove	y, 0.00000
000014:0x00061820:	imove	width, 0.00000
000015:0x00061830:	imove	height, 0.00000
000016:0x00061840:	imove	heightOld, 0.00000
000017:0x00061850:	imove	top, 0.00000
000021:0x00061860:	movefm	[0x11cf2b58], m_root
000021:0x00061870:	ncalli	Widget.GetChildren()
000021:0x00061878:	movetm	child, ret
000025:0x00061888:	cmpi	AlignChilds, _i0
000025:0x00061898:	bne	0x0618b0
000025:0x000618a0:	imove	top, -100000.00000
000027:0x000618b0:	cmpcm	child, NULL
000027:0x000618c0:	beq	0x061b98
000030:0x000618c8:	movefm	[0x11cf2b58], m_root
000030:0x000618d8:	icall	Widget.GetScreenSize(rowWidth, height)
000031:0x000618e0:	imove	rowHeight, 0.00000
000032:0x000618f0:	move	rowRight, rowWidth
000034:0x00061900:	cmpcm	child, NULL
000034:0x00061910:	beq	0x061b10
000036:0x00061918:	ncalli	Widget.IsVisible()
000036:0x00061920:	cmpi	ret, false
000036:0x00061930:	bne	0x061958
000039:0x00061938:	ncalli	Widget.GetSibling()
000039:0x00061940:	movetm	child, ret
000040:0x00061950:	jump	0x061900
000043:0x00061958:	icall	Widget.GetScreenSize(width, height)
000045:0x00061960:	cmpi	AlignChilds, _i0
000045:0x00061970:	beq	0x061aa0
000047:0x00061978:	ncalli	Widget.SetFlags(_i12, false)
000050:0x00061980:	cmpf	rowRight, width
000050:0x00061990:	bge	0x061a10
000052:0x00061998:	move	@f00, rowHeight
000052:0x000619a8:	addf	top, top, @f00
000053:0x000619b8:	cmpf	rowHeight, _f0.000000
000053:0x000619c8:	ble	0x0619f0
000053:0x000619d0:	citf	@f00, Gap
000053:0x000619e0:	addf	top, top, @f00
000054:0x000619f0:	move	rowRight, rowWidth
000055:0x00061a00:	imove	rowHeight, 0.00000
000059:0x00061a10:	cmpf	height, rowHeight
000059:0x00061a20:	ble	0x061a38
000059:0x00061a28:	move	rowHeight, height
000061:0x00061a38:	subf	@f01, rowWidth, rowRight
000061:0x00061a48:	move	@f00, @f01
000061:0x00061a58:	ncalli	Widget.SetPos(@f00, top, false)
000062:0x00061a68:	citf	@f01, Gap
000062:0x00061a78:	addf	@f00, width, @f01
000062:0x00061a88:	subf	rowRight, rowRight, @f00
000062:0x00061a98:	jump	0x061af0
000066:0x00061aa0:	icall	Widget.GetScreenPos(x, y)
000067:0x00061aa8:	move	@f00, height
000067:0x00061ab8:	addf	y, y, @f00
000068:0x00061ac8:	cmpf	top, y
000068:0x00061ad8:	bge	0x061af0
000068:0x00061ae0:	move	top, y
000071:0x00061af0:	ncalli	Widget.GetSibling()
000071:0x00061af8:	movetm	child, ret
000071:0x00061b08:	jump	0x061900
000075:0x00061b10:	move	@f00, rowHeight
000075:0x00061b20:	addf	top, top, @f00
000077:0x00061b30:	cmpi	AlignChilds, _i0
000077:0x00061b40:	beq	0x061b60
000079:0x00061b48:	move	height, top
000079:0x00061b58:	jump	0x061b98
000083:0x00061b60:	movefm	[0x11cf2b58], m_root
000083:0x00061b70:	icall	Widget.GetScreenPos(x, y)
000084:0x00061b78:	subf	@f00, top, y
000084:0x00061b88:	move	height, @f00
000088:0x00061b98:	movefm	[0x11cf2b58], m_root
000088:0x00061ba8:	icall	Widget.GetSize(width, heightOld)
000090:0x00061bb0:	cmpi	MaxHeight, _i0
000090:0x00061bc0:	ble	0x061c00
000090:0x00061bc8:	citf	@f00, MaxHeight
000090:0x00061bd8:	cmpf	height, @f00
000090:0x00061be8:	ble	0x061c00
000092:0x00061bf0:	citf	height, MaxHeight
000095:0x00061c00:	cfti	@m00, height
000095:0x00061c10:	cmpi	MinHeight, @m00
000095:0x00061c20:	ble	0x061c38
000097:0x00061c28:	citf	height, MinHeight
000100:0x00061c38:	cfti	@m01, heightOld
000100:0x00061c48:	cfti	@m02, height
000100:0x00061c58:	subi	@m01, @m01, @m02
000100:0x00061c68:	move	@m00, @m01
000100:0x00061c78:	ncall	AbsInt(@m00)
000100:0x00061c80:	cmpi	ret, _i1
000100:0x00061c90:	ble	0x061cc0
000102:0x00061c98:	movefm	[0x11cf2b58], m_root
000102:0x00061ca8:	ncalli	Widget.SetSize(width, height, true)
000102:0x00061cb8:	jump	0x061cf0
000104:0x00061cc0:	cmpi	AlignChilds, _i0
000104:0x00061cd0:	beq	0x061cf0
000106:0x00061cd8:	movefm	[0x11cf2b58], m_root
000106:0x00061ce8:	ncalli	Widget.Update()
000109:0x00061cf0:	release	child
000109:0x00061cf8:	rts
000109:0x00061d00:	release	child
000109:0x00061d08:	rts
AutoHeightSpacer::OnWidgetScriptInit()
000114:0x00061d10:	movem	m_root, w
000115:0x00061d20:	movec	[0x11d0f728], this
000115:0x00061d30:	movefm	[0x11cf2b58], m_root
000115:0x00061d40:	ncalli	Widget.SetHandler([0x11d0f728])
000116:0x00061d48:	movefm	[0x11cf2b58], m_root
000116:0x00061d58:	ncalli	Widget.SetFlags(_i8, _i1)
000117:0x00061d60:	call	AutoHeightSpacer.Update()
000117:0x00061d68:	rts
AutoHeightSpacer::OnChildAdd()
000121:0x00061d70:	cmpm	w, m_root
000121:0x00061d80:	bne	0x061d90
000123:0x00061d88:	call	AutoHeightSpacer.Update()
000125:0x00061d90:	imove	ret, 0x000000
000125:0x00061da0:	rts
000125:0x00061da8:	rts
AutoHeightSpacer::OnChildRemove()
000128:0x00061db0:	cmpm	w, m_root
000128:0x00061dc0:	bne	0x061dd0
000130:0x00061dc8:	call	AutoHeightSpacer.Update()
000133:0x00061dd0:	imove	ret, 0x000000
000133:0x00061de0:	rts
000133:0x00061de8:	rts
AutoHeightSpacer::OnResize()
000136:0x00061df0:	ncalli	Widget.GetParent()
000136:0x00061df8:	cmpmc	ret, m_root
000136:0x00061e08:	bne	0x061e18
000138:0x00061e10:	call	AutoHeightSpacer.Update()
000140:0x00061e18:	imove	ret, 0x000000
000140:0x00061e28:	rts
000140:0x00061e30:	rts
HorizontalSpacer::UpdateChild()
//scripts/3_Game/GUI/Spacers/HorizontalSpacer.c
000009:0x00061ef8:	citf	@f03, border
000009:0x00061f08:	mulf	@f03, @f03, _f2.000000
000009:0x00061f18:	move	@f02, @f03
000009:0x00061f28:	subf	@f02, w, @f02
000009:0x00061f38:	move	@f01, @f02
000009:0x00061f48:	citf	@f04, m_count
000009:0x00061f58:	subf	@f04, @f04, _f1.000000
000009:0x00061f68:	move	@f03, @f04
000009:0x00061f78:	citf	@f04, gap
000009:0x00061f88:	mulf	@f03, @f03, @f04
000009:0x00061f98:	move	@f02, @f03
000009:0x00061fa8:	subf	@f01, @f01, @f02
000009:0x00061fb8:	move	@f00, @f01
000009:0x00061fc8:	citf	@f01, m_count
000009:0x00061fd8:	divf	itemWidth, @f00, @f01
000010:0x00061fe8:	citf	@f01, border
000010:0x00061ff8:	mulf	@f01, _f2.000000, @f01
000010:0x00062008:	move	@f00, @f01
000010:0x00062018:	subf	itemHeight, h, @f00
000012:0x00062028:	citf	@f03, gap
000012:0x00062038:	addf	@f03, itemWidth, @f03
000012:0x00062048:	move	@f02, @f03
000012:0x00062058:	citf	@f03, index
000012:0x00062068:	mulf	@f02, @f02, @f03
000012:0x00062078:	move	@f01, @f02
000012:0x00062088:	citf	@f02, border
000012:0x00062098:	addf	@f01, @f02, @f01
000012:0x000620a8:	move	@f00, @f01
000012:0x000620b8:	citf	[0x11d0ee70], border
000012:0x000620c8:	ncalli	Widget.SetPos(@f00, [0x11d0ee70], _i1)
000013:0x000620d8:	ncalli	Widget.SetSize(itemWidth, itemHeight, _i1)
000013:0x000620e8:	rts
SpacerBase::OnWidgetScriptInit()
//scripts/3_Game/GUI/Spacers/SpacerBase.c
000010:0x00062110:	movem	m_root, w
000011:0x00062120:	imove	m_count, 0x000000
000013:0x00062130:	movefm	[0x11cf2b58], m_root
000013:0x00062140:	ncalli	Widget.GetChildren()
000013:0x00062148:	movetm	child, ret
000014:0x00062158:	cmpcm	child, NULL
000014:0x00062168:	beq	0x0621c0
000016:0x00062170:	inc	m_count
000017:0x00062178:	imove	@m01, 0x00003c
000017:0x00062188:	move	@m00, @m01
000017:0x00062198:	ncalli	Widget.SetFlags(@m00, false)
000018:0x000621a0:	ncalli	Widget.GetSibling()
000018:0x000621a8:	movetm	child, ret
000018:0x000621b8:	jump	0x062158
000021:0x000621c0:	movec	[0x11d0f728], this
000021:0x000621d0:	movefm	[0x11cf2b58], m_root
000021:0x000621e0:	ncalli	Widget.SetHandler([0x11d0f728])
000021:0x000621e8:	release	child
000021:0x000621f0:	rts
SpacerBase::OnUpdate()
000027:0x000621f8:	cmpm	w, m_root
000027:0x00062208:	bne	0x062218
000027:0x00062210:	call	SpacerBase.UpdateLayout()
000028:0x00062218:	imove	ret, 0x000000
000028:0x00062228:	rts
000028:0x00062230:	rts
SpacerBase::OnChildAdd()
000034:0x00062238:	inc	m_count
000035:0x00062240:	imove	@m01, 0x00003c
000035:0x00062250:	move	@m00, @m01
000035:0x00062260:	ncalli	Widget.SetFlags(@m00, false)
000036:0x00062268:	imove	ret, 0x000000
000036:0x00062278:	rts
000036:0x00062280:	rts
SpacerBase::OnChildRemove()
000042:0x00062288:	dec	m_count
000043:0x00062290:	imove	ret, 0x000000
000043:0x000622a0:	rts
000043:0x000622a8:	rts
SpacerBase::GetChildIndex()
000049:0x000622f0:	movefm	[0x11cf2b58], m_root
000049:0x00062300:	ncalli	Widget.GetChildren()
000049:0x00062308:	movetm	child, ret
000051:0x00062318:	imove	index, 0x000000
000052:0x00062328:	cmpcm	child, NULL
000052:0x00062338:	beq	0x0623a0
000054:0x00062340:	cmpm	child, w
000054:0x00062350:	bne	0x062378
000054:0x00062358:	move	ret, index
000054:0x00062368:	release	child
000054:0x00062370:	rts
000056:0x00062378:	inc	index
000057:0x00062380:	ncalli	Widget.GetSibling()
000057:0x00062388:	movetm	child, ret
000057:0x00062398:	jump	0x062328
000060:0x000623a0:	imove	ret, 0xffffffff
000060:0x000623b0:	release	child
000060:0x000623b8:	rts
000060:0x000623c0:	release	child
000060:0x000623c8:	rts
SpacerBase::UpdateLayout()
000066:0x00062450:	cmpi	m_count, _i0
000066:0x00062460:	bne	0x062470
000066:0x00062468:	rts
000070:0x00062470:	movefm	[0x11cf2b58], m_root
000070:0x00062480:	icall	Widget.GetScreenSize(width, height)
000072:0x00062488:	movefm	[0x11cf2b58], m_root
000072:0x00062498:	ncalli	Widget.GetChildren()
000072:0x000624a0:	movetm	child, ret
000074:0x000624b0:	imove	index, 0x000000
000075:0x000624c0:	cmpcm	child, NULL
000075:0x000624d0:	beq	0x062510
000077:0x000624d8:	call	SpacerBase.UpdateChild(child, width, height, index)
000078:0x000624e8:	inc	index
000079:0x000624f0:	ncalli	Widget.GetSibling()
000079:0x000624f8:	movetm	child, ret
000079:0x00062508:	jump	0x0624c0
000079:0x00062510:	release	child
000079:0x00062518:	rts
VerticalSpacer::UpdateChild()
//scripts/3_Game/GUI/Spacers/VerticalSpacer.c
000009:0x00062560:	citf	@f01, border
000009:0x00062570:	mulf	@f01, _f2.000000, @f01
000009:0x00062580:	move	@f00, @f01
000009:0x00062590:	subf	itemWidth, w, @f00
000010:0x000625a0:	citf	@f03, border
000010:0x000625b0:	mulf	@f03, @f03, _f2.000000
000010:0x000625c0:	move	@f02, @f03
000010:0x000625d0:	subf	@f02, h, @f02
000010:0x000625e0:	move	@f01, @f02
000010:0x000625f0:	citf	@f04, m_count
000010:0x00062600:	subf	@f04, @f04, _f1.000000
000010:0x00062610:	move	@f03, @f04
000010:0x00062620:	citf	@f04, gap
000010:0x00062630:	mulf	@f03, @f03, @f04
000010:0x00062640:	move	@f02, @f03
000010:0x00062650:	subf	@f01, @f01, @f02
000010:0x00062660:	move	@f00, @f01
000010:0x00062670:	citf	@f01, m_count
000010:0x00062680:	divf	itemHeight, @f00, @f01
000012:0x00062690:	citf	[0x11d0ee50], border
000012:0x000626a0:	citf	@f03, gap
000012:0x000626b0:	addf	@f03, itemHeight, @f03
000012:0x000626c0:	move	@f02, @f03
000012:0x000626d0:	citf	@f03, index
000012:0x000626e0:	mulf	@f02, @f02, @f03
000012:0x000626f0:	move	@f01, @f02
000012:0x00062700:	citf	@f02, border
000012:0x00062710:	addf	@f01, @f02, @f01
000012:0x00062720:	move	@f00, @f01
000012:0x00062730:	ncalli	Widget.SetPos([0x11d0ee50], @f00, _i1)
000013:0x00062740:	ncalli	Widget.SetSize(itemWidth, itemHeight, _i1)
000013:0x00062750:	rts
Tabber::OnWidgetScriptInit()
//scripts/3_Game/GUI/Tabber.c
000011:0x00062758:	movec	[0x11d0f728], this
000011:0x00062768:	ncalli	Widget.SetHandler([0x11d0f728])
000012:0x00062770:	move	index, SelectedTab
000012:0x00062780:	call	Tabber.SelectTab(index)
000012:0x00062790:	rts
Tabber::OnClick()
000018:0x000627e0:	cmpcm	w, NULL
000018:0x000627f0:	beq	0x0628d8
000018:0x000627f8:	ncalli	Widget.GetParent()
000018:0x00062800:	cmpmc	ret, ButtonsPanel
000018:0x00062810:	bne	0x0628d8
000020:0x00062818:	imove	SelectedTab, 0x000000
000021:0x00062828:	movefm	[0x11cf2b58], ButtonsPanel
000021:0x00062838:	ncalli	Widget.GetChildren()
000021:0x00062840:	movetm	iw, ret
000022:0x00062850:	cmpcm	iw, NULL
000022:0x00062860:	beq	0x0628b0
000024:0x00062868:	cmpm	iw, w
000024:0x00062878:	bne	0x062888
000024:0x00062880:	jump	0x0628b0
000025:0x00062888:	inc	SelectedTab
000026:0x00062890:	ncalli	Widget.GetSibling()
000026:0x00062898:	movetm	iw, ret
000026:0x000628a8:	jump	0x062850
000029:0x000628b0:	move	index, SelectedTab
000029:0x000628c0:	call	Tabber.SelectTab(index)
000029:0x000628d0:	release	iw
000029:0x000628d8:	rts
Tabber::SelectTab()
000036:0x00062948:	icall	Print(index)
000037:0x00062950:	imove	n, 0x000000
000038:0x00062960:	movefm	[0x11cf2b58], ContentPanel
000038:0x00062970:	ncalli	Widget.GetChildren()
000038:0x00062978:	movetm	w, ret
000039:0x00062988:	cmpcm	w, NULL
000039:0x00062998:	beq	0x0629f8
000041:0x000629a0:	cmpi	n, index
000041:0x000629b0:	bne	0x0629c8
000043:0x000629b8:	ncalli	Widget.Show(true)
000043:0x000629c0:	jump	0x0629d0
000047:0x000629c8:	ncalli	Widget.Show(false)
000049:0x000629d0:	inc	n
000050:0x000629d8:	ncalli	Widget.GetSibling()
000050:0x000629e0:	movetm	w, ret
000050:0x000629f0:	jump	0x062988
000050:0x000629f8:	release	w
000050:0x00062a00:	rts
HumanCommandActionCallback::GetStateString()
//scripts/3_Game/human.c
000104:0x00062b48:	ncalli	HumanCommandActionCallback.GetState()
000104:0x00062b50:	move	state, ret
000105:0x00062b60:	imove	@m00, 0x000000
000105:0x00062b70:	cmpi	@m00, state
000105:0x00062b80:	bne	0x062ba8
000107:0x00062b88:	moves	ret, _s'NONE'
000107:0x00062b98:	rts
000107:0x00062ba0:	jump	0x062bd0
000107:0x00062ba8:	imove	@m00, 0x000001
000107:0x00062bb8:	cmpi	@m00, state
000107:0x00062bc8:	bne	0x062bf0
000109:0x00062bd0:	moves	ret, _s'LOOP_IN'
000109:0x00062be0:	rts
000109:0x00062be8:	jump	0x062c18
000109:0x00062bf0:	imove	@m00, 0x000002
000109:0x00062c00:	cmpi	@m00, state
000109:0x00062c10:	bne	0x062c38
000110:0x00062c18:	moves	ret, _s'LOOP_LOOP'
000110:0x00062c28:	rts
000110:0x00062c30:	jump	0x062c60
000110:0x00062c38:	imove	@m00, 0x000003
000110:0x00062c48:	cmpi	@m00, state
000110:0x00062c58:	bne	0x062c80
000111:0x00062c60:	moves	ret, _s'LOOP_END'
000111:0x00062c70:	rts
000111:0x00062c78:	jump	0x062ca8
000111:0x00062c80:	imove	@m00, 0x000004
000111:0x00062c90:	cmpi	@m00, state
000111:0x00062ca0:	bne	0x062cc8
000112:0x00062ca8:	moves	ret, _s'LOOP_END2'
000112:0x00062cb8:	rts
000112:0x00062cc0:	jump	0x062cf0
000112:0x00062cc8:	imove	@m00, 0x000005
000112:0x00062cd8:	cmpi	@m00, state
000112:0x00062ce8:	bne	0x062d10
000113:0x00062cf0:	moves	ret, _s'LOOP_LOOP2'
000113:0x00062d00:	rts
000113:0x00062d08:	jump	0x062d38
000113:0x00062d10:	imove	@m00, 0x000006
000113:0x00062d20:	cmpi	@m00, state
000113:0x00062d30:	bne	0x062d58
000114:0x00062d38:	moves	ret, _s'LOOP_ACTION'
000114:0x00062d48:	rts
000114:0x00062d50:	jump	0x062d80
000114:0x00062d58:	imove	@m00, 0x000007
000114:0x00062d68:	cmpi	@m00, state
000114:0x00062d78:	bne	0x062d98
000117:0x00062d80:	moves	ret, _s'ONE TIME'
000117:0x00062d90:	rts
000120:0x00062d98:	moves	ret, _s'Undef'
000120:0x00062da8:	rts
000120:0x00062db0:	rts
HumanCommandActionCallback::IsUserActionCallback()
000143:0x00062db8:	imove	ret, 0x000000
000143:0x00062dc8:	rts
000143:0x00062dd0:	rts
HumanCommandActionCallback::IsSymptomCallback()
000148:0x00062dd8:	imove	ret, 0x000000
000148:0x00062de8:	rts
000148:0x00062df0:	rts
DayZPlayerCamera::DayZPlayerCamera()
//scripts/3_Game/humandzplayer.c
000039:0x00062df8:	movem	m_pPlayer, pPlayer
000040:0x00062e08:	movec	m_pInput, pInput
000040:0x00062e18:	rts
DayZPlayerCamera::GetBaseAngles()
000059:0x00062e50:	movev	ret, _v<0.000000,0.000000,0.000000>
000059:0x00062e60:	rts
000059:0x00062e68:	rts
DayZPlayer::IsPlayerInStance()
000405:0x00062eb0:	new	@c00, HumanMovementState
000405:0x00062ed0:	movec	state, @c00
000406:0x00062ee0:	ncalli	DayZPlayer.GetMovementState(state)
000407:0x00062ee8:	lsli	@m01, _i1, m_iStanceIdx
000407:0x00062ef8:	move	@m00, @m01
000407:0x00062f08:	andi	@m00, @m00, pStanceMask
000407:0x00062f18:	move	@m01, @m00
000407:0x00062f28:	cmpi	@m01, _i0
000407:0x00062f38:	beq	0x062f58
000407:0x00062f40:	imove	ret, 0x000001
000407:0x00062f50:	jump	0x062f68
000407:0x00062f58:	imove	ret, 0x000000
000408:0x00062f68:	delete	state
000409:0x00062f70:	move	ret, ret
000409:0x00062f80:	rts
000409:0x00062f88:	rts
Particle::~Particle()
//scripts/3_Game/Particle.c
000007:0x00062f90:	cmpc	g_Game, NULL
000007:0x00062fa0:	beq	0x062fb0
000009:0x00062fa8:	call	Particle.Stop()
000009:0x00062fb0:	rts
Particle::Create()
000027:0x00063038:	ncalli	Object.GetPosition()
000027:0x00063040:	movev	global_pos, ret
000028:0x00063050:	call	Create#25292(source, global_pos)
000028:0x00063060:	movem	new_particle, ret
000029:0x00063070:	call	Particle.AddAsChild(parent_obj, local_pos, local_ori)
000031:0x00063080:	movem	ret, new_particle
000031:0x00063090:	release	new_particle
000031:0x00063098:	rts
000031:0x000630a0:	release	new_particle
000031:0x000630a8:	rts
Particle::Create#25292()
000042:0x000630f0:	ncall	GetGame()
000042:0x000630f8:	ncalli	CGame.CreateObject(_s'Particle', global_pos, false, _i0)
000042:0x00063108:	movetm	p, ret
000043:0x00063118:	call	Particle.SetSource(source)
000045:0x00063128:	movem	ret, p
000045:0x00063138:	release	p
000045:0x00063140:	rts
000045:0x00063148:	release	p
000045:0x00063150:	rts
Particle::Play()
000065:0x00063178:	call	Create(source, parent_obj, local_pos, local_ori)
000065:0x00063188:	movem	p, ret
000066:0x00063198:	call	Particle.Play#25406(_s'')
000068:0x000631a8:	movem	ret, p
000068:0x000631b8:	release	p
000068:0x000631c0:	rts
000068:0x000631c8:	release	p
000068:0x000631d0:	rts
Particle::Play#25375()
000079:0x000631f8:	call	Create#25292(source, global_pos)
000079:0x00063208:	movem	p, ret
000080:0x00063218:	call	Particle.Play#25406(_s'')
000082:0x00063228:	movem	ret, p
000082:0x00063238:	release	p
000082:0x00063240:	rts
000082:0x00063248:	release	p
000082:0x00063250:	rts
Particle::Play#25406()
000088:0x00063258:	cmps	source, _s''
000088:0x00063268:	beq	0x063280
000090:0x00063270:	moves	m_SyncSourcePath, source
000093:0x00063280:	imove	m_SyncIsPlaying, 0x000001
000095:0x00063290:	call	Particle.Synch()
000095:0x00063298:	rts
Particle::Stop()
000101:0x000632a0:	imove	m_SyncIsPlaying, 0x000000
000102:0x000632b0:	call	Particle.Synch()
000102:0x000632b8:	rts
Particle::AddAsChild()
000113:0x000632c0:	cmpcm	parent, NULL
000113:0x000632d0:	beq	0x063318
000115:0x000632d8:	ncalli	Particle.SetPosition(local_pos)
000116:0x000632e0:	ncalli	Particle.SetOrientation(local_ori)
000117:0x000632e8:	movem	m_ParentObject, parent
000118:0x000632f8:	movec	[0x11d12520], this
000118:0x00063308:	ncalli	Object.AddChild([0x11d12520], _i-1)
000118:0x00063310:	jump	0x063398
000122:0x00063318:	cmpcm	m_ParentObject, NULL
000122:0x00063328:	beq	0x063398
000124:0x00063330:	movec	[0x11d12560], this
000124:0x00063340:	movefm	[0x3cd16560], m_ParentObject
000124:0x00063350:	ncalli	Object.RemoveChild([0x11d12560])
000125:0x00063358:	ncalli	Particle.GetPosition()
000125:0x00063360:	movefm	[0x3cd16560], m_ParentObject
000125:0x00063370:	call	Object.ModelToWorld(ret)
000125:0x00063380:	ncalli	Particle.SetPosition(ret)
000126:0x00063388:	movetm	m_ParentObject, NULL
000126:0x00063398:	rts
Particle::SetSource()
000140:0x000633a0:	moves	m_SyncSourcePath, source
000140:0x000633b0:	rts
Particle::Synch()
000146:0x000633b8:	ncall	GetGame()
000146:0x000633c0:	ncalli	CGame.IsMultiplayer()
000146:0x000633c8:	cmpi	ret, _i0
000146:0x000633d8:	beq	0x063418
000146:0x000633e0:	ncall	GetGame()
000146:0x000633e8:	ncalli	CGame.IsServer()
000146:0x000633f0:	cmpi	ret, _i0
000146:0x00063400:	beq	0x063418
000148:0x00063408:	ncalli	Particle.SetSynchDirty()
000148:0x00063410:	jump	0x063420
000152:0x00063418:	call	Particle.UpdateState()
000152:0x00063420:	rts
Particle::OnSynchronize()
000159:0x000634c8:	call	ParticleClient.OnSynchronize(ctx)
000161:0x000634d8:	moves	p1, m_SyncSourcePath
000161:0x000634e8:	new	@c00, Param1<string>
000161:0x00063510:	movec	source_path, @c00
000162:0x00063520:	icall	Serializer.Write(source_path)
000164:0x00063528:	move	p1, m_SyncIsPlaying
000164:0x00063538:	new	@c00, Param1<bool>
000164:0x00063560:	movec	is_playing, @c00
000165:0x00063570:	icall	Serializer.Write(is_playing)
000165:0x00063578:	delete	source_path
000165:0x00063580:	delete	is_playing
000165:0x00063588:	rts
ParticleClient::ParticleClient()
//scripts/3_Game/ParticleClient.c
000013:0x00063590:	ncalli	ParticleClient.SetFlags(_i1, true)
000013:0x00063598:	rts
ParticleClient::UpdateState()
000021:0x000635a0:	cmpi	m_SyncIsPlaying, false
000021:0x000635b0:	bne	0x0635e0
000021:0x000635b8:	cmpcm	m_ParticleEffect, NULL
000021:0x000635c8:	beq	0x0635e0
000023:0x000635d0:	call	ParticleClient.DestroyParticleEffect()
000023:0x000635d8:	jump	0x063618
000025:0x000635e0:	cmpi	m_SyncIsPlaying, true
000025:0x000635f0:	bne	0x063618
000025:0x000635f8:	cmpcm	m_ParticleEffect, NULL
000025:0x00063608:	bne	0x063618
000027:0x00063610:	call	ParticleClient.CreateParticleEffect()
000027:0x00063618:	rts
ParticleClient::CreateParticleEffect()
000036:0x000636a8:	ncall	GetGame()
000036:0x000636b0:	ncall	Vector(_f0.000000, _f0.000000, _f0.000000)
000036:0x000636c0:	ncalli	CGame.CreateObject(_s'#particlesourceEnf', ret, true, _i0)
000036:0x000636d0:	movetm	m_ParticleEffect, ret
000038:0x000636e0:	movefm	[0x11d12520], m_ParticleEffect
000038:0x000636f0:	ncalli	ParticleClient.AddChild([0x11d12520], _i-1)
000039:0x000636f8:	moves	[0x11d1b3a8], m_SyncSourcePath
000039:0x00063708:	ncall	GetObject([0x11d1b3a8])
000039:0x00063710:	movea	vobj, ret
000040:0x00063720:	movefm	[0x3cd16560], m_ParticleEffect
000040:0x00063730:	ncalli	Object.SetObject(vobj, _s'')
000041:0x00063738:	ncall	ReleaseObject(vobj, _i0)
000041:0x00063740:	rts
ParticleClient::DestroyParticleEffect()
000049:0x00063788:	call	PrintString(_s'StopOnClient - Stop')
000050:0x00063798:	cmpcm	m_ParticleEffect, NULL
000050:0x000637a8:	beq	0x063810
000050:0x000637b0:	ncall	GetGame()
000050:0x000637b8:	cmpc	ret, NULL
000050:0x000637c8:	beq	0x063810
000052:0x000637d0:	call	PrintString(_s'StopOnClient - Stop Execute')
000053:0x000637e0:	ncall	GetGame()
000053:0x000637e8:	movefm	[0x3cd2c308], m_ParticleEffect
000053:0x000637f8:	ncalli	CGame.ObjectDelete([0x3cd2c308])
000054:0x00063800:	movetm	m_ParticleEffect, NULL
000054:0x00063810:	rts
ParticleClient::OnSynchronized()
000061:0x00063858:	call	ScriptedEntity.OnSynchronized(ctx)
000063:0x00063868:	new	@c00, Param1<string>
000063:0x00063890:	movec	source_path, @c00
000064:0x000638a0:	icall	Serializer.Read(source_path)
000064:0x000638a8:	cmpi	ret, _i0
000064:0x000638b8:	beq	0x0638d0
000066:0x000638c0:	moves	m_SyncSourcePath, param1
000069:0x000638d0:	new	@c00, Param1<bool>
000069:0x000638f8:	movec	is_playing, @c00
000070:0x00063908:	icall	Serializer.Read(is_playing)
000070:0x00063910:	cmpi	ret, _i0
000070:0x00063920:	beq	0x063938
000072:0x00063928:	move	m_SyncIsPlaying, param1
000075:0x00063938:	call	ParticleClient.UpdateState()
000075:0x00063940:	delete	source_path
000075:0x00063948:	delete	is_playing
000075:0x00063950:	rts
ComponentEnergyPowerGenerator::CanSwitchOn()
//scripts/3_Game/tools/Component/ComponentEnergyManager/ComponentEnergyPowerGenerator.c
000008:0x00063958:	call	ComponentEnergyPowerGenerator.IsSwitchedOn()
000008:0x00063960:	cmpi	ret, _i0
000008:0x00063970:	bne	0x0639f8
000008:0x00063978:	movefm	[0x3cd16648], m_ThisEntityAI
000008:0x00063988:	ncalli	EntityAI.GetDamage()
000008:0x00063990:	cmpf	ret, _f1.000000
000008:0x000639a0:	bge	0x0639f8
000013:0x000639a8:	movefm	[0x3cd16648], m_ThisEntityAI
000013:0x000639b8:	call	EntityAI.GetCompEM()
000013:0x000639c0:	call	ComponentEnergyManager.HasEnoughStoredEnergy()
000013:0x000639c8:	cmpi	ret, _i0
000013:0x000639d8:	beq	0x0639f8
000015:0x000639e0:	imove	ret, 0x000001
000015:0x000639f0:	rts
000020:0x000639f8:	imove	ret, 0x000000
000020:0x00063a08:	rts
000020:0x00063a10:	rts
ComponentEnergyPowerGenerator::HasSparkplug()
000025:0x00063a18:	cmpcm	m_SparkPlug, NULL
000025:0x00063a28:	beq	0x063a48
000027:0x00063a30:	imove	ret, 0x000001
000027:0x00063a40:	rts
000030:0x00063a48:	imove	ret, 0x000000
000030:0x00063a58:	rts
000030:0x00063a60:	rts
ComponentEnergyPowerGenerator::Event_OnItemAttached()
000035:0x00063b08:	call	ComponentEnergyManager.Event_OnItemAttached(item, slot_name)
000039:0x00063b18:	call	EntityAI.IsKindOf(_s'SparkPlug')
000039:0x00063b28:	cmpi	ret, _i0
000039:0x00063b38:	beq	0x063b60
000041:0x00063b40:	moves	message, _s'#user_action_elect_installed_sparkplug'
000042:0x00063b50:	movem	m_SparkPlug, item
000046:0x00063b60:	call	Log(_s'Event_OnItemAttached', _i0)
000046:0x00063b70:	rts
ComponentEnergyPowerGenerator::Event_OnItemDetached()
000059:0x00063bd8:	call	ComponentEnergyManager.Event_OnItemDetached(item, slot_name)
000063:0x00063be8:	call	EntityAI.IsKindOf(_s'SparkPlug')
000063:0x00063bf8:	cmpi	ret, _i0
000063:0x00063c08:	beq	0x063c58
000065:0x00063c10:	moves	message, _s'#user_action_elect_removed_sparkplug'
000066:0x00063c20:	movetm	m_SparkPlug, NULL
000068:0x00063c30:	call	ComponentEnergyPowerGenerator.IsSwitchedOn()
000068:0x00063c38:	cmpi	ret, _i0
000068:0x00063c48:	beq	0x063c58
000070:0x00063c50:	call	ComponentEnergyPowerGenerator.SwitchOff()
000074:0x00063c58:	call	Log(_s'Event_OnItemDetached', _i0)
000074:0x00063c68:	rts
ComponentEnergyManager::ComponentEnergyManager()
//scripts/3_Game/tools/Component/ComponentEnergyManager.c
000072:0x00063c70:	imove	m_EnergySourceSocketID, 0xffffffff
000074:0x00063c80:	new	@c00, Timer
000074:0x00063ca8:	movec	m_UpdateTimer, @c00
000076:0x00063cb8:	cmpi	m_EnableDebug, _i0
000076:0x00063cc8:	beq	0x063d08
000078:0x00063cd0:	new	@c00, Timer
000078:0x00063cf8:	movec	m_DebugUpdate, @c00
000078:0x00063d08:	rts
ComponentEnergyManager::~ComponentEnergyManager()
000085:0x00063d10:	delete	m_UpdateTimer
000087:0x00063d18:	cmpi	m_EnableDebug, _i0
000087:0x00063d28:	beq	0x063d50
000089:0x00063d30:	movec	[0x3cd17138], m_DebugUpdate
000089:0x00063d40:	call	Timer.Stop()
000090:0x00063d48:	delete	m_DebugUpdate
000090:0x00063d50:	rts
ComponentEnergyManager::Event_OnInit()
000097:0x00063d98:	cmpi	m_EnableDebug, _i0
000097:0x00063da8:	beq	0x063df8
000099:0x00063db0:	movec	obj, this
000099:0x00063dc0:	movec	params, NULL
000099:0x00063dd0:	movec	[0x3cd17138], m_DebugUpdate
000099:0x00063de0:	call	Timer.Run(_f0.010000, obj, _s'DebugUpdate', params, true)
000102:0x00063df8:	ncall	GetGame()
000102:0x00063e00:	movefm	@c00, m_ThisEntityAI
000102:0x00063e10:	movec	[0x11cf2bf0], GameScript
000102:0x00063e20:	icall	ScriptModule.CallFunction(@c00, _s'OnInitEnergy', NULL, _i0)
000102:0x00063e30:	rts
ComponentEnergyManager::DebugUpdate()
000108:0x00063fb0:	cmpc	m_DebugPlugArrow, NULL
000108:0x00063fc0:	beq	0x063ff8
000110:0x00063fc8:	movec	shape, m_DebugPlugArrow
000110:0x00063fd8:	call	RemoveShape(shape)
000111:0x00063fe8:	movec	m_DebugPlugArrow, NULL
000114:0x00063ff8:	call	ComponentEnergyManager.IsPlugged()
000114:0x00064000:	cmpi	ret, _i0
000114:0x00064010:	beq	0x064140
000116:0x00064018:	call	ComponentEnergyManager.GetEnergySource()
000116:0x00064020:	ncalli	EntityAI.GetPosition()
000116:0x00064028:	addv	from, ret, _v<0.000000,0.100000,0.000000>
000117:0x00064038:	movefm	[0x3cd16648], m_ThisEntityAI
000117:0x00064048:	ncalli	EntityAI.GetPosition()
000117:0x00064050:	addv	to, ret, _v<0.000000,0.100000,0.000000>
000119:0x00064060:	movefm	[0x3cd16648], m_ThisEntityAI
000119:0x00064070:	call	EntityAI.GetType()
000119:0x00064078:	cmps	ret, _s'EN5C_BarbedWire'
000119:0x00064088:	bne	0x064118
000121:0x00064090:	movefm	[0x3cd16648], m_ThisEntityAI
000121:0x000640a0:	ncalli	EntityAI.GetOwner()
000121:0x000640a8:	movetm	BBB, ret
000123:0x000640b8:	cmpcm	BBB, NULL
000123:0x000640c8:	beq	0x064110
000123:0x000640d0:	call	EntityAI.GetType()
000123:0x000640d8:	cmps	ret, _s'EN5C_Fence'
000123:0x000640e8:	bne	0x064110
000125:0x000640f0:	addv	@v00, to, _v<0.000000,-1.300000,0.000000>
000125:0x00064100:	movev	to, @v00
000125:0x00064110:	release	BBB
000129:0x00064118:	call	DrawArrow(from, to, _f0.500000, _i-1, _f0.000000)
000129:0x00064130:	movec	m_DebugPlugArrow, ret
000129:0x00064140:	rts
ComponentEnergyManager::Event_OnAwake()
000136:0x00064648:	ncall	GetGame()
000136:0x00064650:	ncalli	CGame.IsServer()
000136:0x00064658:	cmpi	ret, _i0
000136:0x00064668:	beq	0x064d58
000138:0x00064670:	movefm	[0x3cd16648], m_ThisEntityAI
000138:0x00064680:	call	EntityAI.GetType()
000138:0x00064688:	adds	@s01, _s'CfgVehicles ', ret
000138:0x00064698:	moves	@s00, @s01
000138:0x000646a8:	adds	param_access_energy_sys, @s00, _s' EnergyManager '
000141:0x000646b8:	ncall	GetGame()
000141:0x000646c0:	adds	@s01, param_access_energy_sys, _s'energyUsagePerSecond'
000141:0x000646d0:	moves	@s00, @s01
000141:0x000646e0:	ncalli	CGame.ConfigGetFloat(@s00)
000141:0x000646e8:	move	m_EnergyUsage, ret
000142:0x000646f8:	ncall	GetGame()
000142:0x00064700:	adds	@s01, param_access_energy_sys, _s'alwaysOn'
000142:0x00064710:	moves	@s00, @s01
000142:0x00064720:	ncalli	CGame.ConfigGetFloat(@s00)
000142:0x00064728:	cfti	m_CfgAlwaysSwitchedOn, ret
000143:0x00064738:	ncall	GetGame()
000143:0x00064740:	adds	@s01, param_access_energy_sys, _s'autoSwitchOff'
000143:0x00064750:	moves	@s00, @s01
000143:0x00064760:	ncalli	CGame.ConfigGetFloat(@s00)
000143:0x00064768:	cfti	m_AutoSwitchOff, ret
000145:0x00064778:	ncall	GetGame()
000145:0x00064780:	adds	@s01, param_access_energy_sys, _s'energyAtSpawn'
000145:0x00064790:	moves	@s00, @s01
000145:0x000647a0:	ncalli	CGame.ConfigGetFloat(@s00)
000145:0x000647a8:	move	m_Energy, ret
000146:0x000647b8:	ncall	GetGame()
000146:0x000647c0:	adds	@s01, param_access_energy_sys, _s'energyStorageMax'
000146:0x000647d0:	moves	@s00, @s01
000146:0x000647e0:	ncalli	CGame.ConfigGetFloat(@s00)
000146:0x000647e8:	move	m_EnergyStorageMax, ret
000147:0x000647f8:	ncall	GetGame()
000147:0x00064800:	adds	@s01, param_access_energy_sys, _s'reduceMaxEnergyByDamageCoef'
000147:0x00064810:	moves	@s00, @s01
000147:0x00064820:	ncalli	CGame.ConfigGetFloat(@s00)
000147:0x00064828:	move	m_ReduceMaxEnergyByDamageCoef, ret
000148:0x00064838:	ncall	GetGame()
000148:0x00064840:	adds	@s01, param_access_energy_sys, _s'powerSocketsCount'
000148:0x00064850:	moves	@s00, @s01
000148:0x00064860:	ncalli	CGame.ConfigGetFloat(@s00)
000148:0x00064868:	move	m_SocketsCount, ret
000150:0x00064878:	ncall	GetGame()
000150:0x00064880:	adds	@s01, param_access_energy_sys, _s'isPassiveDevice'
000150:0x00064890:	moves	@s00, @s01
000150:0x000648a0:	ncalli	CGame.ConfigGetFloat(@s00)
000150:0x000648a8:	cfti	m_IsPassiveDevice, ret
000151:0x000648b8:	ncall	GetGame()
000151:0x000648c0:	adds	@s01, param_access_energy_sys, _s'cordLength'
000151:0x000648d0:	moves	@s00, @s01
000151:0x000648e0:	ncalli	CGame.ConfigGetFloat(@s00)
000151:0x000648e8:	move	m_CordLength, ret
000152:0x000648f8:	ncall	GetGame()
000152:0x00064900:	adds	@s01, param_access_energy_sys, _s'plugType'
000152:0x00064910:	moves	@s00, @s01
000152:0x00064920:	ncalli	CGame.ConfigGetFloat(@s00)
000152:0x00064928:	cfti	m_PlugType, ret
000154:0x00064938:	ncall	GetGame()
000154:0x00064940:	adds	@s01, param_access_energy_sys, _s'attachmentAction'
000154:0x00064950:	moves	@s00, @s01
000154:0x00064960:	ncalli	CGame.ConfigGetFloat(@s00)
000154:0x00064968:	cfti	m_AttachmentActionType, ret
000157:0x00064978:	adds	cfg_check_energy_limit, param_access_energy_sys, _s'energyStorageMax'
000159:0x00064988:	ncall	GetGame()
000159:0x00064990:	ncalli	CGame.ConfigIsExisting(cfg_check_energy_limit)
000159:0x00064998:	cmpi	ret, _i0
000159:0x000649a8:	bne	0x0649d8
000159:0x000649b0:	cmpf	m_Energy, _f0.000000
000159:0x000649c0:	ble	0x0649d8
000161:0x000649c8:	move	m_EnergyStorageMax, m_Energy
000165:0x000649d8:	adds	cfg_check_plug_types, param_access_energy_sys, _s'compatiblePlugTypes'
000167:0x000649e8:	ncall	GetGame()
000167:0x000649f0:	ncalli	CGame.ConfigIsExisting(cfg_check_plug_types)
000167:0x000649f8:	cmpi	ret, _i0
000167:0x00064a08:	beq	0x064a60
000169:0x00064a10:	new	@c00, array<int>
000169:0x00064a30:	movetm	m_CompatiblePlugTypes, @c00
000170:0x00064a40:	ncall	GetGame()
000170:0x00064a48:	movefm	[0x3cd2bb28], m_CompatiblePlugTypes
000170:0x00064a58:	ncalli	CGame.ConfigGetIntArray(cfg_check_plug_types, [0x3cd2bb28])
000173:0x00064a60:	new	@c00, array<EntityAI>
000173:0x00064a80:	movetm	m_PluggedDevices, @c00
000175:0x00064a90:	cmpf	m_CordLength, _f0.000000
000175:0x00064aa0:	bge	0x064b08
000177:0x00064aa8:	imove	m_CordLength, 0.00000
000178:0x00064ab8:	movefm	[0x3cd16648], m_ThisEntityAI
000178:0x00064ac8:	call	EntityAI.GetType()
000178:0x00064ad0:	adds	@s01, _s'Warning! ', ret
000178:0x00064ae0:	moves	@s00, @s01
000178:0x00064af0:	adds	error_message_cord, @s00, _s': config parameter 'cordLength' is less than 0! Cord length should not be negative!'
000179:0x00064b00:	icall	DPrint(error_message_cord)
000182:0x00064b08:	new	@c00, map<string,EntityAI>
000182:0x00064b28:	movetm	m_DeviceByPlugSelection, @c00
000185:0x00064b38:	movefm	[0x3cd16648], m_ThisEntityAI
000185:0x00064b48:	call	EntityAI.GetType()
000185:0x00064b50:	adds	@s02, _s'cfgVehicles ', ret
000185:0x00064b60:	moves	@s01, @s02
000185:0x00064b70:	adds	@s01, @s01, _s' '
000185:0x00064b80:	moves	@s00, @s01
000185:0x00064b90:	adds	cfg_animation_sources, @s00, _s'AnimationSources '
000186:0x00064ba0:	ncall	GetGame()
000186:0x00064ba8:	ncalli	CGame.ConfigGetChildrenCount(cfg_animation_sources)
000186:0x00064bb0:	move	animation_sources_count, ret
000188:0x00064bc0:	imove	i_selection, 0x000000
000188:0x00064bd0:	jump	0x064be0
000188:0x00064bd8:	inc	i_selection
000188:0x00064be0:	cmpi	i_selection, animation_sources_count
000188:0x00064bf0:	bge	0x064c30
000192:0x00064bf8:	ncall	GetGame()
000192:0x00064c00:	icall	CGame.ConfigGetChildName(cfg_animation_sources, i_selection, selection)
000193:0x00064c10:	movefm	[0x3cd28c50], m_DeviceByPlugSelection
000193:0x00064c20:	icall	map<string,EntityAI>.Set(selection, NULL)
000193:0x00064c28:	jump	0x064bd8
000197:0x00064c30:	citf	@f00, MAX_SOCKETS_COUNT
000197:0x00064c40:	cmpf	m_SocketsCount, @f00
000197:0x00064c50:	ble	0x064d00
000199:0x00064c58:	citf	m_SocketsCount, MAX_SOCKETS_COUNT
000200:0x00064c68:	movefm	[0x3cd16648], m_ThisEntityAI
000200:0x00064c78:	call	EntityAI.GetType()
000200:0x00064c80:	adds	@s03, _s'Error! ', ret
000200:0x00064c90:	moves	@s02, @s03
000200:0x00064ca0:	adds	@s02, @s02, _s': config parameter 'powerSocketsCount' is higher than the current limit ('
000200:0x00064cb0:	moves	@s01, @s02
000200:0x00064cc0:	icall	ToString(MAX_SOCKETS_COUNT)
000200:0x00064cc8:	adds	@s01, @s01, ret
000200:0x00064cd8:	moves	@s00, @s01
000200:0x00064ce8:	adds	error_message_sockets, @s00, _s')! Raise the limit (constant MAX_SOCKETS_COUNT) or decrease the powerSocketsCount parameter for this device!'
000201:0x00064cf8:	icall	DPrint(error_message_sockets)
000206:0x00064d00:	ncall	GetGame()
000206:0x00064d08:	adds	@s01, param_access_energy_sys, _s'cordTextureFile'
000206:0x00064d18:	moves	@s00, @s01
000206:0x00064d28:	icall	CGame.ConfigGetText(@s00, m_CordTextureFile)
000208:0x00064d30:	call	ComponentEnergyManager.IsAlwaysSwitchedOn()
000208:0x00064d38:	cmpi	ret, _i0
000208:0x00064d48:	beq	0x064d58
000210:0x00064d50:	call	ComponentEnergyManager.StartUpdates()
000214:0x00064d58:	imove	i, 0x000000
000214:0x00064d68:	jump	0x064d78
000214:0x00064d70:	inc	i
000214:0x00064d78:	call	ComponentEnergyManager.GetSocketsCount()
000214:0x00064d80:	cmpi	i, ret
000214:0x00064d90:	bgt	0x064e08
000216:0x00064d98:	icall	ToString(i)
000216:0x00064da0:	adds	@s02, SOCKET_, ret
000216:0x00064db0:	moves	@s01, @s02
000216:0x00064dc0:	adds	@s01, @s01, _PLUGGED
000216:0x00064dd0:	moves	@s00, @s01
000216:0x00064de0:	movefm	[0x3cd16648], m_ThisEntityAI
000216:0x00064df0:	call	EntityAI.HideSelection(@s00)
000216:0x00064e00:	jump	0x064d70
000219:0x00064e08:	movefm	[0x3cd16648], m_ThisEntityAI
000219:0x00064e18:	call	EntityAI.HideSelection(SEL_CORD_PLUGGED)
000219:0x00064e28:	rts
ComponentEnergyManager::GetCompType()
000225:0x00064e30:	imove	ret, 0x000001
000225:0x00064e40:	rts
000225:0x00064e48:	rts
ComponentEnergyManager::SwitchOn()
000241:0x00064e70:	call	ComponentEnergyManager.CanSwitchOn()
000241:0x00064e78:	cmpi	ret, _i0
000241:0x00064e88:	beq	0x064f08
000243:0x00064e90:	imove	m_IsSwichedOn, 0x000001
000245:0x00064ea0:	call	ComponentEnergyManager.DeviceUpdate()
000246:0x00064ea8:	call	ComponentEnergyManager.StartUpdates()
000249:0x00064eb0:	movem	original_caller, m_ThisEntityAI
000249:0x00064ec0:	call	ComponentEnergyManager.WakeUpWholeBranch(original_caller)
000252:0x00064ed0:	ncall	GetGame()
000252:0x00064ed8:	movefm	@c00, m_ThisEntityAI
000252:0x00064ee8:	movec	[0x11cf2bf0], GameScript
000252:0x00064ef8:	icall	ScriptModule.CallFunction(@c00, _s'OnSwitchOn', NULL, _i0)
000252:0x00064f08:	rts
ComponentEnergyManager::SwitchOff()
000259:0x00064f30:	call	ComponentEnergyManager.CanTurnOff()
000259:0x00064f38:	cmpi	ret, _i0
000259:0x00064f48:	beq	0x064fe8
000261:0x00064f50:	imove	m_IsSwichedOn, 0x000000
000263:0x00064f60:	call	ComponentEnergyManager.IsWorking()
000263:0x00064f68:	cmpi	ret, _i0
000263:0x00064f78:	beq	0x064f90
000265:0x00064f80:	call	ComponentEnergyManager.StopUpdates()
000266:0x00064f88:	call	ComponentEnergyManager.DeviceUpdate()
000270:0x00064f90:	movem	original_caller, m_ThisEntityAI
000270:0x00064fa0:	call	ComponentEnergyManager.WakeUpWholeBranch(original_caller)
000273:0x00064fb0:	ncall	GetGame()
000273:0x00064fb8:	movefm	@c00, m_ThisEntityAI
000273:0x00064fc8:	movec	[0x11cf2bf0], GameScript
000273:0x00064fd8:	icall	ScriptModule.CallFunction(@c00, _s'OnSwitchOff', NULL, _i0)
000273:0x00064fe8:	rts
ComponentEnergyManager::SetPassiveState()
000280:0x00064ff0:	move	m_IsPassiveDevice, state
000281:0x00065000:	cmpi	m_IsPassiveDevice, _i0
000281:0x00065010:	bne	0x065020
000283:0x00065018:	call	ComponentEnergyManager.DeviceUpdate()
000283:0x00065020:	rts
ComponentEnergyManager::UnplugDevice()
000290:0x00065188:	ncall	GetGame()
000290:0x00065190:	ncalli	CGame.IsServer()
000290:0x00065198:	cmpi	ret, _i0
000290:0x000651a8:	beq	0x0653c8
000292:0x000651b0:	call	ComponentEnergyManager.GetPluggedDevices()
000292:0x000651b8:	ncalli	array<EntityAI>.Count()
000292:0x000651c0:	subi	index_start, ret, _i1
000293:0x000651d0:	imove	device_found, 0x000000
000295:0x000651e0:	move	i, index_start
000295:0x000651f0:	jump	0x065200
000295:0x000651f8:	dec	i
000295:0x00065200:	cmpi	i, _i0
000295:0x00065210:	blt	0x065288
000297:0x00065218:	call	ComponentEnergyManager.GetPluggedDevices()
000297:0x00065220:	icall	array<EntityAI>.Get(i)
000297:0x00065228:	movetm	plugged_device, ret
000299:0x00065238:	cmpm	plugged_device, device_to_unplug
000299:0x00065248:	bne	0x065278
000301:0x00065250:	call	ComponentEnergyManager.GetPluggedDevices()
000301:0x00065258:	ncalli	array<EntityAI>.Remove(i)
000302:0x00065260:	imove	device_found, 0x000001
000303:0x00065270:	jump	0x065288
000303:0x00065278:	release	plugged_device
000303:0x00065280:	jump	0x0651f8
000307:0x00065288:	cmpi	device_found, _i0
000307:0x00065298:	beq	0x0653c8
000309:0x000652a0:	call	EntityAI.GetCompEM()
000309:0x000652a8:	call	ComponentEnergyManager.GetEnergySourceSocketID()
000309:0x000652b0:	move	socket_ID, ret
000310:0x000652c0:	call	ComponentEnergyManager.UnplugCordFromSocket(socket_ID)
000311:0x000652d0:	call	EntityAI.GetCompEM()
000311:0x000652d8:	movetm	source, NULL
000311:0x000652e8:	call	ComponentEnergyManager.SetEnergySource(source)
000312:0x000652f8:	call	EntityAI.GetCompEM()
000312:0x00065300:	call	ComponentEnergyManager.DeviceUpdate()
000313:0x00065308:	call	EntityAI.GetCompEM()
000313:0x00065310:	call	ComponentEnergyManager.StartUpdates()
000314:0x00065318:	call	EntityAI.GetCompEM()
000314:0x00065320:	movem	original_caller, m_ThisEntityAI
000314:0x00065330:	call	ComponentEnergyManager.WakeUpWholeBranch(original_caller)
000316:0x00065340:	cmpi	m_EnableDebug, _i0
000316:0x00065350:	beq	0x065370
000318:0x00065358:	call	DestroyAllShapes()
000319:0x00065360:	movec	m_DebugPlugArrow, NULL
000322:0x00065370:	call	ComponentEnergyManager.OnOwnSocketReleased(device_to_unplug)
000323:0x00065380:	call	EntityAI.GetCompEM()
000323:0x00065388:	movem	last_energy_source, m_ThisEntityAI
000323:0x00065398:	call	ComponentEnergyManager.OnIsUnplugged(last_energy_source)
000324:0x000653a8:	call	EntityAI.ShowSelection(SEL_CORD_FOLDED)
000325:0x000653b8:	call	EntityAI.HideSelection(SEL_CORD_PLUGGED)
000325:0x000653c8:	rts
ComponentEnergyManager::RestorePlugState()
000333:0x000653d0:	move	m_RestorePlugState, state
000333:0x000653e0:	rts
ComponentEnergyManager::SetEnergy()
000339:0x000653e8:	move	m_Energy, new_energy
000339:0x000653f8:	rts
ComponentEnergyManager::UnplugThis()
000345:0x00065400:	ncall	GetGame()
000345:0x00065408:	ncalli	CGame.IsServer()
000345:0x00065410:	cmpi	ret, _i0
000345:0x00065420:	beq	0x065478
000347:0x00065428:	call	ComponentEnergyManager.GetEnergySource()
000347:0x00065430:	cmpcm	ret, NULL
000347:0x00065440:	beq	0x065478
000349:0x00065448:	call	ComponentEnergyManager.GetEnergySource()
000349:0x00065450:	call	EntityAI.GetCompEM()
000349:0x00065458:	movem	device_to_unplug, m_ThisEntityAI
000349:0x00065468:	call	ComponentEnergyManager.UnplugDevice(device_to_unplug)
000349:0x00065478:	rts
ComponentEnergyManager::UnplugAllDevices()
000357:0x000654c0:	call	ComponentEnergyManager.GetPluggedDevices()
000357:0x000654c8:	cmpcm	ret, NULL
000357:0x000654d8:	beq	0x065570
000359:0x000654e0:	call	ComponentEnergyManager.GetPluggedDevices()
000359:0x000654e8:	ncalli	array<EntityAI>.Count()
000359:0x000654f0:	subi	index_start, ret, _i1
000360:0x00065500:	move	i, index_start
000360:0x00065510:	jump	0x065520
000360:0x00065518:	dec	i
000360:0x00065520:	cmpi	i, _i0
000360:0x00065530:	blt	0x065570
000362:0x00065538:	call	ComponentEnergyManager.GetPluggedDevices()
000362:0x00065540:	icall	array<EntityAI>.Get(i)
000362:0x00065548:	movetm	device_to_unplug, ret
000362:0x00065558:	call	ComponentEnergyManager.UnplugDevice(device_to_unplug)
000362:0x00065568:	jump	0x065518
000362:0x00065570:	rts
ComponentEnergyManager::UpdateSelections()
000371:0x00065780:	call	ComponentEnergyManager.GetSocketsCount()
000371:0x00065788:	move	slots_c, ret
000373:0x00065798:	imove	i, 0x000000
000373:0x000657a8:	jump	0x0657b8
000373:0x000657b0:	inc	i
000373:0x000657b8:	cmpi	i, slots_c
000373:0x000657c8:	bge	0x065a78
000375:0x000657d0:	cfv	@c01, m_Sockets[i]
000375:0x000657e0:	movetm	plug_owner, @c01
000377:0x000657f0:	cmpcm	plug_owner, NULL
000377:0x00065800:	beq	0x065958
000379:0x00065808:	addi	@m01, i, _i1
000379:0x00065818:	move	@m00, @m01
000379:0x00065828:	icall	ToString(@m00)
000379:0x00065830:	adds	@s01, SOCKET_, ret
000379:0x00065840:	moves	@s00, @s01
000379:0x00065850:	adds	plugged_selection, @s00, _PLUGGED
000380:0x00065860:	addi	@m01, i, _i1
000380:0x00065870:	move	@m00, @m01
000380:0x00065880:	icall	ToString(@m00)
000380:0x00065888:	adds	@s01, SOCKET_, ret
000380:0x00065898:	moves	@s00, @s01
000380:0x000658a8:	adds	available_selection, @s00, _AVAILABLE
000381:0x000658b8:	movefm	[0x3cd16648], m_ThisEntityAI
000381:0x000658c8:	call	EntityAI.ShowSelection(plugged_selection)
000382:0x000658d8:	movefm	[0x3cd16648], m_ThisEntityAI
000382:0x000658e8:	call	EntityAI.HideSelection(available_selection)
000383:0x000658f8:	call	EntityAI.GetCompEM()
000383:0x00065900:	call	ComponentEnergyManager.GetCordTextureFile()
000383:0x00065908:	moves	texture_path, ret
000384:0x00065918:	call	ComponentEnergyManager.GetHiddenSelectionIndex(plugged_selection)
000384:0x00065928:	move	selection_index, ret
000385:0x00065938:	movefm	[0x3cd16648], m_ThisEntityAI
000385:0x00065948:	ncalli	EntityAI.SetObjectTexture(selection_index, texture_path)
000385:0x00065950:	jump	0x065a68
000389:0x00065958:	addi	@m01, i, _i1
000389:0x00065968:	move	@m00, @m01
000389:0x00065978:	icall	ToString(@m00)
000389:0x00065980:	adds	@s02, SOCKET_, ret
000389:0x00065990:	moves	@s01, @s02
000389:0x000659a0:	adds	@s01, @s01, _AVAILABLE
000389:0x000659b0:	moves	@s00, @s01
000389:0x000659c0:	movefm	[0x3cd16648], m_ThisEntityAI
000389:0x000659d0:	call	EntityAI.ShowSelection(@s00)
000390:0x000659e0:	addi	@m01, i, _i1
000390:0x000659f0:	move	@m00, @m01
000390:0x00065a00:	icall	ToString(@m00)
000390:0x00065a08:	adds	@s02, SOCKET_, ret
000390:0x00065a18:	moves	@s01, @s02
000390:0x00065a28:	adds	@s01, @s01, _PLUGGED
000390:0x00065a38:	moves	@s00, @s01
000390:0x00065a48:	movefm	[0x3cd16648], m_ThisEntityAI
000390:0x00065a58:	call	EntityAI.HideSelection(@s00)
000390:0x00065a68:	release	plug_owner
000390:0x00065a70:	jump	0x0657b0
000395:0x00065a78:	call	ComponentEnergyManager.GetEnergySource()
000395:0x00065a80:	cmpcm	ret, NULL
000395:0x00065a90:	beq	0x065ae0
000397:0x00065a98:	movefm	[0x3cd16648], m_ThisEntityAI
000397:0x00065aa8:	call	EntityAI.ShowSelection(SEL_CORD_PLUGGED)
000398:0x00065ab8:	movefm	[0x3cd16648], m_ThisEntityAI
000398:0x00065ac8:	call	EntityAI.HideSelection(SEL_CORD_FOLDED)
000398:0x00065ad8:	jump	0x065b20
000402:0x00065ae0:	movefm	[0x3cd16648], m_ThisEntityAI
000402:0x00065af0:	call	EntityAI.ShowSelection(SEL_CORD_FOLDED)
000403:0x00065b00:	movefm	[0x3cd16648], m_ThisEntityAI
000403:0x00065b10:	call	EntityAI.HideSelection(SEL_CORD_PLUGGED)
000403:0x00065b20:	rts
ComponentEnergyManager::UpdatePlugState()
000410:0x00065c28:	movefm	[0x3cd16648], m_ThisEntityAI
000410:0x00065c38:	ncalli	EntityAI.GetOwnerPlayer()
000410:0x00065c40:	cmpm	ret, NULL
000410:0x00065c50:	beq	0x065d18
000410:0x00065c58:	movefm	[0x3cd16648], m_ThisEntityAI
000410:0x00065c68:	ncalli	EntityAI.GetOwnerPlayer()
000410:0x00065c70:	call	Man.IsKindOf(_s'SurvivorBase')
000410:0x00065c80:	cmpi	ret, _i0
000410:0x00065c90:	beq	0x065d18
000412:0x00065c98:	movefm	[0x3cd16648], m_ThisEntityAI
000412:0x00065ca8:	ncalli	EntityAI.GetOwnerPlayer()
000412:0x00065cb0:	movetm	player, ret
000415:0x00065cc0:	ncalli	EntityAI.GetPosition()
000415:0x00065cc8:	movev	pos_player, ret
000416:0x00065cd8:	call	ComponentEnergyManager.IsEnergySourceAtReach(pos_player, _f5.000000)
000416:0x00065ce8:	cmpi	ret, _i0
000416:0x00065cf8:	bne	0x065d08
000418:0x00065d00:	call	ComponentEnergyManager.UnplugThis()
000418:0x00065d08:	release	player
000418:0x00065d10:	jump	0x065dd0
000424:0x00065d18:	movefm	[0x3cd16648], m_ThisEntityAI
000424:0x00065d28:	ncalli	EntityAI.GetPosition()
000424:0x00065d30:	movev	pos_item, ret
000426:0x00065d40:	movefm	[0x3cd16648], m_ThisEntityAI
000426:0x00065d50:	ncalli	EntityAI.GetOwner()
000426:0x00065d58:	cmpm	ret, NULL
000426:0x00065d68:	beq	0x065da0
000428:0x00065d70:	movefm	[0x3cd16648], m_ThisEntityAI
000428:0x00065d80:	ncalli	EntityAI.GetOwner()
000428:0x00065d88:	ncalli	EntityAI.GetPosition()
000428:0x00065d90:	movev	pos_item, ret
000431:0x00065da0:	call	ComponentEnergyManager.IsEnergySourceAtReach(pos_item, _f0.000000)
000431:0x00065db0:	cmpi	ret, _i0
000431:0x00065dc0:	bne	0x065dd0
000433:0x00065dc8:	call	ComponentEnergyManager.UnplugThis()
000433:0x00065dd0:	rts
ComponentEnergyManager::GetCompatiblePlugTypes()
000441:0x00065dd8:	movem	IDs, m_CompatiblePlugTypes
000441:0x00065de8:	rts
ComponentEnergyManager::StoreEnergySourceIDs()
000447:0x00065df0:	move	m_EnergySourceIDLow, ID_low
000448:0x00065e00:	move	m_EnergySourceIDHigh, ID_high
000448:0x00065e10:	rts
ComponentEnergyManager::GetRestorePlugState()
000458:0x00065e18:	move	ret, m_RestorePlugState
000458:0x00065e28:	rts
000458:0x00065e30:	rts
ComponentEnergyManager::PlugThisInto()
000464:0x00065e38:	call	EntityAI.GetCompEM()
000464:0x00065e40:	movem	device_to_plug, m_ThisEntityAI
000464:0x00065e50:	call	ComponentEnergyManager.PlugInDevice(device_to_plug)
000464:0x00065e60:	move	ret, ret
000464:0x00065e70:	rts
000464:0x00065e78:	rts
ComponentEnergyManager::CanSwitchOn()
000470:0x00065e80:	call	ComponentEnergyManager.IsSwitchedOn()
000470:0x00065e88:	cmpi	ret, _i0
000470:0x00065e98:	bne	0x065ee8
000470:0x00065ea0:	movefm	[0x3cd16648], m_ThisEntityAI
000470:0x00065eb0:	ncalli	EntityAI.GetDamage()
000470:0x00065eb8:	cmpf	ret, _f1.000000
000470:0x00065ec8:	bge	0x065ee8
000472:0x00065ed0:	imove	ret, 0x000001
000472:0x00065ee0:	rts
000475:0x00065ee8:	imove	ret, 0x000000
000475:0x00065ef8:	rts
000475:0x00065f00:	rts
ComponentEnergyManager::CanWork()
000482:0x00065fc8:	move	energy_usage, test_energy
000483:0x00065fd8:	call	ComponentEnergyManager.GetEnergy()
000483:0x00065fe0:	move	gathered_energy, ret
000484:0x00065ff0:	call	ComponentEnergyManager.GetEnergySource()
000484:0x00065ff8:	movem	energy_source, ret
000486:0x00066008:	cmpf	energy_usage, _f-1.000000
000486:0x00066018:	bne	0x066038
000488:0x00066020:	call	ComponentEnergyManager.GetEnergyUsage()
000488:0x00066028:	move	energy_usage, ret
000491:0x00066038:	cmpf	gathered_energy, energy_usage
000491:0x00066048:	bge	0x066130
000493:0x00066050:	cmpcm	energy_source, NULL
000493:0x00066060:	beq	0x066108
000493:0x00066068:	ncalli	EntityAI.GetDamage()
000493:0x00066070:	cmpf	ret, _f1.000000
000493:0x00066080:	bge	0x066108
000493:0x00066088:	call	EntityAI.GetCompEM()
000493:0x00066090:	call	ComponentEnergyManager.IsSwitchedOn()
000493:0x00066098:	cmpi	ret, _i0
000493:0x000660a8:	beq	0x066108
000495:0x000660b0:	call	EntityAI.GetCompEM()
000495:0x000660b8:	call	ComponentEnergyManager.GetEnergy()
000495:0x000660c0:	addf	@f01, gathered_energy, ret
000495:0x000660d0:	move	gathered_energy, @f01
000496:0x000660e0:	call	EntityAI.GetCompEM()
000496:0x000660e8:	call	ComponentEnergyManager.GetEnergySource()
000496:0x000660f0:	movem	energy_source, ret
000496:0x00066100:	jump	0x066128
000501:0x00066108:	imove	ret, 0x000000
000501:0x00066118:	release	energy_source
000501:0x00066120:	rts
000501:0x00066128:	jump	0x066038
000506:0x00066130:	imove	ret, 0x000001
000506:0x00066140:	release	energy_source
000506:0x00066148:	rts
000506:0x00066150:	release	energy_source
000506:0x00066158:	rts
ComponentEnergyManager::CanSwitchOff()
000512:0x00066160:	call	ComponentEnergyManager.IsAlwaysSwitchedOn()
000512:0x00066168:	cmpi	ret, _i0
000512:0x00066178:	beq	0x066198
000514:0x00066180:	imove	ret, 0x000000
000514:0x00066190:	rts
000517:0x00066198:	call	ComponentEnergyManager.IsSwitchedOn()
000517:0x000661a0:	move	ret, ret
000517:0x000661b0:	rts
000517:0x000661b8:	rts
ComponentEnergyManager::IsSwitchedOn()
000523:0x000661c0:	call	ComponentEnergyManager.IsAlwaysSwitchedOn()
000523:0x000661c8:	cmpi	ret, _i0
000523:0x000661d8:	beq	0x0661f8
000525:0x000661e0:	imove	ret, 0x000001
000525:0x000661f0:	rts
000528:0x000661f8:	move	ret, m_IsSwichedOn
000528:0x00066208:	rts
000528:0x00066210:	rts
ComponentEnergyManager::IsAlwaysSwitchedOn()
000534:0x00066218:	move	ret, m_CfgAlwaysSwitchedOn
000534:0x00066228:	rts
000534:0x00066230:	rts
ComponentEnergyManager::IsCordFolded()
000540:0x00066238:	call	ComponentEnergyManager.IsPlugged()
000540:0x00066240:	cmpi	ret, _i0
000540:0x00066250:	beq	0x066270
000541:0x00066258:	imove	ret, 0x000000
000541:0x00066268:	rts
000543:0x00066270:	imove	ret, 0x000001
000543:0x00066280:	rts
000543:0x00066288:	rts
ComponentEnergyManager::IsPassive()
000549:0x00066290:	move	ret, m_IsPassiveDevice
000549:0x000662a0:	rts
000549:0x000662a8:	rts
ComponentEnergyManager::IsPlugged()
000555:0x000662b0:	call	ComponentEnergyManager.GetEnergySource()
000555:0x000662b8:	cmpcm	ret, NULL
000555:0x000662c8:	beq	0x0662e8
000557:0x000662d0:	imove	ret, 0x000001
000557:0x000662e0:	rts
000560:0x000662e8:	imove	ret, 0x000000
000560:0x000662f8:	rts
000560:0x00066300:	rts
ComponentEnergyManager::ConsumeEnergy()
000567:0x00066308:	call	ComponentEnergyManager.FindAndConsumeEnergy(amount, true)
000567:0x00066318:	move	ret, ret
000567:0x00066328:	rts
000567:0x00066330:	rts
ComponentEnergyManager::CanTurnOff()
000573:0x00066338:	call	ComponentEnergyManager.IsAlwaysSwitchedOn()
000573:0x00066340:	cmpi	ret, _i0
000573:0x00066350:	beq	0x066370
000575:0x00066358:	imove	ret, 0x000000
000575:0x00066368:	rts
000578:0x00066370:	call	ComponentEnergyManager.IsSwitchedOn()
000578:0x00066378:	move	ret, ret
000578:0x00066388:	rts
000578:0x00066390:	rts
ComponentEnergyManager::IsWorking()
000584:0x00066398:	move	ret, m_IsWorking
000584:0x000663a8:	rts
000584:0x000663b0:	rts
ComponentEnergyManager::HasEnoughStoredEnergy()
000590:0x000663b8:	call	ComponentEnergyManager.GetEnergy()
000590:0x000663c0:	call	ComponentEnergyManager.GetEnergyUsage()
000590:0x000663c8:	cmpf	ret, ret
000590:0x000663d8:	ble	0x0663f8
000592:0x000663e0:	imove	ret, 0x000001
000592:0x000663f0:	rts
000595:0x000663f8:	imove	ret, 0x000000
000595:0x00066408:	rts
000595:0x00066410:	rts
ComponentEnergyManager::HasFreeSocket()
000601:0x000664c0:	call	ComponentEnergyManager.GetPluggedDevices()
000601:0x000664c8:	ncalli	array<EntityAI>.Count()
000601:0x000664d0:	move	plugged_devices, ret
000602:0x000664e0:	call	ComponentEnergyManager.GetSocketsCount()
000602:0x000664e8:	move	plugged_devices_limit, ret
000604:0x000664f8:	cmpi	plugged_devices, plugged_devices_limit
000604:0x00066508:	bge	0x066528
000606:0x00066510:	imove	ret, 0x000001
000606:0x00066520:	rts
000609:0x00066528:	imove	ret, 0x000000
000609:0x00066538:	rts
000609:0x00066540:	rts
ComponentEnergyManager::CanReceivePlugFrom()
000615:0x000665b0:	call	ComponentEnergyManager.HasFreeSocket()
000615:0x000665b8:	cmpi	ret, _i0
000615:0x000665c8:	beq	0x066748
000615:0x000665d0:	cmpm	device_to_plug, m_ThisEntityAI
000615:0x000665e0:	beq	0x066748
000615:0x000665e8:	call	EntityAI.GetCompEM()
000615:0x000665f0:	call	ComponentEnergyManager.GetEnergySource()
000615:0x000665f8:	cmpm	ret, m_ThisEntityAI
000615:0x00066608:	beq	0x066748
000617:0x00066610:	call	EntityAI.GetCompEM()
000617:0x00066618:	call	ComponentEnergyManager.GetPlugType()
000617:0x00066620:	cmpi	ret, PLUG_UNDEFINED
000617:0x00066630:	bne	0x066650
000619:0x00066638:	imove	ret, 0x000001
000619:0x00066648:	rts
000622:0x00066650:	cmpcm	m_CompatiblePlugTypes, NULL
000622:0x00066660:	beq	0x066730
000624:0x00066668:	imove	i, 0x000000
000624:0x00066678:	jump	0x066688
000624:0x00066680:	inc	i
000624:0x00066688:	movefm	[0x11d0bd68], m_CompatiblePlugTypes
000624:0x00066698:	ncalli	array<int>.Count()
000624:0x000666a0:	cmpi	i, ret
000624:0x000666b0:	bge	0x066728
000626:0x000666b8:	movefm	[0x11d0bd68], m_CompatiblePlugTypes
000626:0x000666c8:	icall	array<int>.Get(i)
000626:0x000666d0:	move	plugID, ret
000627:0x000666e0:	call	EntityAI.GetCompEM()
000627:0x000666e8:	call	ComponentEnergyManager.GetPlugType()
000627:0x000666f0:	cmpi	plugID, ret
000627:0x00066700:	bne	0x066720
000629:0x00066708:	imove	ret, 0x000001
000629:0x00066718:	rts
000629:0x00066720:	jump	0x066680
000629:0x00066728:	jump	0x066748
000636:0x00066730:	imove	ret, 0x000001
000636:0x00066740:	rts
000640:0x00066748:	imove	ret, 0x000000
000640:0x00066758:	rts
000640:0x00066760:	rts
ComponentEnergyManager::IsEnergySourceAtReach()
000661:0x00066808:	call	ComponentEnergyManager.IsPlugged()
000661:0x00066810:	cmpi	ret, _i0
000661:0x00066820:	bne	0x066840
000663:0x00066828:	imove	ret, 0x000000
000663:0x00066838:	rts
000666:0x00066840:	call	ComponentEnergyManager.GetCordLength()
000666:0x00066848:	cmpf	ret, _f0.000000
000666:0x00066858:	bne	0x066878
000668:0x00066860:	imove	ret, 0x000001
000668:0x00066870:	rts
000671:0x00066878:	call	ComponentEnergyManager.GetEnergySource()
000671:0x00066880:	movem	energy_source, ret
000673:0x00066890:	cmpcm	energy_source, NULL
000673:0x000668a0:	bne	0x0668c8
000674:0x000668a8:	imove	ret, 0x000000
000674:0x000668b8:	release	energy_source
000674:0x000668c0:	rts
000676:0x000668c8:	ncalli	EntityAI.GetPosition()
000676:0x000668d0:	movev	source_pos, ret
000677:0x000668e0:	ncall	Distance(from_position, source_pos)
000677:0x000668e8:	move	distance, ret
000679:0x000668f8:	call	ComponentEnergyManager.GetCordLength()
000679:0x00066900:	addf	@f01, ret, add_tolerance
000679:0x00066910:	move	@f00, @f01
000679:0x00066920:	cmpf	distance, @f00
000679:0x00066930:	ble	0x066960
000681:0x00066938:	imove	ret, 0x000000
000681:0x00066948:	release	energy_source
000681:0x00066950:	rts
000681:0x00066958:	jump	0x066980
000685:0x00066960:	imove	ret, 0x000001
000685:0x00066970:	release	energy_source
000685:0x00066978:	rts
000685:0x00066980:	release	energy_source
000685:0x00066988:	rts
ComponentEnergyManager::GetHiddenSelectionIndex()
000694:0x00066aa0:	new	@c00, array<string>
000694:0x00066ac0:	movetm	config_selections, @c00
000695:0x00066ad0:	adds	@s03, _s'CfgVehicles', _s' '
000695:0x00066ae0:	moves	@s02, @s03
000695:0x00066af0:	movefm	[0x3cd16648], m_ThisEntityAI
000695:0x00066b00:	call	EntityAI.GetType()
000695:0x00066b08:	adds	@s02, @s02, ret
000695:0x00066b18:	moves	@s01, @s02
000695:0x00066b28:	adds	@s01, @s01, _s' '
000695:0x00066b38:	moves	@s00, @s01
000695:0x00066b48:	adds	cfg_hidden_selections, @s00, _s'hiddenSelections'
000696:0x00066b58:	ncall	GetGame()
000696:0x00066b60:	movefm	[0x3cd2baa8], config_selections
000696:0x00066b70:	ncalli	CGame.ConfigGetTextArray(cfg_hidden_selections, [0x3cd2baa8])
000698:0x00066b78:	imove	i, 0x000000
000698:0x00066b88:	jump	0x066b98
000698:0x00066b90:	inc	i
000698:0x00066b98:	ncalli	array<string>.Count()
000698:0x00066ba0:	cmpi	i, ret
000698:0x00066bb0:	bge	0x066c00
000700:0x00066bb8:	icall	array<string>.Get(i)
000700:0x00066bc0:	cmps	ret, selection
000700:0x00066bd0:	bne	0x066bf8
000702:0x00066bd8:	move	ret, i
000702:0x00066be8:	delete	config_selections
000702:0x00066bf0:	rts
000702:0x00066bf8:	jump	0x066b90
000706:0x00066c00:	imove	ret, 0xffffffff
000706:0x00066c10:	delete	config_selections
000706:0x00066c18:	rts
000706:0x00066c20:	delete	config_selections
000706:0x00066c28:	rts
ComponentEnergyManager::GetSocketsCount()
000712:0x00066c30:	cfti	ret, m_SocketsCount
000712:0x00066c40:	rts
000712:0x00066c48:	rts
ComponentEnergyManager::GetPlugType()
000718:0x00066c50:	move	ret, m_PlugType
000718:0x00066c60:	rts
000718:0x00066c68:	rts
ComponentEnergyManager::GetAttachmentAction()
000724:0x00066c70:	move	ret, m_AttachmentActionType
000724:0x00066c80:	rts
000724:0x00066c88:	rts
ComponentEnergyManager::GetEnergySourceIDLow()
000730:0x00066c90:	move	ret, m_EnergySourceIDLow
000730:0x00066ca0:	rts
000730:0x00066ca8:	rts
ComponentEnergyManager::GetEnergySourceIDHigh()
000736:0x00066cb0:	move	ret, m_EnergySourceIDHigh
000736:0x00066cc0:	rts
000736:0x00066cc8:	rts
ComponentEnergyManager::GetPluggedDevicesCount()
000742:0x00066cd0:	call	ComponentEnergyManager.GetPluggedDevices()
000742:0x00066cd8:	ncalli	array<EntityAI>.Count()
000742:0x00066ce0:	move	ret, ret
000742:0x00066cf0:	rts
000742:0x00066cf8:	rts
ComponentEnergyManager::GetEnergyUsage()
000751:0x00066d00:	move	ret, m_EnergyUsage
000751:0x00066d10:	rts
000751:0x00066d18:	rts
ComponentEnergyManager::GetEnergy()
000757:0x00066d20:	move	ret, m_Energy
000757:0x00066d30:	rts
000757:0x00066d38:	rts
ComponentEnergyManager::AddEnergy()
000763:0x00066de0:	ncall	GetGame()
000763:0x00066de8:	ncalli	CGame.IsServer()
000763:0x00066df0:	cmpi	ret, _i0
000763:0x00066e00:	beq	0x066e78
000765:0x00066e08:	call	ComponentEnergyManager.GetEnergy()
000765:0x00066e10:	addf	energy_to_clamp, ret, added_energy
000766:0x00066e20:	call	ComponentEnergyManager.GetEnergyMax()
000766:0x00066e28:	call	Clamp(energy_to_clamp, _f0.000000, ret)
000766:0x00066e38:	move	clamped_energy, ret
000767:0x00066e48:	call	ComponentEnergyManager.SetEnergy(clamped_energy)
000768:0x00066e58:	call	ComponentEnergyManager.StartUpdates()
000769:0x00066e60:	subf	ret, energy_to_clamp, clamped_energy
000769:0x00066e70:	rts
000772:0x00066e78:	imove	ret, 0.00000
000772:0x00066e88:	rts
000772:0x00066e90:	rts
ComponentEnergyManager::GetEnergyMax()
000794:0x00066e98:	move	ret, m_EnergyStorageMax
000794:0x00066ea8:	rts
000794:0x00066eb0:	rts
ComponentEnergyManager::GetEnergySource()
000803:0x00066eb8:	movem	ret, m_EnergySource
000803:0x00066ec8:	rts
000803:0x00066ed0:	rts
ComponentEnergyManager::GetPlugOwner()
000809:0x00066ed8:	movefm	[0x3cd28c50], m_DeviceByPlugSelection
000809:0x00066ee8:	icall	map<string,EntityAI>.Contains(plug_selection_name)
000809:0x00066ef0:	cmpi	ret, _i0
000809:0x00066f00:	beq	0x066f38
000811:0x00066f08:	movefm	[0x3cd28c50], m_DeviceByPlugSelection
000811:0x00066f18:	icall	map<string,EntityAI>.Get(plug_selection_name)
000811:0x00066f20:	movetm	ret, ret
000811:0x00066f30:	rts
000814:0x00066f38:	movetm	ret, NULL
000814:0x00066f48:	rts
000814:0x00066f50:	rts
ComponentEnergyManager::GetPluggedDevice()
000820:0x00066f58:	ncall	GetGame()
000820:0x00066f60:	ncalli	CGame.IsServer()
000820:0x00066f68:	cmpi	ret, _i0
000820:0x00066f78:	bne	0x066f98
000821:0x00066f80:	movetm	ret, NULL
000821:0x00066f90:	rts
000823:0x00066f98:	call	ComponentEnergyManager.GetPluggedDevices()
000823:0x00066fa0:	ncalli	array<EntityAI>.Count()
000823:0x00066fa8:	cmpi	ret, _i0
000823:0x00066fb8:	ble	0x066fe8
000824:0x00066fc0:	call	ComponentEnergyManager.GetPluggedDevices()
000824:0x00066fc8:	icall	array<EntityAI>.Get(_i0)
000824:0x00066fd0:	movetm	ret, ret
000824:0x00066fe0:	rts
000826:0x00066fe8:	movetm	ret, NULL
000826:0x00066ff8:	rts
000826:0x00067000:	rts
ComponentEnergyManager::GetCordTextureFile()
000835:0x00067008:	moves	ret, m_CordTextureFile
000835:0x00067018:	rts
000835:0x00067020:	rts
ComponentEnergyManager::GetPluggedDevices()
000843:0x00067028:	movem	ret, m_PluggedDevices
000843:0x00067038:	rts
000843:0x00067040:	rts
ComponentEnergyManager::GetPoweredDevices()
000851:0x00067130:	new	@c00, array<EntityAI>
000851:0x00067150:	movetm	return_array, @c00
000852:0x00067160:	call	ComponentEnergyManager.GetPluggedDevices()
000852:0x00067168:	ncalli	array<EntityAI>.Count()
000852:0x00067170:	move	plugged_devices_c, ret
000853:0x00067180:	imove	i, 0x000000
000853:0x00067190:	jump	0x0671a0
000853:0x00067198:	inc	i
000853:0x000671a0:	cmpi	i, plugged_devices_c
000853:0x000671b0:	bge	0x067220
000855:0x000671b8:	call	ComponentEnergyManager.GetPluggedDevices()
000855:0x000671c0:	icall	array<EntityAI>.Get(i)
000855:0x000671c8:	movetm	device, ret
000856:0x000671d8:	call	ComponentEnergyManager.IsSwitchedOn()
000856:0x000671e0:	cmpi	ret, _i0
000856:0x000671f0:	beq	0x067210
000858:0x000671f8:	movefm	@c00, device
000858:0x00067208:	icall	array<EntityAI>.Insert(@c00)
000858:0x00067210:	release	device
000858:0x00067218:	jump	0x067198
000862:0x00067220:	movem	ret, return_array
000862:0x00067230:	release	return_array
000862:0x00067238:	rts
000862:0x00067240:	release	return_array
000862:0x00067248:	rts
ComponentEnergyManager::OnWork()
000873:0x00067250:	movefm	[0x3cd16648], m_ThisEntityAI
000873:0x00067260:	call	EntityAI.OnWork(consumed_energy)
000873:0x00067270:	rts
ComponentEnergyManager::OnIsPlugged()
000876:0x00067278:	movefm	[0x3cd16648], m_ThisEntityAI
000876:0x00067288:	call	EntityAI.OnIsPlugged(source_device)
000876:0x00067298:	rts
ComponentEnergyManager::OnIsUnplugged()
000879:0x000672a0:	movefm	[0x3cd16648], m_ThisEntityAI
000879:0x000672b0:	call	EntityAI.OnIsUnplugged(last_energy_source)
000879:0x000672c0:	rts
ComponentEnergyManager::OnOwnSocketTaken()
000882:0x000672c8:	movefm	[0x3cd16648], m_ThisEntityAI
000882:0x000672d8:	call	EntityAI.OnOwnSocketTaken(device)
000882:0x000672e8:	rts
ComponentEnergyManager::OnOwnSocketReleased()
000885:0x000672f0:	movefm	[0x3cd16648], m_ThisEntityAI
000885:0x00067300:	call	EntityAI.OnOwnSocketReleased(device)
000885:0x00067310:	rts
ComponentEnergyManager::OnAttachmentAdded()
000891:0x00067370:	call	ComponentEnergyManager.GetAttachmentAction()
000891:0x00067378:	move	attachment_action_type, ret
000893:0x00067388:	cmpi	attachment_action_type, PLUG_THIS_INTO_ATTACHMENT
000893:0x00067398:	bne	0x0673f8
000895:0x000673a0:	call	EntityAI.GetCompEM()
000895:0x000673a8:	movem	device_to_plug, m_ThisEntityAI
000895:0x000673b8:	call	ComponentEnergyManager.CanReceivePlugFrom(device_to_plug)
000895:0x000673c8:	cmpi	ret, _i0
000895:0x000673d8:	beq	0x0673f0
000897:0x000673e0:	call	ComponentEnergyManager.PlugThisInto(elec_device)
000897:0x000673f0:	jump	0x067438
000900:0x000673f8:	cmpi	attachment_action_type, PLUG_ATTACHMENTS_INTO_THIS
000900:0x00067408:	bne	0x067438
000902:0x00067410:	call	EntityAI.GetCompEM()
000902:0x00067418:	movem	energy_source, m_ThisEntityAI
000902:0x00067428:	call	ComponentEnergyManager.PlugThisInto(energy_source)
000902:0x00067438:	rts
ComponentEnergyManager::OnAttachmentRemoved()
000909:0x00067460:	call	ComponentEnergyManager.GetAttachmentAction()
000909:0x00067468:	move	attachment_action_type, ret
000911:0x00067478:	cmpi	attachment_action_type, PLUG_THIS_INTO_ATTACHMENT
000911:0x00067488:	bne	0x0674c0
000913:0x00067490:	call	ComponentEnergyManager.GetEnergySource()
000913:0x00067498:	cmpm	elec_device, ret
000913:0x000674a8:	bne	0x0674b8
000915:0x000674b0:	call	ComponentEnergyManager.UnplugThis()
000915:0x000674b8:	jump	0x0674e8
000918:0x000674c0:	cmpi	attachment_action_type, PLUG_ATTACHMENTS_INTO_THIS
000918:0x000674d0:	bne	0x0674e8
000920:0x000674d8:	call	EntityAI.GetCompEM()
000920:0x000674e0:	call	ComponentEnergyManager.UnplugThis()
000920:0x000674e8:	rts
ComponentEnergyManager::StartUpdates()
000934:0x00067510:	cmpi	m_IsPassiveDevice, _i0
000934:0x00067520:	bne	0x0675b0
000936:0x00067528:	movec	[0x3cd17138], m_UpdateTimer
000936:0x00067538:	call	Timer.IsRunning()
000936:0x00067540:	cmpi	ret, _i0
000936:0x00067550:	bne	0x0675b0
000938:0x00067558:	citf	duration, CONSUME_ENERGY_INTERVAL
000938:0x00067568:	movec	obj, this
000938:0x00067578:	movec	params, NULL
000938:0x00067588:	movec	[0x3cd17138], m_UpdateTimer
000938:0x00067598:	call	Timer.Run(duration, obj, _s'DeviceUpdate', params, true)
000938:0x000675b0:	rts
ComponentEnergyManager::StopUpdates()
000946:0x000675b8:	movec	[0x3cd17138], m_UpdateTimer
000946:0x000675c8:	call	Timer.Stop()
000946:0x000675d0:	rts
ComponentEnergyManager::WakeUpWholeBranch()
000952:0x00067658:	ncall	GetGame()
000952:0x00067660:	ncalli	CGame.IsServer()
000952:0x00067668:	cmpi	ret, _i0
000952:0x00067678:	beq	0x067788
000954:0x00067680:	call	ComponentEnergyManager.GetSocketsCount()
000954:0x00067688:	cmpi	ret, _i0
000954:0x00067698:	ble	0x067788
000956:0x000676a0:	call	ComponentEnergyManager.GetPluggedDevices()
000956:0x000676a8:	movem	plugged_devices, ret
000957:0x000676b8:	ncalli	array<EntityAI>.Count()
000957:0x000676c0:	move	plugged_devices_c, ret
000959:0x000676d0:	imove	i, 0x000000
000959:0x000676e0:	jump	0x0676f0
000959:0x000676e8:	inc	i
000959:0x000676f0:	cmpi	i, plugged_devices_c
000959:0x00067700:	bge	0x067780
000961:0x00067708:	icall	array<EntityAI>.Get(i)
000961:0x00067710:	movetm	device, ret
000962:0x00067720:	cmpm	device, original_caller
000962:0x00067730:	beq	0x067770
000964:0x00067738:	call	EntityAI.GetCompEM()
000964:0x00067740:	call	ComponentEnergyManager.DeviceUpdate()
000965:0x00067748:	call	EntityAI.GetCompEM()
000965:0x00067750:	call	ComponentEnergyManager.StartUpdates()
000966:0x00067758:	call	EntityAI.GetCompEM()
000966:0x00067760:	call	ComponentEnergyManager.WakeUpWholeBranch(original_caller)
000966:0x00067770:	release	device
000966:0x00067778:	jump	0x0676e8
000966:0x00067780:	release	plugged_devices
000966:0x00067788:	rts
ComponentEnergyManager::PlugCordIntoSocket()
000977:0x000678a8:	call	ComponentEnergyManager.GetSocketsCount()
000977:0x000678b0:	move	slots_c, ret
000979:0x000678c0:	imove	i, 0x000000
000979:0x000678d0:	jump	0x0678e0
000979:0x000678d8:	inc	i
000979:0x000678e0:	cmpi	i, slots_c
000979:0x000678f0:	bge	0x067ac8
000981:0x000678f8:	cfv	@c01, m_Sockets[i]
000981:0x00067908:	movetm	plug_owner, @c01
000983:0x00067918:	cmpcm	plug_owner, NULL
000983:0x00067928:	bne	0x067ab8
000986:0x00067930:	ctv	m_Sockets[i], device_to_plug
000988:0x00067940:	addi	@m01, i, _i1
000988:0x00067950:	move	@m00, @m01
000988:0x00067960:	icall	ToString(@m00)
000988:0x00067968:	adds	@s01, SOCKET_, ret
000988:0x00067978:	moves	@s00, @s01
000988:0x00067988:	adds	plugged_selection, @s00, _PLUGGED
000989:0x00067998:	call	ComponentEnergyManager.SetPlugOwner(plugged_selection, device_to_plug)
000990:0x000679a8:	movefm	[0x3cd16648], m_ThisEntityAI
000990:0x000679b8:	call	EntityAI.ShowSelection(plugged_selection)
000992:0x000679c8:	addi	@m01, i, _i1
000992:0x000679d8:	move	@m00, @m01
000992:0x000679e8:	icall	ToString(@m00)
000992:0x000679f0:	adds	@s01, SOCKET_, ret
000992:0x00067a00:	moves	@s00, @s01
000992:0x00067a10:	adds	unplugged_selection, @s00, _AVAILABLE
000993:0x00067a20:	movefm	[0x3cd16648], m_ThisEntityAI
000993:0x00067a30:	call	EntityAI.HideSelection(unplugged_selection)
000994:0x00067a40:	call	EntityAI.GetCompEM()
000994:0x00067a48:	call	ComponentEnergyManager.GetCordTextureFile()
000994:0x00067a50:	moves	texture_path, ret
000995:0x00067a60:	call	ComponentEnergyManager.GetHiddenSelectionIndex(plugged_selection)
000995:0x00067a70:	move	selection_index, ret
000996:0x00067a80:	movefm	[0x3cd16648], m_ThisEntityAI
000996:0x00067a90:	ncalli	EntityAI.SetObjectTexture(selection_index, texture_path)
000997:0x00067a98:	call	EntityAI.GetCompEM()
000997:0x00067aa0:	call	ComponentEnergyManager.SetEnergySourceSocketID(i)
000998:0x00067ab0:	jump	0x067ac8
000998:0x00067ab8:	release	plug_owner
000998:0x00067ac0:	jump	0x0678d8
000998:0x00067ac8:	rts
ComponentEnergyManager::SetEnergySource()
001006:0x00067ad0:	movem	m_EnergySource, source
001008:0x00067ae0:	cmpcm	source, NULL
001008:0x00067af0:	beq	0x067b10
001010:0x00067af8:	call	ComponentEnergyManager.StartUpdates()
001011:0x00067b00:	call	ComponentEnergyManager.OnIsPlugged(source)
001011:0x00067b10:	rts
ComponentEnergyManager::PlugInDevice()
001018:0x00067c58:	ncall	GetGame()
001018:0x00067c60:	ncalli	CGame.IsServer()
001018:0x00067c68:	cmpi	ret, _i0
001018:0x00067c78:	beq	0x068038
001020:0x00067c80:	call	ComponentEnergyManager.CanReceivePlugFrom(device_to_plug)
001020:0x00067c90:	cmpi	ret, _i0
001020:0x00067ca0:	beq	0x067da8
001022:0x00067ca8:	call	EntityAI.GetCompEM()
001022:0x00067cb0:	call	ComponentEnergyManager.IsPlugged()
001022:0x00067cb8:	cmpi	ret, _i0
001022:0x00067cc8:	beq	0x067ce0
001023:0x00067cd0:	call	EntityAI.GetCompEM()
001023:0x00067cd8:	call	ComponentEnergyManager.UnplugThis()
001025:0x00067ce0:	call	ComponentEnergyManager.GetPluggedDevices()
001025:0x00067ce8:	movefm	@c00, device_to_plug
001025:0x00067cf8:	icall	array<EntityAI>.Insert(@c00)
001026:0x00067d00:	call	EntityAI.GetCompEM()
001026:0x00067d08:	movem	source, m_ThisEntityAI
001026:0x00067d18:	call	ComponentEnergyManager.SetEnergySource(source)
001027:0x00067d28:	movem	original_caller, m_ThisEntityAI
001027:0x00067d38:	call	ComponentEnergyManager.WakeUpWholeBranch(original_caller)
001028:0x00067d48:	call	EntityAI.HideSelection(SEL_CORD_FOLDED)
001029:0x00067d58:	call	EntityAI.ShowSelection(SEL_CORD_PLUGGED)
001030:0x00067d68:	call	ComponentEnergyManager.PlugCordIntoSocket(device_to_plug)
001031:0x00067d78:	call	ComponentEnergyManager.OnOwnSocketTaken(device_to_plug)
001033:0x00067d88:	imove	ret, 0x000001
001033:0x00067d98:	rts
001033:0x00067da0:	jump	0x068038
001039:0x00067da8:	movefm	[0x3cd16648], m_ThisEntityAI
001039:0x00067db8:	call	EntityAI.GetType()
001039:0x00067dc0:	moves	this_str, ret
001040:0x00067dd0:	call	EntityAI.GetType()
001040:0x00067dd8:	moves	device_str, ret
001042:0x00067de8:	call	ComponentEnergyManager.GetPlugType()
001042:0x00067df0:	call	EntityAI.GetCompEM()
001042:0x00067df8:	push	ret
001042:0x00067e00:	call	ComponentEnergyManager.GetPlugType()
001042:0x00067e08:	move	@m01, ret
001042:0x00067e18:	pop	ret
001042:0x00067e20:	cmpi	ret, @m01
001042:0x00067e30:	beq	0x067ec0
001045:0x00067e38:	adds	@s04, _s'WARNING! Attempt at plugging ', device_str
001045:0x00067e48:	moves	@s03, @s04
001045:0x00067e58:	adds	@s03, @s03, _s' into '
001045:0x00067e68:	moves	@s02, @s03
001045:0x00067e78:	adds	@s02, @s02, this_str
001045:0x00067e88:	moves	@s01, @s02
001045:0x00067e98:	adds	@s01, @s01, _s' has failed due to incompatible plug! To make the plug compatible, include its type in the receiving device's config (array parameter 'compatiblePlugTypes')'
001045:0x00067ea8:	moves	@s00, @s01
001045:0x00067eb8:	icall	DPrint(@s00)
001048:0x00067ec0:	call	EntityAI.GetCompEM()
001048:0x00067ec8:	call	ComponentEnergyManager.GetEnergySource()
001048:0x00067ed0:	cmpm	m_ThisEntityAI, ret
001048:0x00067ee0:	bne	0x067f70
001050:0x00067ee8:	adds	@s04, _s'WARNING! Attempt at plugging ', device_str
001050:0x00067ef8:	moves	@s03, @s04
001050:0x00067f08:	adds	@s03, @s03, _s' into '
001050:0x00067f18:	moves	@s02, @s03
001050:0x00067f28:	adds	@s02, @s02, this_str
001050:0x00067f38:	moves	@s01, @s02
001050:0x00067f48:	adds	@s01, @s01, _s' has encountered a problem. These devices are already connected! Solution: Don't plug a device into its current power source twice.'
001050:0x00067f58:	moves	@s00, @s01
001050:0x00067f68:	icall	DPrint(@s00)
001053:0x00067f70:	call	ComponentEnergyManager.GetPluggedDevicesCount()
001053:0x00067f78:	call	ComponentEnergyManager.GetSocketsCount()
001053:0x00067f80:	cmpi	ret, ret
001053:0x00067f90:	blt	0x068020
001055:0x00067f98:	adds	@s04, _s'WARNING! Attempt at plugging ', device_str
001055:0x00067fa8:	moves	@s03, @s04
001055:0x00067fb8:	adds	@s03, @s03, _s' into '
001055:0x00067fc8:	moves	@s02, @s03
001055:0x00067fd8:	adds	@s02, @s02, this_str
001055:0x00067fe8:	moves	@s01, @s02
001055:0x00067ff8:	adds	@s01, @s01, _s' has failed! The receiver has no free socket for another plug!'
001055:0x00068008:	moves	@s00, @s01
001055:0x00068018:	icall	DPrint(@s00)
001058:0x00068020:	imove	ret, 0x000000
001058:0x00068030:	rts
001058:0x00068038:	rts
ComponentEnergyManager::SetPlugOwner()
001066:0x00068040:	movefm	[0x3cd28c50], m_DeviceByPlugSelection
001066:0x00068050:	icall	map<string,EntityAI>.Contains(selection_name)
001066:0x00068058:	cmpi	ret, _i0
001066:0x00068068:	beq	0x068098
001068:0x00068070:	movefm	@c00, device
001068:0x00068080:	movefm	[0x3cd28c50], m_DeviceByPlugSelection
001068:0x00068090:	icall	map<string,EntityAI>.Set(selection_name, @c00)
001068:0x00068098:	rts
ComponentEnergyManager::UnplugCordFromSocket()
001076:0x00068100:	cfv	@c01, m_Sockets[socket_to_unplug_ID]
001076:0x00068110:	movetm	plug_owner, @c01
001078:0x00068120:	cmpcm	plug_owner, NULL
001078:0x00068130:	beq	0x068270
001080:0x00068138:	ctv	m_Sockets[socket_to_unplug_ID], NULL
001081:0x00068148:	addi	@m01, socket_to_unplug_ID, _i1
001081:0x00068158:	move	@m00, @m01
001081:0x00068168:	icall	ToString(@m00)
001081:0x00068170:	adds	@s01, SOCKET_, ret
001081:0x00068180:	moves	@s00, @s01
001081:0x00068190:	adds	unplugged_selection, @s00, _AVAILABLE
001082:0x000681a0:	movefm	[0x3cd16648], m_ThisEntityAI
001082:0x000681b0:	call	EntityAI.ShowSelection(unplugged_selection)
001084:0x000681c0:	addi	@m01, socket_to_unplug_ID, _i1
001084:0x000681d0:	move	@m00, @m01
001084:0x000681e0:	icall	ToString(@m00)
001084:0x000681e8:	adds	@s01, SOCKET_, ret
001084:0x000681f8:	moves	@s00, @s01
001084:0x00068208:	adds	plugged_selection, @s00, _PLUGGED
001085:0x00068218:	movefm	[0x3cd16648], m_ThisEntityAI
001085:0x00068228:	call	EntityAI.HideSelection(plugged_selection)
001086:0x00068238:	movetm	device, NULL
001086:0x00068248:	call	ComponentEnergyManager.SetPlugOwner(plugged_selection, device)
001087:0x00068258:	call	EntityAI.GetCompEM()
001087:0x00068260:	call	ComponentEnergyManager.SetEnergySourceSocketID(_i-1)
001087:0x00068270:	release	plug_owner
001087:0x00068278:	rts
ComponentEnergyManager::SetPowered()
001094:0x00068280:	move	m_IsWorking, state
001094:0x00068290:	rts
ComponentEnergyManager::FindAndConsumeEnergy()
001100:0x000682f0:	ncall	GetGame()
001100:0x000682f8:	ncalli	CGame.IsServer()
001100:0x00068300:	cmpi	ret, _i0
001100:0x00068310:	beq	0x068498
001102:0x00068318:	cmpi	ignore_switch_state, _i0
001102:0x00068328:	bne	0x068350
001102:0x00068330:	call	ComponentEnergyManager.IsSwitchedOn()
001102:0x00068338:	cmpi	ret, _i0
001102:0x00068348:	beq	0x068480
001102:0x00068350:	movefm	[0x3cd16648], m_ThisEntityAI
001102:0x00068360:	ncalli	EntityAI.GetDamage()
001102:0x00068368:	cmpf	ret, _f1.000000
001102:0x00068378:	bge	0x068480
001104:0x00068380:	subf	@f01, _f0.000000, amount
001104:0x00068390:	call	ComponentEnergyManager.AddEnergy(@f01)
001104:0x000683a0:	move	available_energy, ret
001106:0x000683b0:	cmpf	available_energy, _f0.000000
001106:0x000683c0:	bge	0x068430
001106:0x000683c8:	call	ComponentEnergyManager.GetEnergySource()
001106:0x000683d0:	cmpcm	ret, NULL
001106:0x000683e0:	beq	0x068430
001109:0x000683e8:	call	ComponentEnergyManager.GetEnergySource()
001109:0x000683f0:	call	EntityAI.GetCompEM()
001109:0x000683f8:	subf	@f01, _f0.000000, available_energy
001109:0x00068408:	call	ComponentEnergyManager.FindAndConsumeEnergy(@f01, _i0)
001109:0x00068418:	move	ret, ret
001109:0x00068428:	rts
001112:0x00068430:	cmpf	available_energy, _f0.000000
001112:0x00068440:	blt	0x068460
001114:0x00068448:	imove	ret, 0x000001
001114:0x00068458:	rts
001117:0x00068460:	imove	ret, 0x000000
001117:0x00068470:	rts
001117:0x00068478:	jump	0x068498
001121:0x00068480:	imove	ret, 0x000000
001121:0x00068490:	rts
001121:0x00068498:	rts
ComponentEnergyManager::GetEnergySourceSocketID()
001129:0x000684a0:	move	ret, m_EnergySourceSocketID
001129:0x000684b0:	rts
001129:0x000684b8:	rts
ComponentEnergyManager::GetCordLength()
001137:0x000684c0:	move	ret, m_CordLength
001137:0x000684d0:	rts
001137:0x000684d8:	rts
ComponentEnergyManager::SetEnergySourceSocketID()
001145:0x000684e0:	move	m_EnergySourceSocketID, slot_ID
001145:0x000684f0:	rts
ComponentEnergyManager::DeviceUpdate()
001155:0x00068678:	ncall	GetGame()
001155:0x00068680:	ncalli	CGame.IsServer()
001155:0x00068688:	cmpi	ret, _i0
001155:0x00068698:	beq	0x068ab0
001155:0x000686a0:	cmpi	m_IsPassiveDevice, _i0
001155:0x000686b0:	bne	0x068ab0
001158:0x000686b8:	cmpcm	m_ThisEntityAI, NULL
001158:0x000686c8:	beq	0x068a10
001158:0x000686d0:	cmpc	this, NULL
001158:0x000686e0:	beq	0x068a10
001158:0x000686e8:	call	ComponentEnergyManager.IsSwitchedOn()
001158:0x000686f0:	cmpi	ret, _i0
001158:0x00068700:	beq	0x068a10
001158:0x00068708:	movefm	[0x3cd16648], m_ThisEntityAI
001158:0x00068718:	ncalli	EntityAI.GetDamage()
001158:0x00068720:	cmpf	ret, _f1.000000
001158:0x00068730:	bge	0x068a10
001160:0x00068738:	call	ComponentEnergyManager.IsWorking()
001160:0x00068740:	move	was_powered, ret
001163:0x00068750:	ncall	GetGame()
001163:0x00068758:	icall	CGame.GetTime()
001163:0x00068760:	citf	@f03, ret
001163:0x00068770:	subf	@f03, @f03, m_LastUpdateTime
001163:0x00068780:	move	@f01, @f03
001163:0x00068790:	citf	@f04, CONSUME_ENERGY_INTERVAL
001163:0x000687a0:	mulf	@f04, @f04, _f1000.000000
001163:0x000687b0:	move	@f03, @f04
001163:0x000687c0:	call	Clamp(@f01, _f0.000000, @f03)
001163:0x000687d0:	move	consumed_energy_coef, ret
001164:0x000687e0:	citf	@f01, CONSUME_ENERGY_INTERVAL
001164:0x000687f0:	mulf	@f01, @f01, _f1000.000000
001164:0x00068800:	move	@f00, @f01
001164:0x00068810:	divf	@f00, consumed_energy_coef, @f00
001164:0x00068820:	move	consumed_energy_coef, @f00
001166:0x00068830:	cmpf	consumed_energy_coef, _f0.000000
001166:0x00068840:	ble	0x068a08
001168:0x00068848:	ncall	GetGame()
001168:0x00068850:	icall	CGame.GetTime()
001168:0x00068858:	citf	m_LastUpdateTime, ret
001169:0x00068868:	call	ComponentEnergyManager.GetEnergyUsage()
001169:0x00068870:	mulf	@f01, ret, consumed_energy_coef
001169:0x00068880:	move	@f00, @f01
001169:0x00068890:	call	ComponentEnergyManager.ConsumeEnergy(@f00)
001169:0x000688a0:	move	has_consumed_enough, ret
001170:0x000688b0:	call	ComponentEnergyManager.SetPowered(has_consumed_enough)
001172:0x000688c0:	cmpi	has_consumed_enough, _i0
001172:0x000688d0:	beq	0x068968
001174:0x000688d8:	cmpi	was_powered, _i0
001174:0x000688e8:	bne	0x068938
001176:0x000688f0:	imove	m_CanStopWork, 0x000001
001177:0x00068900:	ncall	GetGame()
001177:0x00068908:	movefm	@c00, m_ThisEntityAI
001177:0x00068918:	movec	[0x11cf2bf0], GameScript
001177:0x00068928:	icall	ScriptModule.CallFunction(@c00, _s'OnWorkStart', NULL, _i0)
001180:0x00068938:	call	ComponentEnergyManager.GetEnergyUsage()
001180:0x00068940:	mulf	consumed_energy, ret, consumed_energy_coef
001181:0x00068950:	call	ComponentEnergyManager.OnWork(consumed_energy)
001181:0x00068960:	jump	0x068a08
001185:0x00068968:	cmpi	was_powered, _i0
001185:0x00068978:	beq	0x068a00
001187:0x00068980:	cmpi	m_CanStopWork, _i0
001187:0x00068990:	beq	0x068a00
001189:0x00068998:	imove	m_CanStopWork, 0x000000
001190:0x000689a8:	ncall	GetGame()
001190:0x000689b0:	movefm	@c00, m_ThisEntityAI
001190:0x000689c0:	movec	[0x11cf2bf0], GameScript
001190:0x000689d0:	icall	ScriptModule.CallFunction(@c00, _s'OnWorkStop', NULL, _i0)
001192:0x000689e0:	cmpi	m_AutoSwitchOff, _i0
001192:0x000689f0:	beq	0x068a00
001194:0x000689f8:	call	ComponentEnergyManager.SwitchOff()
001199:0x00068a00:	call	ComponentEnergyManager.StopUpdates()
001199:0x00068a08:	jump	0x068ab0
001203:0x00068a10:	cmpc	this, NULL
001203:0x00068a20:	beq	0x068ab0
001203:0x00068a28:	cmpcm	m_ThisEntityAI, NULL
001203:0x00068a38:	beq	0x068ab0
001205:0x00068a40:	call	ComponentEnergyManager.SetPowered(false)
001207:0x00068a50:	cmpi	m_CanStopWork, _i0
001207:0x00068a60:	beq	0x068ab0
001209:0x00068a68:	imove	m_CanStopWork, 0x000000
001210:0x00068a78:	ncall	GetGame()
001210:0x00068a80:	movefm	@c00, m_ThisEntityAI
001210:0x00068a90:	movec	[0x11cf2bf0], GameScript
001210:0x00068aa0:	icall	ScriptModule.CallFunction(@c00, _s'OnWorkStop', NULL, _i0)
001210:0x00068ab0:	rts
ComponentEntityDebug::ComponentEntityDebug()
//scripts/3_Game/tools/Component/ComponentEntityDebug.c
000011:0x00068ad8:	movec	obj, this
000011:0x00068ae8:	new	@c00, TimerUpdate
000011:0x00068b10:	movec	m_TimerUpdate, @c00
000012:0x00068b20:	movec	[0x3cd16738], m_TimerUpdate
000012:0x00068b30:	call	TimerUpdate.Pause()
000012:0x00068b38:	rts
ComponentEntityDebug::~ComponentEntityDebug()
000017:0x00068b40:	movec	[0x3cd16738], m_TimerUpdate
000017:0x00068b50:	call	TimerUpdate.Stop()
000017:0x00068b58:	rts
ComponentEntityDebug::DebugBBoxDraw()
000023:0x00068be0:	ncall	GetGame()
000023:0x00068be8:	ncalli	CGame.IsDebug()
000023:0x00068bf0:	cmpi	ret, _i0
000023:0x00068c00:	bne	0x068c20
000024:0x00068c08:	movec	ret, NULL
000024:0x00068c18:	rts
000026:0x00068c20:	cmpc	m_DebugShapeBBox, NULL
000026:0x00068c30:	beq	0x068c50
000027:0x00068c38:	movec	[0x11d099d0], m_DebugShapeBBox
000027:0x00068c48:	ncalli	Shape.Destroy()
000032:0x00068c50:	movefm	[0x3cd16648], m_ThisEntityAI
000032:0x00068c60:	ncalli	EntityAI.GetCollisionBox(min_max)
000032:0x00068c68:	cmpi	ret, _i0
000032:0x00068c78:	bne	0x068c98
000033:0x00068c80:	movec	ret, NULL
000033:0x00068c90:	rts
000035:0x00068c98:	cfv	@v01, min_max[_i0]
000035:0x00068ca8:	cfv	@v03, min_max[_i1]
000035:0x00068cb8:	call	DrawBox(@v01, @v03, _i536838015)
000035:0x00068cc8:	movec	m_DebugShapeBBox, ret
000037:0x00068cd8:	movec	[0x3cd16738], m_TimerUpdate
000037:0x00068ce8:	call	TimerUpdate.Continue()
000039:0x00068cf0:	movefm	[0x3cd16648], m_ThisEntityAI
000039:0x00068d00:	ncalli	EntityAI.SetEventMask(_i16)
000039:0x00068d08:	rts
ComponentEntityDebug::DebugBBoxSetColor()
000045:0x00068d10:	cmpc	m_DebugShapeBBox, NULL
000045:0x00068d20:	beq	0x068d40
000047:0x00068d28:	movec	[0x11d099d0], m_DebugShapeBBox
000047:0x00068d38:	ncalli	Shape.SetColor(color)
000047:0x00068d40:	rts
ComponentEntityDebug::DebugBBoxDelete()
000054:0x00068d48:	ncall	GetGame()
000054:0x00068d50:	ncalli	CGame.IsDebug()
000054:0x00068d58:	cmpi	ret, _i0
000054:0x00068d68:	bne	0x068d78
000056:0x00068d70:	rts
000059:0x00068d78:	cmpc	m_DebugShapeBBox, NULL
000059:0x00068d88:	beq	0x068db8
000061:0x00068d90:	movec	[0x11d099d0], m_DebugShapeBBox
000061:0x00068da0:	ncalli	Shape.Destroy()
000062:0x00068da8:	movec	m_DebugShapeBBox, NULL
000065:0x00068db8:	cmpc	m_DebugShapeDirection, NULL
000065:0x00068dc8:	bne	0x068e00
000065:0x00068dd0:	cmpc	m_DebugShapeBBox, NULL
000065:0x00068de0:	bne	0x068e00
000067:0x00068de8:	movec	[0x3cd16738], m_TimerUpdate
000067:0x00068df8:	call	TimerUpdate.Pause()
000067:0x00068e00:	rts
ComponentEntityDebug::DebugDirectionDraw()
000074:0x00068e98:	ncall	GetGame()
000074:0x00068ea0:	ncalli	CGame.IsDebug()
000074:0x00068ea8:	cmpi	ret, _i0
000074:0x00068eb8:	bne	0x068ed8
000076:0x00068ec0:	movec	ret, NULL
000076:0x00068ed0:	rts
000079:0x00068ed8:	cmpc	m_DebugShapeDirection, NULL
000079:0x00068ee8:	beq	0x068f08
000081:0x00068ef0:	movec	[0x11d099d0], m_DebugShapeDirection
000081:0x00068f00:	ncalli	Shape.Destroy()
000084:0x00068f08:	movev	p1, _v<0.000000,0.000000,0.000000>
000085:0x00068f18:	movefm	[0x3cd16648], m_ThisEntityAI
000085:0x00068f28:	ncalli	EntityAI.GetDirection()
000085:0x00068f30:	scalev	p2, ret, m_DebugShapeDirectionDist
000086:0x00068f40:	move	m_DebugShapeDirectionDist, distance
000087:0x00068f50:	call	DrawArrow(p1, p2, _f0.500000, _i-1, _f0.000000)
000087:0x00068f68:	movec	m_DebugShapeDirection, ret
000089:0x00068f78:	movec	[0x3cd16738], m_TimerUpdate
000089:0x00068f88:	call	TimerUpdate.Continue()
000091:0x00068f90:	movefm	[0x3cd16648], m_ThisEntityAI
000091:0x00068fa0:	ncalli	EntityAI.SetEventMask(_i16)
000091:0x00068fa8:	rts
ComponentEntityDebug::DebugDirectionDelete()
000097:0x00068fb0:	ncall	GetGame()
000097:0x00068fb8:	ncalli	CGame.IsDebug()
000097:0x00068fc0:	cmpi	ret, _i0
000097:0x00068fd0:	bne	0x068fe0
000099:0x00068fd8:	rts
000102:0x00068fe0:	cmpc	m_DebugShapeDirection, NULL
000102:0x00068ff0:	beq	0x069020
000104:0x00068ff8:	movec	[0x11d099d0], m_DebugShapeDirection
000104:0x00069008:	ncalli	Shape.Destroy()
000105:0x00069010:	movec	m_DebugShapeDirection, NULL
000108:0x00069020:	cmpc	m_DebugShapeDirection, NULL
000108:0x00069030:	bne	0x069068
000108:0x00069038:	cmpc	m_DebugShapeBBox, NULL
000108:0x00069048:	bne	0x069068
000110:0x00069050:	movec	[0x3cd16738], m_TimerUpdate
000110:0x00069060:	call	TimerUpdate.Pause()
000110:0x00069068:	rts
ComponentEntityDebug::OnDrawing()
000116:0x000690c0:	ncall	GetGame()
000116:0x000690c8:	ncalli	CGame.IsDebug()
000116:0x000690d0:	cmpi	ret, _i0
000116:0x000690e0:	bne	0x0690f0
000118:0x000690e8:	rts
000121:0x000690f0:	cmpc	m_DebugShapeBBox, NULL
000121:0x00069100:	bne	0x069120
000121:0x00069108:	cmpc	m_DebugShapeDirection, NULL
000121:0x00069118:	beq	0x069198
000124:0x00069120:	movefm	[0x3cd16648], m_ThisEntityAI
000124:0x00069130:	icall	EntityAI.GetTransform(mat)
000126:0x00069138:	cmpc	m_DebugShapeBBox, NULL
000126:0x00069148:	beq	0x069168
000128:0x00069150:	movec	[0x11d099d0], m_DebugShapeBBox
000128:0x00069160:	ncalli	Shape.SetMatrix(mat)
000131:0x00069168:	cmpc	m_DebugShapeDirection, NULL
000131:0x00069178:	beq	0x069198
000133:0x00069180:	movec	[0x11d099d0], m_DebugShapeDirection
000133:0x00069190:	ncalli	Shape.SetMatrix(mat)
000133:0x00069198:	rts
Component::Init()
//scripts/3_Game/tools/Component.c
000037:0x000691e0:	ctv	m_CompNames[COMP_TYPE_ETITY_DEBUG], _s'ComponentEntityDebug'
000038:0x000691f0:	ctv	m_CompNames[COMP_TYPE_ENERGY_MANAGER], _s'ComponentEnergyManager'
000038:0x00069200:	rts
Component::GetNameByType()
000046:0x00069248:	call	IsTypeExist(comp_type)
000046:0x00069258:	cmpi	ret, false
000046:0x00069268:	bne	0x069298
000048:0x00069270:	call	LogErrorBadCompType(comp_type, _s'Component->GetNameByType()')
000049:0x00069280:	moves	ret, _s'None'
000049:0x00069290:	rts
000052:0x00069298:	cfv	@s01, m_CompNames[comp_type]
000052:0x000692a8:	moves	ret, @s01
000052:0x000692b8:	rts
000052:0x000692c0:	rts
Component::IsTypeExist()
000060:0x000692c8:	cmpi	comp_type, _i0
000060:0x000692d8:	blt	0x0692f8
000060:0x000692e0:	cmpi	comp_type, COMP_TYPE_COUNT
000060:0x000692f0:	blt	0x069310
000062:0x000692f8:	imove	ret, 0x000000
000062:0x00069308:	rts
000065:0x00069310:	imove	ret, 0x000001
000065:0x00069320:	rts
000065:0x00069328:	rts
Component::LogErrorBadCompType()
000074:0x000693d0:	icall	ToString(comp_type)
000074:0x000693d8:	adds	@s03, _s'Bad parameter comp_type='', ret
000074:0x000693e8:	moves	@s02, @s03
000074:0x000693f8:	adds	@s02, @s02, _s''. Parameter must be 0-'
000074:0x00069408:	moves	@s01, @s02
000074:0x00069418:	imove	@m01, 0x000001
000074:0x00069428:	move	@m00, @m01
000074:0x00069438:	icall	ToString(@m00)
000074:0x00069440:	adds	@s01, @s01, ret
000074:0x00069450:	moves	@s00, @s01
000074:0x00069460:	adds	msg, @s00, _s'. Returning component name 'None'.'
000075:0x00069470:	call	LogError(msg, _s'Component', _s'n/a', fnc_name, _s'n/a')
000075:0x00069488:	rts
Component::LogWarningAlredyExist()
000083:0x000694f0:	call	GetNameByType(comp_type)
000083:0x00069500:	adds	@s01, _s'Component '', ret
000083:0x00069510:	moves	@s00, @s01
000083:0x00069520:	adds	msg, @s00, _s'' already exists!'
000084:0x00069530:	call	LogError(msg, _s'Component', _s'n/a', fnc_name, _s'n/a')
000084:0x00069548:	rts
Component::SetParentEntityAI()
000092:0x00069550:	movem	m_ThisEntityAI, e
000092:0x00069560:	rts
Component::LogThis()
000116:0x00069568:	call	Component.GetCompName()
000116:0x00069570:	movefm	[0x3cd16648], m_ThisEntityAI
000116:0x00069580:	call	EntityAI.GetType()
000116:0x00069588:	call	Log(msg, ret, _s'n/a', fnc_name, ret)
000116:0x000695a0:	rts
Component::LogThisWarning()
000124:0x000695a8:	call	Component.GetCompName()
000124:0x000695b0:	movefm	[0x3cd16648], m_ThisEntityAI
000124:0x000695c0:	call	EntityAI.GetType()
000124:0x000695c8:	call	LogWarning(msg, ret, _s'n/a', fnc_name, ret)
000124:0x000695e0:	rts
Component::LogThisError()
000132:0x000695e8:	call	Component.GetCompName()
000132:0x000695f0:	movefm	[0x3cd16648], m_ThisEntityAI
000132:0x00069600:	call	EntityAI.GetType()
000132:0x00069608:	call	LogError(msg, ret, _s'n/a', fnc_name, ret)
000132:0x00069620:	rts
Component::GetCompName()
000140:0x00069628:	call	Component.GetCompType()
000140:0x00069630:	call	GetNameByType(ret)
000140:0x00069640:	moves	ret, ret
000140:0x00069650:	rts
000140:0x00069658:	rts
Component::GetCompType()
000148:0x00069660:	imove	ret, 0xffffffff
000148:0x00069670:	rts
000148:0x00069678:	rts
Component::Event_OnItemAttached()
000156:0x000696a0:	call	Log(_s'Component=>Event_OnItemAttached', _i0)
000156:0x000696b0:	rts
Component::Event_OnItemDetached()
000164:0x000696d8:	call	Log(_s'Component=>Event_OnItemDetached', _i0)
000164:0x000696e8:	rts
ComponentsBank::ComponentsBank()
//scripts/3_Game/tools/ComponentsBank.c
000008:0x000696f0:	movem	m_EntityParent, entity_parent
000008:0x00069700:	rts
ComponentsBank::~ComponentsBank()
000013:0x00069728:	imove	i, 0x000000
000013:0x00069738:	jump	0x069748
000013:0x00069740:	inc	i
000013:0x00069748:	cmpi	i, COMP_TYPE_COUNT
000013:0x00069758:	bge	0x0697a8
000015:0x00069760:	call	ComponentsBank.IsComponentAlreadyExist(i)
000015:0x00069770:	cmpi	ret, _i0
000015:0x00069780:	beq	0x0697a0
000017:0x00069788:	cfv	@c00, m_Components[i]
000017:0x00069798:	delete	@c00
000017:0x000697a0:	jump	0x069740
000017:0x000697a8:	rts
ComponentsBank::GetComponent()
000024:0x000697d0:	call	IsTypeExist(comp_type)
000024:0x000697e0:	cmpi	ret, _i0
000024:0x000697f0:	bne	0x069820
000026:0x000697f8:	call	LogErrorBadCompType(comp_type, _s'EntityAI.GetComponent(int comp_type)')
000027:0x00069808:	movec	ret, NULL
000027:0x00069818:	rts
000030:0x00069820:	call	ComponentsBank.IsComponentAlreadyExist(comp_type)
000030:0x00069830:	cmpi	ret, _i0
000030:0x00069840:	bne	0x069858
000032:0x00069848:	call	ComponentsBank.CreateComponent(comp_type, extended_class_name)
000035:0x00069858:	cfv	ret, m_Components[comp_type]
000035:0x00069868:	rts
000035:0x00069870:	rts
ComponentsBank::DeleteComponent()
000040:0x00069878:	call	ComponentsBank.IsComponentAlreadyExist(comp_type)
000040:0x00069888:	cmpi	ret, _i0
000040:0x00069898:	beq	0x0698d0
000042:0x000698a0:	cfv	@c00, m_Components[comp_type]
000042:0x000698b0:	delete	@c00
000043:0x000698b8:	imove	ret, 0x000001
000043:0x000698c8:	rts
000046:0x000698d0:	imove	ret, 0x000000
000046:0x000698e0:	rts
000046:0x000698e8:	rts
ComponentsBank::CreateComponent()
000051:0x000699a8:	call	IsTypeExist(comp_type)
000051:0x000699b8:	cmpi	ret, _i0
000051:0x000699c8:	bne	0x0699f8
000053:0x000699d0:	call	LogErrorBadCompType(comp_type, _s'EntityAI->CreateComponent(int comp_type)')
000054:0x000699e0:	movec	ret, NULL
000054:0x000699f0:	rts
000057:0x000699f8:	call	ComponentsBank.IsComponentAlreadyExist(comp_type)
000057:0x00069a08:	cmpi	ret, _i0
000057:0x00069a18:	beq	0x069a48
000059:0x00069a20:	call	LogWarningAlredyExist(comp_type, _s'EntityAI->CreateComponent(int comp_type)')
000060:0x00069a30:	cfv	ret, m_Components[comp_type]
000060:0x00069a40:	rts
000064:0x00069a48:	moves	clas_name, extended_class_name
000066:0x00069a58:	cmps	clas_name, Empty
000066:0x00069a68:	bne	0x069a90
000068:0x00069a70:	call	GetNameByType(comp_type)
000068:0x00069a80:	moves	clas_name, ret
000071:0x00069a90:	ncall	ToType(clas_name)
000071:0x00069a98:	icall	Spawn(ret)
000071:0x00069aa0:	movec	comp, ret
000073:0x00069ab0:	movem	e, m_EntityParent
000073:0x00069ac0:	call	Component.SetParentEntityAI(e)
000074:0x00069ad0:	call	Component.Event_OnAwake()
000076:0x00069ad8:	ctv	m_Components[comp_type], comp
000078:0x00069ae8:	call	Component.Event_OnInit()
000080:0x00069af0:	movec	ret, comp
000080:0x00069b00:	rts
000080:0x00069b08:	rts
ComponentsBank::IsComponentAlreadyExist()
000085:0x00069b10:	cfv	@c00, m_Components[comp_type]
000085:0x00069b20:	cmpc	@c00, NULL
000085:0x00069b30:	beq	0x069b50
000087:0x00069b38:	imove	ret, 0x000001
000087:0x00069b48:	rts
000090:0x00069b50:	imove	ret, 0x000000
000090:0x00069b60:	rts
000090:0x00069b68:	rts
Debug::Init()
//scripts/3_Game/tools/Debug.c
000025:0x00069b70:	new	@c00, array<Shape>
000025:0x00069b90:	movetm	m_DebugShapes, @c00
000025:0x00069ba0:	rts
Debug::OnDestroy()
000030:0x00069ba8:	delete	m_DebugShapes
000030:0x00069bb0:	rts
Debug::DestroyAllShapes()
000035:0x00069bd8:	imove	i, 0x000000
000035:0x00069be8:	jump	0x069bf8
000035:0x00069bf0:	inc	i
000035:0x00069bf8:	ncalli	array<Shape>.Count()
000035:0x00069c00:	cmpi	i, ret
000035:0x00069c10:	bge	0x069c50
000037:0x00069c18:	icall	array<Shape>.Get(i)
000037:0x00069c20:	cmpc	ret, NULL
000037:0x00069c30:	beq	0x069c48
000039:0x00069c38:	icall	array<Shape>.Get(i)
000039:0x00069c40:	ncalli	Shape.Destroy()
000039:0x00069c48:	jump	0x069bf0
000043:0x00069c50:	ncalli	array<Shape>.Clear()
000043:0x00069c58:	rts
Debug::RemoveShape()
000048:0x00069cd0:	imove	i, 0x000000
000048:0x00069ce0:	jump	0x069cf0
000048:0x00069ce8:	inc	i
000048:0x00069cf0:	ncalli	array<Shape>.Count()
000048:0x00069cf8:	cmpi	i, ret
000048:0x00069d08:	bge	0x069d78
000050:0x00069d10:	icall	array<Shape>.Get(i)
000050:0x00069d18:	movec	found_shape, ret
000052:0x00069d28:	cmpc	found_shape, NULL
000052:0x00069d38:	beq	0x069d70
000052:0x00069d40:	cmpc	found_shape, shape
000052:0x00069d50:	bne	0x069d70
000054:0x00069d58:	ncalli	Shape.Destroy()
000055:0x00069d60:	ncalli	array<Shape>.Remove(i)
000056:0x00069d68:	rts
000056:0x00069d70:	jump	0x069ce8
000056:0x00069d78:	rts
Debug::SetEnabledLogs()
000063:0x00069d80:	move	m_EnabledLogs, enable
000063:0x00069d90:	rts
Debug::IsLogsEnabled()
000068:0x00069d98:	move	ret, m_EnabledLogs
000068:0x00069da8:	rts
000068:0x00069db0:	rts
Debug::Log()
000084:0x00069db8:	call	LogMessage(LOG_DEBUG, plugin, entity, author, label, message)
000084:0x00069dd0:	rts
Debug::LogInfo()
000099:0x00069dd8:	call	LogMessage(LOG_INFO, plugin, entity, author, label, message)
000099:0x00069df0:	rts
Debug::LogWarning()
000114:0x00069df8:	call	LogMessage(LOG_WARNING, plugin, entity, author, label, message)
000114:0x00069e10:	rts
Debug::LogError()
000128:0x00069e18:	call	LogMessage(LOG_ERROR, plugin, entity, author, label, message)
000128:0x00069e30:	rts
Debug::LogArrayInt()
000133:0x00069e58:	cmpcm	arr, NULL
000133:0x00069e68:	bne	0x069e78
000133:0x00069e70:	rts
000134:0x00069e78:	imove	i, 0x000000
000134:0x00069e88:	jump	0x069e98
000134:0x00069e90:	inc	i
000134:0x00069e98:	ncalli	array<int>.Count()
000134:0x00069ea0:	cmpi	i, ret
000134:0x00069eb0:	bge	0x069ee8
000136:0x00069eb8:	icall	array<int>.Get(i)
000136:0x00069ec0:	icall	ToString(ret)
000136:0x00069ec8:	call	LogMessage(LOG_DEBUG, plugin, entity, author, label, ret)
000136:0x00069ee0:	jump	0x069e90
000136:0x00069ee8:	rts
Debug::LogArrayString()
000143:0x00069f10:	cmpcm	arr, NULL
000143:0x00069f20:	bne	0x069f30
000143:0x00069f28:	rts
000144:0x00069f30:	imove	i, 0x000000
000144:0x00069f40:	jump	0x069f50
000144:0x00069f48:	inc	i
000144:0x00069f50:	ncalli	array<string>.Count()
000144:0x00069f58:	cmpi	i, ret
000144:0x00069f68:	bge	0x069f98
000146:0x00069f70:	icall	array<string>.Get(i)
000146:0x00069f78:	call	LogMessage(LOG_DEBUG, plugin, entity, author, label, ret)
000146:0x00069f90:	jump	0x069f48
000146:0x00069f98:	rts
Debug::ReceivedLogMessageFromServer()
000153:0x00069fa0:	call	SaveLog(message)
000153:0x00069fb0:	rts
Debug::ClearScriptLogs()
000157:0x00069fb8:	call	ClearLogs()
000157:0x00069fc0:	rts
Debug::DrawBox()
000162:0x0006a010:	imove	@m02, 0x00000a
000162:0x0006a020:	move	@m01, @m02
000162:0x0006a030:	ncall	Create(_i1, color, @m01, pos1, pos2)
000162:0x0006a040:	movec	shape, ret
000163:0x0006a050:	icall	array<Shape>.Insert(shape)
000164:0x0006a058:	movec	ret, shape
000164:0x0006a068:	rts
000164:0x0006a070:	rts
Debug::DrawCube()
000169:0x0006a168:	movev	min, pos
000170:0x0006a178:	movev	max, pos
000172:0x0006a188:	mulf	size_h, size, _f0.500000
000174:0x0006a198:	ifv	@f01, min[0x000000]
000174:0x0006a1a8:	subf	@f01, @f01, size_h
000174:0x0006a1b8:	itv	min[0x000000], @f01
000175:0x0006a1c8:	ifv	@f01, min[0x000001]
000175:0x0006a1d8:	subf	@f01, @f01, size_h
000175:0x0006a1e8:	itv	min[0x000001], @f01
000176:0x0006a1f8:	ifv	@f01, min[0x000002]
000176:0x0006a208:	subf	@f01, @f01, size_h
000176:0x0006a218:	itv	min[0x000002], @f01
000178:0x0006a228:	ifv	@f01, max[0x000000]
000178:0x0006a238:	addf	@f01, @f01, size_h
000178:0x0006a248:	itv	max[0x000000], @f01
000179:0x0006a258:	ifv	@f01, max[0x000001]
000179:0x0006a268:	addf	@f01, @f01, size_h
000179:0x0006a278:	itv	max[0x000001], @f01
000180:0x0006a288:	ifv	@f01, max[0x000002]
000180:0x0006a298:	addf	@f01, @f01, size_h
000180:0x0006a2a8:	itv	max[0x000002], @f01
000182:0x0006a2b8:	imove	@m02, 0x00000a
000182:0x0006a2c8:	move	@m01, @m02
000182:0x0006a2d8:	ncall	Create(_i11, color, @m01, min, max)
000182:0x0006a2e8:	movec	shape, ret
000183:0x0006a2f8:	icall	array<Shape>.Insert(shape)
000184:0x0006a300:	movec	ret, shape
000184:0x0006a310:	rts
000184:0x0006a318:	rts
Debug::DrawSphere()
000189:0x0006a370:	imove	@m01, 0x000048
000189:0x0006a380:	move	@m00, @m01
000189:0x0006a390:	ncall	CreateSphere(color, @m00, pos, size)
000189:0x0006a3a0:	movec	shape, ret
000190:0x0006a3b0:	icall	array<Shape>.Insert(shape)
000191:0x0006a3b8:	movec	ret, shape
000191:0x0006a3c8:	rts
000191:0x0006a3d0:	rts
Debug::DrawLine()
000209:0x0006a430:	ctv	pts[_i0], from
000210:0x0006a440:	ctv	pts[_i1], to
000212:0x0006a450:	ncall	CreateLines(color, flags, pts, _i2)
000212:0x0006a460:	movec	shape, ret
000213:0x0006a470:	icall	array<Shape>.Insert(shape)
000214:0x0006a478:	movec	ret, shape
000214:0x0006a488:	rts
000214:0x0006a490:	rts
Debug::DrawArrow()
000219:0x0006a4b8:	cfti	flags, flags
000219:0x0006a4c8:	call	CreateArrow(from, to, size, color, flags)
000219:0x0006a4e0:	movec	shape, ret
000220:0x0006a4f0:	icall	array<Shape>.Insert(shape)
000221:0x0006a4f8:	movec	ret, shape
000221:0x0006a508:	rts
000221:0x0006a510:	rts
Debug::GetBaseConfigClasses()
000232:0x0006a518:	ncalli	array<string>.Clear()
000233:0x0006a520:	icall	array<string>.Insert(CFG_VEHICLESPATH)
000234:0x0006a528:	icall	array<string>.Insert(CFG_WEAPONSPATH)
000235:0x0006a530:	icall	array<string>.Insert(CFG_MAGAZINESPATH)
000236:0x0006a538:	icall	array<string>.Insert(CFG_RECIPESPATH)
000236:0x0006a540:	rts
Debug::GetFiltredConfigClasses()
000247:0x0006a768:	new	@c00, array<string>
000247:0x0006a788:	movetm	searching_in, @c00
000248:0x0006a798:	call	GetBaseConfigClasses(searching_in)
000250:0x0006a7a8:	ncalli	array<string>.Clear()
000252:0x0006a7b0:	icall	ToLower(search_string)
000254:0x0006a7b8:	imove	s, 0x000000
000254:0x0006a7c8:	jump	0x06a7d8
000254:0x0006a7d0:	inc	s
000254:0x0006a7d8:	ncalli	array<string>.Count()
000254:0x0006a7e0:	cmpi	s, ret
000254:0x0006a7f0:	bge	0x06a9b0
000256:0x0006a7f8:	icall	array<string>.Get(s)
000256:0x0006a800:	moves	config_path, ret
000258:0x0006a810:	ncall	GetGame()
000258:0x0006a818:	ncalli	CGame.ConfigGetChildrenCount(config_path)
000258:0x0006a820:	move	objects_count, ret
000259:0x0006a830:	imove	i, 0x000000
000259:0x0006a840:	jump	0x06a850
000259:0x0006a848:	inc	i
000259:0x0006a850:	cmpi	i, objects_count
000259:0x0006a860:	bge	0x06a9a8
000262:0x0006a868:	ncall	GetGame()
000262:0x0006a870:	icall	CGame.ConfigGetChildName(config_path, i, childName)
000264:0x0006a880:	cmpi	only_public, _i0
000264:0x0006a890:	beq	0x06a938
000266:0x0006a898:	ncall	GetGame()
000266:0x0006a8a0:	adds	@s03, config_path, _s' '
000266:0x0006a8b0:	moves	@s02, @s03
000266:0x0006a8c0:	adds	@s02, @s02, childName
000266:0x0006a8d0:	moves	@s01, @s02
000266:0x0006a8e0:	adds	@s01, @s01, _s' scope'
000266:0x0006a8f0:	moves	@s00, @s01
000266:0x0006a900:	ncalli	CGame.ConfigGetInt(@s00)
000266:0x0006a908:	move	scope, ret
000267:0x0006a918:	cmpi	scope, _i0
000267:0x0006a928:	bne	0x06a938
000269:0x0006a930:	jump	0x06a848
000273:0x0006a938:	moves	nchName, childName
000274:0x0006a948:	icall	ToLower(nchName)
000276:0x0006a950:	moves	value, nchName
000276:0x0006a960:	call	Contains(value, search_string)
000276:0x0006a970:	moves	nchName, value
000276:0x0006a980:	cmpi	ret, _i-1
000276:0x0006a990:	beq	0x06a9a0
000278:0x0006a998:	icall	array<string>.Insert(childName)
000278:0x0006a9a0:	jump	0x06a848
000278:0x0006a9a8:	jump	0x06a7d0
000283:0x0006a9b0:	delete	searching_in
000283:0x0006a9b8:	release	searching_in
000283:0x0006a9c0:	rts
Debug::LogMessage()
000293:0x0006ab98:	imove	is_server_log, 0x000000
000294:0x0006aba8:	ncall	GetGame()
000294:0x0006abb0:	cmpc	ret, NULL
000294:0x0006abc0:	bne	0x06abd0
000294:0x0006abc8:	rts
000297:0x0006abd0:	ncall	GetGame()
000297:0x0006abd8:	ncalli	CGame.IsServer()
000297:0x0006abe0:	cmpi	ret, _i0
000297:0x0006abf0:	beq	0x06ac30
000297:0x0006abf8:	ncall	GetGame()
000297:0x0006ac00:	ncalli	CGame.IsMultiplayer()
000297:0x0006ac08:	cmpi	ret, _i0
000297:0x0006ac18:	beq	0x06ac30
000299:0x0006ac20:	imove	is_server_log, 0x000001
000303:0x0006ac30:	ncall	GetGame()
000303:0x0006ac38:	ncalli	CGame.IsDebug()
000303:0x0006ac40:	cmpi	ret, false
000303:0x0006ac50:	bne	0x06ac60
000305:0x0006ac58:	rts
000309:0x0006ac60:	ncall	GetGame()
000309:0x0006ac68:	call	CGame.IsNoLogs()
000309:0x0006ac70:	cmpi	ret, true
000309:0x0006ac80:	bne	0x06ac90
000311:0x0006ac88:	rts
000315:0x0006ac90:	cmpi	is_server_log, _i0
000315:0x0006aca0:	bne	0x06acd0
000315:0x0006aca8:	call	IsLogsEnabled()
000315:0x0006acb0:	cmpi	ret, false
000315:0x0006acc0:	bne	0x06acd0
000317:0x0006acc8:	rts
000322:0x0006acd0:	call	GetDate()
000322:0x0006acd8:	moves	date, ret
000323:0x0006ace8:	moves	callStack, LOG_DEFAULT
000324:0x0006acf8:	moves	env, _s'Client'
000325:0x0006ad08:	moves	msg, Empty
000327:0x0006ad18:	cmpi	is_server_log, _i0
000327:0x0006ad28:	beq	0x06ad40
000329:0x0006ad30:	moves	env, _s'Server'
000332:0x0006ad40:	adds	@s00, date, _s' | '
000332:0x0006ad50:	adds	msg, msg, @s00
000333:0x0006ad60:	adds	@s00, env, _s' | '
000333:0x0006ad70:	adds	msg, msg, @s00
000334:0x0006ad80:	adds	@s00, level, _s' | '
000334:0x0006ad90:	adds	msg, msg, @s00
000335:0x0006ada0:	adds	@s00, plugin, _s' | '
000335:0x0006adb0:	adds	msg, msg, @s00
000336:0x0006adc0:	adds	@s00, entity, _s' | '
000336:0x0006add0:	adds	msg, msg, @s00
000337:0x0006ade0:	adds	@s00, author, _s' | '
000337:0x0006adf0:	adds	msg, msg, @s00
000338:0x0006ae00:	adds	@s00, label, _s' | '
000338:0x0006ae10:	adds	msg, msg, @s00
000339:0x0006ae20:	adds	@s00, message, _s' | '
000339:0x0006ae30:	adds	msg, msg, @s00
000340:0x0006ae40:	moves	@s00, callStack
000340:0x0006ae50:	adds	msg, msg, @s00
000342:0x0006ae60:	cmpi	is_server_log, _i0
000342:0x0006ae70:	beq	0x06aee8
000344:0x0006ae78:	call	SaveLog(msg)
000345:0x0006ae88:	new	@c00, Param1<string>
000345:0x0006aeb0:	movec	msg_p, @c00
000346:0x0006aec0:	movec	params, msg_p
000346:0x0006aed0:	call	CallMethod(CALL_ID_SEND_LOG, params)
000346:0x0006aee0:	jump	0x06aef8
000350:0x0006aee8:	call	SaveLog(msg)
000350:0x0006aef8:	rts
Debug::SaveLog()
000356:0x0006af78:	call	GetFileName()
000356:0x0006af80:	icall	OpenFile(ret, _i8)
000356:0x0006af88:	movea	file_index, ret
000358:0x0006af98:	cmpc	file_index, _i0
000358:0x0006afa8:	bne	0x06afb8
000360:0x0006afb0:	rts
000363:0x0006afb8:	icall	FPrintln(file_index, log_message)
000365:0x0006afc0:	icall	CloseFile(file_index)
000365:0x0006afc8:	rts
Debug::ClearLogs()
000370:0x0006aff0:	call	GetFileName()
000370:0x0006aff8:	icall	FileExist(ret)
000370:0x0006b000:	cmpi	ret, _i0
000370:0x0006b010:	beq	0x06b068
000372:0x0006b018:	call	GetFileName()
000372:0x0006b020:	icall	OpenFile(ret, _i4)
000372:0x0006b028:	movea	file_index, ret
000374:0x0006b038:	cmpc	file_index, _i0
000374:0x0006b048:	bne	0x06b058
000376:0x0006b050:	rts
000379:0x0006b058:	icall	FPrintln(file_index, _s'')
000381:0x0006b060:	icall	CloseFile(file_index)
000381:0x0006b068:	rts
Debug::GetFileName()
000387:0x0006b070:	moves	ret, CFG_FILE_SCRIPT_LOG_EXT
000387:0x0006b080:	rts
000387:0x0006b088:	rts
Debug::GetDate()
000399:0x0006b190:	icall	GetYearMonthDay(year, month, day)
000400:0x0006b1a0:	icall	GetHourMinuteSecond(hour, minute, second)
000402:0x0006b1b0:	move	value, month
000402:0x0006b1c0:	call	ToStringLen(value, _i2)
000402:0x0006b1d0:	move	month, value
000402:0x0006b1e0:	adds	@s08, ret, _s'-'
000402:0x0006b1f0:	moves	@s06, @s08
000402:0x0006b200:	move	value, day
000402:0x0006b210:	pushs	ret
000402:0x0006b218:	call	ToStringLen(value, _i2)
000402:0x0006b228:	moves	@s08, ret
000402:0x0006b238:	pops	ret
000402:0x0006b240:	move	day, value
000402:0x0006b250:	adds	@s06, @s06, @s08
000402:0x0006b260:	moves	@s05, @s06
000402:0x0006b270:	adds	@s05, @s05, _s' '
000402:0x0006b280:	moves	@s04, @s05
000402:0x0006b290:	move	value, hour
000402:0x0006b2a0:	pushs	ret
000402:0x0006b2a8:	call	ToStringLen(value, _i2)
000402:0x0006b2b8:	moves	@s05, ret
000402:0x0006b2c8:	pops	ret
000402:0x0006b2d0:	move	hour, value
000402:0x0006b2e0:	adds	@s04, @s04, @s05
000402:0x0006b2f0:	moves	@s03, @s04
000402:0x0006b300:	adds	@s03, @s03, _s':'
000402:0x0006b310:	moves	@s02, @s03
000402:0x0006b320:	move	value, minute
000402:0x0006b330:	pushs	ret
000402:0x0006b338:	call	ToStringLen(value, _i2)
000402:0x0006b348:	moves	@s03, ret
000402:0x0006b358:	pops	ret
000402:0x0006b360:	move	minute, value
000402:0x0006b370:	adds	@s02, @s02, @s03
000402:0x0006b380:	moves	@s01, @s02
000402:0x0006b390:	adds	@s01, @s01, _s':'
000402:0x0006b3a0:	moves	@s00, @s01
000402:0x0006b3b0:	move	value, second
000402:0x0006b3c0:	pushs	ret
000402:0x0006b3c8:	call	ToStringLen(value, _i2)
000402:0x0006b3d8:	moves	@s01, ret
000402:0x0006b3e8:	pops	ret
000402:0x0006b3f0:	move	second, value
000402:0x0006b400:	adds	date, @s00, @s01
000404:0x0006b410:	moves	ret, date
000404:0x0006b420:	rts
000404:0x0006b428:	rts
DebugPrint::OnInit()
//scripts/3_Game/tools/DebugPrint.c
000016:0x0006b4d0:	ctv	s_MsgPrefix[MSG_LOG], _s'Log'
000017:0x0006b4e0:	ctv	s_MsgPrefix[MSG_WARNING], _s'Warning'
000018:0x0006b4f0:	ctv	s_MsgPrefix[MSG_ERROR], _s'Error'
000020:0x0006b500:	moves	s_MsgStackMarkStart, _s'-- Stack trace --'
000021:0x0006b510:	imove	s_MsgStackMarked, 0x000000
000022:0x0006b520:	moves	s_MsgStackMarkEnd, _s'-----------------'
000024:0x0006b530:	imove	s_TraceAllLogs, 0x000000
000024:0x0006b540:	rts
DebugPrint::Log()
000044:0x0006b548:	call	LogMessage(msg, MSG_LOG, s_TraceAllLogs)
000044:0x0006b558:	rts
DebugPrint::LogAndTrace()
000063:0x0006b560:	call	LogMessage(msg, MSG_LOG, true)
000063:0x0006b570:	rts
DebugPrint::LogWarning()
000078:0x0006b578:	call	LogMessage(msg, MSG_WARNING, s_TraceAllLogs)
000078:0x0006b588:	rts
DebugPrint::LogWarningAndTrace()
000097:0x0006b590:	call	LogMessage(msg, MSG_WARNING, true)
000097:0x0006b5a0:	rts
DebugPrint::LogError()
000112:0x0006b5a8:	call	LogMessage(msg, MSG_ERROR, s_TraceAllLogs)
000112:0x0006b5b8:	rts
DebugPrint::LogErrorAndTrace()
000131:0x0006b5c0:	call	LogMessage(msg, MSG_ERROR, true)
000131:0x0006b5d0:	rts
DebugPrint::AdjustDebugLog()
000148:0x0006b5d8:	call	IsStackTrace(msg)
000148:0x0006b5e8:	cmpi	ret, _i0
000148:0x0006b5f8:	beq	0x06b628
000150:0x0006b600:	call	TrimStackTrace(msg)
000150:0x0006b610:	moves	ret, ret
000150:0x0006b620:	rts
000153:0x0006b628:	call	IsDebugLog(msg)
000153:0x0006b638:	cmpi	ret, _i0
000153:0x0006b648:	beq	0x06b678
000155:0x0006b650:	call	TrimDebugLog(msg)
000155:0x0006b660:	moves	ret, ret
000155:0x0006b670:	rts
000158:0x0006b678:	moves	ret, msg
000158:0x0006b688:	rts
000158:0x0006b690:	rts
DebugPrint::EnableTracingLogs()
000163:0x0006b698:	move	s_TraceAllLogs, enable
000163:0x0006b6a8:	rts
DebugPrint::IsDebugLog()
000168:0x0006b6d0:	imove	i, 0x000000
000168:0x0006b6e0:	jump	0x06b6f0
000168:0x0006b6e8:	inc	i
000168:0x0006b6f0:	cmpi	i, MSG_COUNT
000168:0x0006b700:	bge	0x06b758
000170:0x0006b708:	cfv	@s01, s_MsgPrefix[i]
000170:0x0006b718:	ncall	IndexOf(msg, @s01)
000170:0x0006b720:	cmpi	ret, _i-1
000170:0x0006b730:	beq	0x06b750
000172:0x0006b738:	imove	ret, 0x000001
000172:0x0006b748:	rts
000172:0x0006b750:	jump	0x06b6e8
000176:0x0006b758:	imove	ret, 0x000000
000176:0x0006b768:	rts
000176:0x0006b770:	rts
DebugPrint::TrimDebugLog()
000180:0x0006b868:	ncall	Length(msg)
000180:0x0006b870:	move	msg_lenght, ret
000181:0x0006b880:	ncall	IndexOf(msg, _s''')
000181:0x0006b888:	addi	log_start, ret, _i1
000183:0x0006b898:	cmpi	log_start, _i-1
000183:0x0006b8a8:	bne	0x06b8c8
000185:0x0006b8b0:	moves	ret, msg
000185:0x0006b8c0:	rts
000188:0x0006b8c8:	subi	@m01, msg_lenght, log_start
000188:0x0006b8d8:	move	@m00, @m01
000188:0x0006b8e8:	subi	log_lenght, @m00, _i2
000190:0x0006b8f8:	icall	Substring(msg, log_start, log_lenght)
000190:0x0006b908:	moves	ret, ret
000190:0x0006b918:	rts
000190:0x0006b920:	rts
DebugPrint::IsStackTrace()
000194:0x0006b928:	cmpi	s_MsgStackMarked, _i0
000194:0x0006b938:	beq	0x06b988
000194:0x0006b940:	ncall	IndexOf(msg, s_MsgStackMarkEnd)
000194:0x0006b948:	cmpi	ret, _i-1
000194:0x0006b958:	beq	0x06b988
000196:0x0006b960:	imove	s_MsgStackMarked, 0x000000
000197:0x0006b970:	imove	ret, 0x000000
000197:0x0006b980:	rts
000200:0x0006b988:	cmpi	s_MsgStackMarked, _i0
000200:0x0006b998:	beq	0x06b9b8
000202:0x0006b9a0:	imove	ret, 0x000001
000202:0x0006b9b0:	rts
000205:0x0006b9b8:	ncall	IndexOf(msg, s_MsgStackMarkStart)
000205:0x0006b9c0:	cmpi	ret, _i-1
000205:0x0006b9d0:	beq	0x06ba00
000207:0x0006b9d8:	imove	s_MsgStackMarked, 0x000001
000208:0x0006b9e8:	imove	ret, 0x000001
000208:0x0006b9f8:	rts
000211:0x0006ba00:	imove	ret, 0x000000
000211:0x0006ba10:	rts
000211:0x0006ba18:	rts
DebugPrint::TrimStackTrace()
000215:0x0006ba40:	ncall	IndexOf(msg, _s'DebugPrint.c')
000215:0x0006ba48:	cmpi	ret, _i-1
000215:0x0006ba58:	beq	0x06ba78
000217:0x0006ba60:	moves	ret, Empty
000217:0x0006ba70:	rts
000220:0x0006ba78:	moves	ret, msg
000220:0x0006ba88:	rts
000220:0x0006ba90:	rts
DebugPrint::LogMessage()
000225:0x0006bab8:	cfv	@s02, s_MsgPrefix[msg_type]
000225:0x0006bac8:	adds	@s02, _s'[', @s02
000225:0x0006bad8:	moves	@s01, @s02
000225:0x0006bae8:	adds	@s01, @s01, _s']: '
000225:0x0006baf8:	moves	@s00, @s01
000225:0x0006bb08:	adds	@s00, @s00, msg
000225:0x0006bb18:	moves	msg, @s00
000227:0x0006bb28:	icall	Print(msg)
000229:0x0006bb30:	cmpi	trace, _i0
000229:0x0006bb40:	beq	0x06bb50
000231:0x0006bb48:	icall	DumpStack()
000231:0x0006bb50:	rts
GetDispatcher()
//scripts/3_Game/tools/Dispatcher.c
000021:0x0006bb78:	cmpc	g_Dispatcher, NULL
000021:0x0006bb88:	bne	0x06bbb0
000023:0x0006bb90:	icall	Print(_s'[Dispatcher.h]=>GetDispatcher(): g_Dispatcher is NULL!!')
000024:0x0006bb98:	movec	ret, NULL
000024:0x0006bba8:	rts
000027:0x0006bbb0:	movec	ret, g_Dispatcher
000027:0x0006bbc0:	rts
000027:0x0006bbc8:	rts
SetDispatcher()
000032:0x0006bbd0:	cmpc	g_Dispatcher, NULL
000032:0x0006bbe0:	beq	0x06bbf0
000034:0x0006bbe8:	delete	g_Dispatcher
000037:0x0006bbf0:	movec	g_Dispatcher, dispatcher
000037:0x0006bc00:	rts
CallMethod()
000042:0x0006bc50:	call	GetDispatcher()
000042:0x0006bc58:	movec	dis, ret
000043:0x0006bc68:	cmpc	dis, NULL
000043:0x0006bc78:	beq	0x06bca8
000045:0x0006bc80:	call	Dispatcher.CallMethod(call_id, params)
000045:0x0006bc90:	movec	ret, ret
000045:0x0006bca0:	rts
000048:0x0006bca8:	movec	ret, NULL
000048:0x0006bcb8:	rts
000048:0x0006bcc0:	rts
Input::CheckKeyCollision()
//scripts/3_Game/tools/input.c
000046:0x0006bfd8:	new	@c00, array<int>
000046:0x0006bff8:	movetm	keys, @c00
000047:0x0006c008:	imove	basicKey, 0x000000
000048:0x0006c018:	imove	sepraratedKey, 0x000000
000049:0x0006c028:	icall	Input.SeparateComboAndKey(key, sepraratedKey, basicKey)
000052:0x0006c038:	cmpi	sepraratedKey, _i0
000052:0x0006c048:	beq	0x06c068
000054:0x0006c050:	imove	is_combo, 0x000001
000054:0x0006c060:	jump	0x06c078
000058:0x0006c068:	imove	is_combo, 0x000000
000061:0x0006c078:	imove	ai, 0x000000
000061:0x0006c088:	jump	0x06c098
000061:0x0006c090:	inc	ai
000061:0x0006c098:	ncalli	Input.GetActionsCount()
000061:0x0006c0a0:	cmpi	ai, ret
000061:0x0006c0b0:	bge	0x06c290
000063:0x0006c0b8:	cmpi	ai, actionIndex
000063:0x0006c0c8:	bne	0x06c0d8
000063:0x0006c0d0:	jump	0x06c090
000064:0x0006c0d8:	ncalli	Input.IsActionGroupCollision(ai, actionIndex)
000064:0x0006c0e0:	cmpi	ret, _i0
000064:0x0006c0f0:	bne	0x06c100
000064:0x0006c0f8:	jump	0x06c090
000066:0x0006c100:	movefm	[0x3cd43240], keys
000066:0x0006c110:	ncalli	Input.GetActionKeys(ai, [0x3cd43240])
000068:0x0006c118:	imove	ki, 0x000000
000068:0x0006c128:	jump	0x06c138
000068:0x0006c130:	inc	ki
000068:0x0006c138:	ncalli	array<int>.Count()
000068:0x0006c140:	cmpi	ki, ret
000068:0x0006c150:	bge	0x06c288
000070:0x0006c158:	icall	array<int>.Get(ki)
000070:0x0006c160:	move	otherKey, ret
000071:0x0006c170:	cmpi	key, otherKey
000071:0x0006c180:	bne	0x06c1a8
000073:0x0006c188:	move	ret, ai
000073:0x0006c198:	delete	keys
000073:0x0006c1a0:	rts
000076:0x0006c1a8:	imove	otherBasicKey, 0x000000
000077:0x0006c1b8:	imove	otherSepraratedKey, 0x000000
000080:0x0006c1c8:	icall	Input.SeparateComboAndKey(otherKey, otherSepraratedKey, otherBasicKey)
000082:0x0006c1d8:	cmpi	otherSepraratedKey, _i0
000082:0x0006c1e8:	beq	0x06c208
000084:0x0006c1f0:	imove	other_is_combo, 0x000001
000084:0x0006c200:	jump	0x06c218
000088:0x0006c208:	imove	other_is_combo, 0x000000
000091:0x0006c218:	cmpi	is_combo, other_is_combo
000091:0x0006c228:	beq	0x06c280
000093:0x0006c230:	cmpi	otherBasicKey, sepraratedKey
000093:0x0006c240:	beq	0x06c260
000093:0x0006c248:	cmpi	otherSepraratedKey, basicKey
000093:0x0006c258:	bne	0x06c280
000095:0x0006c260:	move	ret, ai
000095:0x0006c270:	delete	keys
000095:0x0006c278:	rts
000095:0x0006c280:	jump	0x06c130
000095:0x0006c288:	jump	0x06c090
000101:0x0006c290:	imove	ret, 0xffffffff
000101:0x0006c2a0:	delete	keys
000101:0x0006c2a8:	rts
000101:0x0006c2b0:	delete	keys
000101:0x0006c2b8:	rts
Input::GetActionExclusive()
000117:0x0006c2c0:	ncalli	Input.GetAction(action, check_focus, true)
000117:0x0006c2d0:	move	ret, ret
000117:0x0006c2e0:	rts
000117:0x0006c2e8:	rts
JsonObject::JsonObject()
//scripts/3_Game/tools/JsonObject.c
000011:0x0006c2f0:	new	@c00, map<string,string>
000011:0x0006c310:	movetm	m_Strings, @c00
000012:0x0006c320:	new	@c00, map<string,int>
000012:0x0006c340:	movetm	m_Ints, @c00
000013:0x0006c350:	new	@c00, map<string,float>
000013:0x0006c370:	movetm	m_Floats, @c00
000014:0x0006c380:	new	@c00, map<string,bool>
000014:0x0006c3a0:	movetm	m_Bools, @c00
000015:0x0006c3b0:	new	@c00, map<string,Vector2>
000015:0x0006c3d0:	movetm	m_Vectors2, @c00
000015:0x0006c3e0:	rts
JsonObject::~JsonObject()
000020:0x0006c3e8:	call	JsonObject.Clear()
000020:0x0006c3f0:	rts
JsonObject::Clear()
000025:0x0006c418:	imove	i, 0x000000
000025:0x0006c428:	jump	0x06c438
000025:0x0006c430:	inc	i
000025:0x0006c438:	movefm	[0x3cd420e8], m_Vectors2
000025:0x0006c448:	ncalli	map<string,Vector2>.Count()
000025:0x0006c450:	cmpi	i, ret
000025:0x0006c460:	bge	0x06c4c0
000027:0x0006c468:	movefm	[0x3cd420e8], m_Vectors2
000027:0x0006c478:	icall	map<string,Vector2>.GetElement(i)
000027:0x0006c480:	cmpc	ret, NULL
000027:0x0006c490:	beq	0x06c4b8
000029:0x0006c498:	movefm	[0x3cd420e8], m_Vectors2
000029:0x0006c4a8:	icall	map<string,Vector2>.GetElement(i)
000029:0x0006c4b0:	delete	ret
000029:0x0006c4b8:	jump	0x06c430
000033:0x0006c4c0:	movefm	[0x11d0d5c0], m_Strings
000033:0x0006c4d0:	ncalli	map<string,string>.Clear()
000034:0x0006c4d8:	movefm	[0x11d0d538], m_Ints
000034:0x0006c4e8:	ncalli	map<string,int>.Clear()
000035:0x0006c4f0:	movefm	[0x11d0d4b8], m_Floats
000035:0x0006c500:	ncalli	map<string,float>.Clear()
000036:0x0006c508:	movefm	[0x3cd42020], m_Bools
000036:0x0006c518:	ncalli	map<string,bool>.Clear()
000037:0x0006c520:	movefm	[0x3cd420e8], m_Vectors2
000037:0x0006c530:	ncalli	map<string,Vector2>.Clear()
000037:0x0006c538:	rts
JsonObject::AddString()
000042:0x0006c680:	new	@c00, array<string>
000042:0x0006c6a0:	movetm	strgs, @c00
000043:0x0006c6b0:	moves	value, value
000043:0x0006c6c0:	call	Split(value, _s'"', strgs)
000043:0x0006c6d0:	moves	value, value
000045:0x0006c6e0:	ncalli	array<string>.Count()
000045:0x0006c6e8:	cmpi	ret, _i1
000045:0x0006c6f8:	ble	0x06c898
000047:0x0006c700:	moves	value, _s''
000048:0x0006c710:	ncalli	array<string>.Count()
000048:0x0006c718:	move	str_count, ret
000050:0x0006c728:	imove	i, 0x000000
000050:0x0006c738:	jump	0x06c748
000050:0x0006c740:	inc	i
000050:0x0006c748:	cmpi	i, str_count
000050:0x0006c758:	bge	0x06c898
000052:0x0006c760:	icall	array<string>.Get(i)
000052:0x0006c768:	moves	s, ret
000054:0x0006c778:	ncall	Length(s)
000054:0x0006c780:	move	length, ret
000056:0x0006c790:	subi	@m01, length, _i1
000056:0x0006c7a0:	move	@m00, @m01
000056:0x0006c7b0:	moves	value, s
000056:0x0006c7c0:	call	Get(value, @m00)
000056:0x0006c7d0:	moves	s, value
000056:0x0006c7e0:	cmps	ret, _s'\'
000056:0x0006c7f0:	beq	0x06c890
000058:0x0006c7f8:	moves	@s00, s
000058:0x0006c808:	adds	value, value, @s00
000060:0x0006c818:	subi	@m01, str_count, _i1
000060:0x0006c828:	move	@m00, @m01
000060:0x0006c838:	cmpi	i, @m00
000060:0x0006c848:	bge	0x06c890
000062:0x0006c850:	moves	@s00, _s'\'
000062:0x0006c860:	adds	value, value, @s00
000063:0x0006c870:	moves	@s00, _s'"'
000063:0x0006c880:	adds	value, value, @s00
000063:0x0006c890:	jump	0x06c740
000069:0x0006c898:	movefm	[0x11d0d5c0], m_Strings
000069:0x0006c8a8:	icall	map<string,string>.Insert(name, value)
000069:0x0006c8b0:	release	strgs
000069:0x0006c8b8:	rts
JsonObject::AddInt()
000074:0x0006c8c0:	movefm	[0x11d0d538], m_Ints
000074:0x0006c8d0:	icall	map<string,int>.Insert(name, value)
000074:0x0006c8d8:	rts
JsonObject::AddFloat()
000079:0x0006c8e0:	movefm	[0x11d0d4b8], m_Floats
000079:0x0006c8f0:	icall	map<string,float>.Insert(name, value)
000079:0x0006c8f8:	rts
JsonObject::AddBool()
000084:0x0006c900:	movefm	[0x3cd42020], m_Bools
000084:0x0006c910:	icall	map<string,bool>.Insert(name, value)
000084:0x0006c918:	rts
JsonObject::AddVector2()
000089:0x0006c968:	new	@c00, Vector2
000089:0x0006c990:	movec	v, @c00
000090:0x0006c9a0:	movefm	[0x3cd420e8], m_Vectors2
000090:0x0006c9b0:	icall	map<string,Vector2>.Insert(name, v)
000090:0x0006c9b8:	rts
JsonObject::GetJson()
000098:0x0006cc88:	moves	jsn, _s''
000099:0x0006cc98:	moves	@s00, _s'{'
000099:0x0006cca8:	adds	jsn, jsn, @s00
000102:0x0006ccb8:	imove	i, 0x000000
000102:0x0006ccc8:	jump	0x06ccd8
000102:0x0006ccd0:	inc	i
000102:0x0006ccd8:	movefm	[0x11d0d5c0], m_Strings
000102:0x0006cce8:	ncalli	map<string,string>.Count()
000102:0x0006ccf0:	cmpi	i, ret
000102:0x0006cd00:	bge	0x06ce20
000104:0x0006cd08:	ncall	Length(jsn)
000104:0x0006cd10:	cmpi	ret, _i1
000104:0x0006cd20:	ble	0x06cd48
000106:0x0006cd28:	moves	@s00, _s','
000106:0x0006cd38:	adds	jsn, jsn, @s00
000109:0x0006cd48:	movefm	[0x11d0d5c0], m_Strings
000109:0x0006cd58:	icall	map<string,string>.GetKey(i)
000109:0x0006cd60:	moves	name, ret
000110:0x0006cd70:	movefm	[0x11d0d5c0], m_Strings
000110:0x0006cd80:	icall	map<string,string>.GetElement(i)
000110:0x0006cd88:	moves	value_str, ret
000112:0x0006cd98:	adds	@s04, _s'"', name
000112:0x0006cda8:	moves	@s03, @s04
000112:0x0006cdb8:	adds	@s03, @s03, _s'":"'
000112:0x0006cdc8:	moves	@s02, @s03
000112:0x0006cdd8:	adds	@s02, @s02, value_str
000112:0x0006cde8:	moves	@s01, @s02
000112:0x0006cdf8:	adds	@s00, @s01, _s'"'
000112:0x0006ce08:	adds	jsn, jsn, @s00
000112:0x0006ce18:	jump	0x06ccd0
000116:0x0006ce20:	imove	i, 0x000000
000116:0x0006ce30:	jump	0x06ce40
000116:0x0006ce38:	inc	i
000116:0x0006ce40:	movefm	[0x11d0d538], m_Ints
000116:0x0006ce50:	ncalli	map<string,int>.Count()
000116:0x0006ce58:	cmpi	i, ret
000116:0x0006ce68:	bge	0x06cf70
000118:0x0006ce70:	ncall	Length(jsn)
000118:0x0006ce78:	cmpi	ret, _i1
000118:0x0006ce88:	ble	0x06ceb0
000120:0x0006ce90:	moves	@s00, _s','
000120:0x0006cea0:	adds	jsn, jsn, @s00
000123:0x0006ceb0:	movefm	[0x11d0d538], m_Ints
000123:0x0006cec0:	icall	map<string,int>.GetKey(i)
000123:0x0006cec8:	moves	name, ret
000124:0x0006ced8:	movefm	[0x11d0d538], m_Ints
000124:0x0006cee8:	icall	map<string,int>.GetElement(i)
000124:0x0006cef0:	move	value_int, ret
000126:0x0006cf00:	adds	@s03, _s'"', name
000126:0x0006cf10:	moves	@s02, @s03
000126:0x0006cf20:	adds	@s02, @s02, _s'":'
000126:0x0006cf30:	moves	@s01, @s02
000126:0x0006cf40:	icall	ToString(value_int)
000126:0x0006cf48:	adds	@s00, @s01, ret
000126:0x0006cf58:	adds	jsn, jsn, @s00
000126:0x0006cf68:	jump	0x06ce38
000130:0x0006cf70:	imove	i, 0x000000
000130:0x0006cf80:	jump	0x06cf90
000130:0x0006cf88:	inc	i
000130:0x0006cf90:	movefm	[0x11d0d4b8], m_Floats
000130:0x0006cfa0:	ncalli	map<string,float>.Count()
000130:0x0006cfa8:	cmpi	i, ret
000130:0x0006cfb8:	bge	0x06d0c0
000132:0x0006cfc0:	ncall	Length(jsn)
000132:0x0006cfc8:	cmpi	ret, _i1
000132:0x0006cfd8:	ble	0x06d000
000134:0x0006cfe0:	moves	@s00, _s','
000134:0x0006cff0:	adds	jsn, jsn, @s00
000137:0x0006d000:	movefm	[0x11d0d4b8], m_Floats
000137:0x0006d010:	icall	map<string,float>.GetKey(i)
000137:0x0006d018:	moves	name, ret
000138:0x0006d028:	movefm	[0x11d0d4b8], m_Floats
000138:0x0006d038:	icall	map<string,float>.GetElement(i)
000138:0x0006d040:	move	value_flt, ret
000140:0x0006d050:	adds	@s03, _s'"', name
000140:0x0006d060:	moves	@s02, @s03
000140:0x0006d070:	adds	@s02, @s02, _s'":'
000140:0x0006d080:	moves	@s01, @s02
000140:0x0006d090:	icall	ToString(value_flt)
000140:0x0006d098:	adds	@s00, @s01, ret
000140:0x0006d0a8:	adds	jsn, jsn, @s00
000140:0x0006d0b8:	jump	0x06cf88
000144:0x0006d0c0:	imove	i, 0x000000
000144:0x0006d0d0:	jump	0x06d0e0
000144:0x0006d0d8:	inc	i
000144:0x0006d0e0:	movefm	[0x3cd42020], m_Bools
000144:0x0006d0f0:	ncalli	map<string,bool>.Count()
000144:0x0006d0f8:	cmpi	i, ret
000144:0x0006d108:	bge	0x06d238
000146:0x0006d110:	ncall	Length(jsn)
000146:0x0006d118:	cmpi	ret, _i1
000146:0x0006d128:	ble	0x06d150
000148:0x0006d130:	moves	@s00, _s','
000148:0x0006d140:	adds	jsn, jsn, @s00
000151:0x0006d150:	movefm	[0x3cd42020], m_Bools
000151:0x0006d160:	icall	map<string,bool>.GetKey(i)
000151:0x0006d168:	moves	name, ret
000153:0x0006d178:	movefm	[0x3cd42020], m_Bools
000153:0x0006d188:	icall	map<string,bool>.GetElement(i)
000153:0x0006d190:	cmpi	ret, _i0
000153:0x0006d1a0:	beq	0x06d1f0
000155:0x0006d1a8:	adds	@s02, _s'"', name
000155:0x0006d1b8:	moves	@s01, @s02
000155:0x0006d1c8:	adds	@s00, @s01, _s'":true'
000155:0x0006d1d8:	adds	jsn, jsn, @s00
000155:0x0006d1e8:	jump	0x06d230
000159:0x0006d1f0:	adds	@s02, _s'"', name
000159:0x0006d200:	moves	@s01, @s02
000159:0x0006d210:	adds	@s00, @s01, _s'":false'
000159:0x0006d220:	adds	jsn, jsn, @s00
000159:0x0006d230:	jump	0x06d0d8
000164:0x0006d238:	imove	i, 0x000000
000164:0x0006d248:	jump	0x06d258
000164:0x0006d250:	inc	i
000164:0x0006d258:	movefm	[0x3cd420e8], m_Vectors2
000164:0x0006d268:	ncalli	map<string,Vector2>.Count()
000164:0x0006d270:	cmpi	i, ret
000164:0x0006d280:	bge	0x06d3f0
000166:0x0006d288:	ncall	Length(jsn)
000166:0x0006d290:	cmpi	ret, _i1
000166:0x0006d2a0:	ble	0x06d2c8
000168:0x0006d2a8:	moves	@s00, _s','
000168:0x0006d2b8:	adds	jsn, jsn, @s00
000171:0x0006d2c8:	movefm	[0x3cd420e8], m_Vectors2
000171:0x0006d2d8:	icall	map<string,Vector2>.GetKey(i)
000171:0x0006d2e0:	moves	name, ret
000172:0x0006d2f0:	movefm	[0x3cd420e8], m_Vectors2
000172:0x0006d300:	icall	map<string,Vector2>.GetElement(i)
000172:0x0006d308:	movec	value_vct, ret
000174:0x0006d318:	adds	@s06, _s'"', name
000174:0x0006d328:	moves	@s05, @s06
000174:0x0006d338:	adds	@s05, @s05, _s'":{"x":'
000174:0x0006d348:	moves	@s04, @s05
000174:0x0006d358:	icall	ToString(x)
000174:0x0006d360:	adds	@s04, @s04, ret
000174:0x0006d370:	moves	@s03, @s04
000174:0x0006d380:	adds	@s03, @s03, _s',"y":'
000174:0x0006d390:	moves	@s02, @s03
000174:0x0006d3a0:	icall	ToString(y)
000174:0x0006d3a8:	adds	@s02, @s02, ret
000174:0x0006d3b8:	moves	@s01, @s02
000174:0x0006d3c8:	adds	@s00, @s01, _s'}'
000174:0x0006d3d8:	adds	jsn, jsn, @s00
000174:0x0006d3e8:	jump	0x06d250
000177:0x0006d3f0:	moves	@s00, _s'}'
000177:0x0006d400:	adds	jsn, jsn, @s00
000179:0x0006d410:	moves	ret, jsn
000179:0x0006d420:	rts
000179:0x0006d428:	rts
LogTemplates::RegisterLogTamplate()
//scripts/3_Game/tools/LogTemplates.c
000010:0x0006d4f0:	cmpcm	m_LogTemplates, NULL
000010:0x0006d500:	bne	0x06d538
000012:0x0006d508:	new	@c00, map<LogTemplateID,Param3<string,string,string>>
000012:0x0006d528:	movetm	m_LogTemplates, @c00
000015:0x0006d538:	icall	map<LogTemplateID,Param3<string,string,string>>.Contains(template_id)
000015:0x0006d540:	cmpi	ret, _i0
000015:0x0006d550:	beq	0x06d5c8
000017:0x0006d558:	icall	ToString(template_id, _i0, _i0)
000017:0x0006d568:	adds	@s02, _s'Template ID: ', ret
000017:0x0006d578:	moves	@s01, @s02
000017:0x0006d588:	adds	@s01, @s01, _s' is alredy exist!'
000017:0x0006d598:	moves	@s00, @s01
000017:0x0006d5a8:	call	Log(@s00, _s'LogTemplate.h -> OnInit()', _s'System', _s'Template Registration', _s'None')
000017:0x0006d5c0:	jump	0x06d608
000021:0x0006d5c8:	new	@c00, Param3<string,string,string>
000021:0x0006d5f0:	movec	params, @c00
000022:0x0006d600:	icall	map<LogTemplateID,Param3<string,string,string>>.Set(template_id, params)
000022:0x0006d608:	rts
LogTemplates::Init()
000042:0x0006d6f0:	call	RegisterLogTamplate(TEMPLATE_UNKNOWN, _s'Unknown', _s'Unknown', _s'Unknown')
000043:0x0006d700:	call	RegisterLogTamplate(TEMPLATE_JANOSIK, _s'Janosik', _s'GUI', _s'None')
000044:0x0006d710:	call	RegisterLogTamplate(TEMPLATE_PLAYER_WEIGHT, _s'Unknown', _s'PlayerBase', _s'Weight')
000045:0x0006d720:	call	RegisterLogTamplate(TEMPLATE_BROADCAST, _s'Unknown', _s'PluginMessageManager', _s'Broadcast')
000045:0x0006d730:	rts
LogTemplates::OnDestroy()
000051:0x0006d7a0:	imove	i, 0x000000
000051:0x0006d7b0:	jump	0x06d7c0
000051:0x0006d7b8:	inc	i
000051:0x0006d7c0:	ncalli	map<LogTemplateID,Param3<string,string,string>>.Count()
000051:0x0006d7c8:	cmpi	i, ret
000051:0x0006d7d8:	bge	0x06d820
000053:0x0006d7e0:	icall	map<LogTemplateID,Param3<string,string,string>>.GetElement(i)
000053:0x0006d7e8:	movec	t, ret
000055:0x0006d7f8:	cmpc	t, NULL
000055:0x0006d808:	beq	0x06d818
000057:0x0006d810:	delete	t
000057:0x0006d818:	jump	0x06d7b8
000061:0x0006d820:	delete	m_LogTemplates
000061:0x0006d828:	rts
LogTemplates::GetTemplate()
000065:0x0006d890:	cmpcm	m_LogTemplates, NULL
000065:0x0006d8a0:	beq	0x06d8e8
000065:0x0006d8a8:	icall	map<LogTemplateID,Param3<string,string,string>>.Contains(template_id)
000065:0x0006d8b0:	cmpi	ret, _i0
000065:0x0006d8c0:	beq	0x06d8e8
000067:0x0006d8c8:	icall	map<LogTemplateID,Param3<string,string,string>>.Get(template_id)
000067:0x0006d8d0:	movec	ret, ret
000067:0x0006d8e0:	rts
000070:0x0006d8e8:	icall	ToString(template_id, _i0, _i0)
000070:0x0006d8f8:	adds	@s02, _s'Template ID: ', ret
000070:0x0006d908:	moves	@s01, @s02
000070:0x0006d918:	adds	@s01, @s01, _s' does not exist!'
000070:0x0006d928:	moves	@s00, @s01
000070:0x0006d938:	call	Log(@s00, _s'LogTemplate.h -> GetTemplate()', _s'System', _s'Get Log Template', _s'None')
000071:0x0006d950:	movec	ret, NULL
000071:0x0006d960:	rts
000071:0x0006d968:	rts
Log()
000088:0x0006d9c0:	call	GetTemplate(template_id)
000088:0x0006d9d0:	movec	log_template, ret
000090:0x0006d9e0:	moves	plugin, param2
000090:0x0006d9f0:	moves	author, param1
000090:0x0006da00:	moves	label, param3
000090:0x0006da10:	call	Log(message, plugin, author, label, _s'n/a')
000090:0x0006da28:	rts
LogInfo()
000106:0x0006da50:	call	GetTemplate(template_id)
000106:0x0006da60:	movec	log_template, ret
000108:0x0006da70:	moves	plugin, param2
000108:0x0006da80:	moves	author, param1
000108:0x0006da90:	moves	label, param3
000108:0x0006daa0:	call	LogInfo(message, plugin, author, label, _s'n/a')
000108:0x0006dab8:	rts
LogWarning()
000124:0x0006dae0:	call	GetTemplate(template_id)
000124:0x0006daf0:	movec	log_template, ret
000126:0x0006db00:	moves	plugin, param2
000126:0x0006db10:	moves	author, param1
000126:0x0006db20:	moves	label, param3
000126:0x0006db30:	call	LogWarning(message, plugin, author, label, _s'n/a')
000126:0x0006db48:	rts
LogError()
000142:0x0006db70:	call	GetTemplate(template_id)
000142:0x0006db80:	movec	log_template, ret
000144:0x0006db90:	moves	plugin, param2
000144:0x0006dba0:	moves	author, param1
000144:0x0006dbb0:	moves	label, param3
000144:0x0006dbc0:	call	LogError(message, plugin, author, label, _s'n/a')
000144:0x0006dbd8:	rts
SQFPrint()
000149:0x0006dbe0:	icall	Print(sqf_msg)
000149:0x0006dbe8:	rts
SQFLog()
000154:0x0006dbf0:	call	Log(sqf_msg, _i0)
000154:0x0006dc00:	rts
CallQueueContext::CallQueueContext()
//scripts/3_Game/tools/tools.c
000024:0x0006dc08:	movec	m_target, target
000025:0x0006dc18:	moves	m_function, fn
000026:0x0006dc28:	movec	m_params, params
000027:0x0006dc38:	imove	m_valid, 0x000001
000027:0x0006dc48:	rts
CallQueueContext::Call()
000032:0x0006dc50:	movec	params, m_params
000032:0x0006dc60:	call	CallQueueContext.CallParams(params)
000032:0x0006dc70:	rts
CallQueueContext::CallParams()
000037:0x0006dc78:	cmpc	params, NULL
000037:0x0006dc88:	beq	0x06dcc0
000039:0x0006dc90:	ncall	GetGame()
000039:0x0006dc98:	movec	[0x11cf2bf0], GameScript
000039:0x0006dca8:	icall	ScriptModule.CallFunctionParams(m_target, m_function, NULL, params)
000039:0x0006dcb8:	jump	0x06dce8
000043:0x0006dcc0:	ncall	GetGame()
000043:0x0006dcc8:	movec	[0x11cf2bf0], GameScript
000043:0x0006dcd8:	icall	ScriptModule.CallFunction(m_target, m_function, NULL, _i0)
000043:0x0006dce8:	rts
CallQueueContext::Invalidate()
000048:0x0006dcf0:	imove	m_valid, 0x000000
000048:0x0006dd00:	rts
CallQueueContext::IsValid()
000052:0x0006dd08:	move	ret, m_valid
000052:0x0006dd18:	rts
000052:0x0006dd20:	rts
CallQueue::CallQueue()
000072:0x0006dd28:	imove	m_processing, 0x000000
000072:0x0006dd38:	rts
CallQueue::~CallQueue()
000077:0x0006dd80:	ncalli	CallQueue.Count()
000077:0x0006dd88:	cmpi	ret, _i0
000077:0x0006dd98:	beq	0x06de10
000079:0x0006dda0:	imove	i, 0x000000
000079:0x0006ddb0:	jump	0x06ddc0
000079:0x0006ddb8:	inc	i
000079:0x0006ddc0:	ncalli	CallQueue.Count()
000079:0x0006ddc8:	cmpi	i, ret
000079:0x0006ddd8:	bge	0x06de08
000081:0x0006dde0:	icall	CallQueue.Get(i)
000081:0x0006dde8:	movec	ctx, ret
000082:0x0006ddf8:	delete	ctx
000082:0x0006de00:	jump	0x06ddb8
000085:0x0006de08:	ncalli	CallQueue.Clear()
000085:0x0006de10:	rts
CallQueue::Tick()
000094:0x0006de38:	cmpi	m_processing, _i0
000094:0x0006de48:	beq	0x06de58
000094:0x0006de50:	rts
000096:0x0006de58:	imove	m_processing, 0x000001
000098:0x0006de68:	ncalli	CallQueue.Count()
000098:0x0006de70:	cmpi	ret, _i0
000098:0x0006de80:	ble	0x06def8
000100:0x0006de88:	icall	CallQueue.Get(_i0)
000100:0x0006de90:	movec	ctx, ret
000101:0x0006dea0:	call	CallQueueContext.IsValid()
000101:0x0006dea8:	cmpi	ret, _i0
000101:0x0006deb8:	bne	0x06ded8
000103:0x0006dec0:	ncalli	CallQueue.Remove(_i0)
000104:0x0006dec8:	delete	ctx
000104:0x0006ded0:	jump	0x06def0
000108:0x0006ded8:	ncalli	CallQueue.Remove(_i0)
000109:0x0006dee0:	call	CallQueueContext.Call()
000110:0x0006dee8:	delete	ctx
000110:0x0006def0:	jump	0x06de68
000114:0x0006def8:	imove	m_processing, 0x000000
000114:0x0006df08:	rts
CallQueue::Call()
000126:0x0006df10:	new	@c00, CallQueueContext
000126:0x0006df38:	icall	CallQueue.Insert(@c00)
000126:0x0006df40:	rts
CallQueue::RemoveCalls()
000136:0x0006df88:	ncalli	CallQueue.Count()
000136:0x0006df90:	cmpi	ret, _i0
000136:0x0006dfa0:	beq	0x06e028
000138:0x0006dfa8:	ncalli	CallQueue.Count()
000138:0x0006dfb0:	subi	i, ret, _i1
000138:0x0006dfc0:	jump	0x06dfd0
000138:0x0006dfc8:	dec	i
000138:0x0006dfd0:	cmpi	i, _i0
000138:0x0006dfe0:	blt	0x06e028
000140:0x0006dfe8:	icall	CallQueue.Get(i)
000140:0x0006dff0:	movec	ctx, ret
000141:0x0006e000:	cmpc	m_target, obj
000141:0x0006e010:	bne	0x06e020
000143:0x0006e018:	call	CallQueueContext.Invalidate()
000143:0x0006e020:	jump	0x06dfc8
000143:0x0006e028:	rts
DragQueue::DragQueue()
000175:0x0006e030:	new	@c00, Param3<int,int,bool>
000175:0x0006e058:	movec	m_mouse_params, @c00
000175:0x0006e068:	rts
DragQueue::Tick()
000183:0x0006e1b0:	cmpi	m_processing, _i0
000183:0x0006e1c0:	beq	0x06e1d0
000183:0x0006e1c8:	rts
000185:0x0006e1d0:	imove	m_processing, 0x000001
000187:0x0006e1e0:	imove	last_index, 0x000000
000190:0x0006e1f0:	imove	is_holding, 0x000000
000193:0x0006e200:	ncall	GetMouseState(_i0)
000193:0x0006e208:	andi	@m02, ret, _i-2147483648
000193:0x0006e218:	move	@m01, @m02
000193:0x0006e228:	cmpi	@m01, _i0
000193:0x0006e238:	beq	0x06e250
000195:0x0006e240:	imove	is_holding, 0x000001
000198:0x0006e250:	icall	GetMousePos(mouse_x, mouse_y)
000200:0x0006e258:	cmpi	is_holding, _i0
000200:0x0006e268:	beq	0x06e2c0
000200:0x0006e270:	movec	[0x3cd188a8], m_mouse_params
000200:0x0006e280:	cmpi	mouse_x, param1
000200:0x0006e290:	bne	0x06e2c0
000200:0x0006e298:	movec	[0x3cd188a8], m_mouse_params
000200:0x0006e2a8:	cmpi	mouse_y, param2
000200:0x0006e2b8:	beq	0x06e3c0
000202:0x0006e2c0:	movec	[0x3cd188a8], m_mouse_params
000202:0x0006e2d0:	move	param1, mouse_x
000203:0x0006e2e0:	movec	[0x3cd188a8], m_mouse_params
000203:0x0006e2f0:	move	param2, mouse_y
000204:0x0006e300:	movec	[0x3cd188a8], m_mouse_params
000204:0x0006e310:	move	param3, is_holding
000206:0x0006e320:	ncalli	DragQueue.Count()
000206:0x0006e328:	cmpi	ret, last_index
000206:0x0006e338:	ble	0x06e3c0
000208:0x0006e340:	icall	DragQueue.Get(last_index)
000208:0x0006e348:	movec	ctx, ret
000209:0x0006e358:	call	CallQueueContext.IsValid()
000209:0x0006e360:	cmpi	ret, _i0
000209:0x0006e370:	bne	0x06e390
000211:0x0006e378:	ncalli	DragQueue.Remove(last_index)
000212:0x0006e380:	delete	ctx
000212:0x0006e388:	jump	0x06e3b8
000216:0x0006e390:	movec	params, m_mouse_params
000216:0x0006e3a0:	call	CallQueueContext.CallParams(params)
000217:0x0006e3b0:	inc	last_index
000217:0x0006e3b8:	jump	0x06e320
000223:0x0006e3c0:	cmpi	is_holding, _i0
000223:0x0006e3d0:	bne	0x06e448
000225:0x0006e3d8:	imove	i, 0x000000
000225:0x0006e3e8:	jump	0x06e3f8
000225:0x0006e3f0:	inc	i
000225:0x0006e3f8:	ncalli	DragQueue.Count()
000225:0x0006e400:	cmpi	i, ret
000225:0x0006e410:	bge	0x06e440
000227:0x0006e418:	icall	DragQueue.Get(i)
000227:0x0006e420:	movec	ctx, ret
000228:0x0006e430:	delete	ctx
000228:0x0006e438:	jump	0x06e3f0
000231:0x0006e440:	ncalli	DragQueue.Clear()
000234:0x0006e448:	imove	m_processing, 0x000000
000234:0x0006e458:	rts
TimerBase::~TimerBase()
000252:0x0006e460:	cmpcm	m_timerQueue, NULL
000252:0x0006e470:	bne	0x06e480
000252:0x0006e478:	rts
000254:0x0006e480:	call	TimerBase.SetRunning(false)
000254:0x0006e490:	rts
TimerBase::Pause()
000263:0x0006e498:	call	TimerBase.SetRunning(false)
000263:0x0006e4a8:	rts
TimerBase::Continue()
000271:0x0006e4b0:	call	TimerBase.SetRunning(true)
000271:0x0006e4c0:	rts
TimerBase::Stop()
000279:0x0006e4c8:	call	TimerBase.SetRunning(false)
000280:0x0006e4d8:	imove	m_time, 0.00000
000280:0x0006e4e8:	rts
TimerBase::IsRunning()
000288:0x0006e4f0:	move	ret, m_running
000288:0x0006e500:	rts
000288:0x0006e508:	rts
TimerBase::Tick()
000296:0x0006e510:	call	TimerBase.IsRunning()
000296:0x0006e518:	cmpi	ret, _i0
000296:0x0006e528:	beq	0x06e5e0
000298:0x0006e530:	addf	@f00, m_time, timeslice
000298:0x0006e540:	move	m_time, @f00
000300:0x0006e550:	cmpf	m_time, m_duration
000300:0x0006e560:	blt	0x06e5d8
000302:0x0006e568:	cmpi	m_loop, _i0
000302:0x0006e578:	beq	0x06e5a8
000304:0x0006e580:	subf	@f00, m_time, m_duration
000304:0x0006e590:	move	m_time, @f00
000304:0x0006e5a0:	jump	0x06e5c8
000308:0x0006e5a8:	call	TimerBase.SetRunning(false)
000309:0x0006e5b8:	imove	m_time, 0.00000
000312:0x0006e5c8:	call	TimerBase.OnTimer()
000312:0x0006e5d0:	jump	0x06e5e0
000316:0x0006e5d8:	call	TimerBase.OnUpdate()
000316:0x0006e5e0:	rts
TimerBase::OnTimerQueueDestoryed()
000326:0x0006e5e8:	movetm	m_timerQueue, NULL
000326:0x0006e5f8:	rts
TimerBase::GetTime()
000330:0x0006e600:	move	ret, m_time
000330:0x0006e610:	rts
000330:0x0006e618:	rts
TimerBase::GetDuration()
000334:0x0006e620:	move	ret, m_duration
000334:0x0006e630:	rts
000334:0x0006e638:	rts
TimerBase::GetRemaining()
000338:0x0006e640:	subf	ret, m_duration, m_time
000338:0x0006e650:	rts
000338:0x0006e658:	rts
TimerBase::OnInit()
000343:0x0006e660:	imove	m_duration, 1.00000
000344:0x0006e670:	imove	m_loop, 0x000000
000345:0x0006e680:	imove	m_time, 0.00000
000346:0x0006e690:	imove	m_running, 0x000000
000347:0x0006e6a0:	ncall	GetGame()
000347:0x0006e6a8:	call	CGame.GetTimerQueue(category)
000347:0x0006e6b8:	movem	m_timerQueue, ret
000347:0x0006e6c8:	rts
TimerBase::OnStart()
000352:0x0006e6d0:	move	m_duration, duration
000353:0x0006e6e0:	move	m_loop, loop
000354:0x0006e6f0:	imove	m_time, 0.00000
000355:0x0006e700:	call	TimerBase.SetRunning(true)
000355:0x0006e710:	rts
TimerBase::SetRunning()
000362:0x0006e738:	imove	index, 0xffffffff
000364:0x0006e748:	cmpi	m_running, running
000364:0x0006e758:	bne	0x06e768
000364:0x0006e760:	rts
000366:0x0006e768:	move	m_running, running
000367:0x0006e778:	cmpcm	m_timerQueue, NULL
000367:0x0006e788:	bne	0x06e798
000367:0x0006e790:	rts
000369:0x0006e798:	cmpi	running, _i0
000369:0x0006e7a8:	beq	0x06e810
000371:0x0006e7b0:	movefm	[0x3cd251f0], m_timerQueue
000371:0x0006e7c0:	icall	array<TimerBase>.Find(this)
000371:0x0006e7c8:	move	index, ret
000372:0x0006e7d8:	cmpi	index, _i-1
000372:0x0006e7e8:	bne	0x06e808
000374:0x0006e7f0:	movefm	[0x3cd251f0], m_timerQueue
000374:0x0006e800:	icall	array<TimerBase>.Insert(this)
000374:0x0006e808:	jump	0x06e868
000379:0x0006e810:	movefm	[0x3cd251f0], m_timerQueue
000379:0x0006e820:	icall	array<TimerBase>.Find(this)
000379:0x0006e828:	move	index, ret
000380:0x0006e838:	cmpi	index, _i-1
000380:0x0006e848:	beq	0x06e868
000382:0x0006e850:	movefm	[0x3cd251f0], m_timerQueue
000382:0x0006e860:	ncalli	array<TimerBase>.Remove(index)
000382:0x0006e868:	rts
TimerQueue::TimerQueue()
000399:0x0006e870:	imove	m_processing, 0x000000
000399:0x0006e880:	rts
TimerQueue::~TimerQueue()
000405:0x0006e8f0:	ncalli	TimerQueue.Count()
000405:0x0006e8f8:	cmpi	ret, _i0
000405:0x0006e908:	beq	0x06e980
000407:0x0006e910:	ncalli	TimerQueue.Count()
000407:0x0006e918:	subi	i, ret, _i1
000407:0x0006e928:	jump	0x06e938
000407:0x0006e930:	dec	i
000407:0x0006e938:	cmpi	i, _i0
000407:0x0006e948:	blt	0x06e978
000409:0x0006e950:	icall	TimerQueue.Get(i)
000409:0x0006e958:	movec	timer, ret
000410:0x0006e968:	call	TimerBase.OnTimerQueueDestoryed()
000410:0x0006e970:	jump	0x06e930
000413:0x0006e978:	ncalli	TimerQueue.Clear()
000413:0x0006e980:	rts
TimerQueue::Tick()
000420:0x0006e9c8:	cmpi	m_processing, _i0
000420:0x0006e9d8:	beq	0x06e9e8
000420:0x0006e9e0:	rts
000422:0x0006e9e8:	imove	m_processing, 0x000001
000424:0x0006e9f8:	ncalli	TimerQueue.Count()
000424:0x0006ea00:	cmpi	ret, _i0
000424:0x0006ea10:	beq	0x06ea88
000426:0x0006ea18:	ncalli	TimerQueue.Count()
000426:0x0006ea20:	subi	i, ret, _i1
000426:0x0006ea30:	jump	0x06ea40
000426:0x0006ea38:	dec	i
000426:0x0006ea40:	cmpi	i, _i0
000426:0x0006ea50:	blt	0x06ea88
000428:0x0006ea58:	icall	TimerQueue.Get(i)
000428:0x0006ea60:	movec	timer, ret
000430:0x0006ea70:	call	TimerBase.Tick(timeslice)
000430:0x0006ea80:	jump	0x06ea38
000434:0x0006ea88:	imove	m_processing, 0x000000
000434:0x0006ea98:	rts
WidgetFadeTimer::WidgetFadeTimer()
000450:0x0006eaa0:	call	WidgetFadeTimer.OnInit(CALL_CATEGORY_GUI)
000451:0x0006eab0:	imove	m_fadeIn, 0x000001
000451:0x0006eac0:	rts
WidgetFadeTimer::FadeIn()
000462:0x0006eb30:	ncalli	Widget.GetAlpha()
000462:0x0006eb38:	move	alpha, ret
000464:0x0006eb48:	cmpi	continue_, _i0
000464:0x0006eb58:	beq	0x06eb90
000464:0x0006eb60:	cmpf	alpha, _f0.950000
000464:0x0006eb70:	ble	0x06eb90
000466:0x0006eb78:	ncalli	Widget.SetAlpha(_f1.000000)
000467:0x0006eb80:	ncalli	Widget.Show(true)
000468:0x0006eb88:	rts
000471:0x0006eb90:	movem	m_widget, w
000472:0x0006eba0:	imove	m_fadeIn, 0x000001
000474:0x0006ebb0:	call	WidgetFadeTimer.OnStart(time, false)
000476:0x0006ebc0:	cmpcm	m_widget, NULL
000476:0x0006ebd0:	beq	0x06ec30
000478:0x0006ebd8:	movefm	[0x11cf2b58], m_widget
000478:0x0006ebe8:	ncalli	Widget.GetAlpha()
000478:0x0006ebf0:	move	alpha, ret
000479:0x0006ec00:	movefm	[0x11cf2b58], m_widget
000479:0x0006ec10:	ncalli	Widget.SetAlpha(_f0.000000)
000480:0x0006ec18:	movefm	[0x11cf2b58], m_widget
000480:0x0006ec28:	ncalli	Widget.Show(true)
000483:0x0006ec30:	cmpi	continue_, _i0
000483:0x0006ec40:	beq	0x06ec68
000485:0x0006ec48:	mulf	@f00, alpha, time
000485:0x0006ec58:	move	m_time, @f00
000485:0x0006ec68:	rts
WidgetFadeTimer::FadeOut()
000497:0x0006ec90:	ncalli	Widget.GetAlpha()
000497:0x0006ec98:	move	m_alpha, ret
000499:0x0006eca8:	cmpi	continue_, _i0
000499:0x0006ecb8:	beq	0x06ecf0
000499:0x0006ecc0:	cmpf	m_alpha, _f0.050000
000499:0x0006ecd0:	bge	0x06ecf0
000501:0x0006ecd8:	ncalli	Widget.SetAlpha(_f0.000000)
000502:0x0006ece0:	ncalli	Widget.Show(false)
000503:0x0006ece8:	rts
000506:0x0006ecf0:	movem	m_widget, w
000507:0x0006ed00:	imove	m_fadeIn, 0x000000
000509:0x0006ed10:	call	WidgetFadeTimer.OnStart(time, false)
000511:0x0006ed20:	cmpcm	m_widget, NULL
000511:0x0006ed30:	beq	0x06eda0
000511:0x0006ed38:	cmpi	continue_, _i0
000511:0x0006ed48:	bne	0x06eda0
000513:0x0006ed50:	imove	m_alpha, 1.00000
000514:0x0006ed60:	move	[0x11d0f0b8], m_alpha
000514:0x0006ed70:	movefm	[0x11cf2b58], m_widget
000514:0x0006ed80:	ncalli	Widget.SetAlpha([0x11d0f0b8])
000515:0x0006ed88:	movefm	[0x11cf2b58], m_widget
000515:0x0006ed98:	ncalli	Widget.Show(true)
000518:0x0006eda0:	cmpi	continue_, _i0
000518:0x0006edb0:	beq	0x06edf8
000520:0x0006edb8:	subf	@f01, _f1.000000, m_alpha
000520:0x0006edc8:	move	@f00, @f01
000520:0x0006edd8:	mulf	@f00, @f00, time
000520:0x0006ede8:	move	m_time, @f00
000520:0x0006edf8:	rts
WidgetFadeTimer::OnTimer()
000526:0x0006ee00:	cmpcm	m_widget, NULL
000526:0x0006ee10:	beq	0x06ee80
000528:0x0006ee18:	cmpi	m_fadeIn, _i0
000528:0x0006ee28:	beq	0x06ee50
000530:0x0006ee30:	movefm	[0x11cf2b58], m_widget
000530:0x0006ee40:	ncalli	Widget.SetAlpha(_f1.000000)
000530:0x0006ee48:	jump	0x06ee80
000534:0x0006ee50:	movefm	[0x11cf2b58], m_widget
000534:0x0006ee60:	ncalli	Widget.SetAlpha(_f0.000000)
000535:0x0006ee68:	movefm	[0x11cf2b58], m_widget
000535:0x0006ee78:	ncalli	Widget.Show(false)
000535:0x0006ee80:	rts
WidgetFadeTimer::OnUpdate()
000542:0x0006efb8:	subf	timeDiff, m_duration, m_time
000543:0x0006efc8:	mulf	@f04, _f2.000000, m_alpha
000543:0x0006efd8:	move	@f03, @f04
000543:0x0006efe8:	subf	@f03, @f03, timeDiff
000543:0x0006eff8:	move	@f02, @f03
000543:0x0006f008:	mulf	@f02, @f02, _f0.500000
000543:0x0006f018:	move	@f01, @f02
000543:0x0006f028:	call	Max(_f0.000000, @f01)
000543:0x0006f038:	move	progress, ret
000545:0x0006f048:	cmpcm	m_widget, NULL
000545:0x0006f058:	beq	0x06f1f8
000547:0x0006f060:	cmpi	m_fadeIn, _i0
000547:0x0006f070:	beq	0x06f098
000549:0x0006f078:	movefm	[0x11cf2b58], m_widget
000549:0x0006f088:	ncalli	Widget.SetAlpha(progress)
000549:0x0006f090:	jump	0x06f1f8
000553:0x0006f098:	subf	@f01, m_alpha, progress
000553:0x0006f0a8:	move	@f00, @f01
000553:0x0006f0b8:	movefm	[0x11cf2b58], m_widget
000553:0x0006f0c8:	ncalli	Widget.SetAlpha(@f00)
000554:0x0006f0d0:	movefm	[0x11cf2b58], m_widget
000554:0x0006f0e0:	ncalli	Widget.GetChildren()
000554:0x0006f0e8:	movetm	child, ret
000555:0x0006f0f8:	cmpcm	child, NULL
000555:0x0006f108:	beq	0x06f1f0
000557:0x0006f110:	ncalli	Widget.GetAlpha()
000557:0x0006f118:	move	alphaChild, ret
000558:0x0006f128:	mulf	@f04, _f2.000000, alphaChild
000558:0x0006f138:	move	@f03, @f04
000558:0x0006f148:	subf	@f03, @f03, timeDiff
000558:0x0006f158:	move	@f02, @f03
000558:0x0006f168:	mulf	@f02, @f02, _f0.500000
000558:0x0006f178:	move	@f01, @f02
000558:0x0006f188:	call	Max(_f0.000000, @f01)
000558:0x0006f198:	move	progressChild, ret
000559:0x0006f1a8:	subf	@f01, alphaChild, progressChild
000559:0x0006f1b8:	move	@f00, @f01
000559:0x0006f1c8:	ncalli	Widget.SetAlpha(@f00)
000560:0x0006f1d0:	ncalli	Widget.GetChildren()
000560:0x0006f1d8:	movetm	child, ret
000560:0x0006f1e8:	jump	0x06f0f8
000560:0x0006f1f0:	release	child
000560:0x0006f1f8:	rts
Timer::Timer()
000605:0x0006f200:	call	Timer.OnInit(category)
000605:0x0006f210:	rts
Timer::Run()
000618:0x0006f218:	movec	m_target, obj
000619:0x0006f228:	moves	m_function, fn_name
000621:0x0006f238:	delete	m_params
000622:0x0006f240:	movec	m_params, params
000623:0x0006f250:	call	Timer.OnStart(duration, loop)
000623:0x0006f260:	rts
Timer::OnTimer()
000628:0x0006f268:	cmpc	m_params, NULL
000628:0x0006f278:	beq	0x06f2b8
000630:0x0006f280:	ncall	GetGame()
000630:0x0006f288:	movec	[0x11cf2bf0], GameScript
000630:0x0006f298:	icall	ScriptModule.CallFunctionParams(m_target, m_function, NULL, m_params)
000631:0x0006f2a8:	delete	m_params
000631:0x0006f2b0:	jump	0x06f2e0
000635:0x0006f2b8:	ncall	GetGame()
000635:0x0006f2c0:	movec	[0x11cf2bf0], GameScript
000635:0x0006f2d0:	icall	ScriptModule.CallFunction(m_target, m_function, NULL, _i0)
000635:0x0006f2e0:	rts
Timer::Stop()
000641:0x0006f2e8:	call	TimerBase.Stop()
000642:0x0006f2f0:	delete	m_params
000642:0x0006f2f8:	rts
TimerUpdate::TimerUpdate()
000658:0x0006f300:	movec	m_Target, obj
000659:0x0006f310:	moves	m_Function, fn_name
000660:0x0006f320:	call	TimerUpdate.OnInit(category)
000661:0x0006f330:	call	TimerUpdate.SetRunning(true)
000661:0x0006f340:	rts
TimerUpdate::Tick()
000667:0x0006f348:	call	TimerUpdate.IsRunning()
000667:0x0006f350:	cmpi	ret, _i0
000667:0x0006f360:	beq	0x06f378
000669:0x0006f368:	call	TimerUpdate.OnUpdate#37438(timeslice)
000669:0x0006f378:	rts
TimerUpdate::OnUpdate#37438()
000679:0x0006f380:	ncall	GetGame()
000679:0x0006f388:	movec	[0x11cf2bf0], GameScript
000679:0x0006f398:	icall	ScriptModule.CallFunction(m_Target, m_Function, NULL, timeslice)
000679:0x0006f3a8:	rts
AnimatorTimer::AnimatorTimer()
000716:0x0006f3b0:	call	AnimatorTimer.OnInit(category)
000718:0x0006f3c0:	imove	m_value, 0.00000
000719:0x0006f3d0:	imove	m_target_value, 0.00000
000721:0x0006f3e0:	movec	m_target, target
000722:0x0006f3f0:	moves	m_function, callback_fn_name
000722:0x0006f400:	rts
AnimatorTimer::Animate()
000732:0x0006f408:	move	m_target_value, val
000733:0x0006f418:	imove	m_loop, 0x000000
000734:0x0006f428:	move	m_time, speed
000735:0x0006f438:	call	AnimatorTimer.SetRunning(true)
000735:0x0006f448:	rts
AnimatorTimer::AnimateLoop()
000744:0x0006f450:	imove	m_value, 0.00000
000745:0x0006f460:	imove	m_target_value, 0.00000
000746:0x0006f470:	imove	m_loop, 0x000001
000747:0x0006f480:	move	m_time, speed
000748:0x0006f490:	call	AnimatorTimer.SetRunning(true)
000748:0x0006f4a0:	rts
AnimatorTimer::GetValue()
000755:0x0006f4a8:	move	ret, m_value
000755:0x0006f4b8:	rts
000755:0x0006f4c0:	rts
AnimatorTimer::GetTargetValue()
000762:0x0006f4c8:	move	ret, m_target_value
000762:0x0006f4d8:	rts
000762:0x0006f4e0:	rts
AnimatorTimer::SetValue()
000769:0x0006f4e8:	move	m_value, val
000770:0x0006f4f8:	move	m_target_value, val
000770:0x0006f508:	rts
AnimatorTimer::Tick()
000778:0x0006f550:	call	AnimatorTimer.IsRunning()
000778:0x0006f558:	cmpi	ret, _i0
000778:0x0006f568:	bne	0x06f578
000778:0x0006f570:	rts
000780:0x0006f578:	cmpi	m_loop, _i0
000780:0x0006f588:	beq	0x06f640
000782:0x0006f590:	mulf	@f03, m_time, PI2
000782:0x0006f5a0:	move	@f01, @f03
000782:0x0006f5b0:	mulf	@f00, @f01, timeslice
000782:0x0006f5c0:	addf	m_target_value, m_target_value, @f00
000783:0x0006f5d0:	cmpf	m_target_value, PI2
000783:0x0006f5e0:	ble	0x06f610
000783:0x0006f5e8:	imove	@f00, 6.28319
000783:0x0006f5f8:	subf	m_target_value, m_target_value, @f00
000783:0x0006f608:	jump	0x06f5d0
000785:0x0006f610:	move	[0x11d15d78], m_target_value
000785:0x0006f620:	ncall	Sin([0x11d15d78])
000785:0x0006f628:	move	m_value, ret
000785:0x0006f638:	jump	0x06f728
000789:0x0006f640:	subf	@f02, m_target_value, m_value
000789:0x0006f650:	move	@f01, @f02
000789:0x0006f660:	ncall	AbsFloat(@f01)
000789:0x0006f668:	move	diff, ret
000790:0x0006f678:	mulf	step, m_time, timeslice
000792:0x0006f688:	cmpf	diff, step
000792:0x0006f698:	bge	0x06f6c8
000794:0x0006f6a0:	move	m_value, m_target_value
000795:0x0006f6b0:	call	AnimatorTimer.SetRunning(false)
000795:0x0006f6c0:	jump	0x06f728
000799:0x0006f6c8:	cmpf	m_target_value, m_value
000799:0x0006f6d8:	ble	0x06f708
000801:0x0006f6e0:	move	@f00, step
000801:0x0006f6f0:	addf	m_value, m_value, @f00
000801:0x0006f700:	jump	0x06f728
000805:0x0006f708:	move	@f00, step
000805:0x0006f718:	subf	m_value, m_value, @f00
000810:0x0006f728:	ncall	GetGame()
000810:0x0006f730:	movec	[0x11cf2bf0], GameScript
000810:0x0006f740:	icall	ScriptModule.CallFunction(m_target, m_function, NULL, _i0)
000810:0x0006f750:	rts
GetTemperatureColor()
000969:0x0006f950:	imove	alpha, 0x0000ff
000970:0x0006f960:	imove	red, 0x000099
000971:0x0006f970:	imove	green, 0x000099
000972:0x0006f980:	imove	blue, 0x000099
000973:0x0006f990:	cmpi	temperature, _i20
000973:0x0006f9a0:	bge	0x06fc28
000975:0x0006f9a8:	subi	@m00, temperature, _i20
000975:0x0006f9b8:	move	temperature, @m00
000976:0x0006f9c8:	citf	value, temperature
000976:0x0006f9d8:	call	Clamp(value, _f-50.000000, _f50.000000)
000976:0x0006f9e8:	cfti	temperature, ret
000977:0x0006f9f8:	ncall	AbsInt(temperature)
000977:0x0006fa00:	move	temperature, ret
000979:0x0006fa10:	citf	@f03, red
000979:0x0006fa20:	divf	@f03, @f03, _f50.000000
000979:0x0006fa30:	move	@f02, @f03
000979:0x0006fa40:	citf	@f03, temperature
000979:0x0006fa50:	mulf	@f02, @f02, @f03
000979:0x0006fa60:	move	@f01, @f02
000979:0x0006fa70:	citf	@f02, red
000979:0x0006fa80:	subf	@f01, @f02, @f01
000979:0x0006fa90:	move	@f00, @f01
000979:0x0006faa0:	call	Clamp(@f00, _f0.000000, _f255.000000)
000979:0x0006fab0:	cfti	red, ret
000980:0x0006fac0:	citf	@f03, green
000980:0x0006fad0:	divf	@f03, @f03, _f50.000000
000980:0x0006fae0:	move	@f02, @f03
000980:0x0006faf0:	citf	@f03, temperature
000980:0x0006fb00:	mulf	@f02, @f02, @f03
000980:0x0006fb10:	move	@f01, @f02
000980:0x0006fb20:	citf	@f02, green
000980:0x0006fb30:	subf	@f01, @f02, @f01
000980:0x0006fb40:	move	@f00, @f01
000980:0x0006fb50:	call	Clamp(@f00, _f0.000000, _f255.000000)
000980:0x0006fb60:	cfti	green, ret
000981:0x0006fb70:	citf	@f03, blue
000981:0x0006fb80:	divf	@f03, @f03, _f50.000000
000981:0x0006fb90:	move	@f02, @f03
000981:0x0006fba0:	citf	@f03, temperature
000981:0x0006fbb0:	mulf	@f02, @f02, @f03
000981:0x0006fbc0:	move	@f01, @f02
000981:0x0006fbd0:	citf	@f02, blue
000981:0x0006fbe0:	addf	@f01, @f02, @f01
000981:0x0006fbf0:	move	@f00, @f01
000981:0x0006fc00:	call	Clamp(@f00, _f0.000000, _f255.000000)
000981:0x0006fc10:	cfti	blue, ret
000981:0x0006fc20:	jump	0x06fe80
000983:0x0006fc28:	cmpi	temperature, _i20
000983:0x0006fc38:	ble	0x06fe80
000985:0x0006fc40:	citf	value, temperature
000985:0x0006fc50:	call	Clamp(value, _f-100.000000, _f100.000000)
000985:0x0006fc60:	cfti	temperature, ret
000986:0x0006fc70:	citf	@f03, blue
000986:0x0006fc80:	divf	@f03, @f03, _f100.000000
000986:0x0006fc90:	move	@f02, @f03
000986:0x0006fca0:	citf	@f03, temperature
000986:0x0006fcb0:	mulf	@f02, @f02, @f03
000986:0x0006fcc0:	move	@f01, @f02
000986:0x0006fcd0:	citf	@f02, blue
000986:0x0006fce0:	subf	@f01, @f02, @f01
000986:0x0006fcf0:	move	@f00, @f01
000986:0x0006fd00:	call	Clamp(@f00, _f0.000000, _f255.000000)
000986:0x0006fd10:	cfti	blue, ret
000987:0x0006fd20:	citf	@f03, green
000987:0x0006fd30:	divf	@f03, @f03, _f100.000000
000987:0x0006fd40:	move	@f02, @f03
000987:0x0006fd50:	citf	@f03, temperature
000987:0x0006fd60:	mulf	@f02, @f02, @f03
000987:0x0006fd70:	move	@f01, @f02
000987:0x0006fd80:	citf	@f02, green
000987:0x0006fd90:	subf	@f01, @f02, @f01
000987:0x0006fda0:	move	@f00, @f01
000987:0x0006fdb0:	call	Clamp(@f00, _f0.000000, _f255.000000)
000987:0x0006fdc0:	cfti	green, ret
000988:0x0006fdd0:	citf	@f03, red
000988:0x0006fde0:	divf	@f03, @f03, _f100.000000
000988:0x0006fdf0:	move	@f02, @f03
000988:0x0006fe00:	citf	@f03, temperature
000988:0x0006fe10:	mulf	@f02, @f02, @f03
000988:0x0006fe20:	move	@f01, @f02
000988:0x0006fe30:	citf	@f02, red
000988:0x0006fe40:	addf	@f01, @f02, @f01
000988:0x0006fe50:	move	@f00, @f01
000988:0x0006fe60:	call	Clamp(@f00, _f0.000000, _f255.000000)
000988:0x0006fe70:	cfti	red, ret
000991:0x0006fe80:	call	ARGB(alpha, red, green, blue)
000991:0x0006fe90:	move	color, ret
000992:0x0006fea0:	move	ret, color
000992:0x0006feb0:	rts
000992:0x0006feb8:	rts
GetProfileValueBool()
000999:0x0006ff20:	ncall	GetGame()
000999:0x0006ff28:	icall	CGame.GetProfileString(name, value)
000999:0x0006ff30:	cmpi	ret, _i0
000999:0x0006ff40:	beq	0x06ffb8
001001:0x0006ff48:	cmps	value, _s'true'
001001:0x0006ff58:	beq	0x06ff78
001001:0x0006ff60:	cmps	value, _s'1'
001001:0x0006ff70:	bne	0x06ff98
001003:0x0006ff78:	imove	ret, 0x000001
001003:0x0006ff88:	rts
001003:0x0006ff90:	jump	0x06ffb0
001007:0x0006ff98:	imove	ret, 0x000000
001007:0x0006ffa8:	rts
001007:0x0006ffb0:	jump	0x06ffd0
001012:0x0006ffb8:	move	ret, def
001012:0x0006ffc8:	rts
001012:0x0006ffd0:	rts
SetProfileValueBool()
001019:0x0006fff8:	cmpi	value, _i0
001019:0x00070008:	beq	0x070028
001021:0x00070010:	ncall	GetGame()
001021:0x00070018:	ncalli	CGame.SetProfileString(name, _s'1')
001021:0x00070020:	jump	0x070038
001025:0x00070028:	ncall	GetGame()
001025:0x00070030:	ncalli	CGame.SetProfileString(name, _s'0')
001025:0x00070038:	rts
GetNumberOfSetBits()
001032:0x000700e0:	asri	@m01, i, _i1
001032:0x000700f0:	move	@m00, @m01
001032:0x00070100:	andi	@m00, @m00, _i1431655765
001032:0x00070110:	move	@m01, @m00
001032:0x00070120:	subi	@m00, i, @m01
001032:0x00070130:	move	i, @m00
001033:0x00070140:	andi	@m01, i, _i858993459
001033:0x00070150:	move	@m00, @m01
001033:0x00070160:	asri	@m02, i, _i2
001033:0x00070170:	move	@m01, @m02
001033:0x00070180:	andi	@m01, @m01, _i858993459
001033:0x00070190:	move	@m02, @m01
001033:0x000701a0:	addi	@m00, @m00, @m02
001033:0x000701b0:	move	i, @m00
001034:0x000701c0:	asri	@m01, i, _i4
001034:0x000701d0:	move	@m00, @m01
001034:0x000701e0:	addi	@m00, i, @m00
001034:0x000701f0:	move	@m01, @m00
001034:0x00070200:	andi	@m01, @m01, _i252645135
001034:0x00070210:	move	@m00, @m01
001034:0x00070220:	muli	@m00, @m00, _i16843009
001034:0x00070230:	move	@m01, @m00
001034:0x00070240:	asri	ret, @m01, _i24
001034:0x00070250:	rts
001034:0x00070258:	rts
UIManager::Back()
//scripts/3_Game/tools/UIManager.c
000055:0x00070280:	ncalli	UIManager.IsDialogVisible()
000055:0x00070288:	cmpi	ret, false
000055:0x00070298:	bne	0x070300
000057:0x000702a0:	ncalli	UIManager.GetMenu()
000057:0x000702a8:	movetm	menu, ret
000058:0x000702b8:	cmpcm	menu, NULL
000058:0x000702c8:	beq	0x0702f8
000060:0x000702d0:	ncalli	UIMenuPanel.Close()
000061:0x000702d8:	imove	ret, 0x000001
000061:0x000702e8:	release	menu
000061:0x000702f0:	rts
000061:0x000702f8:	release	menu
000065:0x00070300:	imove	ret, 0x000000
000065:0x00070310:	rts
000065:0x00070318:	rts
UIManager::CloseAll()
000071:0x00070340:	ncalli	UIManager.GetMenu()
000071:0x00070348:	movetm	menu, ret
000072:0x00070358:	cmpcm	menu, NULL
000072:0x00070368:	beq	0x0703e0
000074:0x00070370:	ncalli	UIMenuPanel.GetParentMenu()
000074:0x00070378:	cmpm	ret, NULL
000074:0x00070388:	beq	0x0703b0
000076:0x00070390:	ncalli	UIMenuPanel.GetParentMenu()
000076:0x00070398:	movetm	menu, ret
000076:0x000703a8:	jump	0x0703d8
000080:0x000703b0:	ncalli	UIMenuPanel.Close()
000081:0x000703b8:	imove	ret, 0x000001
000081:0x000703c8:	release	menu
000081:0x000703d0:	rts
000081:0x000703d8:	jump	0x070358
000085:0x000703e0:	imove	ret, 0x000000
000085:0x000703f0:	release	menu
000085:0x000703f8:	rts
000085:0x00070400:	release	menu
000085:0x00070408:	rts
UIManager::CloseMenu()
000091:0x00070430:	ncalli	UIManager.GetMenu()
000091:0x00070438:	movetm	menu, ret
000093:0x00070448:	cmpcm	menu, NULL
000093:0x00070458:	beq	0x0704c8
000094:0x00070460:	call	UIMenuPanel.GetID()
000094:0x00070468:	cmpi	ret, id
000094:0x00070478:	bne	0x0704a8
000096:0x00070480:	ncalli	UIMenuPanel.Close()
000097:0x00070488:	imove	ret, 0x000001
000097:0x00070498:	release	menu
000097:0x000704a0:	rts
000100:0x000704a8:	ncalli	UIMenuPanel.GetParentMenu()
000100:0x000704b0:	movetm	menu, ret
000100:0x000704c0:	jump	0x070448
000103:0x000704c8:	imove	ret, 0x000000
000103:0x000704d8:	release	menu
000103:0x000704e0:	rts
000103:0x000704e8:	release	menu
000103:0x000704f0:	rts
UIManager::HideMenu()
000108:0x00070518:	ncalli	UIManager.GetMenu()
000108:0x00070520:	movetm	menu, ret
000110:0x00070530:	cmpcm	menu, NULL
000110:0x00070540:	beq	0x0705c0
000112:0x00070548:	call	UIMenuPanel.GetID()
000112:0x00070550:	cmpi	ret, id
000112:0x00070560:	bne	0x0705a0
000114:0x00070568:	movefm	[0x3cd3f528], menu
000114:0x00070578:	ncalli	UIManager.HideScriptedMenu([0x3cd3f528])
000115:0x00070580:	imove	ret, 0x000001
000115:0x00070590:	release	menu
000115:0x00070598:	rts
000118:0x000705a0:	ncalli	UIMenuPanel.GetParentMenu()
000118:0x000705a8:	movetm	menu, ret
000118:0x000705b8:	jump	0x070530
000121:0x000705c0:	imove	ret, 0x000000
000121:0x000705d0:	release	menu
000121:0x000705d8:	rts
000121:0x000705e0:	release	menu
000121:0x000705e8:	rts
UIManager::IsMenuOpen()
000127:0x000705f0:	call	UIManager.FindMenu(id)
000127:0x00070600:	cmpcm	ret, NULL
000127:0x00070610:	beq	0x070630
000129:0x00070618:	imove	ret, 0x000001
000129:0x00070628:	rts
000132:0x00070630:	imove	ret, 0x000000
000132:0x00070640:	rts
000132:0x00070648:	rts
UIManager::FindMenu()
000138:0x00070670:	ncalli	UIManager.GetMenu()
000138:0x00070678:	movetm	menu, ret
000140:0x00070688:	cmpcm	menu, NULL
000140:0x00070698:	beq	0x070700
000142:0x000706a0:	call	UIMenuPanel.GetID()
000142:0x000706a8:	cmpi	ret, id
000142:0x000706b8:	bne	0x0706e0
000144:0x000706c0:	movem	ret, menu
000144:0x000706d0:	release	menu
000144:0x000706d8:	rts
000147:0x000706e0:	ncalli	UIMenuPanel.GetParentMenu()
000147:0x000706e8:	movetm	menu, ret
000147:0x000706f8:	jump	0x070688
000150:0x00070700:	movetm	ret, NULL
000150:0x00070710:	release	menu
000150:0x00070718:	rts
000150:0x00070720:	release	menu
000150:0x00070728:	rts
UIManager::OpenWindow()
000156:0x00070750:	call	GetWindow(id)
000156:0x00070760:	movec	window, ret
000159:0x00070770:	cmpc	window, NULL
000159:0x00070780:	beq	0x0707a0
000161:0x00070788:	call	UIManager.CloseWindow(id)
000163:0x00070798:	rts
000167:0x000707a0:	imove	@m00, 0x000001
000167:0x000707b0:	cmpi	@m00, id
000167:0x000707c0:	bne	0x070800
000170:0x000707c8:	ncall	GetGame()
000170:0x000707d0:	ncalli	CGame.GetMission()
000170:0x000707d8:	call	Mission.CreateScriptedWindow(id)
000170:0x000707e8:	movec	window, ret
000171:0x000707f8:	jump	0x070800
000176:0x00070800:	cmpc	window, NULL
000176:0x00070810:	beq	0x070830
000178:0x00070818:	call	UIScriptedWindow.Init()
000181:0x00070820:	call	AddToActiveWindows(id, window)
000181:0x00070830:	rts
Param1<UIScriptedWindow>::Param1()
//scripts/1_CoreExt/param.c
000030:0x00070970:	movec	param1, p1
000030:0x00070980:	rts
UIManager::CloseWindow()
//scripts/3_Game/tools/UIManager.c
000187:0x000709c8:	call	GetWindow(id)
000187:0x000709d8:	movec	window, ret
000189:0x000709e8:	cmpc	window, NULL
000189:0x000709f8:	beq	0x070ac0
000191:0x00070a00:	call	RemoveFromActiveWindows(id)
000192:0x00070a10:	call	UIScriptedWindow.HideWindow()
000195:0x00070a18:	new	@c00, Timer
000195:0x00070a40:	movec	delete_timer, @c00
000196:0x00070a50:	new	@c00, Param1<UIScriptedWindow>
000196:0x00070a78:	movec	params, @c00
000197:0x00070a88:	movec	obj, this
000197:0x00070a98:	movec	params, params
000197:0x00070aa8:	call	Timer.Run(_f0.500000, obj, _s'DeleteWindow', params, false)
000197:0x00070ac0:	rts
UIManager::DeleteWindow()
000204:0x00070ac8:	delete	window
000204:0x00070ad0:	rts
UIManager::IsWindowOpened()
000209:0x00070ad8:	call	GetWindow(id)
000209:0x00070ae8:	cmpc	ret, NULL
000209:0x00070af8:	beq	0x070b18
000211:0x00070b00:	imove	ret, 0x000001
000211:0x00070b10:	rts
000214:0x00070b18:	imove	ret, 0x000000
000214:0x00070b28:	rts
000214:0x00070b30:	rts
GetRandomLoadingBackground()
000222:0x00070bd0:	ncall	Randomize(_i-1)
000223:0x00070bd8:	ncall	RandomInt(_i0, _i100)
000223:0x00070be0:	modi	index, ret, _i2
000224:0x00070bf0:	cfv	@s01, images[index]
000224:0x00070c00:	moves	ret, @s01
000224:0x00070c10:	rts
000224:0x00070c18:	rts
UIMenuPanel::UseMouse()
//scripts/3_Game/tools/UIScriptedMenu.c
000026:0x00070c20:	imove	ret, 0x000001
000026:0x00070c30:	rts
000026:0x00070c38:	rts
UIMenuPanel::UseKeyboard()
000030:0x00070c40:	imove	ret, 0x000001
000030:0x00070c50:	rts
000030:0x00070c58:	rts
UIMenuPanel::UseGamepad()
000034:0x00070c60:	imove	ret, 0x000001
000034:0x00070c70:	rts
000034:0x00070c78:	rts
UIMenuPanel::GetID()
000039:0x00070c80:	imove	ret, 0x000004
000039:0x00070c90:	rts
000039:0x00070c98:	rts
UIScriptedMenu::GetLayoutRoot()
000052:0x00070ca0:	movem	ret, layoutRoot
000052:0x00070cb0:	rts
000052:0x00070cb8:	rts
UIScriptedMenu::LockControls()
000057:0x00070cc0:	call	UIScriptedMenu.UseMouse()
000057:0x00070cc8:	cmpi	ret, _i0
000057:0x00070cd8:	beq	0x070d10
000059:0x00070ce0:	ncall	GetGame()
000059:0x00070ce8:	ncalli	CGame.GetInput()
000059:0x00070cf0:	ncalli	Input.ChangeGameFocus(_i1, INPUT_DEVICE_MOUSE)
000060:0x00070cf8:	ncall	GetGame()
000060:0x00070d00:	ncalli	CGame.GetUIManager()
000060:0x00070d08:	ncalli	UIManager.ShowCursor(true)
000063:0x00070d10:	call	UIScriptedMenu.UseKeyboard()
000063:0x00070d18:	cmpi	ret, _i0
000063:0x00070d28:	beq	0x070d48
000065:0x00070d30:	ncall	GetGame()
000065:0x00070d38:	ncalli	CGame.GetInput()
000065:0x00070d40:	ncalli	Input.ChangeGameFocus(_i1, INPUT_DEVICE_KEYBOARD)
000068:0x00070d48:	call	UIScriptedMenu.UseGamepad()
000068:0x00070d50:	cmpi	ret, _i0
000068:0x00070d60:	beq	0x070d80
000070:0x00070d68:	ncall	GetGame()
000070:0x00070d70:	ncalli	CGame.GetInput()
000070:0x00070d78:	ncalli	Input.ChangeGameFocus(_i1, INPUT_DEVICE_GAMEPAD)
000070:0x00070d80:	rts
UIScriptedMenu::UnlockControls()
000076:0x00070d88:	call	UIScriptedMenu.UseMouse()
000076:0x00070d90:	cmpi	ret, _i0
000076:0x00070da0:	beq	0x070dc0
000078:0x00070da8:	ncall	GetGame()
000078:0x00070db0:	ncalli	CGame.GetInput()
000078:0x00070db8:	ncalli	Input.ChangeGameFocus(_i-1, INPUT_DEVICE_MOUSE)
000081:0x00070dc0:	ncalli	UIScriptedMenu.GetParentMenu()
000081:0x00070dc8:	cmpm	ret, NULL
000081:0x00070dd8:	beq	0x070e28
000081:0x00070de0:	ncalli	UIScriptedMenu.GetParentMenu()
000081:0x00070de8:	call	UIMenuPanel.UseMouse()
000081:0x00070df0:	cmpi	ret, _i0
000081:0x00070e00:	beq	0x070e28
000083:0x00070e08:	ncall	GetGame()
000083:0x00070e10:	ncalli	CGame.GetUIManager()
000083:0x00070e18:	ncalli	UIManager.ShowCursor(true)
000083:0x00070e20:	jump	0x070e40
000087:0x00070e28:	ncall	GetGame()
000087:0x00070e30:	ncalli	CGame.GetUIManager()
000087:0x00070e38:	ncalli	UIManager.ShowCursor(false)
000090:0x00070e40:	call	UIScriptedMenu.UseKeyboard()
000090:0x00070e48:	cmpi	ret, _i0
000090:0x00070e58:	beq	0x070e78
000092:0x00070e60:	ncall	GetGame()
000092:0x00070e68:	ncalli	CGame.GetInput()
000092:0x00070e70:	ncalli	Input.ChangeGameFocus(_i-1, INPUT_DEVICE_KEYBOARD)
000095:0x00070e78:	call	UIScriptedMenu.UseGamepad()
000095:0x00070e80:	cmpi	ret, _i0
000095:0x00070e90:	beq	0x070eb0
000097:0x00070e98:	ncall	GetGame()
000097:0x00070ea0:	ncalli	CGame.GetInput()
000097:0x00070ea8:	ncalli	Input.ChangeGameFocus(_i-1, INPUT_DEVICE_GAMEPAD)
000097:0x00070eb0:	rts
UIScriptedMenu::UIScriptedMenu()
000103:0x00070eb8:	imove	m_id, 0x000004
000103:0x00070ec8:	rts
UIScriptedMenu::SetID()
000112:0x00070ed0:	move	m_id, id
000112:0x00070ee0:	rts
UIScriptedMenu::GetID()
000117:0x00070ee8:	move	ret, m_id
000117:0x00070ef8:	rts
000117:0x00070f00:	rts
UIScriptedMenu::Init()
000124:0x00070f08:	movetm	ret, NULL
000124:0x00070f18:	rts
000124:0x00070f20:	rts
UIScriptedMenu::OnShow()
000134:0x00070f28:	call	UIScriptedMenu.LockControls()
000134:0x00070f30:	rts
UIScriptedMenu::OnHide()
000140:0x00070f38:	call	UIScriptedMenu.UnlockControls()
000140:0x00070f40:	rts
UIScriptedMenu::OnClick()
000157:0x00070f68:	call	GetActiveWindows()
000157:0x00070f70:	cmpcm	ret, NULL
000157:0x00070f80:	beq	0x071028
000159:0x00070f88:	imove	i, 0x000000
000159:0x00070f98:	jump	0x070fa8
000159:0x00070fa0:	inc	i
000159:0x00070fa8:	call	GetActiveWindows()
000159:0x00070fb0:	ncalli	map<int,UIScriptedWindow>.Count()
000159:0x00070fb8:	cmpi	i, ret
000159:0x00070fc8:	bge	0x071028
000161:0x00070fd0:	call	GetActiveWindows()
000161:0x00070fd8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000161:0x00070fe0:	call	UIScriptedWindow.OnClick(w, x, y, button)
000161:0x00070ff0:	cmpi	ret, _i0
000161:0x00071000:	beq	0x071020
000163:0x00071008:	imove	ret, 0x000001
000163:0x00071018:	rts
000163:0x00071020:	jump	0x070fa0
000168:0x00071028:	imove	ret, 0x000000
000168:0x00071038:	rts
000168:0x00071040:	rts
UIScriptedMenu::OnModalResult()
000172:0x00071068:	call	GetActiveWindows()
000172:0x00071070:	cmpcm	ret, NULL
000172:0x00071080:	beq	0x071130
000174:0x00071088:	imove	i, 0x000000
000174:0x00071098:	jump	0x0710a8
000174:0x000710a0:	inc	i
000174:0x000710a8:	call	GetActiveWindows()
000174:0x000710b0:	ncalli	map<int,UIScriptedWindow>.Count()
000174:0x000710b8:	cmpi	i, ret
000174:0x000710c8:	bge	0x071130
000176:0x000710d0:	call	GetActiveWindows()
000176:0x000710d8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000176:0x000710e0:	call	UIScriptedWindow.OnModalResult(w, x, y, code, result)
000176:0x000710f8:	cmpi	ret, _i0
000176:0x00071108:	beq	0x071128
000178:0x00071110:	imove	ret, 0x000001
000178:0x00071120:	rts
000178:0x00071128:	jump	0x0710a0
000183:0x00071130:	imove	ret, 0x000000
000183:0x00071140:	rts
000183:0x00071148:	rts
UIScriptedMenu::OnDoubleClick()
000187:0x00071170:	call	GetActiveWindows()
000187:0x00071178:	cmpcm	ret, NULL
000187:0x00071188:	beq	0x071230
000189:0x00071190:	imove	i, 0x000000
000189:0x000711a0:	jump	0x0711b0
000189:0x000711a8:	inc	i
000189:0x000711b0:	call	GetActiveWindows()
000189:0x000711b8:	ncalli	map<int,UIScriptedWindow>.Count()
000189:0x000711c0:	cmpi	i, ret
000189:0x000711d0:	bge	0x071230
000191:0x000711d8:	call	GetActiveWindows()
000191:0x000711e0:	icall	map<int,UIScriptedWindow>.GetElement(i)
000191:0x000711e8:	call	UIScriptedWindow.OnDoubleClick(w, x, y, button)
000191:0x000711f8:	cmpi	ret, _i0
000191:0x00071208:	beq	0x071228
000193:0x00071210:	imove	ret, 0x000001
000193:0x00071220:	rts
000193:0x00071228:	jump	0x0711a8
000198:0x00071230:	imove	ret, 0x000000
000198:0x00071240:	rts
000198:0x00071248:	rts
UIScriptedMenu::OnSelect()
000202:0x00071270:	call	GetActiveWindows()
000202:0x00071278:	cmpcm	ret, NULL
000202:0x00071288:	beq	0x071330
000204:0x00071290:	imove	i, 0x000000
000204:0x000712a0:	jump	0x0712b0
000204:0x000712a8:	inc	i
000204:0x000712b0:	call	GetActiveWindows()
000204:0x000712b8:	ncalli	map<int,UIScriptedWindow>.Count()
000204:0x000712c0:	cmpi	i, ret
000204:0x000712d0:	bge	0x071330
000206:0x000712d8:	call	GetActiveWindows()
000206:0x000712e0:	icall	map<int,UIScriptedWindow>.GetElement(i)
000206:0x000712e8:	call	UIScriptedWindow.OnSelect(w, x, y)
000206:0x000712f8:	cmpi	ret, _i0
000206:0x00071308:	beq	0x071328
000208:0x00071310:	imove	ret, 0x000001
000208:0x00071320:	rts
000208:0x00071328:	jump	0x0712a8
000213:0x00071330:	imove	ret, 0x000000
000213:0x00071340:	rts
000213:0x00071348:	rts
UIScriptedMenu::OnItemSelected()
000217:0x00071370:	call	GetActiveWindows()
000217:0x00071378:	cmpcm	ret, NULL
000217:0x00071388:	beq	0x071438
000219:0x00071390:	imove	i, 0x000000
000219:0x000713a0:	jump	0x0713b0
000219:0x000713a8:	inc	i
000219:0x000713b0:	call	GetActiveWindows()
000219:0x000713b8:	ncalli	map<int,UIScriptedWindow>.Count()
000219:0x000713c0:	cmpi	i, ret
000219:0x000713d0:	bge	0x071438
000221:0x000713d8:	call	GetActiveWindows()
000221:0x000713e0:	icall	map<int,UIScriptedWindow>.GetElement(i)
000221:0x000713e8:	call	UIScriptedWindow.OnItemSelected(w, x, y, row, column, oldRow, oldColumn)
000221:0x00071400:	cmpi	ret, _i0
000221:0x00071410:	beq	0x071430
000223:0x00071418:	imove	ret, 0x000001
000223:0x00071428:	rts
000223:0x00071430:	jump	0x0713a8
000228:0x00071438:	imove	ret, 0x000000
000228:0x00071448:	rts
000228:0x00071450:	rts
UIScriptedMenu::OnFocus()
000232:0x00071478:	call	GetActiveWindows()
000232:0x00071480:	cmpcm	ret, NULL
000232:0x00071490:	beq	0x071538
000234:0x00071498:	imove	i, 0x000000
000234:0x000714a8:	jump	0x0714b8
000234:0x000714b0:	inc	i
000234:0x000714b8:	call	GetActiveWindows()
000234:0x000714c0:	ncalli	map<int,UIScriptedWindow>.Count()
000234:0x000714c8:	cmpi	i, ret
000234:0x000714d8:	bge	0x071538
000236:0x000714e0:	call	GetActiveWindows()
000236:0x000714e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000236:0x000714f0:	call	UIScriptedWindow.OnFocus(w, x, y)
000236:0x00071500:	cmpi	ret, _i0
000236:0x00071510:	beq	0x071530
000238:0x00071518:	imove	ret, 0x000001
000238:0x00071528:	rts
000238:0x00071530:	jump	0x0714b0
000243:0x00071538:	imove	ret, 0x000000
000243:0x00071548:	rts
000243:0x00071550:	rts
UIScriptedMenu::OnFocusLost()
000247:0x00071578:	call	GetActiveWindows()
000247:0x00071580:	cmpcm	ret, NULL
000247:0x00071590:	beq	0x071638
000249:0x00071598:	imove	i, 0x000000
000249:0x000715a8:	jump	0x0715b8
000249:0x000715b0:	inc	i
000249:0x000715b8:	call	GetActiveWindows()
000249:0x000715c0:	ncalli	map<int,UIScriptedWindow>.Count()
000249:0x000715c8:	cmpi	i, ret
000249:0x000715d8:	bge	0x071638
000251:0x000715e0:	call	GetActiveWindows()
000251:0x000715e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000251:0x000715f0:	call	UIScriptedWindow.OnFocusLost(w, x, y)
000251:0x00071600:	cmpi	ret, _i0
000251:0x00071610:	beq	0x071630
000253:0x00071618:	imove	ret, 0x000001
000253:0x00071628:	rts
000253:0x00071630:	jump	0x0715b0
000258:0x00071638:	imove	ret, 0x000000
000258:0x00071648:	rts
000258:0x00071650:	rts
UIScriptedMenu::OnMouseEnter()
000262:0x00071678:	call	GetActiveWindows()
000262:0x00071680:	cmpcm	ret, NULL
000262:0x00071690:	beq	0x071738
000264:0x00071698:	imove	i, 0x000000
000264:0x000716a8:	jump	0x0716b8
000264:0x000716b0:	inc	i
000264:0x000716b8:	call	GetActiveWindows()
000264:0x000716c0:	ncalli	map<int,UIScriptedWindow>.Count()
000264:0x000716c8:	cmpi	i, ret
000264:0x000716d8:	bge	0x071738
000266:0x000716e0:	call	GetActiveWindows()
000266:0x000716e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000266:0x000716f0:	call	UIScriptedWindow.OnMouseEnter(w, x, y)
000266:0x00071700:	cmpi	ret, _i0
000266:0x00071710:	beq	0x071730
000268:0x00071718:	imove	ret, 0x000001
000268:0x00071728:	rts
000268:0x00071730:	jump	0x0716b0
000273:0x00071738:	imove	ret, 0x000000
000273:0x00071748:	rts
000273:0x00071750:	rts
UIScriptedMenu::OnMouseLeave()
000277:0x00071778:	call	GetActiveWindows()
000277:0x00071780:	cmpcm	ret, NULL
000277:0x00071790:	beq	0x071838
000279:0x00071798:	imove	i, 0x000000
000279:0x000717a8:	jump	0x0717b8
000279:0x000717b0:	inc	i
000279:0x000717b8:	call	GetActiveWindows()
000279:0x000717c0:	ncalli	map<int,UIScriptedWindow>.Count()
000279:0x000717c8:	cmpi	i, ret
000279:0x000717d8:	bge	0x071838
000281:0x000717e0:	call	GetActiveWindows()
000281:0x000717e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000281:0x000717f0:	call	UIScriptedWindow.OnMouseLeave(w, enterW, x, y)
000281:0x00071800:	cmpi	ret, _i0
000281:0x00071810:	beq	0x071830
000283:0x00071818:	imove	ret, 0x000001
000283:0x00071828:	rts
000283:0x00071830:	jump	0x0717b0
000288:0x00071838:	imove	ret, 0x000000
000288:0x00071848:	rts
000288:0x00071850:	rts
UIScriptedMenu::OnMouseButtonDown()
000292:0x00071878:	call	GetActiveWindows()
000292:0x00071880:	cmpcm	ret, NULL
000292:0x00071890:	beq	0x071938
000294:0x00071898:	imove	i, 0x000000
000294:0x000718a8:	jump	0x0718b8
000294:0x000718b0:	inc	i
000294:0x000718b8:	call	GetActiveWindows()
000294:0x000718c0:	ncalli	map<int,UIScriptedWindow>.Count()
000294:0x000718c8:	cmpi	i, ret
000294:0x000718d8:	bge	0x071938
000296:0x000718e0:	call	GetActiveWindows()
000296:0x000718e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000296:0x000718f0:	call	UIScriptedWindow.OnMouseButtonDown(w, x, y, button)
000296:0x00071900:	cmpi	ret, _i0
000296:0x00071910:	beq	0x071930
000298:0x00071918:	imove	ret, 0x000001
000298:0x00071928:	rts
000298:0x00071930:	jump	0x0718b0
000303:0x00071938:	imove	ret, 0x000000
000303:0x00071948:	rts
000303:0x00071950:	rts
UIScriptedMenu::OnMouseButtonUp()
000307:0x00071978:	call	GetActiveWindows()
000307:0x00071980:	cmpcm	ret, NULL
000307:0x00071990:	beq	0x071a38
000309:0x00071998:	imove	i, 0x000000
000309:0x000719a8:	jump	0x0719b8
000309:0x000719b0:	inc	i
000309:0x000719b8:	call	GetActiveWindows()
000309:0x000719c0:	ncalli	map<int,UIScriptedWindow>.Count()
000309:0x000719c8:	cmpi	i, ret
000309:0x000719d8:	bge	0x071a38
000311:0x000719e0:	call	GetActiveWindows()
000311:0x000719e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000311:0x000719f0:	call	UIScriptedWindow.OnMouseButtonUp(w, x, y, button)
000311:0x00071a00:	cmpi	ret, _i0
000311:0x00071a10:	beq	0x071a30
000313:0x00071a18:	imove	ret, 0x000001
000313:0x00071a28:	rts
000313:0x00071a30:	jump	0x0719b0
000318:0x00071a38:	imove	ret, 0x000000
000318:0x00071a48:	rts
000318:0x00071a50:	rts
UIScriptedMenu::OnMouseWheel()
000322:0x00071a78:	call	GetActiveWindows()
000322:0x00071a80:	cmpcm	ret, NULL
000322:0x00071a90:	beq	0x071b38
000324:0x00071a98:	imove	i, 0x000000
000324:0x00071aa8:	jump	0x071ab8
000324:0x00071ab0:	inc	i
000324:0x00071ab8:	call	GetActiveWindows()
000324:0x00071ac0:	ncalli	map<int,UIScriptedWindow>.Count()
000324:0x00071ac8:	cmpi	i, ret
000324:0x00071ad8:	bge	0x071b38
000326:0x00071ae0:	call	GetActiveWindows()
000326:0x00071ae8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000326:0x00071af0:	call	UIScriptedWindow.OnMouseWheel(w, x, y, wheel)
000326:0x00071b00:	cmpi	ret, _i0
000326:0x00071b10:	beq	0x071b30
000328:0x00071b18:	imove	ret, 0x000001
000328:0x00071b28:	rts
000328:0x00071b30:	jump	0x071ab0
000333:0x00071b38:	imove	ret, 0x000000
000333:0x00071b48:	rts
000333:0x00071b50:	rts
UIScriptedMenu::OnController()
000337:0x00071b78:	call	GetActiveWindows()
000337:0x00071b80:	cmpcm	ret, NULL
000337:0x00071b90:	beq	0x071c38
000339:0x00071b98:	imove	i, 0x000000
000339:0x00071ba8:	jump	0x071bb8
000339:0x00071bb0:	inc	i
000339:0x00071bb8:	call	GetActiveWindows()
000339:0x00071bc0:	ncalli	map<int,UIScriptedWindow>.Count()
000339:0x00071bc8:	cmpi	i, ret
000339:0x00071bd8:	bge	0x071c38
000341:0x00071be0:	call	GetActiveWindows()
000341:0x00071be8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000341:0x00071bf0:	call	UIScriptedWindow.OnController(w, control, value)
000341:0x00071c00:	cmpi	ret, _i0
000341:0x00071c10:	beq	0x071c30
000343:0x00071c18:	imove	ret, 0x000001
000343:0x00071c28:	rts
000343:0x00071c30:	jump	0x071bb0
000348:0x00071c38:	imove	ret, 0x000000
000348:0x00071c48:	rts
000348:0x00071c50:	rts
UIScriptedMenu::OnKeyDown()
000352:0x00071c78:	call	GetActiveWindows()
000352:0x00071c80:	cmpcm	ret, NULL
000352:0x00071c90:	beq	0x071d38
000354:0x00071c98:	imove	i, 0x000000
000354:0x00071ca8:	jump	0x071cb8
000354:0x00071cb0:	inc	i
000354:0x00071cb8:	call	GetActiveWindows()
000354:0x00071cc0:	ncalli	map<int,UIScriptedWindow>.Count()
000354:0x00071cc8:	cmpi	i, ret
000354:0x00071cd8:	bge	0x071d38
000356:0x00071ce0:	call	GetActiveWindows()
000356:0x00071ce8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000356:0x00071cf0:	call	UIScriptedWindow.OnKeyDown(w, x, y, key)
000356:0x00071d00:	cmpi	ret, _i0
000356:0x00071d10:	beq	0x071d30
000358:0x00071d18:	imove	ret, 0x000001
000358:0x00071d28:	rts
000358:0x00071d30:	jump	0x071cb0
000363:0x00071d38:	imove	ret, 0x000000
000363:0x00071d48:	rts
000363:0x00071d50:	rts
UIScriptedMenu::OnKeyUp()
000367:0x00071d78:	call	GetActiveWindows()
000367:0x00071d80:	cmpcm	ret, NULL
000367:0x00071d90:	beq	0x071e38
000369:0x00071d98:	imove	i, 0x000000
000369:0x00071da8:	jump	0x071db8
000369:0x00071db0:	inc	i
000369:0x00071db8:	call	GetActiveWindows()
000369:0x00071dc0:	ncalli	map<int,UIScriptedWindow>.Count()
000369:0x00071dc8:	cmpi	i, ret
000369:0x00071dd8:	bge	0x071e38
000371:0x00071de0:	call	GetActiveWindows()
000371:0x00071de8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000371:0x00071df0:	call	UIScriptedWindow.OnKeyUp(w, x, y, key)
000371:0x00071e00:	cmpi	ret, _i0
000371:0x00071e10:	beq	0x071e30
000373:0x00071e18:	imove	ret, 0x000001
000373:0x00071e28:	rts
000373:0x00071e30:	jump	0x071db0
000378:0x00071e38:	imove	ret, 0x000000
000378:0x00071e48:	rts
000378:0x00071e50:	rts
UIScriptedMenu::OnKeyPress()
000382:0x00071e78:	call	GetActiveWindows()
000382:0x00071e80:	cmpcm	ret, NULL
000382:0x00071e90:	beq	0x071f38
000384:0x00071e98:	imove	i, 0x000000
000384:0x00071ea8:	jump	0x071eb8
000384:0x00071eb0:	inc	i
000384:0x00071eb8:	call	GetActiveWindows()
000384:0x00071ec0:	ncalli	map<int,UIScriptedWindow>.Count()
000384:0x00071ec8:	cmpi	i, ret
000384:0x00071ed8:	bge	0x071f38
000386:0x00071ee0:	call	GetActiveWindows()
000386:0x00071ee8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000386:0x00071ef0:	call	UIScriptedWindow.OnKeyPress(w, x, y, key)
000386:0x00071f00:	cmpi	ret, _i0
000386:0x00071f10:	beq	0x071f30
000388:0x00071f18:	imove	ret, 0x000001
000388:0x00071f28:	rts
000388:0x00071f30:	jump	0x071eb0
000393:0x00071f38:	imove	ret, 0x000000
000393:0x00071f48:	rts
000393:0x00071f50:	rts
UIScriptedMenu::OnChange()
000397:0x00071f78:	call	GetActiveWindows()
000397:0x00071f80:	cmpcm	ret, NULL
000397:0x00071f90:	beq	0x072038
000399:0x00071f98:	imove	i, 0x000000
000399:0x00071fa8:	jump	0x071fb8
000399:0x00071fb0:	inc	i
000399:0x00071fb8:	call	GetActiveWindows()
000399:0x00071fc0:	ncalli	map<int,UIScriptedWindow>.Count()
000399:0x00071fc8:	cmpi	i, ret
000399:0x00071fd8:	bge	0x072038
000401:0x00071fe0:	call	GetActiveWindows()
000401:0x00071fe8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000401:0x00071ff0:	call	UIScriptedWindow.OnChange(w, x, y, finished)
000401:0x00072000:	cmpi	ret, _i0
000401:0x00072010:	beq	0x072030
000403:0x00072018:	imove	ret, 0x000001
000403:0x00072028:	rts
000403:0x00072030:	jump	0x071fb0
000408:0x00072038:	imove	ret, 0x000000
000408:0x00072048:	rts
000408:0x00072050:	rts
UIScriptedMenu::OnDrag()
000412:0x00072078:	call	GetActiveWindows()
000412:0x00072080:	cmpcm	ret, NULL
000412:0x00072090:	beq	0x072138
000414:0x00072098:	imove	i, 0x000000
000414:0x000720a8:	jump	0x0720b8
000414:0x000720b0:	inc	i
000414:0x000720b8:	call	GetActiveWindows()
000414:0x000720c0:	ncalli	map<int,UIScriptedWindow>.Count()
000414:0x000720c8:	cmpi	i, ret
000414:0x000720d8:	bge	0x072138
000416:0x000720e0:	call	GetActiveWindows()
000416:0x000720e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000416:0x000720f0:	call	UIScriptedWindow.OnDrag(w, x, y)
000416:0x00072100:	cmpi	ret, _i0
000416:0x00072110:	beq	0x072130
000418:0x00072118:	imove	ret, 0x000001
000418:0x00072128:	rts
000418:0x00072130:	jump	0x0720b0
000423:0x00072138:	imove	ret, 0x000000
000423:0x00072148:	rts
000423:0x00072150:	rts
UIScriptedMenu::OnDragging()
000427:0x00072178:	call	GetActiveWindows()
000427:0x00072180:	cmpcm	ret, NULL
000427:0x00072190:	beq	0x072238
000429:0x00072198:	imove	i, 0x000000
000429:0x000721a8:	jump	0x0721b8
000429:0x000721b0:	inc	i
000429:0x000721b8:	call	GetActiveWindows()
000429:0x000721c0:	ncalli	map<int,UIScriptedWindow>.Count()
000429:0x000721c8:	cmpi	i, ret
000429:0x000721d8:	bge	0x072238
000431:0x000721e0:	call	GetActiveWindows()
000431:0x000721e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000431:0x000721f0:	call	UIScriptedWindow.OnDragging(w, x, y, reciever)
000431:0x00072200:	cmpi	ret, _i0
000431:0x00072210:	beq	0x072230
000433:0x00072218:	imove	ret, 0x000001
000433:0x00072228:	rts
000433:0x00072230:	jump	0x0721b0
000438:0x00072238:	imove	ret, 0x000000
000438:0x00072248:	rts
000438:0x00072250:	rts
UIScriptedMenu::OnDraggingOver()
000442:0x00072278:	call	GetActiveWindows()
000442:0x00072280:	cmpcm	ret, NULL
000442:0x00072290:	beq	0x072338
000444:0x00072298:	imove	i, 0x000000
000444:0x000722a8:	jump	0x0722b8
000444:0x000722b0:	inc	i
000444:0x000722b8:	call	GetActiveWindows()
000444:0x000722c0:	ncalli	map<int,UIScriptedWindow>.Count()
000444:0x000722c8:	cmpi	i, ret
000444:0x000722d8:	bge	0x072338
000446:0x000722e0:	call	GetActiveWindows()
000446:0x000722e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000446:0x000722f0:	call	UIScriptedWindow.OnDraggingOver(w, x, y, reciever)
000446:0x00072300:	cmpi	ret, _i0
000446:0x00072310:	beq	0x072330
000448:0x00072318:	imove	ret, 0x000001
000448:0x00072328:	rts
000448:0x00072330:	jump	0x0722b0
000453:0x00072338:	imove	ret, 0x000000
000453:0x00072348:	rts
000453:0x00072350:	rts
UIScriptedMenu::OnDrop()
000457:0x00072378:	call	GetActiveWindows()
000457:0x00072380:	cmpcm	ret, NULL
000457:0x00072390:	beq	0x072438
000459:0x00072398:	imove	i, 0x000000
000459:0x000723a8:	jump	0x0723b8
000459:0x000723b0:	inc	i
000459:0x000723b8:	call	GetActiveWindows()
000459:0x000723c0:	ncalli	map<int,UIScriptedWindow>.Count()
000459:0x000723c8:	cmpi	i, ret
000459:0x000723d8:	bge	0x072438
000461:0x000723e0:	call	GetActiveWindows()
000461:0x000723e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000461:0x000723f0:	call	UIScriptedWindow.OnDrop(w, x, y, reciever)
000461:0x00072400:	cmpi	ret, _i0
000461:0x00072410:	beq	0x072430
000463:0x00072418:	imove	ret, 0x000001
000463:0x00072428:	rts
000463:0x00072430:	jump	0x0723b0
000468:0x00072438:	imove	ret, 0x000000
000468:0x00072448:	rts
000468:0x00072450:	rts
UIScriptedMenu::OnDropReceived()
000472:0x00072478:	call	GetActiveWindows()
000472:0x00072480:	cmpcm	ret, NULL
000472:0x00072490:	beq	0x072538
000474:0x00072498:	imove	i, 0x000000
000474:0x000724a8:	jump	0x0724b8
000474:0x000724b0:	inc	i
000474:0x000724b8:	call	GetActiveWindows()
000474:0x000724c0:	ncalli	map<int,UIScriptedWindow>.Count()
000474:0x000724c8:	cmpi	i, ret
000474:0x000724d8:	bge	0x072538
000476:0x000724e0:	call	GetActiveWindows()
000476:0x000724e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000476:0x000724f0:	call	UIScriptedWindow.OnDropReceived(w, x, y, reciever)
000476:0x00072500:	cmpi	ret, _i0
000476:0x00072510:	beq	0x072530
000478:0x00072518:	imove	ret, 0x000001
000478:0x00072528:	rts
000478:0x00072530:	jump	0x0724b0
000483:0x00072538:	imove	ret, 0x000000
000483:0x00072548:	rts
000483:0x00072550:	rts
UIScriptedMenu::OnEvent()
000488:0x00072578:	call	GetActiveWindows()
000488:0x00072580:	cmpcm	ret, NULL
000488:0x00072590:	beq	0x072638
000490:0x00072598:	imove	i, 0x000000
000490:0x000725a8:	jump	0x0725b8
000490:0x000725b0:	inc	i
000490:0x000725b8:	call	GetActiveWindows()
000490:0x000725c0:	ncalli	map<int,UIScriptedWindow>.Count()
000490:0x000725c8:	cmpi	i, ret
000490:0x000725d8:	bge	0x072638
000492:0x000725e0:	call	GetActiveWindows()
000492:0x000725e8:	icall	map<int,UIScriptedWindow>.GetElement(i)
000492:0x000725f0:	call	UIScriptedWindow.OnEvent(eventType, target, parameter0, parameter1)
000492:0x00072600:	cmpi	ret, _i0
000492:0x00072610:	beq	0x072630
000494:0x00072618:	imove	ret, 0x000001
000494:0x00072628:	rts
000494:0x00072630:	jump	0x0725b0
000499:0x00072638:	imove	ret, 0x000000
000499:0x00072648:	rts
000499:0x00072650:	rts
UIScriptedMenu::GetContextMenu()
000504:0x00072658:	movetm	ret, NULL
000504:0x00072668:	rts
000504:0x00072670:	rts
UIScriptedWindow::AddToActiveWindows()
//scripts/3_Game/tools/UIScriptedWindow.c
000011:0x00072678:	cmpcm	m_ActiveWindows, NULL
000011:0x00072688:	bne	0x0726c0
000013:0x00072690:	new	@c00, map<int,UIScriptedWindow>
000013:0x000726b0:	movetm	m_ActiveWindows, @c00
000016:0x000726c0:	icall	map<int,UIScriptedWindow>.Insert(id, window)
000016:0x000726c8:	rts
UIScriptedWindow::RemoveFromActiveWindows()
000021:0x000726d0:	cmpcm	m_ActiveWindows, NULL
000021:0x000726e0:	beq	0x0726f0
000023:0x000726e8:	icall	map<int,UIScriptedWindow>.Remove(id)
000023:0x000726f0:	rts
UIScriptedWindow::GetWindow()
000029:0x000726f8:	cmpcm	m_ActiveWindows, NULL
000029:0x00072708:	beq	0x072730
000031:0x00072710:	icall	map<int,UIScriptedWindow>.Get(id)
000031:0x00072718:	movec	ret, ret
000031:0x00072728:	rts
000034:0x00072730:	movec	ret, NULL
000034:0x00072740:	rts
000034:0x00072748:	rts
UIScriptedWindow::GetActiveWindows()
000039:0x00072750:	movem	ret, m_ActiveWindows
000039:0x00072760:	rts
000039:0x00072768:	rts
UIScriptedWindow::UIScriptedWindow()
000046:0x00072770:	move	m_Id, id
000046:0x00072780:	rts
UIScriptedWindow::~UIScriptedWindow()
000051:0x00072788:	call	UIScriptedWindow.GetWidgetRoot()
000051:0x00072790:	ncalli	Widget.Show(false)
000052:0x00072798:	call	UIScriptedWindow.GetWidgetRoot()
000052:0x000727a0:	ncalli	Widget.Destroy()
000052:0x000727a8:	rts
UIScriptedWindow::GetWidgetRoot()
000057:0x000727b0:	movem	ret, m_WgtRoot
000057:0x000727c0:	rts
000057:0x000727c8:	rts
UIScriptedWindow::ShowWindow()
000066:0x000727d0:	call	UIScriptedWindow.GetWidgetRoot()
000066:0x000727d8:	ncalli	Widget.Show(true)
000066:0x000727e0:	rts
UIScriptedWindow::HideWindow()
000071:0x000727e8:	call	UIScriptedWindow.GetWidgetRoot()
000071:0x000727f0:	ncalli	Widget.Show(false)
000071:0x000727f8:	rts
UIScriptedWindow::CloseWindow()
000076:0x00072800:	ncall	GetGame()
000076:0x00072808:	ncalli	CGame.GetUIManager()
000076:0x00072810:	move	id, m_Id
000076:0x00072820:	call	UIManager.CloseWindow(id)
000076:0x00072830:	rts
UIScriptedWindow::OnClick()
000082:0x00072838:	imove	ret, 0x000000
000082:0x00072848:	rts
000082:0x00072850:	rts
UIScriptedWindow::OnModalResult()
000087:0x00072858:	imove	ret, 0x000000
000087:0x00072868:	rts
000087:0x00072870:	rts
UIScriptedWindow::OnDoubleClick()
000092:0x00072878:	imove	ret, 0x000000
000092:0x00072888:	rts
000092:0x00072890:	rts
UIScriptedWindow::OnSelect()
000097:0x00072898:	imove	ret, 0x000000
000097:0x000728a8:	rts
000097:0x000728b0:	rts
UIScriptedWindow::OnItemSelected()
000102:0x000728b8:	imove	ret, 0x000000
000102:0x000728c8:	rts
000102:0x000728d0:	rts
UIScriptedWindow::OnFocus()
000107:0x000728d8:	imove	ret, 0x000000
000107:0x000728e8:	rts
000107:0x000728f0:	rts
UIScriptedWindow::OnFocusLost()
000112:0x000728f8:	imove	ret, 0x000000
000112:0x00072908:	rts
000112:0x00072910:	rts
UIScriptedWindow::OnMouseEnter()
000117:0x00072918:	imove	ret, 0x000000
000117:0x00072928:	rts
000117:0x00072930:	rts
UIScriptedWindow::OnMouseLeave()
000122:0x00072938:	imove	ret, 0x000000
000122:0x00072948:	rts
000122:0x00072950:	rts
UIScriptedWindow::OnMouseButtonDown()
000127:0x00072958:	imove	ret, 0x000000
000127:0x00072968:	rts
000127:0x00072970:	rts
UIScriptedWindow::OnMouseButtonUp()
000132:0x00072978:	imove	ret, 0x000000
000132:0x00072988:	rts
000132:0x00072990:	rts
UIScriptedWindow::OnMouseWheel()
000137:0x00072998:	imove	ret, 0x000000
000137:0x000729a8:	rts
000137:0x000729b0:	rts
UIScriptedWindow::OnController()
000142:0x000729b8:	imove	ret, 0x000000
000142:0x000729c8:	rts
000142:0x000729d0:	rts
UIScriptedWindow::OnKeyDown()
000147:0x000729d8:	imove	ret, 0x000000
000147:0x000729e8:	rts
000147:0x000729f0:	rts
UIScriptedWindow::OnKeyUp()
000152:0x000729f8:	imove	ret, 0x000000
000152:0x00072a08:	rts
000152:0x00072a10:	rts
UIScriptedWindow::OnKeyPress()
000157:0x00072a18:	imove	ret, 0x000000
000157:0x00072a28:	rts
000157:0x00072a30:	rts
UIScriptedWindow::OnChange()
000162:0x00072a38:	imove	ret, 0x000000
000162:0x00072a48:	rts
000162:0x00072a50:	rts
UIScriptedWindow::OnDrag()
000167:0x00072a58:	imove	ret, 0x000000
000167:0x00072a68:	rts
000167:0x00072a70:	rts
UIScriptedWindow::OnDragging()
000172:0x00072a78:	imove	ret, 0x000000
000172:0x00072a88:	rts
000172:0x00072a90:	rts
UIScriptedWindow::OnDraggingOver()
000177:0x00072a98:	imove	ret, 0x000000
000177:0x00072aa8:	rts
000177:0x00072ab0:	rts
UIScriptedWindow::OnDrop()
000182:0x00072ab8:	imove	ret, 0x000000
000182:0x00072ac8:	rts
000182:0x00072ad0:	rts
UIScriptedWindow::OnDropReceived()
000187:0x00072ad8:	imove	ret, 0x000000
000187:0x00072ae8:	rts
000187:0x00072af0:	rts
UIScriptedWindow::OnEvent()
000192:0x00072af8:	imove	ret, 0x000000
000192:0x00072b08:	rts
000192:0x00072b10:	rts
CashedObjectsParams::CashedObjectsParams()
//scripts/3_Game/tools/UtilityClasses.c
000023:0x00072b18:	new	@c00, Param1<int>
000023:0x00072b40:	movec	PARAM1_INT, @c00
000024:0x00072b50:	new	@c00, Param1<float>
000024:0x00072b78:	movec	PARAM1_FLOAT, @c00
000025:0x00072b88:	new	@c00, Param1<string>
000025:0x00072bb0:	movec	PARAM1_STRING, @c00
000027:0x00072bc0:	new	@c00, Param2<int,int>
000027:0x00072be8:	movec	PARAM2_INT_INT, @c00
000028:0x00072bf8:	new	@c00, Param2<int,float>
000028:0x00072c20:	movec	PARAM2_INT_FLOAT, @c00
000029:0x00072c30:	new	@c00, Param2<int,string>
000029:0x00072c58:	movec	PARAM2_INT_STRING, @c00
000030:0x00072c68:	new	@c00, Param2<string,float>
000030:0x00072c90:	movec	PARAM2_STRING_FLOAT, @c00
000031:0x00072ca0:	new	@c00, Param2<string,string>
000031:0x00072cc8:	movec	PARAM2_STRING_STRING, @c00
000031:0x00072cd8:	rts
CashedObjectsParams::~CashedObjectsParams()
000036:0x00072ce0:	delete	PARAM1_INT
000037:0x00072ce8:	delete	PARAM1_FLOAT
000038:0x00072cf0:	delete	PARAM1_STRING
000040:0x00072cf8:	delete	PARAM2_INT_INT
000041:0x00072d00:	delete	PARAM2_INT_FLOAT
000042:0x00072d08:	delete	PARAM2_INT_STRING
000043:0x00072d10:	delete	PARAM2_STRING_FLOAT
000044:0x00072d18:	delete	PARAM2_STRING_STRING
000044:0x00072d20:	rts
CashedObjectsArrays::CashedObjectsArrays()
000053:0x00072d28:	new	@c00, array<string>
000053:0x00072d48:	movetm	ARRAY_STRING, @c00
000054:0x00072d58:	new	@c00, array<float>
000054:0x00072d78:	movetm	ARRAY_FLOAT, @c00
000055:0x00072d88:	new	@c00, array<int>
000055:0x00072da8:	movetm	ARRAY_INT, @c00
000055:0x00072db8:	rts
CashedObjectsArrays::~CashedObjectsArrays()
000060:0x00072dc0:	delete	ARRAY_STRING
000061:0x00072dc8:	delete	ARRAY_FLOAT
000062:0x00072dd0:	delete	ARRAY_INT
000062:0x00072dd8:	rts
Vector2::Vector2()
//scripts/3_Game/tools/Vector2.c
000005:0x00072de0:	move	x, value_x
000006:0x00072df0:	move	y, value_y
000006:0x00072e00:	rts
#InitGlobals()
000006:0x00072e48:	new	@c00, array<string>
000006:0x00072e68:	movetm	Admin_UIDS, @c00
000006:0x00072e78:	imove	@m00, 0x000000
000006:0x00072e88:	ctv	NullStringArray[@m00], _s''
000006:0x00072e98:	inc	@m00
000006:0x00072ea0:	imove	@m01, 0x000000
000006:0x00072eb0:	ctv	images[@m01], _s'{655A1BF79F5B291}Gui/textures/loading_screens/loading_screen_1_co.edds'
000006:0x00072ec0:	inc	@m01
000006:0x00072ec8:	ctv	images[@m01], _s'{84BE5F7442BD4B}Gui/textures/loading_screens/loading_screen_2_co.edds'
000006:0x00072ed8:	inc	@m01
000006:0x00072ee0:	rts
